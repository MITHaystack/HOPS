#include <getopt.h>
#include <iostream>
#include <stdint.h>
#include <string>
#include <vector>

#include "MHO_UniformGridPointsCalculator.hh"

using namespace hops;

int main(int argc, char** argv)
{

    double freq_pts[32][10] = 
        {{3448.4, 3480.4, 3000.4, 3032.4, 4204.4, 4236.4, 5004.4, 5036.4, 3000.4, 3032.4},
        {3416.4, 3448.4, 3032.4, 3064.4, 4236.4, 4268.4, 5036.4, 5068.4, 3064.4, 3096.4},
        {3352.4, 3384.4, 3064.4, 3096.4, 4268.4, 4300.4, 5132.4, 5164.4, 3128.4, 3160.4},
        {3288.4, 3320.4, 3128.4, 3160.4, 4364.4, 4396.4, 5260.4, 5292.4, 3192.4, 3224.4},
        {3192.4, 3224.4, 3224.4, 3256.4, 5004.4, 5036.4, 5516.4, 5548.4, 3288.4, 3320.4},
        {3064.4, 3096.4, 3288.4, 3320.4, 5100.4, 5132.4, 5708.4, 5740.4, 3416.4, 3448.4},
        {3032.4, 3064.4, 3320.4, 3352.4, 5132.4, 5164.4, 5836.4, 5868.4, 3896.4, 3928.4},
        {3000.4, 3032.4, 3352.4, 3384.4, 5164.4, 5196.4, 5868.4, 5900.4, 3960.4, 3992.4},
        {5688.4, 5720.4, 4216.4, 4248.4, 7596.4, 7628.4, 7628.4, 7660.4, 5816.4, 5848.4},
        {5656.4, 5688.4, 4248.4, 4280.4, 7628.4, 7660.4, 7660.4, 7692.4, 5848.4, 5880.4},
        {5592.4, 5624.4, 4280.4, 4312.4, 7724.4, 7756.4, 7756.4, 7788.4, 5944.4, 5976.4},
        {5528.4, 5560.4, 4376.4, 4408.4, 7884.4, 7916.4, 7916.4, 7948.4, 6104.4, 6136.4},
        {5432.4, 5464.4, 5016.4, 5048.4, 8172.4, 8204.4, 8204.4, 8236.4, 6392.4, 6424.4},
        {5304.4, 5336.4, 5112.4, 5144.4, 8364.4, 8396.4, 8396.4, 8428.4, 6584.4, 6616.4},
        {5272.4, 5304.4, 5144.4, 5176.4, 8492.4, 8524.4, 8524.4, 8556.4, 6712.4, 6744.4},
        {5240.4, 5272.4, 5176.4, 5208.4, 8556.4, 8588.4, 8588.4, 8620.4, 6776.4, 6808.4},
        {6808.4, 6840.4, 7608.4, 7640.4, 9708.4, 9740.4, 9676.4, 9708.4, 9720.4, 9752.4},
        {6776.4, 6808.4, 7640.4, 7672.4, 9740.4, 9772.4, 9708.4, 9740.4, 9752.4, 9784.4},
        {6712.4, 6744.4, 7736.4, 7768.4, 9836.4, 9868.4, 9804.4, 9836.4, 9848.4, 9880.4},
        {6648.4, 6680.4, 7896.4, 7928.4, 9996.4, 10028.4, 9964.4, 9996.4, 10008.4, 10040.4},
        {6552.4, 6584.4, 8184.4, 8216.4, 10284.4, 10316.4, 10252.4, 10284.4, 10296.4, 10328.4},
        {6424.4, 6456.4, 8376.4, 8408.4, 10476.4, 10508.4, 10444.4, 10476.4, 10488.4, 10520.4},
        {6392.4, 6424.4, 8504.4, 8536.4, 10604.4, 10636.4, 10572.4, 10604.4, 10616.4, 10648.4},
        {6360.4, 6392.4, 8568.4, 8600.4, 10668.4, 10700.4, 10636.4, 10668.4, 10680.4, 10712.4},
        {10648.4, 10680.4, 12984.4, 13016.4, 12972.4, 13004.4, 12940.4, 12972.4, 12984.4, 13016.4},
        {10616.4, 10648.4, 13016.4, 13048.4, 13004.4, 13036.4, 12972.4, 13004.4, 13016.4, 13048.4},
        {10552.4, 10584.4, 13112.4, 13144.4, 13100.4, 13132.4, 13068.4, 13100.4, 13112.4, 13144.4},
        {10488.4, 10520.4, 13272.4, 13304.4, 13260.4, 13292.4, 13228.4, 13260.4, 13272.4, 13304.4},
        {10392.4, 10424.4, 13560.4, 13592.4, 13548.4, 13580.4, 13516.4, 13548.4, 13560.4, 13592.4},
        {10264.4, 10296.4, 13752.4, 13784.4, 13740.4, 13772.4, 13708.4, 13740.4, 13752.4, 13784.4},
        {10232.4, 10264.4, 13880.4, 13912.4, 13868.4, 13900.4, 13836.4, 13868.4, 13880.4, 13912.4},
        {10200.4, 10232.4, 13944.4, 13976.4, 13932.4, 13964.4, 13900.4, 13932.4, 13944.4, 13976.4}};

    for(std::size_t group=0; group<10; group++)
    {

        std::vector<double> pts;
        for(std::size_t f=0; f<32; f++)
        {
            pts.push_back(freq_pts[f][group]);
        }

        MHO_UniformGridPointsCalculator grid_calc;
        grid_calc.SetPoints(pts);
        grid_calc.Calculate();

        std::cout<<"frequency group: "<<group<<std::endl;
        std::cout << "info: " << grid_calc.GetGridStart() << ", " << grid_calc.GetGridSpacing() << ", "
                  << grid_calc.GetNGridPoints() << std::endl;
        std::cout << "Spacing Error? " << grid_calc.GetSpacingErrorStatus() << std::endl;

        auto gmap = grid_calc.GetGridIndexMap();

        for(auto iter = gmap.begin(); iter != gmap.end(); iter++)
        {
            std::cout << "index map = " << iter->first << ", " << iter->second << std::endl;
        }
    }

    return 0;
}
