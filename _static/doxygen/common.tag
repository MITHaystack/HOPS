<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>ffcontrol_module/ffcontrol/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/ffcontrol_module/ffcontrol/</path>
    <filename>ffcontrol__module_2ffcontrol_2____init_____8py.html</filename>
    <namespace>ffcontrol</namespace>
  </compound>
  <compound kind="file">
    <name>hops/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops/</path>
    <filename>hops_2____init_____8py.html</filename>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>hops_io/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_io/</path>
    <filename>hops__io_2____init_____8py.html</filename>
    <namespace>hops_io</namespace>
  </compound>
  <compound kind="file">
    <name>hops_visualization/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_visualization/</path>
    <filename>hops__visualization_2____init_____8py.html</filename>
    <namespace>hops_visualization</namespace>
  </compound>
  <compound kind="file">
    <name>mk4_module/afio/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/mk4_module/afio/</path>
    <filename>mk4__module_2afio_2____init_____8py.html</filename>
    <namespace>afio</namespace>
  </compound>
  <compound kind="file">
    <name>mk4_module/mk4io/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/mk4_module/mk4io/</path>
    <filename>mk4__module_2mk4io_2____init_____8py.html</filename>
    <namespace>mk4io</namespace>
  </compound>
  <compound kind="file">
    <name>mk4_module/vexpy/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/mk4_module/vexpy/</path>
    <filename>mk4__module_2vexpy_2____init_____8py.html</filename>
    <namespace>vexpy</namespace>
  </compound>
  <compound kind="file">
    <name>vpal_module/vpal/__init__.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>vpal__module_2vpal_2____init_____8py.html</filename>
    <namespace>vpal</namespace>
  </compound>
  <compound kind="file">
    <name>account.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>account_8c.html</filename>
    <includes id="account_8h" name="account.h" local="yes" imported="no">account.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>account</name>
      <anchorfile>account_8c.html</anchorfile>
      <anchor>a33707e985fa53ebddfc72cb0f338916a</anchor>
      <arglist>(const char *segment_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>account.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>account_8h.html</filename>
    <class kind="struct">time_account</class>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PSEGS</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a7be11ac2d18676c171e7772be2681f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NAME_LEN</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a4853f6c25c8394fd57c4d99f61d5cd89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>account</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a33707e985fa53ebddfc72cb0f338916a</anchor>
      <arglist>(const char *segment_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>accum_segs.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>accum__segs_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>accum_segs</name>
      <anchorfile>accum__segs_8c.html</anchorfile>
      <anchor>a46019f12d4a39ccbae3efe74f7d9d259</anchor>
      <arglist>(struct fxparam *fxp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>active_filter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>active__filter_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <member kind="function">
      <type>int</type>
      <name>active_filter</name>
      <anchorfile>active__filter_8c.html</anchorfile>
      <anchor>a16af2e7e6a47200c2d29cda1f8696812</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fcheck</name>
      <anchorfile>active__filter_8c.html</anchorfile>
      <anchor>a7345461f46f60cbff90c047af7491d48</anchor>
      <arglist>[17]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nfilt</name>
      <anchorfile>active__filter_8c.html</anchorfile>
      <anchor>a727a89a8dcfb337fb3ad40a97dc7f4b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adata.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/include/</path>
    <filename>adata_8h.html</filename>
    <class kind="struct">corelsum</class>
    <class kind="struct">fringesum</class>
    <class kind="struct">quadsum</class>
    <class kind="struct">rootsum</class>
    <class kind="struct">trianglesum</class>
    <member kind="define">
      <type>#define</type>
      <name>AFILEMX_VERSION</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aaa02899c1156db4dbd95a8b4a0c923a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CURRENT_VERSION</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ac4ec0a338c1546cbff3dfd95a3eac2de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>add_station.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>add__station_8c.html</filename>
    <member kind="function">
      <type>void</type>
      <name>add_station</name>
      <anchorfile>add__station_8c.html</anchorfile>
      <anchor>a71f927f267e75cf88c9870199492a126</anchor>
      <arglist>(char station, char *slist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_100.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__100_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__100_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__100_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_100 *</type>
      <name>addr_100</name>
      <anchorfile>addr__100_8c.html</anchorfile>
      <anchor>a859a8aef7bea744d55aa4aa75e77cd1b</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_101.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__101_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__101_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__101_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_101 *</type>
      <name>addr_101</name>
      <anchorfile>addr__101_8c.html</anchorfile>
      <anchor>aa6db8f3a170d658f8b775aca66f37edd</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_110.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__110_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__110_8h" name="type_110.h" local="yes" imported="no">type_110.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__110_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__110_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_110 *</type>
      <name>addr_110</name>
      <anchorfile>addr__110_8c.html</anchorfile>
      <anchor>a5687370d99b4267c30bebc0aa10d4b6b</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_120.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__120_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__120_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__120_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_120 *</type>
      <name>addr_120</name>
      <anchorfile>addr__120_8c.html</anchorfile>
      <anchor>ad554d4badfdce8a96ab54dbec19210aa</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_200.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__200_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__200_8h" name="type_200.h" local="yes" imported="no">type_200.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__200_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__200_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_200 *</type>
      <name>addr_200</name>
      <anchorfile>addr__200_8c.html</anchorfile>
      <anchor>a5f8e4f6ec1cc245da35127d15cad29f7</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_201.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__201_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__201_8h" name="type_201.h" local="yes" imported="no">type_201.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__201_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__201_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_201 *</type>
      <name>addr_201</name>
      <anchorfile>addr__201_8c.html</anchorfile>
      <anchor>ae0611a85f5654c4c992b189e2cf9da67</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_202.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__202_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__202_8h" name="type_202.h" local="yes" imported="no">type_202.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__202_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__202_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_202 *</type>
      <name>addr_202</name>
      <anchorfile>addr__202_8c.html</anchorfile>
      <anchor>a9dc7300949dda56de2973ce2ee1a4a4a</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_203.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__203_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__203_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__203_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_203 *</type>
      <name>addr_203</name>
      <anchorfile>addr__203_8c.html</anchorfile>
      <anchor>aca9540ac35c402c0e9be518562ffe35f</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_204.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__204_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__204_8h" name="type_204.h" local="yes" imported="no">type_204.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__204_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__204_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_204 *</type>
      <name>addr_204</name>
      <anchorfile>addr__204_8c.html</anchorfile>
      <anchor>a5cb47bdd2c395643ab31543006fcd646</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_205.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__205_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__205_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__205_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_205 *</type>
      <name>addr_205</name>
      <anchorfile>addr__205_8c.html</anchorfile>
      <anchor>a0016725e3ec2685170eeeb34a1b667ea</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_206.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__206_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__206_8h" name="type_206.h" local="yes" imported="no">type_206.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__206_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__206_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_206 *</type>
      <name>addr_206</name>
      <anchorfile>addr__206_8c.html</anchorfile>
      <anchor>a891d1799f06ce5080bf7c4913017bd62</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_207.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__207_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__207_8h" name="type_207.h" local="yes" imported="no">type_207.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__207_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__207_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_207 *</type>
      <name>addr_207</name>
      <anchorfile>addr__207_8c.html</anchorfile>
      <anchor>af5d61bfa5b4e95b5674457802d9c8351</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_208.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__208_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__208_8h" name="type_208.h" local="yes" imported="no">type_208.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__208_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__208_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_208 *</type>
      <name>addr_208</name>
      <anchorfile>addr__208_8c.html</anchorfile>
      <anchor>a18bb81752ae531f05f2af27e3525e5b3</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_210.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__210_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__210_8h" name="type_210.h" local="yes" imported="no">type_210.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__210_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__210_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_210 *</type>
      <name>addr_210</name>
      <anchorfile>addr__210_8c.html</anchorfile>
      <anchor>a0d4e81c350adf401fb35262afaf75038</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_212.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__212_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__212_8h" name="type_212.h" local="yes" imported="no">type_212.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__212_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__212_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_212 *</type>
      <name>addr_212</name>
      <anchorfile>addr__212_8c.html</anchorfile>
      <anchor>a0b2334b59ce833386df969249908159d</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_220.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__220_8c.html</filename>
    <includes id="type__220_8h" name="type_220.h" local="yes" imported="no">type_220.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>struct type_220 *</type>
      <name>addr_220</name>
      <anchorfile>addr__220_8c.html</anchorfile>
      <anchor>a3eba08a52a53a7b3475fa4aba8db785f</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_221.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__221_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__221_8h" name="type_221.h" local="yes" imported="no">type_221.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__221_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__221_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_221 *</type>
      <name>addr_221</name>
      <anchorfile>addr__221_8c.html</anchorfile>
      <anchor>a855eb1f538aad8f857cfae6da3a5ad6f</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
    <member kind="function">
      <type>struct type_221 *</type>
      <name>addr_221_dummy</name>
      <anchorfile>addr__221_8c.html</anchorfile>
      <anchor>adfe6c3baaefa45ac727c63cbff3a9a3d</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
    <member kind="function">
      <type>struct type_221 *</type>
      <name>addr_221_impl</name>
      <anchorfile>addr__221_8c.html</anchorfile>
      <anchor>a56dfb20589a3e6c0d73e782c1ab91813</anchor>
      <arglist>(short version, void *address, int *size, int truncate_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_222.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__222_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__222_8h" name="type_222.h" local="yes" imported="no">type_222.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>struct type_222 *</type>
      <name>addr_222</name>
      <anchorfile>addr__222_8c.html</anchorfile>
      <anchor>a70954e06871651a1a0f4b714793642b4</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
    <member kind="function">
      <type>struct type_222 *</type>
      <name>addr_222_dummy</name>
      <anchorfile>addr__222_8c.html</anchorfile>
      <anchor>aac6b6948378479d8d5913f9b77a9c610</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
    <member kind="function">
      <type>struct type_222 *</type>
      <name>addr_222_impl</name>
      <anchorfile>addr__222_8c.html</anchorfile>
      <anchor>ab42dc8825661d3e9b404418511cb00b6</anchor>
      <arglist>(short version, void *address, int *size, int truncate_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_230.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__230_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__230_8h" name="type_230.h" local="yes" imported="no">type_230.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__230_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__230_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_230 *</type>
      <name>addr_230</name>
      <anchorfile>addr__230_8c.html</anchorfile>
      <anchor>a442a9944d4a1c60f0c9d4b670b35fcfe</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_300.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__300_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__300_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__300_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_300 *</type>
      <name>addr_300</name>
      <anchorfile>addr__300_8c.html</anchorfile>
      <anchor>a6a9d334bcad1a5bfca3fcd6e6eeec0ac</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_301.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__301_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__301_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__301_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_301 *</type>
      <name>addr_301</name>
      <anchorfile>addr__301_8c.html</anchorfile>
      <anchor>afc371553d5d3f03884180539f324a748</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_302.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__302_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__302_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__302_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_302 *</type>
      <name>addr_302</name>
      <anchorfile>addr__302_8c.html</anchorfile>
      <anchor>a2766094ec0c0d13372e5bc59f0243779</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_303.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__303_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__303_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__303_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_303 *</type>
      <name>addr_303</name>
      <anchorfile>addr__303_8c.html</anchorfile>
      <anchor>a325eeca1724c9bc061d4ff39b4d87cac</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_304.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__304_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__304_8h" name="type_304.h" local="yes" imported="no">type_304.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__304_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__304_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_304 *</type>
      <name>addr_304</name>
      <anchorfile>addr__304_8c.html</anchorfile>
      <anchor>a4b089c38547ec1f3e3189e7b3858c970</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_305.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__305_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__305_8h" name="type_305.h" local="yes" imported="no">type_305.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__305_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__305_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_305 *</type>
      <name>addr_305</name>
      <anchorfile>addr__305_8c.html</anchorfile>
      <anchor>aa2b20f8b0ebbe39b922f5c43be5b63fc</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_306.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__306_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__306_8h" name="type_306.h" local="yes" imported="no">type_306.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__306_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__306_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_306 *</type>
      <name>addr_306</name>
      <anchorfile>addr__306_8c.html</anchorfile>
      <anchor>af2a67d1b2160d659082750398169a5e7</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_307.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__307_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__307_8h" name="type_307.h" local="yes" imported="no">type_307.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__307_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__307_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_307 *</type>
      <name>addr_307</name>
      <anchorfile>addr__307_8c.html</anchorfile>
      <anchor>a34d607a717e2cc05cfa38e078f8ff42b</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_308.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__308_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__308_8h" name="type_308.h" local="yes" imported="no">type_308.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__308_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__308_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_308 *</type>
      <name>addr_308</name>
      <anchorfile>addr__308_8c.html</anchorfile>
      <anchor>a02ba679e949e286ef977be1cabf80e18</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addr_309.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>addr__309_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>addr__309_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>addr__309_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct type_309 *</type>
      <name>addr_309</name>
      <anchorfile>addr__309_8c.html</anchorfile>
      <anchor>a6557faef51d11a0fb2853f092a702188</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adhoc_flag.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>adhoc__flag_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="adhoc__flag_8h" name="adhoc_flag.h" local="yes" imported="no">adhoc_flag.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_FLAG_IMPLEMENTATION</name>
      <anchorfile>adhoc__flag_8c.html</anchorfile>
      <anchor>a8df5955704b96d4f6a7e5c7b9ece585e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adhoc_flag.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/</path>
    <filename>adhoc__flag_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_FLAG</name>
      <anchorfile>adhoc__flag_8h.html</anchorfile>
      <anchor>a507740a728a11704ebc9a4e8ca3bbdde</anchor>
      <arglist>(PP, DF, FR, AP, PU, PL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_HSEARCH_R</name>
      <anchorfile>adhoc__flag_8h.html</anchorfile>
      <anchor>a110550ec7b6ffca7864ebd6107204245</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_ADHOC_FLAG</name>
      <anchorfile>adhoc__flag_8h.html</anchorfile>
      <anchor>a99dcd83b3415ab2975bfbb03a18991c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adhoc_flag</name>
      <anchorfile>adhoc__flag_8h.html</anchorfile>
      <anchor>ac70c62917cda5c335ac6c085f2d24966</anchor>
      <arglist>(struct type_param *pp, int datum_flag, int fr, int ap, int *uflag, int *lflag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adjust_snr.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>adjust__snr_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <member kind="function">
      <type>double</type>
      <name>adjust_snr</name>
      <anchorfile>adjust__snr_8c.html</anchorfile>
      <anchor>aaad099793a78ad5c73d55386bda975f8</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adler32_checksum.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>adler32__checksum_8c.html</filename>
    <includes id="adler32__checksum_8h" name="adler32_checksum.h" local="yes" imported="no">adler32_checksum.h</includes>
    <member kind="function">
      <type>unsigned int</type>
      <name>adler32_checksum</name>
      <anchorfile>adler32__checksum_8c.html</anchorfile>
      <anchor>acba56e2e5c59a0904e4cf7a933989e28</anchor>
      <arglist>(unsigned char *buf, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adler32_checksum.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>adler32__checksum_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MOD_ADLER</name>
      <anchorfile>adler32__checksum_8h.html</anchorfile>
      <anchor>a0dff171c2773de00b3f678d3cee156f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>adler32_checksum</name>
      <anchorfile>adler32__checksum_8h.html</anchorfile>
      <anchor>acba56e2e5c59a0904e4cf7a933989e28</anchor>
      <arglist>(unsigned char *buf, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adump.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/</path>
    <filename>adump_8c.html</filename>
    <includes id="adump_8h" name="adump.h" local="yes" imported="no">adump.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>adump_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adump.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/include/</path>
    <filename>adump_8h.html</filename>
    <class kind="struct">flist</class>
    <member kind="define">
      <type>#define</type>
      <name>AMBIGUITY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a275bf953bafebbee9d51f1e994c891d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMP</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a3069ce145143ea1c7c3744b9ddda34bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASELINE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a7f75e0f0b14506d1bb91cdcb6516daed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DATATYPE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a1da295ac7ed7c331d34e830b24191e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DRATE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a9a76409fddab719e3a4143bd6780f603</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DURATION</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aa312b7c3e9d9981fb0d98cc4428f17bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a0ac447c7f69530e0caadc891c59d7244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPOCHDAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ac89b68eac297aa706fecf0901263ada7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ESDESP</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a92cbc11248c8a024c7bb008228ee2493</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXPT_NO</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aeb246b80009eb6bb14c6e3023e08cdba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXTENT</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a9eeb29e6b4afa0ecc0f241b4215c239e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FREQ_CODE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a34f6f8960fc68b6868bdaba19ee888e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LENGTH</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a30362161c93e3f1a4ee4c673f535b5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFIELDS</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>abb47f770b8b4507578f390e8983f9ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBDELAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>afb1584863df95d4ae5ad66592f9e94b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MODE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ab8c52c1b4c021ed3e6b6b677bd2ac019</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCOTIME</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a15b6c21ed69b3ae39e9ff0f93c8396c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NFREQ</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a81a10fb168899efe1d3f89bed47d44b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OFFSET</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a21005f9f4e2ce7597c5eb4351816d7e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARENTS</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a843b1715418eea6c7f388df2517f9237</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PHASE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a8d6360b29483bf26b8fad7441892fb78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a524e7de641086886b1cfe0391ffc9f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROCDATE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>af496bd8f81924a1be8c967aea07382cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROCDAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a97f80e45de339807f300840b44ceb46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUALITY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>adc1876afa8c1921a3b743523e4369c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_AZIMUTH</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a76258475ea1ee19c26a8ec49680c634f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_ELEVATION</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a6d6303343626ad4387bf93c0806495a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_FREQ</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a186ca385724bf04ccf18c041f18ce330</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_AZIMUTH</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a12ac751d7171b197246f3a58a6476468</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_ELEVATION</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a4ee8a7894bd9bcca0a764acc8d15b228</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROOTCODE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ad60d1929837955fbd1b6e35e03ba6df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SBDELAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>af25eb7fee391d1c9bd0b6b9b22371635</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCANDAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a45e8e5961e7420d431358235f5538a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCANYEAR</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a0278c4720af14cba6853eb2297547b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCOTIME</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a5df035d1b9347f08cf993917fe4f9bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNR</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aef2f5c7bce117abced23a19c721843b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOURCE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a88cabaa30cba6807a1c75eaa7e4c188e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_AMBIGUITY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a4dd937b24492216ba7abe785f5f78b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_AZIMUTH</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a37e8b3945fadc85a92051de75d1342c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_BISAMP</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aaf785afc274328847224d769919dbae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_BISPHASE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a0f1d74cbba871c0b13996cc84764969b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_BISSNR</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>abb46bf7e99c6fc989fac5580ad078d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CDRATE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a23296cc292597eb408649fe33c2362b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CMBDELAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ac063b9fd53245f398cf9f7382db24552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CSBDELAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>afafbcff439232cb71e5b2b599caae996</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DATATYPE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>af98f9f27f346f82ea0af1fd2659ee595</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DQUALITY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a0e3a49b024381f507e067b3a3161ec82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DURATION</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a95b2ea437dacb594a37e23576923b2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ELEVATION</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a2b14148cce58f7fea3d8644351939cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EPOCH</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>af2625c92a72abe396562fd0eb12c065a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EPOCHDAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a726452a9573ccb7225cd8822b129fd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ESDESP</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a551d94ea959118a4e93c37a7e7e470c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EXPT_NO</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ac6b2c940784e8bf472107eb21f91fa73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EXTENT</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a19b5340e154d2fd854e08e7d94998c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_FREQ_CODE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a50311b944e050bf1596fe878cccb90e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LENGTH</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a2fa940e19d194fe5cd774d71455c8c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MODE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>adab4345bffcd30d1bdb20bce7d989d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OFFSET</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a7a840624379e8ee294644d31c42de6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_REF_FREQ</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a7bb3709171d6daba4e924390843e0542</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ROOT</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a88743a41a12fc50bba0e2b0bedb87a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SCANDAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a266f4b381f705beb5d2ee71991aa1359</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SCANYEAR</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a1a780076ef48700cdefd6e3f82036dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SOURCE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aada413f7a46831b851968d21acd8dcf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SQUALITY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a6d53caf16bd7c3b269e073b2f5b93ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_TIMETAG</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a0fa0d0723723e6cfeb9b631c79659fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_TRIANGLE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a2b31c586b5763248de1bdc648d90d04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_TYPE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aaec2c3b3a9d313249405662fbec344ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_VERSION</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a57a3c7624ebd16405254f1cb178295df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIMETAG</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a556876278437f4f010004077baf96695</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOT_DRATE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a9f98ffec2f1d43ee933cfbcaaba68e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOT_MBDELAY</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>af1635395f606a2f43f04dc708c54656f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOT_MBDSBD</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ad0ba7ced07e74c25140b808903089058</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOT_PHASE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ab9e792fdcda53191d2140fdab83ad83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a5a392548f2df67370cb15d2a5d75cd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>U</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>affc9cbf86b78292bdb405361761c47f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>af40a326b23c68a27cebe60f16634a2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a1c6d5de492ac61ad29aec7aa9a436bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_bfields</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a9c90a9aa250700d6b42c0224d53809b3</anchor>
      <arglist>(int, char **, struct flist[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a1f55298ff79347a11e3ab86c84b86fa1</anchor>
      <arglist>(int, char **, FILE **, FILE **, int *, int *, struct flist[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_tfields</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>ac450176ab7c102f5b0bf3ee28c489382</anchor>
      <arglist>(int, char **, struct flist[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strip_bline</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a638a3bc434bf4eeabfa68ebfcc8102e5</anchor>
      <arglist>(char *, struct flist[], char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strip_tline</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a4e9a4915801d245e21cb2f50b75367aa</anchor>
      <arglist>(char *, struct flist[], char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_header</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a52c44ae8b41f0d145590439ed00522fa</anchor>
      <arglist>(FILE *, struct flist[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aeclr_corel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aeclr__corel_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <member kind="function">
      <type>void</type>
      <name>aeclr_corel</name>
      <anchorfile>aeclr__corel_8c.html</anchorfile>
      <anchor>aef7e85e7f5db785201759c1faa7ffaf9</anchor>
      <arglist>(corelarray *cdatum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aeclr_fringe.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aeclr__fringe_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <member kind="function">
      <type>void</type>
      <name>aeclr_fringe</name>
      <anchorfile>aeclr__fringe_8c.html</anchorfile>
      <anchor>a9675a60585bd19d736ba9faa444ddb71</anchor>
      <arglist>(fringearray *fdatum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aeclr_quad.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aeclr__quad_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <member kind="function">
      <type>void</type>
      <name>aeclr_quad</name>
      <anchorfile>aeclr__quad_8c.html</anchorfile>
      <anchor>ac0e9f7b4e7b92653e95b9797bf2132ed</anchor>
      <arglist>(quadarray *qdatum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aeclr_root.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aeclr__root_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <member kind="function">
      <type>void</type>
      <name>aeclr_root</name>
      <anchorfile>aeclr__root_8c.html</anchorfile>
      <anchor>ae20e37e5c693d849bfaca6f397d430ae</anchor>
      <arglist>(rootarray *rdatum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aeclr_triangle.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aeclr__triangle_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <member kind="function">
      <type>void</type>
      <name>aeclr_triangle</name>
      <anchorfile>aeclr__triangle_8c.html</anchorfile>
      <anchor>a49033285ae6e2b763d1579bb7982386f</anchor>
      <arglist>(trianglearray *tdatum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aedata.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>aedata_8h.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <class kind="struct">corelarray</class>
    <class kind="struct">esum</class>
    <class kind="struct">fringearray</class>
    <class kind="struct">quadarray</class>
    <class kind="struct">rootarray</class>
    <class kind="struct">trianglearray</class>
    <member kind="define">
      <type>#define</type>
      <name>RESTORE</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>acd2ea0453b6daf41446e84a9f24a2e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESTORE_NOFLAG</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a9afb66c64e6e9d7dddcd50d2878a3b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ab2868d85c8a74e3ee08bdc44580e2235</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aedit.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/</path>
    <filename>aedit_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>batch</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>ad1793c1a8dd3db1a8c4e2d76eadf0036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cflag</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>afbb9b1dda8ad9915e753c7a84be13489</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cscan</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a1386ebb1b94591749683abba8259ffe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>csortstat</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a4701a575d7993b0edfa057b319e330df</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cspace</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a40a4bac3491c0d43ef657097a0e5e687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data_version</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a106b1504da610ea2c720bafb9a4d8c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dotype</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a2f29aab1c371226c7a31af51f0001f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fflag</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>aab9e30d72b4b6af02ce19b24422ad2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fscan</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a1f60804e6e47d358561049739d360d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fsortstat</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a5ecbdd60d8ed41819099496a87f186bb</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fspace</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>adaed2ef3bb8f73edb5c9a439a6c2e395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct inputs</type>
      <name>inp</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>abd573eff89e10745989cee5a194cc6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>output_version</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a18e571ae00428ed0123d072572a274e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>plot_open</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>ac083d6709ce090866b0c8c34ef3c44d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>psplot_open</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>ac83385bcefb21a96e2b201c33e441055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qflag</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>ad68ceffeafb3a212d3d749b1899eb19b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qscan</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a0a5078ccad3aa56bff65729922afe6e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qsortstat</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a6fa4a4c7b8d0d721383b51363933c49d</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qspace</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>aed9aed1d97d9951e4844b4db5bcfed29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct datasumm rsumm csumm fsumm tsumm</type>
      <name>qsumm</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a5cd8da60b3f5f41c89d4504c1a1f60d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rflag</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>abb90ecefc5b17c468a6aca0261c8b63d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rmdup</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a871f0b454c753d58efbf287f09c2be83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rscan</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a179e7279be43393227b169b575c734cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rsortstat</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a0597ac9a5fe21b22160969b3097b0942</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rspace</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a409a282430c5d3968099eb4342b47fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rundepth</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>aa4dcbf0c59f920c51895f4937eed1d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tflag</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>ab3fe9f9160e69ccb1c2ec2762072a6a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tscan</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a927ae6d077305576efe46d3262e2fac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tsortstat</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>aa197c7a76a2fa21bf3735cf1d70b860d</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tspace</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a8c58f8518a99534fef453ac039eeacbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>up_to_date</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a3e3b628171376543f5ac7642fff82ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct usearray</type>
      <name>user_param</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>ab735b108113cfcf02baf251fb4a8b646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xwindow</name>
      <anchorfile>aedit_8c.html</anchorfile>
      <anchor>a7ebff3ca9111aaba3727d524df0143a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aedit.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>aedit_8h.html</filename>
    <includes id="sizelimits_8h" name="sizelimits.h" local="yes" imported="no">sizelimits.h</includes>
    <includes id="aedit__proto_8h" name="aedit_proto.h" local="yes" imported="no">aedit_proto.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <class kind="struct">com</class>
    <class kind="struct">ibaselist</class>
    <class kind="struct">inputs</class>
    <class kind="struct">ptrilist</class>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aedit_proto.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>aedit__proto_8h.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <member kind="function">
      <type>int</type>
      <name>active_filter</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a16af2e7e6a47200c2d29cda1f8696812</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_station</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a71f927f267e75cf88c9870199492a126</anchor>
      <arglist>(char station, char *slist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aeclr_corel</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aef7e85e7f5db785201759c1faa7ffaf9</anchor>
      <arglist>(corelarray *cdatum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aeclr_fringe</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a9675a60585bd19d736ba9faa444ddb71</anchor>
      <arglist>(fringearray *fdatum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aeclr_quad</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ac0e9f7b4e7b92653e95b9797bf2132ed</anchor>
      <arglist>(quadarray *qdatum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aeclr_root</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae20e37e5c693d849bfaca6f397d430ae</anchor>
      <arglist>(rootarray *rdatum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aeclr_triangle</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a49033285ae6e2b763d1579bb7982386f</anchor>
      <arglist>(trianglearray *tdatum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>alloc_btq</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7f7086e421456bd3b21928fbddb1cd04</anchor>
      <arglist>(char **btq, int *allocated, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>allocate_parms</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a9c827ee13afc5c0db398943b5751b58c</anchor>
      <arglist>(struct usearray *user_param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>auto_hardcopy</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a5a2acdba4443c39c2eec0374d1031e18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>axis</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aeee00b3bc47e51ca2fac66dbabf09747</anchor>
      <arglist>(char *y_axis, char *x_axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axis_scale</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae1d2e973eec9c5e0bc2428fe5bff5e42</anchor>
      <arglist>(int index, float min, float max, float *win1, float *win2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calc_close</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ad43b7b3e58f1cc3c0d50cbdc5b94dd2b</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cfilter</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aded840c3ab5e4d3fdfa20f1c5b697164</anchor>
      <arglist>(corelarray *cdatum, int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_env</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>acf5278e9aa7adf3b8aa0ccf942af01ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cleanup</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae98c88ab48ec77e3c31c1cf026bbab79</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup_psplot</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a65c875fb78825904d2b0079e78f558c6</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>clear</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a668f035799e549b28f8f2835cf753b94</anchor>
      <arglist>(esum *data, char *string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_fqex</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>adc5a717b3c2dc0ab5f4237a1e2ad99cf</anchor>
      <arglist>(struct frqexp *fqex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_pstruct</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aaff6864474cdfd4ee27fad2f2bbf113c</anchor>
      <arglist>(struct plot_info *ps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_source</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>afde3fc3a6e27ae759b26f3022cab71fa</anchor>
      <arglist>(srcsum *sptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_summ</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a59cf15949158d41ab8d843abcd40d79e</anchor>
      <arglist>(struct datasumm *summ)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>command_id</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>af4934dfb0bec4d473395bcba1f67508f</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cross_link</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7450a480d01b2e49ec5699d3f15e3112</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cursor_select</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a4de722c538fee563f11215c5e41fa17c</anchor>
      <arglist>(esum *data, int *npoint, int option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>datum_value</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a9c4908d1c9937f4eb8fe9dac3e02b715</anchor>
      <arglist>(int index, int aux, int toffset, int refrem, fringearray *fdatum, float *value, float *errh, float *errl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>display_psdata</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aa330dcb4c31140317b67e5f468f6954e</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dup_check</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ab4ee68276604f69d8fe480ce489e4dfb</anchor>
      <arglist>(fringearray *fdata, int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dup_flag</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a340ba5a70d8b14e8f615905f40d63b57</anchor>
      <arglist>(esum *data, int option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edit</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aa220cbd753c6ba875a061031af3cb7c1</anchor>
      <arglist>(esum *data, char *arg1, char *arg2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edit_close</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aa3ba3279a949fc4c22ca94f9f35acd15</anchor>
      <arglist>(esum *data, int mode, int *fedit, int *tedit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edit_families</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a368f2b3534e61e22e94a37fe29830701</anchor>
      <arglist>(esum *data, int mode, int *nedit1, int *nedit2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase_point</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a9bc7426d6868b80c2ecc6899fa715c0b</anchor>
      <arglist>(float x, float y, float xh, float xl, float yh, float yl, int symbol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>esdesp_check</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>abdb1539049a5685994f133852e6a5c58</anchor>
      <arglist>(int esdesp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a70af895f5aa31e01f99f2eb9264329db</anchor>
      <arglist>(esum *data, struct com *command)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>extract_parms</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>abcea1ceedb5121245de456b408b53357</anchor>
      <arglist>(esum *data, struct usearray *user_param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ffilter</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a3c883fb968b14d63e303c7c61a1f080f</anchor>
      <arglist>(fringearray *fdatum, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill4_parms</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a31c55e184f48760f920a532b8f02c806</anchor>
      <arglist>(struct mk4_fringe *fringe4, fringesum *data, struct usearray *user_param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_closure</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2073ff8d480d00d056457d2da9100cde</anchor>
      <arglist>(trianglearray *tptr, char triangle[4], int indices[3], fringearray *fdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_tdata</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a1022ff6608b36f3b30b93d526b3e9f75</anchor>
      <arglist>(int nfe, esum *data, int *dptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fplot</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a1433bd4daa9832d57f03f19a4b9ff332</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_axis</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>af085f244b3289fa38d0dc71fcaf8db11</anchor>
      <arglist>(char *string, char *ax_name, int *ax_index, char *ax_units, int *aux, int *plotby)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_param</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2bbc40f6bef0a4710309cedc9e5ceec1</anchor>
      <arglist>(esum *data, char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_param_list</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a49cb5be88ac06672aef99cf1c952fb17</anchor>
      <arglist>(struct usearray *user_param, int maxfreq, char *args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plot_data</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a28665a6090427927e687b185bee3da5f</anchor>
      <arglist>(esum *data, struct plot_info *pd, struct frqexp fqex, srcsum *sptr, char *plot_id, struct plot_points *pp, int symbol[3])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_plot_datum</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a341291cc87714d05f29eb368a32d023b</anchor>
      <arglist>(char *plot_id, esum *data, srcsum *sptr, int ptr, int n, int toffset, struct plot_ptqual *pt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_ps_indices4</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7bdae14a1c1a673ceff04908887c7c76</anchor>
      <arglist>(esum *data, struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>help</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aa1e9aaf83ee6a74d196830e5b7334be8</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_inputs</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>addf1094bd04444873ba5599b4d3df5a0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_summ</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a60367e7cce2fbe848be958bb5374ec38</anchor>
      <arglist>(struct datasumm *summ, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>locate_pscurs</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a84877152fa62620c9f88cd23ab5ebcbc</anchor>
      <arglist>(float *x, float *y, struct ps_array *psarray, struct psplot_cell **cell)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_psarray4</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a36cf8ece0e02525f350f045d425f8c41</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>make_tri</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae201321db215d2568606b89f906842b4</anchor>
      <arglist>(char *stations, int *ntri)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>makekey</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a95e037d16f0bc1a1b395330a14453f10</anchor>
      <arglist>(void *dptr, int key, int type)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>mk3_qf</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a1b8fadbbc07b2c620ddef0d0b8737d66</anchor>
      <arglist>(fringesum *datum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>newbase</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a48d4313be27f05a0f0cd27bc54d712a8</anchor>
      <arglist>(char *baselist, char *triangle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>param_list</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ab7bdc7cf48e499a3d304b2ff2e7a4161</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a585fefe99aec805a05eeda5fe28ac043</anchor>
      <arglist>(int argc, char **argv, int *xwindow, char *run_fname, char *batch_string, int *filelist)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_commands</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a1668b5438cc02b8c69c104bb73de48a1</anchor>
      <arglist>(char *line, struct com *commands, int *n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plot</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aa7eb77a7764bbfc536852c0a352fe2a9</anchor>
      <arglist>(esum *data, char *y_axis, char *x_axis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plot_fqex</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ac97207eca189ce0672eacbc42bb416c7</anchor>
      <arglist>(esum *data, struct frqexp fqex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plot_header</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ac8330845f1092175c146eba90f817d57</anchor>
      <arglist>(struct frqexp fqex, srcsum *sptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plot_points</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a07a36351b0c2ae55c4296a619d8b7b96</anchor>
      <arglist>(struct plot_info *pd, struct plot_points *pp, int symbol[3])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plot_quality</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a8aa1e38f7a91fb17a7bb6d4021df70fe</anchor>
      <arglist>(fringesum *fdatum, trianglesum *tdatum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_allsumm</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae35ccc84f9a03684d67224d135e2d400</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_csumm</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>af847aea1fedb6d10eb2ca6382ff081be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_fsumm</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a46c30bdcfc57a21d6e7acb4cab3b18e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_inputs</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2632aed3c3ca1e85c31161c83a7803c4</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_rsumm</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ad3d161fe5876a5e43741b00ed33e6e2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_source</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a13eaf52d0ccfbdadbc747ae1ba0b32af</anchor>
      <arglist>(srcsum *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_ssumm</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a9334372e9b6cc922836245a9fc1b0e70</anchor>
      <arglist>(char *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_summary</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ac77afb90c379faa3b453da46d0e04950</anchor>
      <arglist>(esum *data, char *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_tsumm</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a86575c789d1fceb885dccf875c397bb7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_data</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a3aba72ddf9556122743a1667d18be876</anchor>
      <arglist>(fringearray *fdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_baselabel</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aad7e74305768c39c21261b1b04884d43</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_fplot</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a910bb224d6a29cdb28d8f519bd2b8ff8</anchor>
      <arglist>(struct ps_array *psarray, fringesum *fdatum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_free</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a76617a79afc5b07b75daeb15121b50ce</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_inside</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a9821eb58e9de79cabe656cef32a1054f</anchor>
      <arglist>(float x, float y, float xmin, float xmax, float ymin, float ymax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_proc_datum</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2ed6d662a6f4470644e51f6b1a31ce72</anchor>
      <arglist>(esum *data, struct ps_array *psarray, float x, float y, struct psplot_cell *cell, char key, int do_fplot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_scanlabel</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a4f335e412cf1d394243169778c1e1c3a</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_selbase</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a65afd6daf85f6c505320d51f619bce71</anchor>
      <arglist>(int baseline, struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_selqual</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a8b36e3f4385b4a8137b31074f0c2e33d</anchor>
      <arglist>(int colour, struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_selscan</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae5232d000e0330a80428ef188664c4c1</anchor>
      <arglist>(int scan, struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psfile4</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7d61695148252df10574986ba392af9b</anchor>
      <arglist>(esum *data, char *fname, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psplot</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ab8ae163077b9d624169fdb0367211c9a</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psplot4</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>af6d7311638f538c7d9a9765b31f51702</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psplot_defaults4</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>adbf1b39079912b9bb6010065423a45ea</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pstag_process</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a0f728533c0201e279df78250c68e7fd1</anchor>
      <arglist>(struct ps_array *psarray, esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>qarray_index</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ab1e712cd6e0e8bb9c70696873bdc9fc2</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>qfilter</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>af530a7bc74cd3ea2743af05b4ff7f250</anchor>
      <arglist>(quadarray *qdatum, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_cursor</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2ad3bfcee4c84a894b121826ef876d90</anchor>
      <arglist>(float *x, float *y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_data</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a691eb7fef9566555cf896a7ad07dadcf</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rfilter</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a86a989b264a81c82c26ed1b09f571695</anchor>
      <arglist>(rootarray *rdatum, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run_com_file</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a13390d42b9bdd4aed9189ca11571a6e4</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run_pscursor</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7fc44a8c7f75ad73352c1f0fe07be30f</anchor>
      <arglist>(struct ps_array *psarray, esum *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>save</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a5c8b51f4c7b6a5ccb09bfadcdd88ce0a</anchor>
      <arglist>(esum *data, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_baselines</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>afeb724d4a0919e21b48d2c789618a911</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_device</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a9d5890a6ab02478fd740cba830395079</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_fraction</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a4b3594eb4a10afbec42bf1f41ab7aef2</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_frequencies</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>adf1b1d990eee294f50cfccf7dddcf43e</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_mode</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a0fc368c006c1e54ae71d297863b085d0</anchor>
      <arglist>(char *arg1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_nfreq</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a11aedaf60e00f49e1685e3454ea1104e</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_pols</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7330a1b0289d69e6b351b12d58f1c85a</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_prange</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a6e1452ddc48d40c8bfe6dbf5f4edddbd</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_procrange</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a81bcb6e1652fd77c9e59acb0446f494c</anchor>
      <arglist>(char *arg1, char *arg2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_pscodes</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a8ce8618cdd9c422e96a65c7b717710ba</anchor>
      <arglist>(esum *data, struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_psparam</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a13d8645ef9675837e67cda492cf654b6</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_qcodes</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a57743ee971e02fb7ed28e826875cd13a</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_quads</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2b96dbfb97f7cc4158a5ae8148c96f42</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_sources</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ab21859712e3e83e59e00e83eb4bc381b</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_stations</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a44f3103192dfbb6e899431d75acb0991</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_timerange</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ace273f70e5ddf5d41a4e7df4ed5421d6</anchor>
      <arglist>(char *arg1, char *arg2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_triangles</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a06477663b22d4046370eb74bcae18f71</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_type</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a5e428b935a0155bf4fe34407fa123496</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_year</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a4d79e654e3edadaa18c9ae9fd032dd73</anchor>
      <arglist>(fringearray *fdata, char *arg1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setup_plot</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>afad7febecee3a238287ef65539ccd2ea</anchor>
      <arglist>(struct plot_info *pd, int nplot, struct frqexp fqex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setup_psplot</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2b25b027ff0ea67bf59db69751fff02a</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>smatch</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a6132f7cd069bfc8c1f25880ff78767b1</anchor>
      <arglist>(char *s1, char *s2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sorter</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>af577d241de4f112129251eaaf38be35a</anchor>
      <arglist>(void *dptr, char *arg1, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>station_reduce</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aa4b77dba1a2f232aecda09f19ef7fd74</anchor>
      <arglist>(fringearray *fdata, char station, char *source, int expt, char freq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>summ_corel</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2899b43c2aaceaae4bbe0cc7bc1b75f7</anchor>
      <arglist>(corelarray *cdata, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>summ_data</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a3a95935dfbcd267a3b43b565347135b3</anchor>
      <arglist>(esum *data, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>summ_fringe</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a84d15683e448b49f60309f9f4b8c0584</anchor>
      <arglist>(esum *data, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>summ_quad</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a809a6807fd01083b43088eeb5c8c3de8</anchor>
      <arglist>(quadarray *qdata, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>summ_root</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7f412408b9957f81e3f4bd19fa946abb</anchor>
      <arglist>(rootarray *rdata, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>summ_triangle</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a78f8c486bfd6d77837d24cdbf6e704c1</anchor>
      <arglist>(trianglearray *tdata, int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>symbol_key</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a911d6cf5f9b262c57ac208fd24cc61a8</anchor>
      <arglist>(struct frqexp *fqex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tarray_index</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a7a5513a490a11aa3a712ee45bc055480</anchor>
      <arglist>(esum *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test1</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a2580d39684661c3fb0a761efdcad15a9</anchor>
      <arglist>(esum *data, char *arg1, char *arg2, char *remarg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tfilter</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a23dced85a80da3fab5576d2a3f57125d</anchor>
      <arglist>(trianglearray *tdatum, int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>time_axis</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a15f4ce0e764247234316ed3eacb55e1b</anchor>
      <arglist>(struct plot_info *pd, struct frqexp fqex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triangle_value</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a5078d4e0f175e7756a5b78507b52599d</anchor>
      <arglist>(int index, trianglearray *ta, int toffset, float *value, float *errh, float *errl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tricheck</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>add7b3306235b39bdf6f1211aed6e3a50</anchor>
      <arglist>(trianglesum *datum, char *triangle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>trngl_present</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a57973ea7d6050b35abc7acaa5157f038</anchor>
      <arglist>(char triangle[4], struct ibaselist *blist, int n, int indices[3])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unflag</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a92026e53de54312a3fca6a69185c5b30</anchor>
      <arglist>(esum *data, char *arg1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_fqex</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aecf01ba1a28cbcbd681b7c2718cfce7d</anchor>
      <arglist>(void *datum, struct datasumm *summ, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_sinfo</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a61625cb4e5b87315eb0a0bc310b5e347</anchor>
      <arglist>(struct source_info *sinfo, char *source, int nsrc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_data</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ac398eecf661cfe81fabc266bf7e3c847</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_families</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae21da162dad0a197b2805a40eb668728</anchor>
      <arglist>(esum *data, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_param</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>abd719b4c4118786c4ed00f0f5bae58d9</anchor>
      <arglist>(esum *data, char *filename, char *precision)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_prmline</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a3f7779c69913712fa65e8ce30bd0d457</anchor>
      <arglist>(fringearray *fdata, int ndigits, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_psfile</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>aec67d55ef51c36172400ed43c44a36ef</anchor>
      <arglist>(struct ps_array *psarray, char *filename, int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_pshdr</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>adeede931101a98ca3f09a4a942efcd63</anchor>
      <arglist>(FILE *fp, struct ps_array *psarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_reproc</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a865bc27f0a974512b56d700e7b1ed81d</anchor>
      <arglist>(struct ps_array *psarray, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_tdata</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>a76bf185b7431756ef42057cd3b910f24</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>zoom</name>
      <anchorfile>aedit__proto_8h.html</anchorfile>
      <anchor>ae4775653f5dbec8abc3cb8fe77c4809f</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>afile_header.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>afile__header_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>afile_comment</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>aaec2234b8234d5a757da31af768d9c13</anchor>
      <arglist>(char *line)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>afile_header</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>ac1ec4cd83d62f188e807eaf12fdc95d9</anchor>
      <arglist>(int version, int type, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>get_afile_com_char</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a3deb5a067e905e6eb299732fbc9ac3fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_afile_com_char</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a850746cf35e20a3ef806dc839cce5c84</anchor>
      <arglist>(int star)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>afile_com_char</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a7841482579f3f8949a857c4019ba8825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header10</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a4161dd1452bbb713b439980ca39c58ae</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header11</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a05df64ab64b141b464841d32684026c5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header12</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a9f07bcd90ce49c87f6c67f8b5846cc3f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header20</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a2a8cd7c0182d74d2da51eb849e4c7517</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header21</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a546102c14ca794ded0a32e8f4921409b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header22</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a23f12d474552cea7f2b8d980a3af8eb7</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header23</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a0b3bdcf58d9d2e86c628d4af0d5c7a45</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header30</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a5475dc77990442dc180c623d6900f056</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header31</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a9b37cd75c33ffc8d005e01de31930502</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header32</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a7485268c7dc2ccd78bc4d5346eee4a01</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header33</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>ae6e8f673162d6edda57f64e671d78d1b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header40</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>ad4852bc7303cbfe188c5c58ae0f781f7</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header41</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>ab58f52689207220a205f1fe76edbbfbe</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header42</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a8bbbc8015c0febca0c8cc351da2796fa</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header43</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a46741a7b08dba77c21549d976ea90c51</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header50</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>aeb5bfbddd55420e1e31a807ddaa34d4d</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header51</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a21057a0e9dc9dc33a568fde244fc9759</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header52</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>ae2cc1ca95b5dcbda768721c57f4973a5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header53</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a5f38fb1827a276ea653e6941a6e943af</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header60</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a0417d681ca8b5c026cd17efafb2681a0</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header61</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>ab820ab3081dd7639cba72d22e522c804</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header62</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>aa01e32fa34e83d50e31f0ded332a34de</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header63</name>
      <anchorfile>afile__header_8c.html</anchorfile>
      <anchor>a409c3b5e23ea91b2c2abfdae260b2727</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>afile_structure.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/include/</path>
    <filename>afile__structure_8h.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <class kind="struct">afile_structure</class>
    <member kind="define">
      <type>#define</type>
      <name>AFILE_STRUCTURE_H__</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>a927eecf5904d26685a164117c5783e28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>afio.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/mk4_module/afio/</path>
    <filename>afio_8py.html</filename>
    <class kind="class">afio::afio::afile_structure</class>
    <class kind="class">afio::afio::AFIOStructureBase</class>
    <class kind="class">afio::afio::corelsum</class>
    <class kind="class">afio::afio::fringesum</class>
    <class kind="class">afio::afio::quadsum</class>
    <class kind="class">afio::afio::rootsum</class>
    <class kind="class">afio::afio::trianglesum</class>
    <namespace>afio::afio</namespace>
    <member kind="function">
      <type>def</type>
      <name>afio_load</name>
      <anchorfile>namespaceafio_1_1afio.html</anchorfile>
      <anchor>a8a0988cf12991409fe4395762dd4333d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>afiofp_approximately_equal</name>
      <anchorfile>namespaceafio_1_1afio.html</anchorfile>
      <anchor>a5a104a15cc5aab08691634992a221c1b</anchor>
      <arglist>(a, b, abs_tol=1e-14, rel_tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>alist</name>
      <anchorfile>namespaceafio_1_1afio.html</anchorfile>
      <anchor>a6977ac95996187d29c4c21c1209c974f</anchor>
      <arglist>(filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aline_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>aline__id_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>aline_id</name>
      <anchorfile>aline__id_8c.html</anchorfile>
      <anchor>a29c995cda5db9f337450f70947edeae8</anchor>
      <arglist>(char *line, int *version, int *type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/alist/</path>
    <filename>alist_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>alist_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>open_output</name>
      <anchorfile>alist_8c.html</anchorfile>
      <anchor>a1113a37d421f6006a9eb540d822c6dea</anchor>
      <arglist>(char *outfile)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>alist_8c.html</anchorfile>
      <anchor>a0febef575148bb7cf51b07db7b471dcb</anchor>
      <arglist>(int argc, char **argv, fstruct **files, char *outfile)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>summarize_mk4fringe</name>
      <anchorfile>alist_8c.html</anchorfile>
      <anchor>aa4be0122d6bbe5d2da220016a21c7622</anchor>
      <arglist>(struct mk4_fringe *fr, fringesum *fsumm)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>output_version</name>
      <anchorfile>alist_8c.html</anchorfile>
      <anchor>a18e571ae00428ed0123d072572a274e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alist4.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>alist4_8cc.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__AFileDefinitions_8hh" name="MHO_AFileDefinitions.hh" local="yes" imported="no">MHO_AFileDefinitions.hh</includes>
    <includes id="MHO__AFileInfoExtractor_8hh" name="MHO_AFileInfoExtractor.hh" local="yes" imported="no">MHO_AFileInfoExtractor.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ALIST_VERS</name>
      <anchorfile>alist4_8cc.html</anchorfile>
      <anchor>a852c095c2f5c15d7ff391018539b613b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>alist4_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alist_plot.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_visualization/</path>
    <filename>alist__plot_8py.html</filename>
    <namespace>hops_visualization::alist_plot</namespace>
    <member kind="function">
      <type>def</type>
      <name>pick_action</name>
      <anchorfile>namespacehops__visualization_1_1alist__plot.html</anchorfile>
      <anchor>ab17067798933bdb5072a84e73c3eae55</anchor>
      <arglist>(event)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plot_alist_data</name>
      <anchorfile>namespacehops__visualization_1_1alist__plot.html</anchorfile>
      <anchor>abefdc3e867958cc3fa69a10d5acbb427</anchor>
      <arglist>(fignum, x_data, y_data, x_label, y_label)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alloc_btq.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>alloc__btq_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>alloc_btq</name>
      <anchorfile>alloc__btq_8c.html</anchorfile>
      <anchor>a7f7086e421456bd3b21928fbddb1cd04</anchor>
      <arglist>(char **btq, int *allocated, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>allocate_parms.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>allocate__parms_8c.html</filename>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>allocate__parms_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>allocate__parms_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>allocate_parms</name>
      <anchorfile>allocate__parms_8c.html</anchorfile>
      <anchor>a9c827ee13afc5c0db398943b5751b58c</anchor>
      <arglist>(struct usearray *user_param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ap_mean.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/src/</path>
    <filename>ap__mean_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTATAP</name>
      <anchorfile>ap__mean_8c.html</anchorfile>
      <anchor>acd223cd436508c24ea32eaddd831bfa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ap_mean</name>
      <anchorfile>ap__mean_8c.html</anchorfile>
      <anchor>a00f15d3b33e949a14b3fcaebcb4f2bbe</anchor>
      <arglist>(double start, double stop, double *coords, double *val1, double *val2, int n, int *nstart, double *result1, double *result2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>append_sdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourmer/src/</path>
    <filename>append__sdata_8c.html</filename>
    <includes id="fourmer_8h" name="fourmer.h" local="yes" imported="no">fourmer.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>revise_cid</name>
      <anchorfile>append__sdata_8c.html</anchorfile>
      <anchor>a985992472d3bc34900eb3459fa8c4e95</anchor>
      <arglist>(CID, ISA, ISR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_sdata</name>
      <anchorfile>append__sdata_8c.html</anchorfile>
      <anchor>a283459038e4aa0c6729e72187f6a7d88</anchor>
      <arglist>(struct mk4_sdata *sdataC, struct mk4_sdata *sdataB)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>apply_cmplxbp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>apply__cmplxbp_8c.html</filename>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>void</type>
      <name>apply_cmplxbp</name>
      <anchorfile>apply__cmplxbp_8c.html</anchorfile>
      <anchor>a1fcdb75c824f3d512af4efb62c707ce4</anchor>
      <arglist>(int sb, struct freq_corel *fdata, hops_complex *xp_spectrum, int npts, struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>apply_filter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>apply__filter_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="filter_8h" name="filter.h" local="yes" imported="no">filter.h</includes>
    <includes id="statistics_8h" name="statistics.h" local="yes" imported="no">statistics.h</includes>
    <member kind="function">
      <type>int</type>
      <name>apply_filter</name>
      <anchorfile>apply__filter_8c.html</anchorfile>
      <anchor>a72e91bcd8c350299ff2b8b1a8aa84a7c</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
    <member kind="variable">
      <type>struct type_filter</type>
      <name>filter</name>
      <anchorfile>apply__filter_8c.html</anchorfile>
      <anchor>ab4ec20cd43e06573475f4a497045983a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_statistics</type>
      <name>statistics</name>
      <anchorfile>apply__filter_8c.html</anchorfile>
      <anchor>a923ebcb0c13547ad1b48f72cb4e0d0ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>apply_funcs.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/</path>
    <filename>apply__funcs_8h.html</filename>
    <member kind="function">
      <type>double</type>
      <name>adjust_snr</name>
      <anchorfile>apply__funcs_8h.html</anchorfile>
      <anchor>aaad099793a78ad5c73d55386bda975f8</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_cmplxbp</name>
      <anchorfile>apply__funcs_8h.html</anchorfile>
      <anchor>a1fcdb75c824f3d512af4efb62c707ce4</anchor>
      <arglist>(int sb, struct freq_corel *fdata, hops_complex *xp_spectrum, int npts, struct type_pass *pass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_notches</name>
      <anchorfile>apply__funcs_8h.html</anchorfile>
      <anchor>a996fefa5b80704c6d5b785a15b0eaa9c</anchor>
      <arglist>(int sb, int ap, struct freq_corel *fdata, hops_complex *xp_spectrum, int npts, struct data_corel *datum, struct type_status *status, struct type_param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_passband</name>
      <anchorfile>apply__funcs_8h.html</anchorfile>
      <anchor>a155d44ce851d17e5342c6cd53c9946c6</anchor>
      <arglist>(int sb, int ap, struct freq_corel *fdata, hops_complex *xp_spectrum, int npts, struct data_corel *datum, struct type_status *status, struct type_param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_video_bp</name>
      <anchorfile>apply__funcs_8h.html</anchorfile>
      <anchor>aac686533488574ef5b7a35506d9c0c34</anchor>
      <arglist>(hops_complex *xp_spec, int npts, struct type_pass *pass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_field_rotations_fixed</name>
      <anchorfile>apply__funcs_8h.html</anchorfile>
      <anchor>a5b119fc25a592dfb2b77747b80f13739</anchor>
      <arglist>(hops_complex cpolvalue[4], double *par_angle, double *elevation, int *mount_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fit_vbp</name>
      <anchorfile>apply__funcs_8h.html</anchorfile>
      <anchor>a6ee0087c4ab69f2442127ed493e1a784</anchor>
      <arglist>(int npts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>apply_notches.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>apply__notches_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <member kind="function">
      <type>void</type>
      <name>apply_lsb_notch</name>
      <anchorfile>apply__notches_8c.html</anchorfile>
      <anchor>ab70ed3864302067f73a3a959d443ab46</anchor>
      <arglist>(double lo, double hi, struct freq_corel *fdata, int *xp_flags, int npts, int ap, struct type_param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_notches</name>
      <anchorfile>apply__notches_8c.html</anchorfile>
      <anchor>a996fefa5b80704c6d5b785a15b0eaa9c</anchor>
      <arglist>(int sb, int ap, struct freq_corel *fdata, hops_complex *xp_spectrum, int npts, struct data_corel *datum, struct type_status *status, struct type_param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_usb_notch</name>
      <anchorfile>apply__notches_8c.html</anchorfile>
      <anchor>aee864f4f0ab599523a1ae863d7102fa6</anchor>
      <arglist>(double lo, double hi, struct freq_corel *fdata, int *xp_flags, int npts, int ap, struct type_param *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>apply_passband.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>apply__passband_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <member kind="function">
      <type>void</type>
      <name>apply_passband</name>
      <anchorfile>apply__passband_8c.html</anchorfile>
      <anchor>a155d44ce851d17e5342c6cd53c9946c6</anchor>
      <arglist>(int sb, int ap, struct freq_corel *fdata, hops_complex *xp_spectrum, int npts, struct data_corel *datum, struct type_status *status, struct type_param *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>apply_video_bp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>apply__video__bp_8c.html</filename>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>void</type>
      <name>apply_video_bp</name>
      <anchorfile>apply__video__bp_8c.html</anchorfile>
      <anchor>aac686533488574ef5b7a35506d9c0c34</anchor>
      <arglist>(hops_complex *xp_spec, int npts, struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>assess_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>assess__data_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <member kind="function">
      <type>int</type>
      <name>assess_data</name>
      <anchorfile>assess__data_8c.html</anchorfile>
      <anchor>a045ff4b9c9e1b0ecc7265a05376fb1ed</anchor>
      <arglist>(seg_data *data, int nseg, struct config configuration, summary dsumm[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>auto_hardcopy.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>auto__hardcopy_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>auto_hardcopy</name>
      <anchorfile>auto__hardcopy_8c.html</anchorfile>
      <anchor>a5a2acdba4443c39c2eec0374d1031e18</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>average.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/</path>
    <filename>average_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>average_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>datatype</name>
      <anchorfile>average_8c.html</anchorfile>
      <anchor>a5d1502fc2354f6dafba8668cc79b19f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>space</name>
      <anchorfile>average_8c.html</anchorfile>
      <anchor>ab05991ed532329184893692211b355fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>average.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/include/</path>
    <filename>average_8h.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <class kind="struct">config</class>
    <class kind="struct">seg_data</class>
    <class kind="union">seg_data.u</class>
    <class kind="struct">summary</class>
    <class kind="struct">tbsumm</class>
    <member kind="define">
      <type>#define</type>
      <name>AVERAGE</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a1f98b8446b6c3c9f699cc2c046c49f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDOFSCAN</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>afa9be16f2ed2d2d929a06dacf29bcbe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXID</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a0865c22126c7d00b3318235e244ecb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSRC</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a934682caeedb813cc7c92ca84ed6eb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_MODE</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ae9401c0bbf62d69045a3df8b9ce7e372</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PI</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a598a3330b3c21701223ee0ca14316eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUMMARY</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aabb34c8934b3515b1b632f8ddacdbc27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ab946e2e7f7679350627acfded8e2658b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>assess_data</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>abd6eb81586dbdf5eef6e6b8de6c6e7f9</anchor>
      <arglist>(seg_data *, int, struct config, summary[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>baseline_avg</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a024b743c32c50d8c538efb8e35f1dd23</anchor>
      <arglist>(seg_data *, tbsumm *, struct config, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_source</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ac0a782fccf9594f6ca6469bec5382026</anchor>
      <arglist>(seg_data *, summary *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_times</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a62e99d46fc36dc97e2499118e14e8fa7</anchor>
      <arglist>(seg_data *, summary *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_tribase</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ae049ea0169fd78056f7b18612f4f73f2</anchor>
      <arglist>(seg_data *, tbsumm *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int_time</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a6512095a2c271a48a87041a60169e18e</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>index_data</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a85eef7f1013d5cb33f34dca997d2ca44</anchor>
      <arglist>(seg_data *, int, summary[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>abb9e3f1c2298021786826ede6f9750aa</anchor>
      <arglist>(int, char **, FILE **, struct config *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_data</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a1491718a5f40826fac92a53a37023055</anchor>
      <arglist>(seg_data **, FILE *, struct config, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sort_data</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a92c2fea8e1cad6ba1de63cea8d2866db</anchor>
      <arglist>(seg_data *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sorter</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>afd39186ee6e8ab625b04096b4cb87535</anchor>
      <arglist>(seg_data *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>triangle_avg</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a308c0fdbd904b4c03623a5fca889e22b</anchor>
      <arglist>(seg_data *, tbsumm *, struct config, FILE *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>axis.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>axis_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>axis</name>
      <anchorfile>axis_8c.html</anchorfile>
      <anchor>aeee00b3bc47e51ca2fac66dbabf09747</anchor>
      <arglist>(char *y_axis, char *x_axis)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>axis_scale.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>axis__scale_8c.html</filename>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>axis_scale</name>
      <anchorfile>axis__scale_8c.html</anchorfile>
      <anchor>ae1d2e973eec9c5e0bc2428fe5bff5e42</anchor>
      <arglist>(int index, float min, float max, float *win1, float *win2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>baseline_avg.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>baseline__avg_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>baseline_avg</name>
      <anchorfile>baseline__avg_8c.html</anchorfile>
      <anchor>ad18d05e841ee74e0d0c09bf138284596</anchor>
      <arglist>(seg_data *data, tbsumm *tbsum, struct config conf, FILE *fpout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bcd_to_2int.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/src/</path>
    <filename>bcd__to__2int_8c.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>LOW4</name>
      <anchorfile>bcd__to__2int_8c.html</anchorfile>
      <anchor>aa933c4da54df6b049b106a71e480adb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bcd_to_2int</name>
      <anchorfile>bcd__to__2int_8c.html</anchorfile>
      <anchor>aab71dd13b954d0e8e63ad27345d4695f</anchor>
      <arglist>(int input, int ndigits, int npoint, int result[2])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>block_params.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>block__params_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>block_params</name>
      <anchorfile>block__params_8c.html</anchorfile>
      <anchor>acce4385fb50594dffb41ec6043dea8eb</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bytflp.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>bytflp_8h.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>cp_double</name>
      <anchorfile>bytflp_8h.html</anchorfile>
      <anchor>ae9522e802a3ce9177478b184a2bb0ed1</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cp_float</name>
      <anchorfile>bytflp_8h.html</anchorfile>
      <anchor>a70329a7d58af33f569b9b621da37de16</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cp_int</name>
      <anchorfile>bytflp_8h.html</anchorfile>
      <anchor>a19e76b5098442dda44ab42c01ad47f7f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cp_long</name>
      <anchorfile>bytflp_8h.html</anchorfile>
      <anchor>a2110c3f9ade68783c86e301d648ec0f3</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cp_short</name>
      <anchorfile>bytflp_8h.html</anchorfile>
      <anchor>ad7c65c1fb3027e833c50f84954d2dbc0</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cp_uint</name>
      <anchorfile>bytflp_8h.html</anchorfile>
      <anchor>ac6c09e44451d5911286e0be57ac86b6d</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cp_unsig</name>
      <anchorfile>bytflp_8h.html</anchorfile>
      <anchor>a393684f23c56fcfd85be26e844826599</anchor>
      <arglist>(a, b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calc_close.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>calc__close_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>calc_close</name>
      <anchorfile>calc__close_8c.html</anchorfile>
      <anchor>ad43b7b3e58f1cc3c0d50cbdc5b94dd2b</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calc_normalization.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>calc__normalization_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>max</name>
      <anchorfile>calc__normalization_8c.html</anchorfile>
      <anchor>affe776513b24d84b39af8ab0930fef7f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>min</name>
      <anchorfile>calc__normalization_8c.html</anchorfile>
      <anchor>ac6afabdc09a49a433ee19d8a9486056d</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_normalization</name>
      <anchorfile>calc__normalization_8c.html</anchorfile>
      <anchor>a5a975e56feded55bd0288156def5f680</anchor>
      <arglist>(int sb, int pol, struct data_corel *datum, struct type_pass *pass, double *mean, double *norm_const)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calc_rms.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>calc__rms_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>calc_rms</name>
      <anchorfile>calc__rms_8c.html</anchorfile>
      <anchor>a9039dc6e0c026f366852c9aab4294196</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calc_seg.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>calc__seg_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>calc_seg</name>
      <anchorfile>calc__seg_8c.html</anchorfile>
      <anchor>a89be66316ef20303d6da48182183b475</anchor>
      <arglist>(struct fxparam *fxp, int seg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cfilter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>cfilter_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>cfilter_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>cfilter_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cfilter</name>
      <anchorfile>cfilter_8c.html</anchorfile>
      <anchor>aded840c3ab5e4d3fdfa20f1c5b697164</anchor>
      <arglist>(corelarray *cdatum, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_env.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>check__env_8c.html</filename>
    <member kind="function">
      <type>void</type>
      <name>check_env</name>
      <anchorfile>check__env_8c.html</anchorfile>
      <anchor>acf5278e9aa7adf3b8aa0ccf942af01ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ahelpdir</name>
      <anchorfile>check__env_8c.html</anchorfile>
      <anchor>addb76ce7911c9b89dea0f33a89794aee</anchor>
      <arglist>[200]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_intrange.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>check__intrange_8c.html</filename>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EQ</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>abaab8d42f075ee8ddc9b70951d3fd6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEQ</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>aa3f6df19cd1472f7600ebaf78a8d9fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GT</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>ab89310b3f2f97e4e9415fc5a51549612</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEQ</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>a09a442c77eb5aa8256ff65117f529e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LT</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>aaf56b99cbe34023f42ce5b7878c827d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXRNG</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>afd92cf51323abe4813faa14c677ad1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOT_OK</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>ae2332e4f11de1236d2fc0154ed9951c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OK</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>aba51915c87d64af47fb1cc59348961c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_intrange</name>
      <anchorfile>check__intrange_8c.html</anchorfile>
      <anchor>a3a1db2c746c4814b2f291bb38436c289</anchor>
      <arglist>(int value, char *range)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_name.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>check__name_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>check_name</name>
      <anchorfile>check__name_8c.html</anchorfile>
      <anchor>a803cb3d54b0578d91167a3007b828874</anchor>
      <arglist>(char *name, fstruct *f_info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_realrange.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>check__realrange_8c.html</filename>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EQ</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>abaab8d42f075ee8ddc9b70951d3fd6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEQ</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>aa3f6df19cd1472f7600ebaf78a8d9fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GT</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>ab89310b3f2f97e4e9415fc5a51549612</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEQ</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>a09a442c77eb5aa8256ff65117f529e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LT</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>aaf56b99cbe34023f42ce5b7878c827d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXRNG</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>afd92cf51323abe4813faa14c677ad1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOT_OK</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>ae2332e4f11de1236d2fc0154ed9951c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OK</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>aba51915c87d64af47fb1cc59348961c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_realrange</name>
      <anchorfile>check__realrange_8c.html</anchorfile>
      <anchor>a4c878579576ed05b74e8a87f4681d9a4</anchor>
      <arglist>(double value, char *range)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_rflist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>check__rflist_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="refringe_8h" name="refringe.h" local="yes" imported="no">refringe.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>check_rflist</name>
      <anchorfile>check__rflist_8c.html</anchorfile>
      <anchor>ab33a758bdd3ca5d1e738acd2e2303202</anchor>
      <arglist>(char *baseline, int files_index, bsgstruct *base_sgrp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_scan.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>check__scan_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>check_scan</name>
      <anchorfile>check__scan_8c.html</anchorfile>
      <anchor>a41e3a90661c978c4ea66c4bf4663a07d</anchor>
      <arglist>(struct scan_struct *scan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prt_date</name>
      <anchorfile>check__scan_8c.html</anchorfile>
      <anchor>a355623a48898ac1e3bb25e0e2a2bfc66</anchor>
      <arglist>(char *string, struct date *date)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_sizes.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>check__sizes_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>check__sizes_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_source.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>check__source_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>check_source</name>
      <anchorfile>check__source_8c.html</anchorfile>
      <anchor>a785ad9c62ba992c78d62d44c469a5525</anchor>
      <arglist>(seg_data *data, summary *dsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_stloc.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>check__stloc_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>check_stloc</name>
      <anchorfile>check__stloc_8c.html</anchorfile>
      <anchor>ac251c5085700df4149ee9db9854bdfa7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_strrange.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>check__strrange_8c.html</filename>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>check__strrange_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXRNG</name>
      <anchorfile>check__strrange_8c.html</anchorfile>
      <anchor>afd92cf51323abe4813faa14c677ad1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>check__strrange_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_strrange</name>
      <anchorfile>check__strrange_8c.html</anchorfile>
      <anchor>a38e0903c4fadfa013f047d0850ac6ae5</anchor>
      <arglist>(char *value, char *range)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_times.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>check__times_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>check_times</name>
      <anchorfile>check__times_8c.html</anchorfile>
      <anchor>a87a432045f046e991f549664a5f28786</anchor>
      <arglist>(seg_data *data, summary *dsumm, int int_time)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_tribase.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>check__tribase_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAXHIST</name>
      <anchorfile>check__tribase_8c.html</anchorfile>
      <anchor>a41ba038635d6b8c9533fdfc5e2cf55d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NLEN</name>
      <anchorfile>check__tribase_8c.html</anchorfile>
      <anchor>afe4aa208139da72a32a73bbdf65eddce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_tribase</name>
      <anchorfile>check__tribase_8c.html</anchorfile>
      <anchor>a6253b76342d65e624360bc4939dcd1f8</anchor>
      <arglist>(seg_data *data, tbsumm *idsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cleanup.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>cleanup_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>cleanup</name>
      <anchorfile>cleanup_8c.html</anchorfile>
      <anchor>ae98c88ab48ec77e3c31c1cf026bbab79</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cleanup_psplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>cleanup__psplot_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>cleanup_psplot</name>
      <anchorfile>cleanup__psplot_8c.html</anchorfile>
      <anchor>a65c875fb78825904d2b0079e78f558c6</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>clear_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>clear</name>
      <anchorfile>clear_8c.html</anchorfile>
      <anchor>a668f035799e549b28f8f2835cf753b94</anchor>
      <arglist>(esum *data, char *string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_100.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__100_8c.html</filename>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_100</name>
      <anchorfile>clear__100_8c.html</anchorfile>
      <anchor>a2d8383b57ef6c152f08113e96845c76d</anchor>
      <arglist>(struct type_100 *t100)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_101.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__101_8c.html</filename>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_101</name>
      <anchorfile>clear__101_8c.html</anchorfile>
      <anchor>ae08e465a9709d4658ff6c8be51f86a57</anchor>
      <arglist>(struct type_101 *t101)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_110.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__110_8c.html</filename>
    <includes id="type__110_8h" name="type_110.h" local="yes" imported="no">type_110.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_110</name>
      <anchorfile>clear__110_8c.html</anchorfile>
      <anchor>ad588b00ca12fed2b2960e08cbf074cb5</anchor>
      <arglist>(struct type_110 *t110)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_120.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__120_8c.html</filename>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_120</name>
      <anchorfile>clear__120_8c.html</anchorfile>
      <anchor>a3ebe8ff3d73485de33bcec50075e820f</anchor>
      <arglist>(struct type_120 *t120)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_200.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__200_8c.html</filename>
    <includes id="type__200_8h" name="type_200.h" local="yes" imported="no">type_200.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_200</name>
      <anchorfile>clear__200_8c.html</anchorfile>
      <anchor>a9e80b673862e120f6d983a4718842823</anchor>
      <arglist>(struct type_200 *t200)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_201.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__201_8c.html</filename>
    <includes id="type__201_8h" name="type_201.h" local="yes" imported="no">type_201.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_201</name>
      <anchorfile>clear__201_8c.html</anchorfile>
      <anchor>a5c6e3b95c78342d2350a6e2a1660f0b2</anchor>
      <arglist>(struct type_201 *t201)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_202.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__202_8c.html</filename>
    <includes id="type__202_8h" name="type_202.h" local="yes" imported="no">type_202.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_202</name>
      <anchorfile>clear__202_8c.html</anchorfile>
      <anchor>a351a8c8b34739a6d4a91a5a3744d65f4</anchor>
      <arglist>(struct type_202 *t202)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_203.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__203_8c.html</filename>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_203</name>
      <anchorfile>clear__203_8c.html</anchorfile>
      <anchor>a6336272e2003307c36b2a5e7bb541c37</anchor>
      <arglist>(struct type_203 *t203)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_204.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__204_8c.html</filename>
    <includes id="type__204_8h" name="type_204.h" local="yes" imported="no">type_204.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_204</name>
      <anchorfile>clear__204_8c.html</anchorfile>
      <anchor>a5ffcad19d596e58fb07a1058e4f79cd7</anchor>
      <arglist>(struct type_204 *t204)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_205.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__205_8c.html</filename>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_205</name>
      <anchorfile>clear__205_8c.html</anchorfile>
      <anchor>a6cd22f84e2de20869c49b98d2683b9d1</anchor>
      <arglist>(struct type_205 *t205)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_206.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__206_8c.html</filename>
    <includes id="type__206_8h" name="type_206.h" local="yes" imported="no">type_206.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_206</name>
      <anchorfile>clear__206_8c.html</anchorfile>
      <anchor>a3a4da69a6dabbdac2064b02e2d151393</anchor>
      <arglist>(struct type_206 *t206)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_207.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__207_8c.html</filename>
    <includes id="type__207_8h" name="type_207.h" local="yes" imported="no">type_207.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_207</name>
      <anchorfile>clear__207_8c.html</anchorfile>
      <anchor>a9149000eca022f41ea30089470dbb82d</anchor>
      <arglist>(struct type_207 *t207)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_208.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__208_8c.html</filename>
    <includes id="type__208_8h" name="type_208.h" local="yes" imported="no">type_208.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_208</name>
      <anchorfile>clear__208_8c.html</anchorfile>
      <anchor>a873f0ec56a18183774c0a12453d9fe33</anchor>
      <arglist>(struct type_208 *t208)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_210.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__210_8c.html</filename>
    <includes id="type__210_8h" name="type_210.h" local="yes" imported="no">type_210.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_210</name>
      <anchorfile>clear__210_8c.html</anchorfile>
      <anchor>a8f3119d0d5a2a4c1ed35bfc60127c841</anchor>
      <arglist>(struct type_210 *t210)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_212.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__212_8c.html</filename>
    <includes id="type__212_8h" name="type_212.h" local="yes" imported="no">type_212.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_212</name>
      <anchorfile>clear__212_8c.html</anchorfile>
      <anchor>af0d3628169d19ca90b2d529ee66fa69d</anchor>
      <arglist>(struct type_212 *t212)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_220.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__220_8c.html</filename>
    <includes id="type__220_8h" name="type_220.h" local="yes" imported="no">type_220.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_220</name>
      <anchorfile>clear__220_8c.html</anchorfile>
      <anchor>adb756e3c39f04e3c8226e7dc08878bbe</anchor>
      <arglist>(struct type_220 *t220)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_221.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__221_8c.html</filename>
    <includes id="type__221_8h" name="type_221.h" local="yes" imported="no">type_221.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_221</name>
      <anchorfile>clear__221_8c.html</anchorfile>
      <anchor>ab81ac432f3cdeba3e640f5c4d17ddb03</anchor>
      <arglist>(struct type_221 *t221)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_222.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__222_8c.html</filename>
    <includes id="type__222_8h" name="type_222.h" local="yes" imported="no">type_222.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_222</name>
      <anchorfile>clear__222_8c.html</anchorfile>
      <anchor>acc3635970824196d110bf4d44c9cad57</anchor>
      <arglist>(struct type_222 *t222)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_230.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__230_8c.html</filename>
    <includes id="type__230_8h" name="type_230.h" local="yes" imported="no">type_230.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_230</name>
      <anchorfile>clear__230_8c.html</anchorfile>
      <anchor>a651a57231879403ea068615618ad3069</anchor>
      <arglist>(struct type_230 *t230)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_300.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__300_8c.html</filename>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_300</name>
      <anchorfile>clear__300_8c.html</anchorfile>
      <anchor>a996dcbdfe0859c1ebdf61c78f810ff0a</anchor>
      <arglist>(struct type_300 *t300)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_301.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__301_8c.html</filename>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_301</name>
      <anchorfile>clear__301_8c.html</anchorfile>
      <anchor>aa571c5b9c18acff265890d431a1df77a</anchor>
      <arglist>(struct type_301 *t301)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_302.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__302_8c.html</filename>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_302</name>
      <anchorfile>clear__302_8c.html</anchorfile>
      <anchor>ae7c393b70b520783395bc0d712dc7c91</anchor>
      <arglist>(struct type_302 *t302)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_303.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__303_8c.html</filename>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_303</name>
      <anchorfile>clear__303_8c.html</anchorfile>
      <anchor>aa475d1021d04a7e0dee9d4c4d12674ac</anchor>
      <arglist>(struct type_303 *t303)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_304.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__304_8c.html</filename>
    <includes id="type__304_8h" name="type_304.h" local="yes" imported="no">type_304.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_304</name>
      <anchorfile>clear__304_8c.html</anchorfile>
      <anchor>a25220ef70da39423990040ba5e634fb6</anchor>
      <arglist>(struct type_304 *t304)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_305.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__305_8c.html</filename>
    <includes id="type__305_8h" name="type_305.h" local="yes" imported="no">type_305.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_305</name>
      <anchorfile>clear__305_8c.html</anchorfile>
      <anchor>a56881b81fe0f520627e4c17e43043393</anchor>
      <arglist>(struct type_305 *t305)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_306.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__306_8c.html</filename>
    <includes id="type__306_8h" name="type_306.h" local="yes" imported="no">type_306.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_306</name>
      <anchorfile>clear__306_8c.html</anchorfile>
      <anchor>a5403072efae439067fade3034095c955</anchor>
      <arglist>(struct type_306 *t306)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_307.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__307_8c.html</filename>
    <includes id="type__307_8h" name="type_307.h" local="yes" imported="no">type_307.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_307</name>
      <anchorfile>clear__307_8c.html</anchorfile>
      <anchor>a845279158deaff4729bec5cf8e89586d</anchor>
      <arglist>(struct type_307 *t307)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_308.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__308_8c.html</filename>
    <includes id="type__308_8h" name="type_308.h" local="yes" imported="no">type_308.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_308</name>
      <anchorfile>clear__308_8c.html</anchorfile>
      <anchor>aead5252b26d7052ea02ef5e28035356c</anchor>
      <arglist>(struct type_308 *t308)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_309.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__309_8c.html</filename>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_309</name>
      <anchorfile>clear__309_8c.html</anchorfile>
      <anchor>a3fa01279b351ebc37aac804a2c1cd7cc</anchor>
      <arglist>(struct type_309 *t309)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_afile_structure.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>clear__afile__structure_8c.html</filename>
    <includes id="afile__structure_8h" name="afile_structure.h" local="yes" imported="no">afile_structure.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CLEAR_AFILE_STRUCTURE_H__</name>
      <anchorfile>clear__afile__structure_8c.html</anchorfile>
      <anchor>a5aa42d985cd4930cd26d1b637fa37836</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_afile_structure</name>
      <anchorfile>clear__afile__structure_8c.html</anchorfile>
      <anchor>ab3c473c64534b42a1bcc5d9904c3c0f0</anchor>
      <arglist>(afile_structure *afile_struct)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_coord.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__coord_8c.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_coord</name>
      <anchorfile>clear__coord_8c.html</anchorfile>
      <anchor>a2ed8f167eb6724f3d7439d1afd017f89</anchor>
      <arglist>(struct sky_coord *coord)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_csumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>clear__csumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_csumm</name>
      <anchorfile>clear__csumm_8c.html</anchorfile>
      <anchor>a8207fb01cb4aada77721dd7d646c7f8d</anchor>
      <arglist>(corelsum *dsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_date.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>clear__date_8c.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_date</name>
      <anchorfile>clear__date_8c.html</anchorfile>
      <anchor>a2b15d3f2ac86fad8f73d696d22b946b1</anchor>
      <arglist>(date_struct *timetag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_fqex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>clear__fqex_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_fqex</name>
      <anchorfile>clear__fqex_8c.html</anchorfile>
      <anchor>adc5a717b3c2dc0ab5f4237a1e2ad99cf</anchor>
      <arglist>(struct frqexp *fqex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_freq_corel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>clear__freq__corel_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_freq_corel</name>
      <anchorfile>clear__freq__corel_8c.html</anchorfile>
      <anchor>aa7f3bc22f78b3c75c61d5d2bdae43739</anchor>
      <arglist>(struct freq_corel *corel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_fstruct.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>clear__fstruct_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_fstruct</name>
      <anchorfile>clear__fstruct_8c.html</anchorfile>
      <anchor>a037d7ecf1ee7ea6b6d2bfb7112e4a402</anchor>
      <arglist>(fstruct *f_info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_fsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>clear__fsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_fsumm</name>
      <anchorfile>clear__fsumm_8c.html</anchorfile>
      <anchor>a4e66006c1ba68e4f49a7df48e9947c4d</anchor>
      <arglist>(fringesum *dsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_fxp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>clear__fxp_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_fxp</name>
      <anchorfile>clear__fxp_8c.html</anchorfile>
      <anchor>a6abd14fe1fe22814412f3fba0e2e0060</anchor>
      <arglist>(struct fxparam *fxp, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_loops.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>clear__loops_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_loops</name>
      <anchorfile>clear__loops_8c.html</anchorfile>
      <anchor>ad7742380d1529e901e1dd45188de453e</anchor>
      <arglist>(struct loops *loops)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_mk4corel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__mk4corel_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>clear__mk4corel_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>clear__mk4corel_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_mk4corel</name>
      <anchorfile>clear__mk4corel_8c.html</anchorfile>
      <anchor>a7c32e627a95ecde209787dda418ff2f1</anchor>
      <arglist>(struct mk4_corel *corel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_mk4fringe.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__mk4fringe_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_mk4fringe</name>
      <anchorfile>clear__mk4fringe_8c.html</anchorfile>
      <anchor>ab10d75e29bd84854f39c2ad58bdab48b</anchor>
      <arglist>(struct mk4_fringe *fringe)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_mk4sdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>clear__mk4sdata_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_mk4sdata</name>
      <anchorfile>clear__mk4sdata_8c.html</anchorfile>
      <anchor>a448681cac9a530e7f0543b57408544f1</anchor>
      <arglist>(struct mk4_sdata *sdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_pass.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>clear__pass_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_pass</name>
      <anchorfile>clear__pass_8c.html</anchorfile>
      <anchor>adb0ac5523d8ca97d5bc0a5d1112aa1fe</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_pstruct.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>clear__pstruct_8c.html</filename>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>clear__pstruct_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>clear__pstruct_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_pstruct</name>
      <anchorfile>clear__pstruct_8c.html</anchorfile>
      <anchor>aaff6864474cdfd4ee27fad2f2bbf113c</anchor>
      <arglist>(struct plot_info *ps)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_rsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>clear__rsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_rsumm</name>
      <anchorfile>clear__rsumm_8c.html</anchorfile>
      <anchor>a9503bd50023f81ae60fc0cfc5f9f1f1f</anchor>
      <arglist>(rootsum *dsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_source.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>clear__source_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_source</name>
      <anchorfile>clear__source_8c.html</anchorfile>
      <anchor>afde3fc3a6e27ae759b26f3022cab71fa</anchor>
      <arglist>(srcsum *sptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_srchdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>clear__srchdata_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_srchdata</name>
      <anchorfile>clear__srchdata_8c.html</anchorfile>
      <anchor>acdd15b0b4ac9ebb45bfcff02d2372da6</anchor>
      <arglist>(struct srchsummary srchdata[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_summ.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>clear__summ_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_summ</name>
      <anchorfile>clear__summ_8c.html</anchorfile>
      <anchor>a59cf15949158d41ab8d843abcd40d79e</anchor>
      <arglist>(struct datasumm *summ)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clear_tsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>clear__tsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_tsumm</name>
      <anchorfile>clear__tsumm_8c.html</anchorfile>
      <anchor>aa856152c4d86a6ffc35b501461da43b8</anchor>
      <arglist>(trianglesum *dsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>close_flags.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>close__flags_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>BAD_EPOCHS</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>a0f0b641661fec5dae3d9a301d2b574da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_LENGTHS</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>ad90b3765083dc029b84f85933b0fb88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_NFREQ</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>a863b0abc34c42caefadf82b403d5ed21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_QCODE1</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>a47b1c884c1aee25dc030d53321aaaf63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_QCODE2</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>ac46aa518b3766a2b23914303985d494b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_SNR</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>a279500785382bf76f7a57d59b16e77aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INVALID</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>adf770fe2eec438e3758ffe905dbae208</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REVBASE0</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>a1bd80d0563ec68442e6de349a8b27f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REVBASE1</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>aef076678ff35e46c6aa85fffdda8cb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REVBASE2</name>
      <anchorfile>close__flags_8h.html</anchorfile>
      <anchor>ac582317aff2e55d7c1736629e02fe883</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cnvrt_cdf_maia.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>cnvrt__cdf__maia_8c.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>IFMT</name>
      <anchorfile>cnvrt__cdf__maia_8c.html</anchorfile>
      <anchor>a23e85f2f4a195620db3d32f4248726a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OFMT1</name>
      <anchorfile>cnvrt__cdf__maia_8c.html</anchorfile>
      <anchor>a8c31dac7e8a881cf14b08e49cc3d6526</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OFMT2</name>
      <anchorfile>cnvrt__cdf__maia_8c.html</anchorfile>
      <anchor>a1f7f64d53860be30a01fdb172186e4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OFMT3</name>
      <anchorfile>cnvrt__cdf__maia_8c.html</anchorfile>
      <anchor>a72585fbc66ab0102519cd11f69d514db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>convert</name>
      <anchorfile>cnvrt__cdf__maia_8c.html</anchorfile>
      <anchor>ad888780d1d462428ed1b02c0e767bafe</anchor>
      <arglist>(char *in, char *ou)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hack_jd</name>
      <anchorfile>cnvrt__cdf__maia_8c.html</anchorfile>
      <anchor>a4b843d5c687517cbf259df19db4f5b3c</anchor>
      <arglist>(int year, int imon, int dom)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cnvrt__cdf__maia_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>command_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>command__id_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>command_id</name>
      <anchorfile>command__id_8c.html</anchorfile>
      <anchor>af4934dfb0bec4d473395bcba1f67508f</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="variable">
      <type>struct @0</type>
      <name>commands</name>
      <anchorfile>command__id_8c.html</anchorfile>
      <anchor>a811e212db301cadf9154ab8f6743c0a3</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompareCorFiles.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>CompareCorFiles_8cc.html</filename>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>SINGLE_PRECISION_MACHINE_EPS</name>
      <anchorfile>CompareCorFiles_8cc.html</anchorfile>
      <anchor>a0dafbc98c24f46eb8bf28f562364a439</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>CompareCorFiles_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ComparePcal.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>ComparePcal_8cc.html</filename>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>SINGLE_PRECISION_MACHINE_EPS</name>
      <anchorfile>ComparePcal_8cc.html</anchorfile>
      <anchor>a0dafbc98c24f46eb8bf28f562364a439</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>ComparePcal_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>compress.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>compress_8c.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ALIGNMENT_FUDGE</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a50c09f35ae12c1a3cb40627c7b189c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ANY_HASH_INDEX</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a5185ee69315fc3a249953c3895584ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPRESS_ACTION_COMPRESS</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a10278e673366c6b927ddafc0b02c8a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPRESS_ACTION_DECOMPRESS</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a0b3e5accd43dfe43f7e4a8801737878b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPRESS_ACTION_IDENTITY</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>ac73b3bf580bfb942cd84fc244102cbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEPTH_MASK</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a0c99ff5170359641b4582b268fae6f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLAG_BYTES</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>ac1b797a8d8199068960799aafd5ac3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLAG_COMPRESS</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a402bf0615dc2dfeb8d47965eca476532</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLAG_COPY</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a93d18aad39dd11491c4a642c0bafd7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a54cade762a2058562bada4a97c818cc8</anchor>
      <arglist>(PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_MASK</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a8ba578169aad59095035a05d2f7323a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_TABLE_DEPTH</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>aad84829216eeb081bf3cce3b0347d1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_TABLE_DEPTH_BITS</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a8cb9c341c3a2355011afe739ebeed3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_TABLE_LENGTH</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a961a361752cb56ed6a03bc3440bbe30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CMP_GROUP</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a8b6826addfb24b62afb65fd9192e3245</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_RAW_GROUP</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a8059bf6e3eca130994b50543c6578819</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_RAW_ITEM</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>ad80220c85919d3b97aa905603f662991</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MEM_REQ</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a5c6fa15bce34ba9d4085b4bacf0fa947</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARTITION_LENGTH</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a994e7fc0245802de6fcf2b100a732a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARTITION_LENGTH_BITS</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>aeb043c41ea7064dffc6855ab39123853</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>ad7f630556c2cd30d8d8976e0f6e7f749</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIZE_P_BYTE</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a528e11d29da827a7e336bf1b85ab648e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>START_STRING_18</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>ab3b8eb0c5dcdf70d138b52b8d2335ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOPWORD</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a1ed2ddd8debea25a75a1b29ca34a444c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>U</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a785c5aea36b191813eb1c8e27c420ec4</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>U32_ALIGN_UP</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a34e2a76f0032e727a816b986bdebd050</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UCARD</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a8a8e2688c65d59458485cdb393ef5e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UPDATE_I</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>ac6b0ab137342e2fdf7a69aa5f1dc95b9</anchor>
      <arglist>(I_BASE, NEWPTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UPDATE_P</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a6fe92383d585e3b5bc8ade76dbaacb23</anchor>
      <arglist>(P_BASE, NEWPTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZH</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a595faa6e260998a29c7f1021f172fad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZJ</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a34bd209c91a359ad950048996c017047</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a457cdad46d00bf627879b0ebac38d6b0</anchor>
      <arglist>(U16 action, U8 *wrk_mem, U8 *src_adr, U32 src_len, U8 *dst_adr, U32 *p_dst_len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress_compress</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a897786f54a6e59162ae1f9e57ca66666</anchor>
      <arglist>(U8 *, U8 *, U32, U8 *, U32 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress_decompress</name>
      <anchorfile>compress_8c.html</anchorfile>
      <anchor>a1ff22f049adb558d4ec3da8497a50bae</anchor>
      <arglist>(U8 *, U8 *, U32, U8 *, U32 *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>compute_control_file_hash.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/ffcontrol_module/src/</path>
    <filename>compute__control__file__hash_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="adler32__checksum_8h" name="adler32_checksum.h" local="yes" imported="no">adler32_checksum.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="ffcontrol__module__extern_8h" name="ffcontrol_module_extern.h" local="yes" imported="no">ffcontrol_module_extern.h</includes>
    <member kind="function">
      <type>unsigned int</type>
      <name>compute_control_file_hash</name>
      <anchorfile>compute__control__file__hash_8c.html</anchorfile>
      <anchor>a0722e75a2703b6448623f1792baed6b8</anchor>
      <arglist>(char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>compute_field_rotations.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>compute__field__rotations_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <member kind="function">
      <type>void</type>
      <name>compute_field_rotations_fixed</name>
      <anchorfile>compute__field__rotations_8c.html</anchorfile>
      <anchor>a5b119fc25a592dfb2b77747b80f13739</anchor>
      <arglist>(hops_complex cpolvalue[4], double *par_angle, double *elevation, int *mount_type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>compute_model.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>compute__model_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>compute_model</name>
      <anchorfile>compute__model_8c.html</anchorfile>
      <anchor>afcc19e2c978354fcec8080faace70cc1</anchor>
      <arglist>(struct type_param *param, struct mk4_sdata *sdata, struct type_202 *t202, double *delay, double *rate, double *accel, double *delay_ref, double *rate_ref, double *ref_stn_delay)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>compute_qf.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>compute__qf_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="statistics_8h" name="statistics.h" local="yes" imported="no">statistics.h</includes>
    <includes id="filter_8h" name="filter.h" local="yes" imported="no">filter.h</includes>
    <member kind="function">
      <type>int</type>
      <name>compute_qf</name>
      <anchorfile>compute__qf_8c.html</anchorfile>
      <anchor>a6282b70dd09f379dd7233dc1fdae2128</anchor>
      <arglist>(struct type_pass *pass, struct type_param *param, struct type_status *status, char *qcode, char *errcode, char *tape_qcode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>confirm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>confirm_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>confirm_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>confirm_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>confirm</name>
      <anchorfile>confirm_8c.html</anchorfile>
      <anchor>a3568d2c9275795d6d38a8b32dd47dca1</anchor>
      <arglist>(char *string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>construct_cblock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>construct__cblock_8c.html</filename>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="function">
      <type>int</type>
      <name>construct_cblock</name>
      <anchorfile>construct__cblock_8c.html</anchorfile>
      <anchor>a718e46bc4f9cfda45a45e883d4da2db0</anchor>
      <arglist>(char *filename, struct c_block *cb_head, struct c_block *cb_out, char *baseline, char *source, char fgroup, int time)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>control.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/include/</path>
    <filename>control_8h.html</filename>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <class kind="struct">c_block</class>
    <class kind="struct">gat_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>AP_BY_AP</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ab5c8d14ff474c2a30753dc2d88137e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CASSEGRAIN</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a4bf9874fc82372c82f94dd1c87a43773</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMCHAR</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a41c4cd7939e0b7bfed939d28b46c615c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISCARD</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>adbaca35440ef5d1abf8a0084bf382b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSB</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ac222db61ccc923f24415d8085bef26df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EACH_MINUTE</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af82ff2a2651fb174c743d074e316f06d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FCHARS</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a88d4b0d51a88c8074d394a47bdfa408e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ITERATE</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a565fde10770e8a57ef907f3f4f991ea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEEP</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ac435df27bedf08b52a822c32d9dad510</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LSB</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a525d3ca9955b22e489a749a548831a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MANUAL</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a8187a9af791c0a44ba67edd9cf266961</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SAMP</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a678faea446144870675381df53c5f69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXNOTCH</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ad7ece38e6d90386017888bdf649d9403</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MODEL</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a7c60e913478d07a44ac15c6fb2c5937f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTITONE</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a831ca2e1f7811bb033ccad20be9ad307</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASMYTHLEFT</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a44156cfa79cc31970f09c34ee9a44a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASMYTHRIGHT</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a32c0572972ed594f605c343235cb8e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_MOUNT_TYPE</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ae813e60d1f7363764de79f97c39eda6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NORMAL</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a1291f416b069313021b519eea62d5bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULLCHAR</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>adc20945d8291702496d3e7f9b85981aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULLFLOAT</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a1d6af874e28074ef72e2ff813b3af601</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULLINT</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ac0eacf1bdbd7451b6ba4ca463e5b9fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PHYLE</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aeb581e38a06bd3d5c1656cfe3be5e79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLYNOMIAL</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ae13d91fe6e514f0aa1caba701ef1ff92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SBD</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a186ec395366f2d3c79195f93b8184e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCAN_START</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a353fdc62c72dffbc4ce280cefe9fd4ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIMUL</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aa11c9c27878218cc7f02b64edc9f9622</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SINEWAVE</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af608f6b6480e5d01acbba259458a0d54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USB</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a779bf099075a999d1074357fccbd466b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WILDCARD</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a9a81f4649f430c0018713540b8b8678b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>conv2date.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>conv2date_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>AD</name>
      <anchorfile>conv2date_8c.html</anchorfile>
      <anchor>aa70747e23d9ebf312299930cf6b3c20d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>conv2date</name>
      <anchorfile>conv2date_8c.html</anchorfile>
      <anchor>a1cd58fe110e4470a0e3e2019d8968973</anchor>
      <arglist>(double dmjd, struct date *pdate)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_100.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__100_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_100</name>
      <anchorfile>copy__100_8c.html</anchorfile>
      <anchor>a9c67c9e1ed51df5d5d4eec01896d1388</anchor>
      <arglist>(struct type_100 *t100, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_101.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__101_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_101</name>
      <anchorfile>copy__101_8c.html</anchorfile>
      <anchor>af1f0a9fe88c3154fc84c650c6d68160e</anchor>
      <arglist>(struct type_101 *t101, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_110.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__110_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__110_8h" name="type_110.h" local="yes" imported="no">type_110.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_110</name>
      <anchorfile>copy__110_8c.html</anchorfile>
      <anchor>a66ef5b53b302a39b82ce5bdbf0b93cec</anchor>
      <arglist>(struct type_110 *t110, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_120.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__120_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_120</name>
      <anchorfile>copy__120_8c.html</anchorfile>
      <anchor>a17ec37cb6646c4e5f3cd95daae818fe4</anchor>
      <arglist>(struct type_120 *t120, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_200.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__200_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__200_8h" name="type_200.h" local="yes" imported="no">type_200.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_200</name>
      <anchorfile>copy__200_8c.html</anchorfile>
      <anchor>a091c206a16b8e81f685e8bd42c2d8f64</anchor>
      <arglist>(struct type_200 *t200, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_201.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__201_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__201_8h" name="type_201.h" local="yes" imported="no">type_201.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_201</name>
      <anchorfile>copy__201_8c.html</anchorfile>
      <anchor>a9000652525ee04ce0513453e584c2f60</anchor>
      <arglist>(struct type_201 *t201, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_202.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__202_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__202_8h" name="type_202.h" local="yes" imported="no">type_202.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_202</name>
      <anchorfile>copy__202_8c.html</anchorfile>
      <anchor>abf0c0af3dbe4edbf0f2e567eaadd3923</anchor>
      <arglist>(struct type_202 *t202, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_203.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__203_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_203</name>
      <anchorfile>copy__203_8c.html</anchorfile>
      <anchor>aab007cb15999ebaa55c1ebde1b8950c8</anchor>
      <arglist>(struct type_203 *t203, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_204.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__204_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__204_8h" name="type_204.h" local="yes" imported="no">type_204.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_204</name>
      <anchorfile>copy__204_8c.html</anchorfile>
      <anchor>a1cd0b59aa968f8a7e93fdb0ff1a39df5</anchor>
      <arglist>(struct type_204 *t204, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_205.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__205_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_205</name>
      <anchorfile>copy__205_8c.html</anchorfile>
      <anchor>a7b40eeab35a718a90727cb3089d159b3</anchor>
      <arglist>(struct type_205 *t205, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_206.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__206_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__206_8h" name="type_206.h" local="yes" imported="no">type_206.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_206</name>
      <anchorfile>copy__206_8c.html</anchorfile>
      <anchor>a119af16cd1fb63285b31fd94bb5232f3</anchor>
      <arglist>(struct type_206 *t206, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_207.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__207_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__207_8h" name="type_207.h" local="yes" imported="no">type_207.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_207</name>
      <anchorfile>copy__207_8c.html</anchorfile>
      <anchor>a236221e4970f8dadffda2de3992669cd</anchor>
      <arglist>(struct type_207 *t207, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_208.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__208_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__208_8h" name="type_208.h" local="yes" imported="no">type_208.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_208</name>
      <anchorfile>copy__208_8c.html</anchorfile>
      <anchor>af5365f48e7515c6b410e01b0373a13f8</anchor>
      <arglist>(struct type_208 *t208, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_210.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__210_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__210_8h" name="type_210.h" local="yes" imported="no">type_210.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_210</name>
      <anchorfile>copy__210_8c.html</anchorfile>
      <anchor>adcc9fcd411d91e7c3a34c5343cf78926</anchor>
      <arglist>(struct type_210 *t210, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_212.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__212_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__212_8h" name="type_212.h" local="yes" imported="no">type_212.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_212</name>
      <anchorfile>copy__212_8c.html</anchorfile>
      <anchor>a4182ce53b3370a20298a9a889d69d607</anchor>
      <arglist>(struct type_212 *t212, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_220.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__220_8c.html</filename>
    <includes id="type__220_8h" name="type_220.h" local="yes" imported="no">type_220.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_220</name>
      <anchorfile>copy__220_8c.html</anchorfile>
      <anchor>a955f307891d383c971f5cea9ae46611f</anchor>
      <arglist>(struct type_220 *t220, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_221.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__221_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__221_8h" name="type_221.h" local="yes" imported="no">type_221.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>copy__221_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_221</name>
      <anchorfile>copy__221_8c.html</anchorfile>
      <anchor>a80f2065672b637ca5fbc8602d5bcc1fe</anchor>
      <arglist>(struct type_221 *t221, char **ptr, int *alloced)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_222.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__222_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__222_8h" name="type_222.h" local="yes" imported="no">type_222.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>copy__222_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_222</name>
      <anchorfile>copy__222_8c.html</anchorfile>
      <anchor>a4e9fcaddec1efd03b1df23059eca3037</anchor>
      <arglist>(struct type_222 *t222, char **ptr, int *alloced)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_230.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__230_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__230_8h" name="type_230.h" local="yes" imported="no">type_230.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_230</name>
      <anchorfile>copy__230_8c.html</anchorfile>
      <anchor>a986717e66eb2217307c75241fe6a1e49</anchor>
      <arglist>(struct type_230 *t230, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_300.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__300_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_300</name>
      <anchorfile>copy__300_8c.html</anchorfile>
      <anchor>a5ad12c6cdbab6af861decf51a60ddf19</anchor>
      <arglist>(struct type_300 *t300, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_301.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__301_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_301</name>
      <anchorfile>copy__301_8c.html</anchorfile>
      <anchor>a5027af14a89992afe9693f9ecb490107</anchor>
      <arglist>(struct type_301 *t301, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_302.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__302_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_302</name>
      <anchorfile>copy__302_8c.html</anchorfile>
      <anchor>af6deb19a6c8dce4d7bb73111309be2e1</anchor>
      <arglist>(struct type_302 *t302, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_303.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__303_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_303</name>
      <anchorfile>copy__303_8c.html</anchorfile>
      <anchor>aeeefb9be311d763d7a2f313dfbb75f1e</anchor>
      <arglist>(struct type_303 *t303, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_304.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__304_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__304_8h" name="type_304.h" local="yes" imported="no">type_304.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_304</name>
      <anchorfile>copy__304_8c.html</anchorfile>
      <anchor>a08534930c82a81777c3a7d9755a6df38</anchor>
      <arglist>(struct type_304 *t304, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_305.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__305_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__305_8h" name="type_305.h" local="yes" imported="no">type_305.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_305</name>
      <anchorfile>copy__305_8c.html</anchorfile>
      <anchor>ad95cbc5fbd7ba6f79e8d5cb4d1fa49c3</anchor>
      <arglist>(struct type_305 *t305, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_306.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__306_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__306_8h" name="type_306.h" local="yes" imported="no">type_306.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_306</name>
      <anchorfile>copy__306_8c.html</anchorfile>
      <anchor>a52e4894acbb3a910f151b5232bff9daa</anchor>
      <arglist>(struct type_306 *t306, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_307.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__307_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__307_8h" name="type_307.h" local="yes" imported="no">type_307.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_307</name>
      <anchorfile>copy__307_8c.html</anchorfile>
      <anchor>a20e685502bb33be92066950695c0ed38</anchor>
      <arglist>(struct type_307 *t307, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_308.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__308_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__308_8h" name="type_308.h" local="yes" imported="no">type_308.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_308</name>
      <anchorfile>copy__308_8c.html</anchorfile>
      <anchor>a9bb75bfe2641a1a3d6d72a3a09ee2136</anchor>
      <arglist>(struct type_308 *t308, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_309.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>copy__309_8c.html</filename>
    <includes id="bytflp_8h" name="bytflp.h" local="yes" imported="no">bytflp.h</includes>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_309</name>
      <anchorfile>copy__309_8c.html</anchorfile>
      <anchor>a94f3a271870d5a04bd00b1c4129ea63d</anchor>
      <arglist>(struct type_309 *t309, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>copy_cblock_parts.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>copy__cblock__parts_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_cblock_parts</name>
      <anchorfile>copy__cblock__parts_8c.html</anchorfile>
      <anchor>a1509af0fb856111ee313879f84a5fc77</anchor>
      <arglist>(struct c_block *f, struct c_block *t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CorAsc2.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/legacy/CorAsc2/src/</path>
    <filename>CorAsc2_8c.html</filename>
    <includes id="type__000_8h" name="type_000.h" local="yes" imported="no">type_000.h</includes>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="T1_8h" name="T1.h" local="yes" imported="no">T1.h</includes>
    <includes id="type__200_8h" name="type_200.h" local="yes" imported="no">type_200.h</includes>
    <includes id="type__201_8h" name="type_201.h" local="yes" imported="no">type_201.h</includes>
    <includes id="type__202_8h" name="type_202.h" local="yes" imported="no">type_202.h</includes>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="type__204_8h" name="type_204.h" local="yes" imported="no">type_204.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="type__206_8h" name="type_206.h" local="yes" imported="no">type_206.h</includes>
    <includes id="type__207_8h" name="type_207.h" local="yes" imported="no">type_207.h</includes>
    <includes id="type__208_8h" name="type_208.h" local="yes" imported="no">type_208.h</includes>
    <includes id="type__210_8h" name="type_210.h" local="yes" imported="no">type_210.h</includes>
    <includes id="type__212_8h" name="type_212.h" local="yes" imported="no">type_212.h</includes>
    <includes id="type__220_8h" name="type_220.h" local="yes" imported="no">type_220.h</includes>
    <includes id="type__221_8h" name="type_221.h" local="yes" imported="no">type_221.h</includes>
    <includes id="type__222_8h" name="type_222.h" local="yes" imported="no">type_222.h</includes>
    <includes id="type__230_8h" name="type_230.h" local="yes" imported="no">type_230.h</includes>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="type__304_8h" name="type_304.h" local="yes" imported="no">type_304.h</includes>
    <includes id="type__306_8h" name="type_306.h" local="yes" imported="no">type_306.h</includes>
    <includes id="type__307_8h" name="type_307.h" local="yes" imported="no">type_307.h</includes>
    <includes id="type__308_8h" name="type_308.h" local="yes" imported="no">type_308.h</includes>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="tapeDB_8h" name="tapeDB.h" local="yes" imported="no">tapeDB.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DBGMSG</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a7175ce7004c70624477509d5b31989f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERRMSG</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a3d7d5d9bbd155d5032348634b1ef32c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_double</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>aaed9407b61a7efeab52943ad7a4245fd</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_float</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a131770199c7f37cb65a5ece453ffbd0c</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_int</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>aa6c0ae0503e0c23f3753ba11abdf0073</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_long</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a06a1a285693a9150eeb7205dea9b4cc4</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_short</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a9ee2b81824840ea2f34fa95cc19ef88c</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_unsig</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a93f42f7f46575cb47b162e703bb26ba1</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBUFF</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a9e81c59cf213dafb87ada0e564f62f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NNAMES</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a71bf80a643bcc6db346468d01abc470f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYSCLK</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a97ee8be60ff9ae1cfface03bc50f1d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO31</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a42cf1e6775231cf1ca1e873889f58dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO32</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a9296cb585de000681fc929e5ec247e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>r_double_reverse</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a9fe313dc6920e406144b96ac9b2ba142</anchor>
      <arglist>(double j)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>r_float_reverse</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>adf748f6a8e911ce83849a3b2b295d5dd</anchor>
      <arglist>(float j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>r_int_reverse</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>af1ab823514a246f9c895bee338908223</anchor>
      <arglist>(int j)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>r_long_reverse</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>aa6f46376c950fb5f4eb465ad875ad84d</anchor>
      <arglist>(long j)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>r_short_reverse</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>aceb2d29a870f4f75c4d2fd0cd1501ba8</anchor>
      <arglist>(short i)</arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>r_unsig_reverse</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>aa41153a400b44d20613ae6c2ec23818c</anchor>
      <arglist>(unsigned short i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>t2s</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a2abc96030029529984475f8a57d69c33</anchor>
      <arglist>(double arg, char *ps)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>buff</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>ae9d9b3f0986a2c734f04aa78ec4f5e9a</anchor>
      <arglist>[MBUFF]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>byte</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>ab564a7b2c88a9f9b9fbb7812fb2736a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mbuff</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>ab6fcf52b2203e57136009b5dca60bdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>me</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>afab6786a33e77b214966ec78132329de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>msglev</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>ac4693c7c31653d6304e6b816726f4482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>word</name>
      <anchorfile>CorAsc2_8c.html</anchorfile>
      <anchor>a6be08dc66fc94b823681cf6025cbf0cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>corel_alloc.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>corel__alloc_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>corel_alloc</name>
      <anchorfile>corel__alloc_8c.html</anchorfile>
      <anchor>adcdef3df1f23283430ff7fded1f10774</anchor>
      <arglist>(struct mk4_corel *corel, int nidx, int ap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>corelname.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>corelname_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>corelname</name>
      <anchorfile>corelname_8c.html</anchorfile>
      <anchor>a5f383efe26c5466e196c2cfe636e1bcf</anchor>
      <arglist>(corelsum *csumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CorPrune.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/legacy/CorAsc2/src/</path>
    <filename>CorPrune_8c.html</filename>
    <includes id="type__000_8h" name="type_000.h" local="yes" imported="no">type_000.h</includes>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="T1_8h" name="T1.h" local="yes" imported="no">T1.h</includes>
    <includes id="type__200_8h" name="type_200.h" local="yes" imported="no">type_200.h</includes>
    <includes id="type__201_8h" name="type_201.h" local="yes" imported="no">type_201.h</includes>
    <includes id="type__202_8h" name="type_202.h" local="yes" imported="no">type_202.h</includes>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="type__204_8h" name="type_204.h" local="yes" imported="no">type_204.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="type__206_8h" name="type_206.h" local="yes" imported="no">type_206.h</includes>
    <includes id="type__207_8h" name="type_207.h" local="yes" imported="no">type_207.h</includes>
    <includes id="type__208_8h" name="type_208.h" local="yes" imported="no">type_208.h</includes>
    <includes id="type__210_8h" name="type_210.h" local="yes" imported="no">type_210.h</includes>
    <includes id="type__212_8h" name="type_212.h" local="yes" imported="no">type_212.h</includes>
    <includes id="type__220_8h" name="type_220.h" local="yes" imported="no">type_220.h</includes>
    <includes id="type__221_8h" name="type_221.h" local="yes" imported="no">type_221.h</includes>
    <includes id="type__222_8h" name="type_222.h" local="yes" imported="no">type_222.h</includes>
    <includes id="type__230_8h" name="type_230.h" local="yes" imported="no">type_230.h</includes>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="type__304_8h" name="type_304.h" local="yes" imported="no">type_304.h</includes>
    <includes id="type__306_8h" name="type_306.h" local="yes" imported="no">type_306.h</includes>
    <includes id="type__307_8h" name="type_307.h" local="yes" imported="no">type_307.h</includes>
    <includes id="type__308_8h" name="type_308.h" local="yes" imported="no">type_308.h</includes>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="tapeDB_8h" name="tapeDB.h" local="yes" imported="no">tapeDB.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DBGMSG</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a7175ce7004c70624477509d5b31989f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERRMSG</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a3d7d5d9bbd155d5032348634b1ef32c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_double</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>aaed9407b61a7efeab52943ad7a4245fd</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_float</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a131770199c7f37cb65a5ece453ffbd0c</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_int</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>aa6c0ae0503e0c23f3753ba11abdf0073</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_long</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a06a1a285693a9150eeb7205dea9b4cc4</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_short</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a9ee2b81824840ea2f34fa95cc19ef88c</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>flip_unsig</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a93f42f7f46575cb47b162e703bb26ba1</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBUFF</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a9e81c59cf213dafb87ada0e564f62f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NNAMES</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a71bf80a643bcc6db346468d01abc470f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYSCLK</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a97ee8be60ff9ae1cfface03bc50f1d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>r_double_reverse</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a9fe313dc6920e406144b96ac9b2ba142</anchor>
      <arglist>(double j)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>r_float_reverse</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>adf748f6a8e911ce83849a3b2b295d5dd</anchor>
      <arglist>(float j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>r_int_reverse</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>af1ab823514a246f9c895bee338908223</anchor>
      <arglist>(int j)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>r_long_reverse</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>aa6f46376c950fb5f4eb465ad875ad84d</anchor>
      <arglist>(long j)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>r_short_reverse</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>aceb2d29a870f4f75c4d2fd0cd1501ba8</anchor>
      <arglist>(short i)</arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>r_unsig_reverse</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>aa41153a400b44d20613ae6c2ec23818c</anchor>
      <arglist>(unsigned short i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>t2s</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a2abc96030029529984475f8a57d69c33</anchor>
      <arglist>(double arg, char *ps)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>buff</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>ae9d9b3f0986a2c734f04aa78ec4f5e9a</anchor>
      <arglist>[MBUFF]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>byte</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>ab564a7b2c88a9f9b9fbb7812fb2736a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mbuff</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>ab6fcf52b2203e57136009b5dca60bdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>me</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>afab6786a33e77b214966ec78132329de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>msglev</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>ac4693c7c31653d6304e6b816726f4482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>word</name>
      <anchorfile>CorPrune_8c.html</anchorfile>
      <anchor>a6be08dc66fc94b823681cf6025cbf0cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>create_fname.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>create__fname_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>create_fname</name>
      <anchorfile>create__fname_8c.html</anchorfile>
      <anchor>acd476560e485b71b981c0f760f2e4cc0</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, int the_seq_no, char fname[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>create_fsm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>create__fsm_8c.html</filename>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="parser_8h" name="parser.h" local="yes" imported="no">parser.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>fsm_table</name>
      <anchorfile>create__fsm_8c.html</anchorfile>
      <anchor>ae5e1b1ca4289cd78bfa8b46185a33f61</anchor>
      <arglist>(aa, bb, cc, dd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_fsm</name>
      <anchorfile>create__fsm_8c.html</anchorfile>
      <anchor>a9c36a9fc6bb0ec18d292d2607710382e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>create_lockfile.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>create__lockfile_8c.html</filename>
    <includes id="write__lock__mechanism_8h" name="write_lock_mechanism.h" local="yes" imported="no">write_lock_mechanism.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>check_stale</name>
      <anchorfile>create__lockfile_8c.html</anchorfile>
      <anchor>abd3f1eedc1ff860d01665e9e030275d5</anchor>
      <arglist>(lockfile_data_struct *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_global_lockfile_data</name>
      <anchorfile>create__lockfile_8c.html</anchorfile>
      <anchor>a91ba44b06a88ad9f1efcb854109a752d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_lockfile</name>
      <anchorfile>create__lockfile_8c.html</anchorfile>
      <anchor>a31777d4610c08362c0edda58135c118d</anchor>
      <arglist>(char *rootname, char *lockfile_name, int max_seq_no)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_lockfile_data</name>
      <anchorfile>create__lockfile_8c.html</anchorfile>
      <anchor>a127b213cfc2bfd2f7461ca87a2744eca</anchor>
      <arglist>(lockfile_data_struct *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock_has_priority</name>
      <anchorfile>create__lockfile_8c.html</anchorfile>
      <anchor>aff60e9816856dc7bb893978fbae4df59</anchor>
      <arglist>(lockfile_data_struct *other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_lockfile_name</name>
      <anchorfile>create__lockfile_8c.html</anchorfile>
      <anchor>a4aba52ddf04f16afcea8617400dff628</anchor>
      <arglist>(char *lockfile_name_base, lockfile_data_struct *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_lockfile</name>
      <anchorfile>create__lockfile_8c.html</anchorfile>
      <anchor>a3318d5dac17b795ee7747945044f4d62</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>createRoot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>createRoot_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <includes id="other_8h" name="other.h" local="yes" imported="no">other.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAX_FS</name>
      <anchorfile>createRoot_8c.html</anchorfile>
      <anchor>ac419b34b5b95aa01a8ba69e184f32028</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createRoot</name>
      <anchorfile>createRoot_8c.html</anchorfile>
      <anchor>a6795f643d82dfa83bc3e0c88bb167bd3</anchor>
      <arglist>(DifxInput *D, struct fblock_tag *pfb, int jobId, int scanId, char *node_name, char *node, char *rcode, struct stations *stns, struct CommandLineOptions *opts, char *rootname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fake_bocf_period</name>
      <anchorfile>createRoot_8c.html</anchorfile>
      <anchor>ac3d7d8e84a279eb7db5056f9f331fad4</anchor>
      <arglist>(char buff[256], DifxConfig *config)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>frt</name>
      <anchorfile>createRoot_8c.html</anchorfile>
      <anchor>a513dfe21d8fdb9359382061550cb2ef6</anchor>
      <arglist>(double mjd, double fract, int midpt_offset)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getband</name>
      <anchorfile>createRoot_8c.html</anchorfile>
      <anchor>a50f0ef19f99dd7d6ef61edaffc41d290</anchor>
      <arglist>(double freq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isValidAntenna</name>
      <anchorfile>createRoot_8c.html</anchorfile>
      <anchor>abbab3013055dad358658a24165320b04</anchor>
      <arglist>(const DifxInput *D, char *antName, int scanId)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>createType1s.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>createType1s_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CH</name>
      <anchorfile>createType1s_8c.html</anchorfile>
      <anchor>afbf9ea53b3761c3c1b5396565e7c2a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOVIS</name>
      <anchorfile>createType1s_8c.html</anchorfile>
      <anchor>a8934315d4518a84ffd030b90bb6e6171</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XS_CONVENTION</name>
      <anchorfile>createType1s_8c.html</anchorfile>
      <anchor>a08ade072f4b11769f7408f7547d789d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createType1s</name>
      <anchorfile>createType1s_8c.html</anchorfile>
      <anchor>af155b5959694f9e51b49683eac07eff8</anchor>
      <arglist>(DifxInput *D, struct fblock_tag *pfb, int *jobId, int scanId, char *node, char *rcode, struct stations *stns, struct CommandLineOptions *opts, char *rootname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBaselineIndex</name>
      <anchorfile>createType1s_8c.html</anchorfile>
      <anchor>a3b5c71803f794c839cf2d5280cd8d52c</anchor>
      <arglist>(DifxInput *D, int a1, int a2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recordIsFlagged</name>
      <anchorfile>createType1s_8c.html</anchorfile>
      <anchor>a64810dd3c9286783b78fd6a3f8b8362c</anchor>
      <arglist>(double t, int a1, int a2, const DifxJob *job)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>createType3s.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>createType3s_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <includes id="other_8h" name="other.h" local="yes" imported="no">other.h</includes>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>D2M4_MERGE_PCAL_DATASTREAMS</name>
      <anchorfile>createType3s_8c.html</anchorfile>
      <anchor>a59ecb26f7db029afef3ed82dd9203b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LBUFF_SIZE</name>
      <anchorfile>createType3s_8c.html</anchorfile>
      <anchor>ae435229d078ae30a116cad433bcfbda5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NPC_FREQS</name>
      <anchorfile>createType3s_8c.html</anchorfile>
      <anchor>a7fea8d230adcc28a645e3e3c89b27b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NPC_TONES</name>
      <anchorfile>createType3s_8c.html</anchorfile>
      <anchor>a9a8ed29e8340ae7e2ff53ac007d1861d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createType3s</name>
      <anchorfile>createType3s_8c.html</anchorfile>
      <anchor>ac59d799169f58302f4b69130c7a6b114</anchor>
      <arglist>(DifxInput *D, struct fblock_tag *pfb, int startJob, int endJob, int scanId, char *node, char *rcode, struct stations *stns, struct CommandLineOptions *opts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill_ds_pols</name>
      <anchorfile>createType3s_8c.html</anchorfile>
      <anchor>a0cedd99b994c4df9d986153957361106</anchor>
      <arglist>(DifxInput *D, int ant, char *ds_pols)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lbuff</name>
      <anchorfile>createType3s_8c.html</anchorfile>
      <anchor>abc5700d7d198aba919e3d5f4007c90eb</anchor>
      <arglist>[LBUFF_SIZE]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>criteria_match.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>criteria__match_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="function">
      <type>int</type>
      <name>criteria_match</name>
      <anchorfile>criteria__match_8c.html</anchorfile>
      <anchor>a68db5088343ba432982d15fddc5b4a21</anchor>
      <arglist>(struct c_block *cb_ptr, char base[2], char sour[31], char group, int time)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cross_link.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>cross__link_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>cross_link</name>
      <anchorfile>cross__link_8c.html</anchorfile>
      <anchor>a7450a480d01b2e49ec5699d3f15e3112</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cursor_select.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>cursor__select_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <member kind="function">
      <type>int</type>
      <name>cursor_select</name>
      <anchorfile>cursor__select_8c.html</anchorfile>
      <anchor>a4de722c538fee563f11215c5e41fa17c</anchor>
      <arglist>(esum *data, int *npoint, int option)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cvex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>cvex_8h.html</filename>
    <class kind="struct">Cvex_Block</class>
    <class kind="struct">Cvex_BlockMode</class>
    <class kind="struct">Cvex_Board</class>
    <class kind="struct">Cvex_BoardParms</class>
    <class kind="struct">Cvex_Chip</class>
    <class kind="struct">Cvex_ChipMode</class>
    <class kind="struct">Cvex_Config</class>
    <class kind="struct">Cvex_Mode</class>
    <class kind="struct">Cvex_Section</class>
    <class kind="struct">Cvex_SectionMode</class>
    <class kind="struct">Cvex_Snake</class>
    <class kind="struct">Cvex_XPolPair</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BLKS_P_CHIP</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>aeac5c9b8d55429722b244de5b1a046de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BLKS_P_SNAKE_P_CHIP</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a1a3f80674ddabf8ae880b4ef668fab41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BRDS_P_CORR</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a48cb75a57101440684f6f242051ba621</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CHIP_INS_P_CHIP</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ab01c86b2f6b508de966517d6e9c4172b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CHIPS_P_BRD</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>aa63ffc2f346e51546c69875e14a248bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_MUXS_P_BLK</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a97d21ba807a60c1208f12f0fb5fb8320</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SECTS_P_BRD</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a786541aa529fc3a483f133c87ae68315</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SNAKES_P_CHIP</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a1548c5f082897be80cc2908c3966d1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_XPOL_P_BRD</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a6f0f410bac57b911a53e950904d8498f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_Block</type>
      <name>Cvex_Block</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ac09bc6b6b6e3c68ab99d2e649ad086d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_BlockMode</type>
      <name>Cvex_BlockMode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>af09f505680a74e3cf14593c00c627ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_Board</type>
      <name>Cvex_Board</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a22e3b089971f22985f439ce6d4a2100c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_BoardParms</type>
      <name>Cvex_BoardParms</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ad628679b58b7384c7a2169734b1c39f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_Chip</type>
      <name>Cvex_Chip</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ab6f91e63a4096bcc0c65b0f99170f6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_ChipMode</type>
      <name>Cvex_ChipMode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a6b6e9c8454b5b0fdd27bcc6cf81bbcdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_Config</type>
      <name>Cvex_Config</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>af1f9b79d936d519b75954b9e57df22b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_Mode</type>
      <name>Cvex_Mode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a8fbcc2256e1e998debdfba91d56bee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_Section</type>
      <name>Cvex_Section</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a1c1dd9a5a19e023efaf2eddb571ce504</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_SectionMode</type>
      <name>Cvex_SectionMode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a2a0fc5629c3e1b0276fbbc13bfe186b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_Snake</type>
      <name>Cvex_Snake</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ad868d6489d3a5501dd7a0ee4773003b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Cvex_XPolPair</type>
      <name>Cvex_XPolPair</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a6c73db7438984625b37f969927601755</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cvex_info.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>cvex__info_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>cvex__info_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_Config *</type>
      <name>cvex_info</name>
      <anchorfile>cvex__info_8c.html</anchorfile>
      <anchor>a135243c719673acaaeeb3d7a2f52f9ac</anchor>
      <arglist>(char *key)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cvex_del_list</name>
      <anchorfile>cvex__info_8c.html</anchorfile>
      <anchor>af9241de2ff893d5d4b7b0eaac1689b60</anchor>
      <arglist>[2048]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_copy_record.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__copy__record_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_copy_record</name>
      <anchorfile>d2m4__pcal__copy__record_8c.html</anchorfile>
      <anchor>afd65af24f7aa3d483a5beb9a7553cb62</anchor>
      <arglist>(struct d2m4_pcal_record *record1, struct d2m4_pcal_record *record2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_count_unique_polarizations.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__count__unique__polarizations_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>int</type>
      <name>d2m4_pcal_count_unique_polarizations</name>
      <anchorfile>d2m4__pcal__count__unique__polarizations_8c.html</anchorfile>
      <anchor>a1b28089d0a47ac2dc4389ad9227fe0ce</anchor>
      <arglist>(struct d2m4_pcal_record *record)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_create_list.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__create__list_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>struct d2m4_pcal_list_node *</type>
      <name>d2m4_pcal_create_list</name>
      <anchorfile>d2m4__pcal__create__list_8c.html</anchorfile>
      <anchor>a2d5766504b84682a587234c380d7acfd</anchor>
      <arglist>(FILE *fin)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_dump_record.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__dump__record_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>int</type>
      <name>d2m4_pcal_dump_record</name>
      <anchorfile>d2m4__pcal__dump__record_8c.html</anchorfile>
      <anchor>aa8c272609dbeb8c46a53d4cf712256c0</anchor>
      <arglist>(struct d2m4_pcal_record *rec, char *line_buffer, int buffer_size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_free_list.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__free__list_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_free_list</name>
      <anchorfile>d2m4__pcal__free__list_8c.html</anchorfile>
      <anchor>aa5dd6b99c9d34ca991b95ddd235cc75b</anchor>
      <arglist>(struct d2m4_pcal_list_node *pcal_list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_free_record.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__free__record_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_free_record</name>
      <anchorfile>d2m4__pcal__free__record_8c.html</anchorfile>
      <anchor>a7308f606708f1ec09c0cb98033be03c2</anchor>
      <arglist>(struct d2m4_pcal_record *rec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_init_record.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__init__record_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_init_record</name>
      <anchorfile>d2m4__pcal__init__record_8c.html</anchorfile>
      <anchor>a2e74f227dc44adde0ac32d2911b4469d</anchor>
      <arglist>(struct d2m4_pcal_record *rec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_merge_datastreams_in_list.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__merge__datastreams__in__list_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>struct d2m4_pcal_list_node *</type>
      <name>d2m4_pcal_merge_datastreams_in_list</name>
      <anchorfile>d2m4__pcal__merge__datastreams__in__list_8c.html</anchorfile>
      <anchor>a3d9eb1f2821a1edf33652ff8d53df870</anchor>
      <arglist>(struct d2m4_pcal_list_node *input_pcal_list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_merge_record.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__merge__record_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>int</type>
      <name>d2m4_pcal_can_merge_records</name>
      <anchorfile>d2m4__pcal__merge__record_8c.html</anchorfile>
      <anchor>a6f1255ddaa3c111364ccc0b1276d2af4</anchor>
      <arglist>(struct d2m4_pcal_record *rec1, struct d2m4_pcal_record *rec2)</arglist>
    </member>
    <member kind="function">
      <type>struct d2m4_pcal_record *</type>
      <name>d2m4_pcal_merge_record</name>
      <anchorfile>d2m4__pcal__merge__record_8c.html</anchorfile>
      <anchor>acfcdecde4de4a84f3dca7cef59a87445</anchor>
      <arglist>(struct d2m4_pcal_record *record1, struct d2m4_pcal_record *record2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_populate_record.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>d2m4__pcal__populate__record_8c.html</filename>
    <includes id="d2m4__pcal__record_8h" name="d2m4_pcal_record.h" local="yes" imported="no">d2m4_pcal_record.h</includes>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_populate_record</name>
      <anchorfile>d2m4__pcal__populate__record_8c.html</anchorfile>
      <anchor>a158259687b806ea9419b8d466ef7d070</anchor>
      <arglist>(struct d2m4_pcal_record *rec, char *line_buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>d2m4_pcal_record.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/include/</path>
    <filename>d2m4__pcal__record_8h.html</filename>
    <class kind="struct">d2m4_pcal_list_node</class>
    <class kind="struct">d2m4_pcal_phasor</class>
    <class kind="struct">d2m4_pcal_record</class>
    <member kind="define">
      <type>#define</type>
      <name>AP_TOL</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>aa0a8bba43708a6f968425f64157432fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>D2M4_LBUFF_SIZE</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a0571d2acaefeb83c3621cdb8d25d3ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>D2M4_NPC_FREQS</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a13576a01ae8a52e5ec0b1336efb8e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>D2M4_NPC_TONES</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a2f7834788d678470379e15ed84521aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>d2m4_pcal_can_merge_records</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a2861b09a6bb90e1b7e6e804db223af3e</anchor>
      <arglist>(struct d2m4_pcal_record *record1, struct d2m4_pcal_record *record2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_copy_record</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>afd65af24f7aa3d483a5beb9a7553cb62</anchor>
      <arglist>(struct d2m4_pcal_record *record1, struct d2m4_pcal_record *record2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>d2m4_pcal_count_unique_polarizations</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a1b28089d0a47ac2dc4389ad9227fe0ce</anchor>
      <arglist>(struct d2m4_pcal_record *record)</arglist>
    </member>
    <member kind="function">
      <type>struct d2m4_pcal_list_node *</type>
      <name>d2m4_pcal_create_list</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a2d5766504b84682a587234c380d7acfd</anchor>
      <arglist>(FILE *fin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>d2m4_pcal_dump_record</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>aa8c272609dbeb8c46a53d4cf712256c0</anchor>
      <arglist>(struct d2m4_pcal_record *rec, char *line_buffer, int buffer_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_free_list</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>aa5dd6b99c9d34ca991b95ddd235cc75b</anchor>
      <arglist>(struct d2m4_pcal_list_node *pcal_list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_free_record</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a7308f606708f1ec09c0cb98033be03c2</anchor>
      <arglist>(struct d2m4_pcal_record *rec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_init_record</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a2e74f227dc44adde0ac32d2911b4469d</anchor>
      <arglist>(struct d2m4_pcal_record *rec)</arglist>
    </member>
    <member kind="function">
      <type>struct d2m4_pcal_list_node *</type>
      <name>d2m4_pcal_merge_datastreams_in_list</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a3d9eb1f2821a1edf33652ff8d53df870</anchor>
      <arglist>(struct d2m4_pcal_list_node *input_pcal_list)</arglist>
    </member>
    <member kind="function">
      <type>struct d2m4_pcal_record *</type>
      <name>d2m4_pcal_merge_record</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>acfcdecde4de4a84f3dca7cef59a87445</anchor>
      <arglist>(struct d2m4_pcal_record *record1, struct d2m4_pcal_record *record2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>d2m4_pcal_populate_record</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a158259687b806ea9419b8d466ef7d070</anchor>
      <arglist>(struct d2m4_pcal_record *rec, char *line_buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>datec_to_datef.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>datec__to__datef_8c.html</filename>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>datec_to_datef</name>
      <anchorfile>datec__to__datef_8c.html</anchorfile>
      <anchor>a06efce61e570cf78377555014e103f4b</anchor>
      <arglist>(struct datec *input, struct datef *output)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>datef_to_datec.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>datef__to__datec_8c.html</filename>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>datef_to_datec</name>
      <anchorfile>datef__to__datec_8c.html</anchorfile>
      <anchor>a24e6a3f200c63b98cdcbe9ab0158f460</anchor>
      <arglist>(struct datef *input, struct datec *output)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>datum_value.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>datum__value_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <member kind="function">
      <type>void</type>
      <name>datum_value</name>
      <anchorfile>datum__value_8c.html</anchorfile>
      <anchor>a9c4908d1c9937f4eb8fe9dac3e02b715</anchor>
      <arglist>(int index, int aux, int toffset, int refrem, fringearray *fdatum, float *value, float *errh, float *errl)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>day_of_datef.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>day__of__datef_8c.html</filename>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>short</type>
      <name>day_of_datef</name>
      <anchorfile>day__of__datef_8c.html</anchorfile>
      <anchor>a8c9e2b93d08712d234a67b45eca62216</anchor>
      <arglist>(struct datef date)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>decode_pval.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>decode__pval_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>decode_pval</name>
      <anchorfile>decode__pval_8c.html</anchorfile>
      <anchor>ac17f88a9c00ee61a43fc5954a8abba23</anchor>
      <arglist>(struct param_val *p_val, struct pval_format *p_def)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>default_cblock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>default__cblock_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>default__cblock_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>default__cblock_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>default_cblock</name>
      <anchorfile>default__cblock_8c.html</anchorfile>
      <anchor>adb2d3007c1a3a5a5f94c8640c875fcd8</anchor>
      <arglist>(struct c_block *cb_ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>delay_rate.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>delay__rate_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>delay_rate</name>
      <anchorfile>delay__rate_8c.html</anchorfile>
      <anchor>ad7216df844a6a92d5e563cee371d745e</anchor>
      <arglist>(struct type_pass *pass, int fr, hops_complex rate_spectrum[MAXAP])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>determine_nsegs.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>determine__nsegs_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>determine_nsegs</name>
      <anchorfile>determine__nsegs_8c.html</anchorfile>
      <anchor>a022f29b516366461a5daf65a84d1d83f</anchor>
      <arglist>(const struct fxparam *fxp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>diff_file_phase.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>diff__file__phase_8c.html</filename>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>double</type>
      <name>diff_file_phase</name>
      <anchorfile>diff__file__phase_8c.html</anchorfile>
      <anchor>aa70477efc677b2963571bef176ec24ba</anchor>
      <arglist>(struct type_pass *p, char fcode, double t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>difx2hops.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/applications/</path>
    <filename>difx2hops_8cc.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__StationCodeMap_8hh" name="MHO_StationCodeMap.hh" local="yes" imported="no">MHO_StationCodeMap.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__BinaryFileStreamer_8hh" name="MHO_BinaryFileStreamer.hh" local="yes" imported="no">MHO_BinaryFileStreamer.hh</includes>
    <includes id="MHO__ClassIdentityMap_8hh" name="MHO_ClassIdentityMap.hh" local="yes" imported="no">MHO_ClassIdentityMap.hh</includes>
    <includes id="MHO__DiFXInterface_8hh" name="MHO_DiFXInterface.hh" local="yes" imported="no">MHO_DiFXInterface.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>difx2hops_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>difx2mark4-make_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>difx2mark4-make__id_8c.html</filename>
    <member kind="function">
      <type>char *</type>
      <name>make_id</name>
      <anchorfile>difx2mark4-make__id_8c.html</anchorfile>
      <anchor>a4de554480d00f94f479fb99534ccd27a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>difx2mark4-root_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>difx2mark4-root__id_8c.html</filename>
    <member kind="function">
      <type>char *</type>
      <name>root_id</name>
      <anchorfile>difx2mark4-root__id_8c.html</anchorfile>
      <anchor>a2650eeb9c31ded3b85b02b679f0d70bb</anchor>
      <arglist>(int year, int day, int hour, int min, int sec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>difx2mark4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/</path>
    <filename>difx2mark4_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>int</type>
      <name>convertMark4</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>a9d1a8bb4e28b11093fbaacd12d6de2f0</anchor>
      <arglist>(struct CommandLineOptions *opts, int *nScan, int *nScanTot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteCommandLineOptions</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>af76cf159ee863aeb290d4d5d49561ea0</anchor>
      <arglist>(struct CommandLineOptions *opts)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>struct CommandLineOptions *</type>
      <name>newCommandLineOptions</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>adbc1a8e0b5d2309c02b09f3d64ad66ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>newScan</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>a635c0c8453f5c5693358dac2beae831c</anchor>
      <arglist>(DifxInput *, struct CommandLineOptions *, char *, int, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct CommandLineOptions *</type>
      <name>parseCommandLine</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>aacb38a3e9a211881d61b7ce8cdff0ec6</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>author</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>a687d469a2c726c8d2b2931364667bbec</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>struct fbands</type>
      <name>fband</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>aa239a62a2b55f686c165a463b85d9c0a</anchor>
      <arglist>[MAX_FBANDS]</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>program</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>a02aac88fde921d1659473af995fa005c</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>version</name>
      <anchorfile>difx2mark4_8c.html</anchorfile>
      <anchor>ac91cf940e10a61b95cabc3258a06186b</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>difx2mark4.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/include/</path>
    <filename>difx2mark4_8h.html</filename>
    <includes id="type__000_8h" name="type_000.h" local="yes" imported="no">type_000.h</includes>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="type__writes_8h" name="type_writes.h" local="yes" imported="no">type_writes.h</includes>
    <class kind="struct">CommandLineOptions</class>
    <class kind="struct">vis_record::components</class>
    <class kind="struct">fbands</class>
    <class kind="struct">fblock_tag</class>
    <class kind="struct">fblock_tag.stn</class>
    <class kind="struct">stations</class>
    <class kind="struct">vis_record</class>
    <member kind="define">
      <type>#define</type>
      <name>DIFXIO_VERSION_MAJOR</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ab8419652e77d81a8ee56d31f12ee042b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIFXIO_VERSION_MINOR</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a80c899b1fa4d5e1e7db4ab3989179783</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXP_CODE_LEN</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a2aa2be391e1bb8951ffbf0cb787d4075</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGLIM</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a887e1f03fc86df40bb36cb1f5b5e7cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_DFRQ</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a93c8d7ab3ca8b65f933c5c899bbff113</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_FBANDS</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a5d28e6bb7fc3071ff539d078842a2e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_FPPAIRS</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aaec5b314a300a0200053191c10c417bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_INPUT_FILES</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a7ffa49171ebf2b6ffe0a77924efa955b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_STN</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a005a7e8db35752f648d251dd13836c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_VIS</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a06e04d000a2fd3821b8e287fdc446c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMFILS</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a35cd72f0adb0fcf864e2ec698bec110f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVRMAX</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a81b8da61d578c868b52ab7bc9777db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>booleans</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ad1c1018b91abe46eaa220d8c979c9e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FALSE</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ad1c1018b91abe46eaa220d8c979c9e77aa1e095cc966dbecf6a0d8aad75348d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRUE</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ad1c1018b91abe46eaa220d8c979c9e77aa82764c3079aea4e60c80e45befbb839</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>conv2date</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a36be5d6b48b1ee0a19df640623a7ccde</anchor>
      <arglist>(double, struct date *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createRoot</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a9f5c195683537e3884f3352c7c675110</anchor>
      <arglist>(DifxInput *, struct fblock_tag *, int, int, char *, char *, char *, struct stations *, struct CommandLineOptions *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createType1s</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ab56d7261ae1f752e090c7681e0562b42</anchor>
      <arglist>(DifxInput *, struct fblock_tag *, int *, int, char *, char *, struct stations *, struct CommandLineOptions *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>createType3s</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>acc92dc8d13bacbf9a423535a461b20af</anchor>
      <arglist>(DifxInput *, struct fblock_tag *, int, int, int, char *, char *, struct stations *, struct CommandLineOptions *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>double_reverse</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a10b390babf706732507ebf085294e792</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>float_reverse</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a42803addab17b848d2a94c8d8d381ae0</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_vis</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aedba64af82bf5224682912f2a08ee0ed</anchor>
      <arglist>(DifxInput *, char *, struct CommandLineOptions *, int *, int *, int *, vis_record **, char *, struct fblock_tag *)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getband</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a4d11fffa59699c21c109ee5ee51a1b7d</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>int_reverse</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ab0229178a06d9cdcae445e573be776dd</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>long_reverse</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aa53a0cb3deb5af0916ad970eda4f12df</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>new_type1</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a99a35b80522723d137cbd5c39000bc91</anchor>
      <arglist>(DifxInput *, struct fblock_tag *, int, int, int, int, int *, double *, struct stations *, char *, struct CommandLineOptions *, FILE **, int, char *, char *, char *, char *, int, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ac1f452a57bfdd684dfa96996b6c29567</anchor>
      <arglist>(struct CommandLineOptions *, vis_record *, int, int *, int *, struct fblock_tag *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a8a191dd824d0dcce94f1c7825cafb356</anchor>
      <arglist>(int, int, int, int, int)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id_break</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ac23688f7d5c3092b03b7d3cddfcd34b6</anchor>
      <arglist>(time_t, int, int, int, int, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>root_id_delta</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a4e9c6dc97cedda6b6a45afa5ce6815f5</anchor>
      <arglist>(time_t)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>short_reverse</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a6331634a3d2bfeb179e40818eb3eac89</anchor>
      <arglist>(short)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>single_code</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aa115776987a18ee8374eb5818aee03e9</anchor>
      <arglist>(char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>unsig_reverse</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>abdef71412540e47cc8fc53d97acf535b</anchor>
      <arglist>(unsigned short)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>display_221.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>display__221_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>display__221_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GS_COPYPAGE_OK</name>
      <anchorfile>display__221_8c.html</anchorfile>
      <anchor>a3cd3ea90bf1b6ba48b70bfd9fde89bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GS_EXEC</name>
      <anchorfile>display__221_8c.html</anchorfile>
      <anchor>aaa91677912c05e8d0a27d7f5d76bea40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GS_VERSION</name>
      <anchorfile>display__221_8c.html</anchorfile>
      <anchor>a9bcf7e89d4099d8dc1cf1385c255957b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>psleft</name>
      <anchorfile>display__221_8c.html</anchorfile>
      <anchor>aed3cf83266ddb02ee5fdb746f31350cb</anchor>
      <arglist>(xcoord, ycoord, ps_string)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>display__221_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>display_221</name>
      <anchorfile>display__221_8c.html</anchorfile>
      <anchor>acea20c660c6dd3883146ab9a276c4c4f</anchor>
      <arglist>(struct type_221 *t221, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>display_fplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>display__fplot_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>display__fplot_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS2PDF</name>
      <anchorfile>display__fplot_8c.html</anchorfile>
      <anchor>aa5ab49c5a177d86ad5d58671980064a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>display__fplot_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>display_221</name>
      <anchorfile>display__fplot_8c.html</anchorfile>
      <anchor>ac7c0687c33da159a7698956df91db45d</anchor>
      <arglist>(struct type_221 *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>display_fplot</name>
      <anchorfile>display__fplot_8c.html</anchorfile>
      <anchor>a9ab4ffae0439bd04f431c34ac6674a2c</anchor>
      <arglist>(struct mk4_fringe *fringe)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>display_psdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>display__psdata_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>display_psdata</name>
      <anchorfile>display__psdata_8c.html</anchorfile>
      <anchor>aa330dcb4c31140317b67e5f468f6954e</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_antenna.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__antenna_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__antenna_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_antenna</name>
      <anchorfile>do__antenna_8c.html</anchorfile>
      <anchor>aa5c262ad061cb89056a6ed7132d9422a</anchor>
      <arglist>(struct def_list *dl, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_bbc.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__bbc_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__bbc_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_bbc</name>
      <anchorfile>do__bbc_8c.html</anchorfile>
      <anchor>a631fbd93ab18b9bc5ab046b9c25f1004</anchor>
      <arglist>(struct def_list *dl, int nchan, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_clock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__clock_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__clock_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_clock</name>
      <anchorfile>do__clock_8c.html</anchorfile>
      <anchor>a89f8fae449d36a348b79da2b391ba23d</anchor>
      <arglist>(struct def_list *dl, struct date *refdate, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_das.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__das_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__das_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_das</name>
      <anchorfile>do__das_8c.html</anchorfile>
      <anchor>ad91cc96e9814261927b52f3bd5f99f17</anchor>
      <arglist>(struct def_list *dl, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_eop.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__eop_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__eop_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_eop</name>
      <anchorfile>do__eop_8c.html</anchorfile>
      <anchor>aac5b3a8a2743d6fedb4dca868c78199b</anchor>
      <arglist>(struct def *eopdef, struct scan_struct *scan)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_exper.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__exper_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>do_exper</name>
      <anchorfile>do__exper_8c.html</anchorfile>
      <anchor>a663de884e5f53347642e0006a1aa601e</anchor>
      <arglist>(struct def *experdef, struct scan_struct *scan)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_freq.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__freq_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__freq_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_freq</name>
      <anchorfile>do__freq_8c.html</anchorfile>
      <anchor>a2abb662cf964d49f350e65554a387d53</anchor>
      <arglist>(struct def_list *dl, struct station_struct *stn, int *nchan)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_head_pos.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__head__pos_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__head__pos_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_head_pos</name>
      <anchorfile>do__head__pos_8c.html</anchorfile>
      <anchor>aa7cfcc1b5bc5c7281186c582cb9d2e79</anchor>
      <arglist>(struct def_list *dl, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_if.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__if_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__if_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_if</name>
      <anchorfile>do__if_8c.html</anchorfile>
      <anchor>a11339bb8cb031392b8dfaa409d9ebbfd</anchor>
      <arglist>(struct def_list *dl, int nchan, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_pass_order.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__pass__order_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__pass__order_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_pass_order</name>
      <anchorfile>do__pass__order_8c.html</anchorfile>
      <anchor>ac90bcb33566d3333497bec82f1c528af</anchor>
      <arglist>(struct def_list *dl, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_phase_cal_detect.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__phase__cal__detect_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__phase__cal__detect_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_phase_cal_detect</name>
      <anchorfile>do__phase__cal__detect_8c.html</anchorfile>
      <anchor>a419b95cf30d588a2b6dc9a10ed80e52b</anchor>
      <arglist>(struct def_list *dl, int nchan, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_record_merge.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourmer/src/</path>
    <filename>do__record__merge_8c.html</filename>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="fourmer_8h" name="fourmer.h" local="yes" imported="no">fourmer.h</includes>
    <member kind="function">
      <type>int</type>
      <name>do_record_merge</name>
      <anchorfile>do__record__merge_8c.html</anchorfile>
      <anchor>a2b0bcc0d98905741a0ccd1b83edbc5c9</anchor>
      <arglist>(char *fileAName, char *fileBName, char *rootfile, char *rcode)</arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_corel cdataA cdataB</type>
      <name>cdataC</name>
      <anchorfile>do__record__merge_8c.html</anchorfile>
      <anchor>a7f3d931509de2164267b8043df0a2af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_sdata sdataA sdataB *</type>
      <name>sdataC</name>
      <anchorfile>do__record__merge_8c.html</anchorfile>
      <anchor>a4be9615732c2e619ee0cc0ea84ec0993</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_roll.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__roll_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__roll_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_roll</name>
      <anchorfile>do__roll_8c.html</anchorfile>
      <anchor>ab4616cedb5c2f68bb6b99017ac95cf7e</anchor>
      <arglist>(struct def_list *dl, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_site.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__site_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__site_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_site</name>
      <anchorfile>do__site_8c.html</anchorfile>
      <anchor>aafd95ed95a8a7e7048d2092a9f62e369</anchor>
      <arglist>(struct def_list *dl, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_source.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__source_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__source_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_source</name>
      <anchorfile>do__source_8c.html</anchorfile>
      <anchor>a0f59bb789b3fceb3ff59b720d1c60a66</anchor>
      <arglist>(struct def *sourcedef, struct source_struct *src)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>do_track.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>do__track_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>do__track_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAG</name>
      <anchorfile>do__track_8c.html</anchorfile>
      <anchor>af54a5a977c0c499323d656315f008ee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIGN</name>
      <anchorfile>do__track_8c.html</anchorfile>
      <anchor>a9576d2d6eb782d532607bac077e87892</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_track</name>
      <anchorfile>do__track_8c.html</anchorfile>
      <anchor>acc49ba7347658db48fa405071fa6c3d3</anchor>
      <arglist>(struct def_list *dl, int nchan, struct station_struct *stn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dup_check.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>dup__check_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>dup__check_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>dup__check_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dup_check</name>
      <anchorfile>dup__check_8c.html</anchorfile>
      <anchor>ab4ee68276604f69d8fe480ce489e4dfb</anchor>
      <arglist>(fringearray *fdata, int i, int j)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dup_flag.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>dup__flag_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>dup__flag_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>qflist</name>
      <anchorfile>dup__flag_8c.html</anchorfile>
      <anchor>af5fc15dfccd02cce5302ba7f8b3aa58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>dup__flag_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dup_flag</name>
      <anchorfile>dup__flag_8c.html</anchorfile>
      <anchor>a340ba5a70d8b14e8f615905f40d63b57</anchor>
      <arglist>(esum *data, int option)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>edit.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>edit_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>edit_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>edit_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edit</name>
      <anchorfile>edit_8c.html</anchorfile>
      <anchor>aa220cbd753c6ba875a061031af3cb7c1</anchor>
      <arglist>(esum *data, char *arg1, char *arg2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>edit_close.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>edit__close_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>edit__close_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>edit__close_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edit_close</name>
      <anchorfile>edit__close_8c.html</anchorfile>
      <anchor>aa3ba3279a949fc4c22ca94f9f35acd15</anchor>
      <arglist>(esum *data, int mode, int *fedit, int *tedit)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>edit_families.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>edit__families_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>edit_families</name>
      <anchorfile>edit__families_8c.html</anchorfile>
      <anchor>a368f2b3534e61e22e94a37fe29830701</anchor>
      <arglist>(esum *data, int mode, int *nedit1, int *nedit2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>environment.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>environment_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PFORMAT_TEXT_DIR</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>ae799d066b0a5baa052cb671223a437c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>environment</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>a4c1a529fb8f5b33debbadef37777358a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>afiledir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>a49ae915f5db16f1fb4446764cfac5a32</anchor>
      <arglist>[200]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>bindir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>aec345cc1dc7588a55e33954a6d693165</anchor>
      <arglist>[200]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>datadir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>a4608f4a29ba684ce276a03f3aeaef134</anchor>
      <arglist>[200]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scheddir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>a80ff39d88e5473044144ea507b797d48</anchor>
      <arglist>[200]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>sysvexdir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>a711bb68778f0dbc31511a9ed97babbea</anchor>
      <arglist>[200]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>taskdir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>aa43788a0b95d212bfa6b6d1d2dcde18e</anchor>
      <arglist>[200]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>textdir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>aca4261326f4a809a382fcb8655942170</anchor>
      <arglist>[1000]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>tmpdir</name>
      <anchorfile>environment_8c.html</anchorfile>
      <anchor>a185c644c8770623ac8c3b496218fabee</anchor>
      <arglist>[200]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>eph_time.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>eph__time_8c.html</filename>
    <includes id="htime_8h" name="htime.h" local="yes" imported="no">htime.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EB_TDB_TDT</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>aa3a613eaac0cbac459e069c95cee4fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KK_TDB_TDT</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>a29f277b8158cbf91f9b84d69b844bb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M0_TDB_TDT</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>abf9b030977fd54a7a51dc3ae053f6440</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M1_TDB_TDT</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>a45d8aae4b69cbb6b6bc638d54363bfef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ORIGINAL_TIMEIS_CODE</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>af165e06d60e494805acb8e530cb18f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>e_tdb_tdt</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>afed711b7337acc3f21500f7371a12be3</anchor>
      <arglist>(HTLdbl t)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_convert_et_to_gps</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>ad5f2b9b96e9e504ccfd275d1ffa473a7</anchor>
      <arglist>(char *arg, int eph_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_ephem_type</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>ada85bc29b223faa4dcefd0f949f23f84</anchor>
      <arglist>(char *arg)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_TAI</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>a75c8591f21524453b7c73016e26f981f</anchor>
      <arglist>(HTLdbl gps)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_TDT</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>a44c3fd1d694d6a7f1c62c49dbd185d1f</anchor>
      <arglist>(HTLdbl gps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_spice_sprintf</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>a8337ef72853ad3255b7138c7f50306f0</anchor>
      <arglist>(char *b, char *tla, HTLdbl t)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TAI_to_GPS</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>a1fb67765cf1ba80aac57d6a1e2b18dab</anchor>
      <arglist>(HTLdbl tai)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TDB_to_TDT</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>a675bbf79da63999e3e0911372ca629ae</anchor>
      <arglist>(HTLdbl tdb)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TDT_to_GPS</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>acb0a4683750acbe2cc084561189a6dd9</anchor>
      <arglist>(HTLdbl tdt)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TDT_to_TDB</name>
      <anchorfile>eph__time_8c.html</anchorfile>
      <anchor>ab2405aef0f678b53e8b985f9fc8e2473</anchor>
      <arglist>(HTLdbl tdt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>erase_point.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>erase__point_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>erase_point</name>
      <anchorfile>erase__point_8c.html</anchorfile>
      <anchor>a9bc7426d6868b80c2ecc6899fa715c0b</anchor>
      <arglist>(float x, float y, float xh, float xl, float yh, float yl, int symbol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>esdesp_check.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>esdesp__check_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>esdesp_check</name>
      <anchorfile>esdesp__check_8c.html</anchorfile>
      <anchor>abdb1539049a5685994f133852e6a5c58</anchor>
      <arglist>(int esdesp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>est_pc_manual.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>est__pc__manual_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>est_pc_manual</name>
      <anchorfile>est__pc__manual_8c.html</anchorfile>
      <anchor>a020f165cc7cddf3f192d653100eda2b5</anchor>
      <arglist>(int mode, char *rootfile, struct type_pass *pass)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>control_filename</name>
      <anchorfile>est__pc__manual_8c.html</anchorfile>
      <anchor>aa4047829f56e080306d3873df9de4c7b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_fringe</type>
      <name>fringe</name>
      <anchorfile>est__pc__manual_8c.html</anchorfile>
      <anchor>ab19e738fad8df4a4c38b5e0806566ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_param</type>
      <name>param</name>
      <anchorfile>est__pc__manual_8c.html</anchorfile>
      <anchor>aa665147429eaf1e446ee01b47099af4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>progname</name>
      <anchorfile>est__pc__manual_8c.html</anchorfile>
      <anchor>a9d22394e80281a076c2d925cdfb132c6</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_status</type>
      <name>status</name>
      <anchorfile>est__pc__manual_8c.html</anchorfile>
      <anchor>a4accbc719f15b3ee9e12175b99ffe53b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>evex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>evex_8h.html</filename>
    <class kind="struct">evex_struct</class>
    <class kind="struct">evex_struct.su_config</class>
    <member kind="define">
      <type>#define</type>
      <name>MIR_ALLOCATE</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a7d42073e2d16051394c86476fa9d6472</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIR_COMPARE</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a33df6e6ae0f2878ff4d0f201a5526c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIR_NOALLOCATE</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a05cd3f0c3c2f1ea9f24304cc35dd312e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIR_NOCOMPARE</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a04eeebb462e3945fd4bbc1918d08428c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIR_NOSAVE</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>ac28283664f71a9404b840935e3bf0961</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIR_SAVEALL</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a845b96aad01565b623599b3670009bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIR_SAVEDIFFERENT</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a923d28fe028ca8a12af953fe58242522</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TM_CONTINUOUS</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>adebb4d4e72c4e022bba3579e929c06f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TM_RANDOM</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a592b9eb41bc2f592968a709bc4b988e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TM_SEQUENTIAL</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a0bf06370dc73a1813a0a300c3cf3a902</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TM_SYNCHRONOUS</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>aa795ecbe62e748e05e56cf9a54ca1aee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>evex_info.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>evex__info_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>evex__info_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>struct evex_struct *</type>
      <name>evex_info</name>
      <anchorfile>evex__info_8c.html</anchorfile>
      <anchor>a8838f2a13c5aca7e22192c4fd8151bf3</anchor>
      <arglist>(char *key)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>example2.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/plugins/</path>
    <filename>example2_8py.html</filename>
    <namespace>example2</namespace>
    <member kind="function">
      <type>def</type>
      <name>fix_noema_jumps</name>
      <anchorfile>namespaceexample2.html</anchorfile>
      <anchor>aa8aabf4e4cc861b4c8fce69b5bd73dff</anchor>
      <arglist>(fringe_data_interface)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>example3.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/plugins/</path>
    <filename>example3_8py.html</filename>
    <namespace>example3</namespace>
    <member kind="function">
      <type>def</type>
      <name>generate_pcphases</name>
      <anchorfile>namespaceexample3.html</anchorfile>
      <anchor>a2ad9372584a44b1b77099623d1476365</anchor>
      <arglist>(fringe_data_interface)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>execute.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>execute_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>execute_8c.html</anchorfile>
      <anchor>a70af895f5aa31e01f99f2eb9264329db</anchor>
      <arglist>(esum *data, struct com *command)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>force_closure</name>
      <anchorfile>execute_8c.html</anchorfile>
      <anchor>aa5bfe905aaf867da61ddf1cff0647b4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>extract_filenames.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>extract__filenames_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAXDEPTH</name>
      <anchorfile>extract__filenames_8c.html</anchorfile>
      <anchor>a0a852ddde438845110943cb3e2a0beea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>extract_filenames</name>
      <anchorfile>extract__filenames_8c.html</anchorfile>
      <anchor>ac6129f5a0619bd680fee6d0a3dba6356</anchor>
      <arglist>(char *directory, int type, fstruct **files, int *nalloc, int *filenum, int *depth)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>extract_parms.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>extract__parms_8c.html</filename>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>extract_parms</name>
      <anchorfile>extract__parms_8c.html</anchorfile>
      <anchor>abcea1ceedb5121245de456b408b53357</anchor>
      <arglist>(esum *data, struct usearray *user_param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffcontrol.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/include/</path>
    <filename>ffcontrol_8h.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <member kind="function">
      <type>int</type>
      <name>copy_cblock_parts</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a1509af0fb856111ee313879f84a5fc77</anchor>
      <arglist>(struct c_block *f, struct c_block *t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_fsm</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a9c36a9fc6bb0ec18d292d2607710382e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>criteria_match</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a68db5088343ba432982d15fddc5b4a21</anchor>
      <arglist>(struct c_block *cb_ptr, char base[2], char sour[31], char group, int time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>default_cblock</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>adb2d3007c1a3a5a5f94c8640c875fcd8</anchor>
      <arglist>(struct c_block *cb_ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fcode</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>ad96669c35f3eeca0d0153394f193357f</anchor>
      <arglist>(char c, char *codes)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_bfstring</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a76e607b480ca2fe15aea237c170478b6</anchor>
      <arglist>(char *barg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_tokens</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>af773e7385850540b832aff590170ceb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_char</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>ae76ed1e347bf8e3a599366747f911a3c</anchor>
      <arglist>(char *next_token)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_float</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a8f4eb4ff70ff5e27fc671b5f16cd288d</anchor>
      <arglist>(char *next_token, double *f_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_integer</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>abca49c9d3308c7561e359a6791a1bfd7</anchor>
      <arglist>(char *next_token, int *i_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_keyword</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>ace2a0aa3ce2eba14f5465e23af306cd0</anchor>
      <arglist>(char *next_token)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_timeval</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a75aa02c466ed2b254fe35c4a8b52804c</anchor>
      <arglist>(char *next_token, int *i_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lex</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>aded062758c98d3a296703cce34d87d41</anchor>
      <arglist>(char *input_string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nullify_cblock</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a6dc5ac4998488dc0ce4b6881573035d6</anchor>
      <arglist>(struct c_block *cb_ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_control_file</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a804eebb12c988144bbacf70dd38d0caf</anchor>
      <arglist>(char *control_file_name, char **control_file_buff, char **set_string_buff)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parser</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a7190520c0d971601304fd6c9dff56bc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_control_file</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a1ed7b0d1282a3f66d11968aaeceb92aa</anchor>
      <arglist>(char *control_file_name, char **input_string, int *flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skip_data</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a3777b750fde85a11033720bd55366bf2</anchor>
      <arglist>(int scantime, char *baseline, char *source, char group)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skip_index</name>
      <anchorfile>ffcontrol_8h.html</anchorfile>
      <anchor>a053407e30227121ef5aa4d1f15f52746</anchor>
      <arglist>(int ind, struct c_block *cblock)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffcontrol.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/ffcontrol_module/ffcontrol/</path>
    <filename>ffcontrol_8py.html</filename>
    <class kind="class">ffcontrol::ffcontrol::c_block</class>
    <class kind="class">ffcontrol::ffcontrol::dstats</class>
    <class kind="class">ffcontrol::ffcontrol::FFControlStructureBase</class>
    <class kind="class">ffcontrol::ffcontrol::gat_struct</class>
    <class kind="class">ffcontrol::ffcontrol::istats</class>
    <namespace>ffcontrol::ffcontrol</namespace>
    <member kind="function">
      <type>def</type>
      <name>append_control_file</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>aa324864423b0ab76814a8fd1a3f8fb0b</anchor>
      <arglist>(control_filename, output_filename, cf_lines)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>append_control_file_with_find_and_replace</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a99f21242802b2a3b466fd44ed402457d</anchor>
      <arglist>(control_filename, output_filename, cf_lines, original_string_list, replacement_string_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_control_block</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a70931e8c8dc064a920e6ed9ae8d15f9f</anchor>
      <arglist>(filename, baseline, source, fgroup, time)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_control_file_hash</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a3c43d9861557e022c2fff862e973ec68</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_fcode_index</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>abf84620bcb2b0ebf4e9ba29d3d18bfae</anchor>
      <arglist>(freq_char)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_ffcontrol_library</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a6852ee618b36895c2c8c5e6770d27bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepend_control_file_with_find_and_replace</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a91e57c76f9171c15e1ace363a535c452</anchor>
      <arglist>(control_filename, output_filename, cf_lines, original_string_list, replacement_string_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>remove_lines_and_append_control_file</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a8a32cee72b98fca1af0532d1adffab07</anchor>
      <arglist>(control_filename, output_filename, cf_lines, remove_string_list)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>AP_BY_AP</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>adaf3cf41023f57b1d437ed8bc3b52b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>COMCHAR</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>aea1f729abe7ef147f5178a9c1921d873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DISCARD</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a26630fa769538f04d19b2780515c4f08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DSB</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1c9b37523f5fe00de16133e9e1e613bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EACH_MINUTE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>af4332ff2580e6631e5cded11db82f3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ITERATE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a5973070828a8bb9ac01a293691d833b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>KEEP</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>abc2178a7734028c9bca71cf2bd0ebbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>LSB</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a126785eec348f877447c165d6d589216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MANUAL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>ab56c47cbf191fd569936784ea6f19b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAX_SAMP</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>af16bb9d26fe00a52c25704f285148178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAXFREQ</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a20b2b67e73f90629dd80610a8e92978c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAXNOTCH</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a9ea13eeb76b0c222c9cf738676420cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MODEL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>ab3681847c042fcb978083a10619bbcc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MULTITONE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>acf1ecf718c90fc7055529e5744bab76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NORMAL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1fbf96a2602e046fd85e3ae90e6171e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NULLCHAR</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1cb258f77b8f6116dac09c37894a3b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>NULLFLOAT</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a44de222e0827892d1cfebe8079f3c6d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NULLINT</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>adf4a4a1e4f6aef3eda07043435e2ab32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>PHYLE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a004c662109fcdda8c8a0b49568d943a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>POLYNOMIAL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a0d2cab75b3f93db11f4b66618716fa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SBD</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a76991e845a887b4a10a83ce31e1457f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SCAN_START</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a55a2f9f9074570f0b4fa184f252f9ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SIMUL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1b49f8524d677fb1e2eb0211ed1514ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SINEWAVE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a877b1a5e19859b629c71b059fc838ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>USB</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>ae663bc0ca0fe1541a0d3b02f2e988b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>WILDCARD</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a4cc7e910322267cb8dfce2b7080191f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffcontrol_module_extern.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/ffcontrol_module/src/</path>
    <filename>ffcontrol__module__extern_8c.html</filename>
    <member kind="variable">
      <type>struct c_block *</type>
      <name>cb_head</name>
      <anchorfile>ffcontrol__module__extern_8c.html</anchorfile>
      <anchor>a330b69253c7f98c907b4b3b767f8e0a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>char_values</name>
      <anchorfile>ffcontrol__module__extern_8c.html</anchorfile>
      <anchor>a60d5aa5945374d3928ea4852513bbc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>control_file_buff</name>
      <anchorfile>ffcontrol__module__extern_8c.html</anchorfile>
      <anchor>ae7eb53515aa2d5d946ff456d42605f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>float_values</name>
      <anchorfile>ffcontrol__module__extern_8c.html</anchorfile>
      <anchor>ad6d23835b07f1486d02781beae1fba5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct fsm_table_entry *</type>
      <name>fsm_base</name>
      <anchorfile>ffcontrol__module__extern_8c.html</anchorfile>
      <anchor>a2f20d1bdda76b8e24273c759fd9e1517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>set_string_buff</name>
      <anchorfile>ffcontrol__module__extern_8c.html</anchorfile>
      <anchor>ac6154145c8f23d98cdb13f7be11b3b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct token_struct *</type>
      <name>tokens</name>
      <anchorfile>ffcontrol__module__extern_8c.html</anchorfile>
      <anchor>a5fa05140bf6690c8fea8250127dd3336</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffcontrol_module_extern.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/ffcontrol_module/include/</path>
    <filename>ffcontrol__module__extern_8h.html</filename>
    <member kind="variable">
      <type>struct c_block *</type>
      <name>cb_head</name>
      <anchorfile>ffcontrol__module__extern_8h.html</anchorfile>
      <anchor>a330b69253c7f98c907b4b3b767f8e0a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>char_values</name>
      <anchorfile>ffcontrol__module__extern_8h.html</anchorfile>
      <anchor>a60d5aa5945374d3928ea4852513bbc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>control_file_buff</name>
      <anchorfile>ffcontrol__module__extern_8h.html</anchorfile>
      <anchor>ae7eb53515aa2d5d946ff456d42605f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>float_values</name>
      <anchorfile>ffcontrol__module__extern_8h.html</anchorfile>
      <anchor>ad6d23835b07f1486d02781beae1fba5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct fsm_table_entry *</type>
      <name>fsm_base</name>
      <anchorfile>ffcontrol__module__extern_8h.html</anchorfile>
      <anchor>a2f20d1bdda76b8e24273c759fd9e1517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>set_string_buff</name>
      <anchorfile>ffcontrol__module__extern_8h.html</anchorfile>
      <anchor>ac6154145c8f23d98cdb13f7be11b3b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct token_struct *</type>
      <name>tokens</name>
      <anchorfile>ffcontrol__module__extern_8h.html</anchorfile>
      <anchor>a5fa05140bf6690c8fea8250127dd3336</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffcore.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>ffcore_8h.html</filename>
    <member kind="function">
      <type>int</type>
      <name>get_corel_data</name>
      <anchorfile>ffcore_8h.html</anchorfile>
      <anchor>a9506c78558732ec7470e682054020337</anchor>
      <arglist>(fstruct *fs, struct scan_struct *ovex, char *filename, struct mk4_corel *cdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_passes</name>
      <anchorfile>ffcore_8h.html</anchorfile>
      <anchor>a25006d8390ed9ea55abb49e53422f06c</anchor>
      <arglist>(struct scan_struct *ovex, struct freq_corel *corel, struct type_param *param, struct type_pass **pass, int *npass)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_sdata</name>
      <anchorfile>ffcore_8h.html</anchorfile>
      <anchor>ae5a7b5833c5851f0eb88b728aaee206e</anchor>
      <arglist>(struct fileset *fset, struct mk4_sdata *sdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_defaults</name>
      <anchorfile>ffcore_8h.html</anchorfile>
      <anchor>aaf8e4eef76ea83a51b16168f43702f41</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffilter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ffilter_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>ffilter_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>ffilter_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ffilter</name>
      <anchorfile>ffilter_8c.html</anchorfile>
      <anchor>a3c883fb968b14d63e303c7c61a1f080f</anchor>
      <arglist>(fringearray *fdatum, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffio.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/include/</path>
    <filename>ffio_8h.html</filename>
    <member kind="function">
      <type>int</type>
      <name>fill_200</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a6f3b254a50dbd0b98f1c457a245ba915</anchor>
      <arglist>(struct scan_struct *root, struct type_param *param, struct type_200 *t200)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_201</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a79b850df237336f02b3ae5a86c771732</anchor>
      <arglist>(struct scan_struct *root, struct type_param *param, struct type_201 *t201)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_202</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a7924c3f2626a8aa33f3ebbaf3e948db9</anchor>
      <arglist>(struct vex *root, struct type_param *param, struct type_202 *t202)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_203</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a3063cbc69f3cb56f3698140444bada82</anchor>
      <arglist>(struct scan_struct *root, struct type_param *param, struct type_203 *t203)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_204</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a6a11d244dc9af401aed461e29389a6d9</anchor>
      <arglist>(struct type_204 *t204)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_205</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a7a4a7f217da7f1b92b3e9b3b6f93a521</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, struct type_param *param, struct type_203 *t203, struct type_205 *t205)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_206</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a2e77bb8a8cd7ea49cb6b580541ceb0f2</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, struct type_param *param, struct type_status *status, struct type_206 *t206)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_207</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a37f87f377957354eb2c5fe50f493dd35</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status, struct type_param *param, struct type_207 *t207)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_208</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>acb5616839e6ea9dfc8c8e090878eb773</anchor>
      <arglist>(struct type_pass *pass, struct type_param *param, struct type_status *status, struct type_202 *t202, struct type_208 *t208)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_210</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a26eecbc147d03cdde955f0807a69e793</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status, struct type_210 *t210)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_212</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a358d1ab3ea48a655b660555cdefb35e9</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status, struct type_param *param, int fr, struct type_212 *t212)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_222</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a74faa26911abeafaca7c093e1128659b</anchor>
      <arglist>(struct type_param *param, struct type_222 **t222)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_230</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>ab6cc849c6a0795a3f8e12559ed1d5e34</anchor>
      <arglist>(struct type_pass *pass, struct type_param *param, int fr, int ap, struct type_230 *t230)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_fringe_info</name>
      <anchorfile>ffio_8h.html</anchorfile>
      <anchor>a9147053a235d939cb55d95710091017f</anchor>
      <arglist>(struct vex *root, struct type_pass *pass, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffmath.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/include/</path>
    <filename>ffmath_8h.html</filename>
    <member kind="function">
      <type>int</type>
      <name>ap_mean</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>a00f15d3b33e949a14b3fcaebcb4f2bbe</anchor>
      <arglist>(double start, double stop, double *coords, double *val1, double *val2, int n, int *nstart, double *result1, double *result2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bcd_to_2int</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>aab71dd13b954d0e8e63ad27345d4695f</anchor>
      <arglist>(int input, int ndigits, int npoint, int result[2])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp555</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>ab05d92c15f8ae5f2fe56098d10c9a345</anchor>
      <arglist>(double drf[5][5][5], double xi[3], double *drfval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>linterp</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>a57b8842ba880dfbf6d1b7ca335a7e126</anchor>
      <arglist>(double coord1, double value1, double coord2, double value2, double coord, double *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max555</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>aea074dcf34218c472a79b94ecb2addac</anchor>
      <arglist>(double drf[5][5][5], double xlim[3][2], double xi[3], double *drfmax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minvert3</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>a6dbff9042dc004dcd0ad8b6ee871f8b9</anchor>
      <arglist>(double a[3][3], double ainv[3][3])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minvert5</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>a6c92770ceac7884c03b8b07115f5140d</anchor>
      <arglist>(double a[5][5], double ainv[5][5])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parabola</name>
      <anchorfile>ffmath_8h.html</anchorfile>
      <anchor>a3fe5bc74fc56400a0aa2ebeeaa12948b</anchor>
      <arglist>(double y[3], double lower, double upper, double *x_max, double *amp_max, double q[3])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffres2pcp_lib.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>ffres2pcp__lib_8py.html</filename>
    <class kind="class">vpal::ffres2pcp_lib::Configuration</class>
    <class kind="class">vpal::ffres2pcp_lib::DefaultChannelDefines</class>
    <class kind="class">vpal::ffres2pcp_lib::ExperimentReportData</class>
    <class kind="class">vpal::ffres2pcp_lib::SingleStationPCPhases</class>
    <namespace>vpal::ffres2pcp_lib</namespace>
    <member kind="function">
      <type>def</type>
      <name>channel_sort_key</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a7a733f4bb7af241fad3856b166640e52</anchor>
      <arglist>(ch_val_pair)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_final_pcphases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a45476d98f4404467c934a051e9a86e47</anchor>
      <arglist>(apriori_pc_phases, generated_pc_phases)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_vgos_network_reference_station_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a27fbb3356d00d2797310d0ca0e8647d3</anchor>
      <arglist>(single_baseline_pp_collection_obj, network_reference_station, discard_tolerance=15.0, complete_discard_count=5)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_control_file_lines</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a78de69d567ade8910fc0336696303d5d</anchor>
      <arglist>(apriori_pc_phases, generated_pc_phases, frequency_group=&apos;X&apos;, mode=&apos;VGOS&apos;)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_ffres2pcp_control_file</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a48ff7228c7cbb76971a30659d53ccdca</anchor>
      <arglist>(config_obj, output_control_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a9f03081a02f1a4b4887a1337925d2469</anchor>
      <arglist>(config_obj, report_data_obj=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_station_phase_corrections</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a3b780e99a0cea6d46d4fb9a92c49fa50</anchor>
      <arglist>(SingleBaselinePolarizationProductCollection_list, target_station, network_reference_station, dtec_tolerance=1.0, network_reference_station_pol=&apos;X&apos;, discard_tolerance=15, nchannel_discard_threshold=5)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_apriori_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a2914c2633e3fa6c99ca4a07b5fa9ac9c</anchor>
      <arglist>(ffres2pcp_config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>select_collection_subset</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>afe33d9aa7177c071d1dd27f7ee26a18f</anchor>
      <arglist>(SingleBaselinePolarizationProductCollection_list, target_station, network_reference_station, dtec_nom=0.1, max_number_to_select=0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>sum_mean_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a49b5f4e95debec18598caadaf3d52c33</anchor>
      <arglist>(pcp_obj_a, pcp_obj_b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ffres2pcp_logger</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>aac5853445494e13cfbb95a6b80da5a26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffsearch.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/</path>
    <filename>ffsearch_8h.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="refringe_8h" name="refringe.h" local="yes" imported="no">refringe.h</includes>
    <member kind="function">
      <type>int</type>
      <name>apply_filter</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>afba2a8f64c5ec9ea34a356452fddbbd5</anchor>
      <arglist>(struct type_pass *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>check_rflist</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>ab33a758bdd3ca5d1e738acd2e2303202</anchor>
      <arglist>(char *baseline, int files_index, bsgstruct *base_sgrp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delay_rate</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a0e417a0b60b40bf9f13ded8fc2b7ce8a</anchor>
      <arglist>(struct type_pass *, int, hops_complex rate_spectrum[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freq_spacing</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>ace0dcfa8f38c1ceaf1bce0a14c78fe84</anchor>
      <arglist>(struct type_pass *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fringe_search</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a6180f5ba8628376745a1d84f9e998fdb</anchor>
      <arglist>(struct vex *root, struct type_pass *pass)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ion_search</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a1a8233988ed2536a5650cb689a086cba</anchor>
      <arglist>(struct type_pass *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ion_search_smooth</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a757fa21bbd41ff184444429e2888575d</anchor>
      <arglist>(struct type_pass *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm_fx</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>ad9284e9b9b6ef2058a4744391953d740</anchor>
      <arglist>(struct type_pass *, struct type_param *, struct type_status *, int, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm_xf</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a5acd18af346b489d066ac067c7be25a0</anchor>
      <arglist>(struct type_pass *, struct type_param *, struct type_status *, int, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>organize_data</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>ac8dba04edbb3b6308e3d0f94c6f7204d</anchor>
      <arglist>(struct mk4_corel *cdata, struct scan_struct *ovex, struct ivex_struct *ivex, struct mk4_sdata *sdata, struct freq_corel *corel, struct type_param *param, struct type_status *status, struct c_block *cb_head)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>ad831fd0be2a54c9d7893f07b05d0642c</anchor>
      <arglist>(int argc, char **argv, fstruct **files, bsgstruct **base_sgrp, struct type_param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pcalibrate</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a0e74761bc051f9dcafa447e15a5b2d29</anchor>
      <arglist>(struct type_pass *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>precorrect</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a601e525e0ba1dd6fe0e2115fac202cc6</anchor>
      <arglist>(struct scan_struct *, struct type_pass *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate_pcal</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>ac9311348ec893c33a1d661a20f5a15f9</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sampler_delays</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>ae2757197ab253fbfd6cfd6dd575fcf3f</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>search_windows</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>a3e585a18f0597526054cd1dcaa8520a8</anchor>
      <arglist>(struct type_pass *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>ffsearch_8h.html</anchorfile>
      <anchor>aef3dabf3648dd41d559a35f74b313247</anchor>
      <arglist>(struct type_pass *, int, double, int, int, int)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>filelist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>filelist_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>filelist</name>
      <anchorfile>filelist_8c.html</anchorfile>
      <anchor>a8c8eb7f46bdd0c5524d7fc8db51b6d7b</anchor>
      <arglist>(char *afile_name, int mode, fstruct **files, int *versp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fileset.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>fileset_8c.html</filename>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_fileset</name>
      <anchorfile>fileset_8c.html</anchorfile>
      <anchor>abe8e940f2df812f05ba4c3c0c36bdce4</anchor>
      <arglist>(char *rootname, struct fileset *fset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fileset.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>fileset_8h.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <class kind="struct">fileset</class>
    <member kind="define">
      <type>#define</type>
      <name>MAXFSET</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>a892a175b2afe1e2f8f0d4cc29cc22e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_fileset</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>abe8e940f2df812f05ba4c3c0c36bdce4</anchor>
      <arglist>(char *rootname, struct fileset *fset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill4_parms.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>fill4__parms_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill4_parms</name>
      <anchorfile>fill4__parms_8c.html</anchorfile>
      <anchor>a31c55e184f48760f920a532b8f02c806</anchor>
      <arglist>(struct mk4_fringe *fringe4, fringesum *data, struct usearray *user_param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_200.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__200_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_200</name>
      <anchorfile>fill__200_8c.html</anchorfile>
      <anchor>a6f3b254a50dbd0b98f1c457a245ba915</anchor>
      <arglist>(struct scan_struct *root, struct type_param *param, struct type_200 *t200)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_201.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__201_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_201</name>
      <anchorfile>fill__201_8c.html</anchorfile>
      <anchor>a79b850df237336f02b3ae5a86c771732</anchor>
      <arglist>(struct scan_struct *root, struct type_param *param, struct type_201 *t201)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_202.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__202_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_202</name>
      <anchorfile>fill__202_8c.html</anchorfile>
      <anchor>a7924c3f2626a8aa33f3ebbaf3e948db9</anchor>
      <arglist>(struct vex *root, struct type_param *param, struct type_202 *t202)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_203.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__203_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_203</name>
      <anchorfile>fill__203_8c.html</anchorfile>
      <anchor>a3063cbc69f3cb56f3698140444bada82</anchor>
      <arglist>(struct scan_struct *root, struct type_param *param, struct type_203 *t203)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_204.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__204_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_204</name>
      <anchorfile>fill__204_8c.html</anchorfile>
      <anchor>a6a11d244dc9af401aed461e29389a6d9</anchor>
      <arglist>(struct type_204 *t204)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_205.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__205_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_205</name>
      <anchorfile>fill__205_8c.html</anchorfile>
      <anchor>a7a4a7f217da7f1b92b3e9b3b6f93a521</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, struct type_param *param, struct type_203 *t203, struct type_205 *t205)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_206.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__206_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="filter_8h" name="filter.h" local="yes" imported="no">filter.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_206</name>
      <anchorfile>fill__206_8c.html</anchorfile>
      <anchor>a2e77bb8a8cd7ea49cb6b580541ceb0f2</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, struct type_param *param, struct type_status *status, struct type_206 *t206)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_207.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__207_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEGRAD</name>
      <anchorfile>fill__207_8c.html</anchorfile>
      <anchor>ac377a5fa64fdef02d0048cf0e27aca2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_207</name>
      <anchorfile>fill__207_8c.html</anchorfile>
      <anchor>a37f87f377957354eb2c5fe50f493dd35</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status, struct type_param *param, struct type_207 *t207)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_208.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__208_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>POLCHAR_OFFSET</name>
      <anchorfile>fill__208_8c.html</anchorfile>
      <anchor>ae570aec987d5621c1e53525c5769fb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_208</name>
      <anchorfile>fill__208_8c.html</anchorfile>
      <anchor>acb5616839e6ea9dfc8c8e090878eb773</anchor>
      <arglist>(struct type_pass *pass, struct type_param *param, struct type_status *status, struct type_202 *t202, struct type_208 *t208)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_210.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__210_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>pi</name>
      <anchorfile>fill__210_8c.html</anchorfile>
      <anchor>a1daf785e3f68d293c7caa1c756d5cb74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_210</name>
      <anchorfile>fill__210_8c.html</anchorfile>
      <anchor>a26eecbc147d03cdde955f0807a69e793</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status, struct type_210 *t210)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_212.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__212_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_212</name>
      <anchorfile>fill__212_8c.html</anchorfile>
      <anchor>a358d1ab3ea48a655b660555cdefb35e9</anchor>
      <arglist>(struct type_pass *pass, struct type_status *status, struct type_param *param, int fr, struct type_212 *t212)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_222.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__222_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="adler32__checksum_8h" name="adler32_checksum.h" local="yes" imported="no">adler32_checksum.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_222</name>
      <anchorfile>fill__222_8c.html</anchorfile>
      <anchor>a74faa26911abeafaca7c093e1128659b</anchor>
      <arglist>(struct type_param *param, struct type_222 **t222)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_230.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__230_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_230</name>
      <anchorfile>fill__230_8c.html</anchorfile>
      <anchor>ab6cc849c6a0795a3f8e12559ed1d5e34</anchor>
      <arglist>(struct type_pass *pass, struct type_param *param, int fr, int ap, struct type_230 *t230)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_aline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>fill__aline_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_aline</name>
      <anchorfile>fill__aline_8c.html</anchorfile>
      <anchor>a39cfc1918337c9e4dc5c72f2e795e7e5</anchor>
      <arglist>(struct mk4_fringe *fringe, struct vex *root, char *fname, fringesum *fsumm, int version)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_closure.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>fill__closure_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="close__flags_8h" name="close_flags.h" local="yes" imported="no">close_flags.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_closure</name>
      <anchorfile>fill__closure_8c.html</anchorfile>
      <anchor>a2073ff8d480d00d056457d2da9100cde</anchor>
      <arglist>(trianglearray *tptr, char triangle[4], int indices[3], fringearray *fdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_deflists.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>fill__deflists_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEF</name>
      <anchorfile>fill__deflists_8c.html</anchorfile>
      <anchor>a397419fc12b37ed479c8abb9d444d843</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDDEF</name>
      <anchorfile>fill__deflists_8c.html</anchorfile>
      <anchor>a1b908c9d447d2233372473ca0c552cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OTHER</name>
      <anchorfile>fill__deflists_8c.html</anchorfile>
      <anchor>ac00c5fe00853dab2ff3d86ae62c83809</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_deflists</name>
      <anchorfile>fill__deflists_8c.html</anchorfile>
      <anchor>a011207492eeb1fe585d440ad420d6c68</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_fblock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>fill__fblock_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_fblock</name>
      <anchorfile>fill__fblock_8c.html</anchorfile>
      <anchor>a16a2169401ebd7a97d3c2ecc84e1785d</anchor>
      <arglist>(DifxInput *D, struct CommandLineOptions *opts, struct fblock_tag *pfb)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_fringe_info.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffio/src/</path>
    <filename>fill__fringe__info_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="ffio_8h" name="ffio.h" local="yes" imported="no">ffio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_fringe_info</name>
      <anchorfile>fill__fringe__info_8c.html</anchorfile>
      <anchor>a9147053a235d939cb55d95710091017f</anchor>
      <arglist>(struct vex *root, struct type_pass *pass, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_grids.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>fill__grids_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>REMLIMIT</name>
      <anchorfile>fill__grids_8c.html</anchorfile>
      <anchor>aed3a3eb58de5a56db675a308bc390e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERY_BIG</name>
      <anchorfile>fill__grids_8c.html</anchorfile>
      <anchor>ad8512644399ac6ec00af8f727bb4fac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_grids_orig</name>
      <anchorfile>fill__grids_8c.html</anchorfile>
      <anchor>a09e0643b77b12ac11ad80219225902b1</anchor>
      <arglist>(struct srchsummary *srchdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_param.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>fill__param_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_param</name>
      <anchorfile>fill__param_8c.html</anchorfile>
      <anchor>a62e804f6a075045b991d2f4e5c4bcf99</anchor>
      <arglist>(struct scan_struct *ovex, struct ivex_struct *ivex, struct station_struct *stn1, struct station_struct *stn2, struct mk4_corel *cdata, struct type_param *param, struct c_block *cb_head)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_scanlist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>fill__scanlist_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ENDSCAN</name>
      <anchorfile>fill__scanlist_8c.html</anchorfile>
      <anchor>a3f6182c8dcbfa9ff8ea0e6a6f0afbf68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OTHER</name>
      <anchorfile>fill__scanlist_8c.html</anchorfile>
      <anchor>ac00c5fe00853dab2ff3d86ae62c83809</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCAN</name>
      <anchorfile>fill__scanlist_8c.html</anchorfile>
      <anchor>a7b114f85cab70531adc738c2e499df6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_scanlist</name>
      <anchorfile>fill__scanlist_8c.html</anchorfile>
      <anchor>ade2590caee91c12cb72dfc1918bb273e</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_station_parms.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>fill__station__parms_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IFNOT</name>
      <anchorfile>fill__station__parms_8c.html</anchorfile>
      <anchor>a43e8174cdb54e96c9b248ff3e72aa2e9</anchor>
      <arglist>(blockname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_station_parms</name>
      <anchorfile>fill__station__parms_8c.html</anchorfile>
      <anchor>a25aa80905269bdb6f7b8659d1a8759b9</anchor>
      <arglist>(struct def_list *deflist, int ndefs, struct date *refdate, struct station_struct *st)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fill_tdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>fill__tdata_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fill_tdata</name>
      <anchorfile>fill__tdata_8c.html</anchorfile>
      <anchor>a1022ff6608b36f3b30b93d526b3e9f75</anchor>
      <arglist>(int nfe, esum *data, int *dptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>filter.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>filter_8h.html</filename>
    <class kind="struct">type_filter</class>
  </compound>
  <compound kind="file">
    <name>find_statements.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>find__statements_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>find_statements</name>
      <anchorfile>find__statements_8c.html</anchorfile>
      <anchor>a0cd708e185d71814641675442e1d52c5</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fit_peaks.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>fit__peaks_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fit_peaks</name>
      <anchorfile>fit__peaks_8c.html</anchorfile>
      <anchor>a4a70d9f8b9920aa13598e736ca70f061</anchor>
      <arglist>(struct srchsummary *srchdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fit_vbp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>fit__vbp_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>fit_vbp</name>
      <anchorfile>fit__vbp_8c.html</anchorfile>
      <anchor>a6ee0087c4ab69f2442127ed493e1a784</anchor>
      <arglist>(int npts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>flags.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>flags_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>BADBASELN</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a445d43e66ba3d7fc6bca4a053808a496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADBSNR</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a0eb03c4aa395e2da4bf15a520224395f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADEXPT</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>afb19c913b033d2b6da731f23a2637caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADFRAC</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a344305a220740db9821a4597969317fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADFREQA</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>ada26222368ad37e9abff8fdda6f82f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADLENGTH</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>ae9dd09fa8314726bcd5a1fada1b2b8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADNFREQ</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a473ebb6be4f5e7be91aea6b0ba4aa5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADPARAM</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a9ad73643b862d17f759047e3fd0f5cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADPOL</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>ab8d959493caafb7022739ef7e8bc05e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADPROC</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a825be15d1f82907f4979742d70e24655</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADQF</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a717eb4501bfe6b69b74b611259cbd67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADQUAD</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a240d037ec319d6c7a120bb8539b229c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADSNR</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a87928ad0f854e09bc310524da3676156</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADSOURCE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a0dee3553a021bdbf411396d9504aa5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADSTATION</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a607f62a4969e3948f0beae074e2645d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADTIME</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a0e6e0ee043884c1ca7bab82709fc599e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADTRNGL</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>afda8157cdf7b66584ffe545389e9058f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADTYPE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a0955fe6159ef464d39d9a600bc3a3f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHILDLESS</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a136050738b493cb16af1634b5fbff54d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DUPLICATE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a69ecc2a23196292ef2c155154ae15819</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERROR</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a8fe83ac76edc595f6b98cd4a4127aed5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_BASELINE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a44ffb3f98219f22f3db7327c50a4a6b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_BSNR</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a62255f44545353ef3b96e23cdfe9d573</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_EXPERIMENT</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a228bfa42a5f77f7d5ca54d3c39c4c8e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_FRACTION</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>ad3b914b4dc1f7c147c51b626f3fb935e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_FREQUENCY</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>ad1f4b5dab141db6587acf13431d3e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_LENGTH</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>afdefddc27f341cd20efe1ea58e579747</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_NFREQ</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a87e20a96c7ea45cb5642a563da6afb78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_PARAMETER</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a478c3d6fbb3f4728936420dd74bb500a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_POLARIZATION</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a1ea9c1588390504e2c369de1d984dfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_PROCDATE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a0eb8541eed3dd2e5ede2de810e07a147</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_QCODE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a2dc438e50e80e23e2db2d08e2b0be22e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_QUAD</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a50bf825195e77c2e6590fb493c997cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_SNR</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a2a1040bc48d6a07279db27bfb04193e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_SOURCE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>aa94afd1143c60e08560b29a2f98018ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_STATION</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a7c31db42f26e72a6e871b1234628992d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_TIMETAG</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a36ac3b2583464df914e4ba80efd8389d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_TRIANGLE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a3613282d24422ff937455695387e2ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_TYPE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a97508f041e42f64005162b87a77ca365</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MODE_BASE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a593938b12615291ac6a596dbd95eacef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MODE_TRI</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a5b0bcaaf55753a9640b8b1224cec373e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_BASELINE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>af589f0d1cc74330c509ab2bddfa7f524</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_TRIANGLE</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a5d377bbb903706f87d44ccefa84d0752</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ORPHAN</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>ad4caaed3ae8075a052077724e8a1d41f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGGED</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a46f44492635db360059cee12eae104b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZAPPED</name>
      <anchorfile>flags_8h.html</anchorfile>
      <anchor>a9338b984a192674e4f9e9e54e1903032</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>for_python_construct_cblock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/ffcontrol_module/src/</path>
    <filename>for__python__construct__cblock_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol__module__extern_8h" name="ffcontrol_module_extern.h" local="yes" imported="no">ffcontrol_module_extern.h</includes>
    <member kind="function">
      <type>int</type>
      <name>for_python_construct_cblock</name>
      <anchorfile>for__python__construct__cblock_8c.html</anchorfile>
      <anchor>ad94f44067c5bfc450a6dbf067b7f60db</anchor>
      <arglist>(char *filename, struct c_block *cb_out, char baseline[static 2], char source[static 31], char fgroup, int time)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit3.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourfit/</path>
    <filename>fourfit3_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="meta__struct_8h" name="meta_struct.h" local="yes" imported="no">meta_struct.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="refringe_8h" name="refringe.h" local="yes" imported="no">refringe.h</includes>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <includes id="write__lock__mechanism_8h" name="write_lock_mechanism.h" local="yes" imported="no">write_lock_mechanism.h</includes>
    <includes id="fourfit__signal__handler_8h" name="fourfit_signal_handler.h" local="yes" imported="no">fourfit_signal_handler.h</includes>
    <includes id="ffsearch_8h" name="ffsearch.h" local="yes" imported="no">ffsearch.h</includes>
    <includes id="ffcore_8h" name="ffcore.h" local="yes" imported="no">ffcore.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPASS</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>adea493661bde2e6c45637a4f0a95c2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ap_per_seg</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a30d973fc4251d0d79dcc17004ff1a2d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>base</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a19437a5875428e719515fb20de8a6927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>baseline</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>ac49ccefb4c1a75c25992328edc954f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct c_block *</type>
      <name>cb_head</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a330b69253c7f98c907b4b3b767f8e0a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_corel</type>
      <name>cdata</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>ac338fd2bd47bb64e711c167a64c196a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>do_accounting</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a1694ec06658d3602fb03de93a6842b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>do_estimation</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>ac73280bf10db4900c2891abe5c82aeeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>do_only_new</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a34fdcb39ad657adc1668ecdeb1a704d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_fringe</type>
      <name>fringe</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>ab19e738fad8df4a4c38b5e0806566ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lockfile_data_struct</type>
      <name>global_lockfile_data</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a34d4e709285c07a8d5846f152e0400d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lo_offset</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a2175ebdecdc733051c4fc8d9fa00e7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_meta</type>
      <name>meta</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>ae0c109f7f2e4ad615807454126123586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncorel_rec</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>ac023f32aaec585bbf3bc47c7a75b64c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_param</type>
      <name>param</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>aa665147429eaf1e446ee01b47099af4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pexec</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>acf7d5e07d9afb8f8bbcad87a6bc26222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_plot</type>
      <name>plot</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>ab7a7a69c9a1c4ea82e2b4fdf688d741d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>refringe</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a8736581442302d5dc085d9a3eb250ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reftime_offset</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>acba52b738e44de596b71e06ce687024a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_sdata</type>
      <name>sdata</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a67a98e2a5d464ae68b26343d8eebfec2</anchor>
      <arglist>[MAXSTATIONS]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_status</type>
      <name>status</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a4accbc719f15b3ee9e12175b99ffe53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>test_mode</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a142b19531927aef2e5e25c4efd89f9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a82699a6dd4ee034f1a73b9eed053e7bd</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>write_xpower</name>
      <anchorfile>fourfit3_8c.html</anchorfile>
      <anchor>a16ce572e4940d0839db4f456203c3eb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit4.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>fourfit4_8cc.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Snapshot_8hh" name="MHO_Snapshot.hh" local="yes" imported="no">MHO_Snapshot.hh</includes>
    <includes id="MHO__Timer_8hh" name="MHO_Timer.hh" local="yes" imported="no">MHO_Timer.hh</includes>
    <includes id="MHO__FringeFitter_8hh" name="MHO_FringeFitter.hh" local="yes" imported="no">MHO_FringeFitter.hh</includes>
    <includes id="MHO__FringeFitterFactory_8hh" name="MHO_FringeFitterFactory.hh" local="yes" imported="no">MHO_FringeFitterFactory.hh</includes>
    <includes id="MHO__BasicFringeDataConfiguration_8hh" name="MHO_BasicFringeDataConfiguration.hh" local="yes" imported="no">MHO_BasicFringeDataConfiguration.hh</includes>
    <includes id="MHO__FringeControlInitialization_8hh" name="MHO_FringeControlInitialization.hh" local="yes" imported="no">MHO_FringeControlInitialization.hh</includes>
    <includes id="MHO__MK4FringeExport_8hh" name="MHO_MK4FringeExport.hh" local="yes" imported="no">MHO_MK4FringeExport.hh</includes>
    <includes id="MHO__MPIInterfaceWrapper_8hh" name="MHO_MPIInterfaceWrapper.hh" local="yes" imported="no">MHO_MPIInterfaceWrapper.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_BUILD_TIMESTAMP</name>
      <anchorfile>fourfit4_8cc.html</anchorfile>
      <anchor>ad23f8be96cc7c93cb63a04754e8241c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>fourfit4_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit_plot.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_visualization/</path>
    <filename>fourfit__plot_8py.html</filename>
    <namespace>hops_visualization::fourfit_plot</namespace>
    <member kind="function">
      <type>def</type>
      <name>get_numpy_version_tuple</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ae4ca281d1341376ea43e8a9d39144620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>is_version_less_than</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a36a83fb8d78a3b0bc050f0538eb45ddb</anchor>
      <arglist>(version_tuple_check, version_tuple_reference)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_amplitude_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab07419aea966e64c11232534d8ffc1f2</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_channel_info_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a5a8dae6fc0fec83a2c0376f7037a034a</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_channel_segment_plots_alt</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a19a3c022c1a43f6a8fd4fd20506717db</anchor>
      <arglist>(fig, plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_channel_segment_validity_plots</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>aad89ec8b1fa22d882a0f94ce20be7449</anchor>
      <arglist>(fig, plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_coord_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a7628d22bfed0670845a9471ec1137994</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_data_stats_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a36ad0d8aa119b76cb361b5a3efbee41e</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_dr_mbd_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab6d399ca3105bba506a1df279a626816</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_fourfit_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>aa2dbe3679003bc909e6f04083abcf159</anchor>
      <arglist>(plot_dict, show_on_screen, filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_fourfit_plot_wrapper</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a5ce78c7351b5f086aebf2a95c77754de</anchor>
      <arglist>(fringe_data_interface)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_info_text_box</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a2d8d8ad36a089a526af749b66df7ee74</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_model_resid_info_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a6e11ce988de3f9c5426c549546315a01</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_pcal_plots</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a59287368806e550d5970e98a217b3d03</anchor>
      <arglist>(fig, plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_rms_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a3efacd5ba4a1b26fe5f88f62258ccdc2</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_sbd_dtec_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab8f25ab6ab083a430575cddbac313a1a</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_sciformat</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>af7498f17757d0bafda689b03cacaa7f6</anchor>
      <arglist>(float_value, nprec, nmd, np_use_min_digits=True)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_top_info_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ad0a32ca86a408f2d8c38e66e8b5375d2</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_window_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a1bcac6054b7668465c418e8ea9bcc104</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_xpower_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>af3c684584646855b9a888e24ba5b0d4f</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>press_event_handler</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab13f84574e5d9e6b1fb6f47e5061cf01</anchor>
      <arglist>(event)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit_signal_handler.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>fourfit__signal__handler_8c.html</filename>
    <includes id="fourfit__signal__handler_8h" name="fourfit_signal_handler.h" local="yes" imported="no">fourfit_signal_handler.h</includes>
    <includes id="write__lock__mechanism_8h" name="write_lock_mechanism.h" local="yes" imported="no">write_lock_mechanism.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>void</type>
      <name>fourfit_register_signal_handler</name>
      <anchorfile>fourfit__signal__handler_8c.html</anchorfile>
      <anchor>a36aba757af9042d52e1ce5ecad15e8d5</anchor>
      <arglist>(struct sigaction *handler_action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fourfit_signal_handler</name>
      <anchorfile>fourfit__signal__handler_8c.html</anchorfile>
      <anchor>a544af395fd3430d17a36cfe592fbb0d3</anchor>
      <arglist>(int signal_value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit_signal_handler.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>fourfit__signal__handler_8h.html</filename>
    <member kind="function">
      <type>void</type>
      <name>fourfit_register_signal_handler</name>
      <anchorfile>fourfit__signal__handler_8h.html</anchorfile>
      <anchor>a36aba757af9042d52e1ce5ecad15e8d5</anchor>
      <arglist>(struct sigaction *handler_action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fourfit_signal_handler</name>
      <anchorfile>fourfit__signal__handler_8h.html</anchorfile>
      <anchor>a544af395fd3430d17a36cfe592fbb0d3</anchor>
      <arglist>(int signal_value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourmer.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourmer/</path>
    <filename>fourmer_8c.html</filename>
    <includes id="fourmer_8h" name="fourmer.h" local="yes" imported="no">fourmer.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <member kind="function">
      <type>int</type>
      <name>do_record_merge</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>a0a4e76729885af516011636ba102024c</anchor>
      <arglist>(char *, char *, char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>field</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>a783f7a36014ceb59b473085926d009e0</anchor>
      <arglist>(char *, char *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>a6ddc8dfb244986f7b35b0c290c866488</anchor>
      <arglist>(int *, int *, int *, const int, const char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>a8a191dd824d0dcce94f1c7825cafb356</anchor>
      <arglist>(int, int, int, int, int)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id_break</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>af4ce6b8af9fe53d80efab5ada4cec785</anchor>
      <arglist>(time_t now, int year, int day, int hour, int min, int sec)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>buffer</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>ad61f5c480c6c4d03ed512318bb7126c4</anchor>
      <arglist>[MAX_BUFFER][MAX_CHARS]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lineA</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>a3530a3b9203a1c89f9d8a33671bbd357</anchor>
      <arglist>[MAX_LINES][MAX_CHARS]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lineB</name>
      <anchorfile>fourmer_8c.html</anchorfile>
      <anchor>a4784b4f94a56de203595552f24d0e48a</anchor>
      <arglist>[MAX_LINES][MAX_CHARS]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourmer.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourmer/include/</path>
    <filename>fourmer_8h.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IDX_INC</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a0646dbfb737e2fd3ecfb137cc82df653</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BUFFER</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a1d5dab30b404fab91608086105afc78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CHARS</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a8adbf2b1e0569dded992fee665e86e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_FPATH</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a30def4259200bbdcc432fc1d942366cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LINES</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a07e2b531c72985b064c431c05dfbc5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_CH_MAP</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a37d117a18f2caca344d77090e377640e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_sdata</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a283459038e4aa0c6729e72187f6a7d88</anchor>
      <arglist>(struct mk4_sdata *sdataC, struct mk4_sdata *sdataB)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>gen_new_chan_id</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a2ceee5895b9978cd0cf92347dc3d4157</anchor>
      <arglist>(char *old, int isA, int isroot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_cdata_cmp</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>ab517b11a59a0af15ca11b7998ce53c5e</anchor>
      <arglist>(char *AName, char *BName, struct mk4_corel *cdataA, struct mk4_corel *cdataB)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relabel_chan_def</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>ac1e2d9c1fc94530cf6e56b570a3abd60</anchor>
      <arglist>(char *line, int isA)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan_name_edit</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>a8f1485584a85d416c83b3c9be279799c</anchor>
      <arglist>(char lineA[][MAX_CHARS], int nA, char lineB[][MAX_CHARS], int nB)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>msglev</name>
      <anchorfile>fourmer_8h.html</anchorfile>
      <anchor>ac4693c7c31653d6304e6b816726f4482</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourphase_lib.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>fourphase__lib_8py.html</filename>
    <class kind="class">vpal::fourphase_lib::Configuration</class>
    <class kind="class">vpal::fourphase_lib::ExperimentReportData</class>
    <class kind="class">vpal::fourphase_lib::MixedModeFourphaseSingleScanProcessor</class>
    <class kind="class">vpal::fourphase_lib::SingleStationPhaseDelayOffsets</class>
    <class kind="class">vpal::fourphase_lib::VGOSFourphaseSingleScanProcessor</class>
    <namespace>vpal::fourphase_lib</namespace>
    <member kind="function">
      <type>def</type>
      <name>construct_control_file_lines</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a5e1755faa31a038afc0d1d738643ddfb</anchor>
      <arglist>(config_obj, station_delay_phase_results)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_fourphase_control_file</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a70debf6c37b528812b9226537aa5800d</anchor>
      <arglist>(config_obj, output_control_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_station_phase_delay_corrections</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a7c525675d1cc855fd2e884dda2459995</anchor>
      <arglist>(config_obj, report_data_obj=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>select_fourphase_scans_by_baseline</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a4f165a515ba6c6bb5ea23ff1fd717083</anchor>
      <arglist>(SingleScanBaselineCollection_list, exp_directory, stations, dtec_tolerance=1.0, min_snr=10, dtec_nom=0.1, max_number_to_select=0)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Bar</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>ab2a3fecfe20ce0b0c6d799610f27b7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fourphase_logger</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a10a802ff3bcf55c9eb9e152299be1ace</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aedit/src/fplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aedit_2src_2fplot_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fplot</name>
      <anchorfile>aedit_2src_2fplot_8c.html</anchorfile>
      <anchor>a1433bd4daa9832d57f03f19a4b9ff332</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fplot/fplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fplot/</path>
    <filename>fplot_2fplot_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="fplot_8h" name="fplot.h" local="yes" imported="no">fplot.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>POL_LL</name>
      <anchorfile>fplot_2fplot_8c.html</anchorfile>
      <anchor>a0ae1498d31a9eb8ad1f38aa70188136d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_LR</name>
      <anchorfile>fplot_2fplot_8c.html</anchorfile>
      <anchor>ae09f2d599dad8f523d1489c2f982abb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RL</name>
      <anchorfile>fplot_2fplot_8c.html</anchorfile>
      <anchor>ab9a7453c1deb1ece02aad3953c42d0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RR</name>
      <anchorfile>fplot_2fplot_8c.html</anchorfile>
      <anchor>a8933d10561b3a974a83569ee74ad4a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS2PDF</name>
      <anchorfile>fplot_2fplot_8c.html</anchorfile>
      <anchor>aa5ab49c5a177d86ad5d58671980064a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>fplot_2fplot_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fplot.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fplot/include/</path>
    <filename>fplot_8h.html</filename>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DISKFILE</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>a314f278e51bde415c4c5963757cbdcde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GSDEVICE</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>abdd6b2b5a16c24536a51ca8f935213a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HARDCOPY</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>adf0a588d45034237124b6c8dd23ad9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NONE</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>a655c84af1b0034986ff56e12e84f983d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTLPR</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>acb3ddd8ac0570b11238d6cdd38ac457f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSTOPDF</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>a59b0c7b29ceab89aa4a8c7c0193fb20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XWINDOW</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>a1eebd26f16d2443413a32a7e02928cc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>a7e47156156c54b1d3a9803e81305ff3f</anchor>
      <arglist>(int argc, char **argv, fstruct **files, int *display, char **file_name, int *poln)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skip_poln</name>
      <anchorfile>fplot_8h.html</anchorfile>
      <anchor>acf5d0c2883f6f1a3d1f857d87752eb7e</anchor>
      <arglist>(char *name, struct type_203 *t203, struct type_205 *t205, int poln)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fplot4.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>fplot4_8cc.html</filename>
    <includes id="MHO__BasicFringeDataConfiguration_8hh" name="MHO_BasicFringeDataConfiguration.hh" local="yes" imported="no">MHO_BasicFringeDataConfiguration.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <member kind="function">
      <type>bool</type>
      <name>extract_plot_data</name>
      <anchorfile>fplot4_8cc.html</anchorfile>
      <anchor>a6c94c2ed5b74e614cdb6d72307e9f222</anchor>
      <arglist>(mho_json &amp;plot_data, mho_json &amp;param_data, std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>fplot4_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match_baseline</name>
      <anchorfile>fplot4_8cc.html</anchorfile>
      <anchor>a278709c5f759bd68434e6ac33c6a4582</anchor>
      <arglist>(const std::string &amp;baseline, const std::string &amp;obj_baseline)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match_fgroup</name>
      <anchorfile>fplot4_8cc.html</anchorfile>
      <anchor>aa81656aa0508d0ceea9f67570ebd4730</anchor>
      <arglist>(const std::string &amp;fgroup, const std::string &amp;obj_fgroup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match_polprod</name>
      <anchorfile>fplot4_8cc.html</anchorfile>
      <anchor>ab4d96195aaba31c3713dd78d0c151f35</anchor>
      <arglist>(const std::string &amp;polprod, const std::string &amp;obj_polprod)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches_extension</name>
      <anchorfile>fplot4_8cc.html</anchorfile>
      <anchor>af8b32332f6d3f2cc1da72380c1682748</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;anExt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_fplot_command_line</name>
      <anchorfile>fplot4_8cc.html</anchorfile>
      <anchor>ad5d786fb769a2f6cee1dafd815019044</anchor>
      <arglist>(int argc, char **argv, MHO_ParameterStore *paramStore)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>freq_spacing.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>freq__spacing_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BOGUS_MB_INDEX</name>
      <anchorfile>freq__spacing_8c.html</anchorfile>
      <anchor>a2adb9b8e90fbaa78ed946c18a7bd658a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRID_PTS</name>
      <anchorfile>freq__spacing_8c.html</anchorfile>
      <anchor>a7036e1e75fbabd9310c6c47c09f945ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBDMULT</name>
      <anchorfile>freq__spacing_8c.html</anchorfile>
      <anchor>a7754dfaf41dbafb7876720b4afa97171</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBDMXPTS</name>
      <anchorfile>freq__spacing_8c.html</anchorfile>
      <anchor>a46aa5fab39be89119d8f4621bdae717f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ORIGINAL_FREQ_SPACING_CODE</name>
      <anchorfile>freq__spacing_8c.html</anchorfile>
      <anchor>af0c3c9255639f8d241c80507c75edc98</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freq_spacing</name>
      <anchorfile>freq__spacing_8c.html</anchorfile>
      <anchor>ab2613ef2618d472d5758237fbdb4e759</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>freqlist.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>freqlist_8h.html</filename>
    <class kind="struct">freqlist</class>
  </compound>
  <compound kind="file">
    <name>fringe_file_manipulation.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>fringe__file__manipulation_8py.html</filename>
    <class kind="class">vpal::fringe_file_manipulation::FringeFileHandle</class>
    <class kind="class">vpal::fringe_file_manipulation::PhaseResidualData</class>
    <class kind="class">vpal::fringe_file_manipulation::SingleBaselinePolarizationProductCollection</class>
    <class kind="class">vpal::fringe_file_manipulation::SingleScanBaselineCollection</class>
    <namespace>vpal::fringe_file_manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>fringe_search.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>fringe__search_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="ffsearch_8h" name="ffsearch.h" local="yes" imported="no">ffsearch.h</includes>
    <member kind="function">
      <type>int</type>
      <name>fringe_search</name>
      <anchorfile>fringe__search_8c.html</anchorfile>
      <anchor>a6180f5ba8628376745a1d84f9e998fdb</anchor>
      <arglist>(struct vex *root, struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fringename.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>fringename_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>fringename</name>
      <anchorfile>fringename_8c.html</anchorfile>
      <anchor>adda794c4c9a8c4ded6f2b8a7eb446dd9</anchor>
      <arglist>(fringesum *fsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fringex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/</path>
    <filename>fringex_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>fringex_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fringex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/include/</path>
    <filename>fringex_8h.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <class kind="struct">fxparam</class>
    <class kind="struct">loops</class>
    <member kind="define">
      <type>#define</type>
      <name>ACCUMS</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ae0877482b489f5d12be9fddef0a793ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALL</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a1edd1ea8bddaf4d9c5eb3eae1ee1726a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOC_ERROR</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a7db401fcb928b9ea2b15e0746e354093</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINARYMODE</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a64c17c3c4599c58bd74dccc212c2f8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMODE</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ac0859d2e6c08001144c676269c220889</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILES</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>af0c578eddb61211eb823c0079fe0b943</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDELAYS</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a7834d968a8cce6a5a528c39e31cfbe37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXNSECS</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a70c64e34c59605112f79a5800d0b3f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXRATES</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a1bf2b515222c0bb79f50aa7ba9baa942</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NFX_FCHAN</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aed42e77d02a368f68d563086015e0b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NFX_SB_32</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a2cbe9a90c6b2e6a1c14f0b2f40a70e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NFX_SB_64</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a296046a600962bcfc422f6bd6455efce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_ALLOC_ERROR</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a99ca08ce9b988266e4474f5e7dc5b9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOLOSS</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aab1760e6278c1ae2e279281a1efc0f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OMODE</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>af1f02360f89defbe2688236584bd36d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PI</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a598a3330b3c21701223ee0ca14316eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QMODE</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ad83e484d1e1b9ec6dc4bc460cbe2026a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a129e782209cb45803638bd4338b3bce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRCHPOS</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a0e7e37748fac1f56814d695006c1ee5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accum_segs</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a22ddba3d5b2bd1328e6e8a1dd2ebfd18</anchor>
      <arglist>(struct fxparam *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calc_seg</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a8d0b69baddb174727f4e01851a7dc5e1</anchor>
      <arglist>(struct fxparam *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_fxp</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ac111311f67d9fc3d910b22eb4b21b8f3</anchor>
      <arglist>(struct fxparam *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_loops</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a4069d6d1fbb7a7472efa13e91ec0426d</anchor>
      <arglist>(struct loops *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>determine_nsegs</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a00fe7edd8fe18ae40fdef3fa866e78a1</anchor>
      <arglist>(const struct fxparam *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filelist</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aed0136847f093314d75285dde8bfc127</anchor>
      <arglist>(char *, int, fstruct **, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_aline</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a957eb91670634ef74ef8963a20cb5e0f</anchor>
      <arglist>(struct mk4_fringe *, struct vex *, char *, fringesum *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_fxp</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ab4eaa79e15392a8ae929e7d28667058d</anchor>
      <arglist>(struct fxparam *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>model</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a4162cabe4b10bc216024427e7ad550a6</anchor>
      <arglist>(double, struct fxparam *, double *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a636d0fb414e551fcdc4cb8f04077474d</anchor>
      <arglist>(int, char **, fstruct **, struct fxparam *, struct loops *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_dflag</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ad38477fb821a6b9c8976728bb8b70970</anchor>
      <arglist>(char *, int *, struct loops *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_iflag</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a912dd052c5e3f6b0cc8cb8dfc513063f</anchor>
      <arglist>(char *, int *, struct loops *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_binaries</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a4854e15c945cf5f0255babb641f7db3a</anchor>
      <arglist>(fstruct *, struct fxparam *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>realloc_segs</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a193040aaea1cb79fab120c7baefd9908</anchor>
      <arglist>(struct fxparam *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_loops</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aac8ce1795583cbf172893e76b9cd5786</anchor>
      <arglist>(struct fxparam *, struct loops *)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>msglev</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ac4693c7c31653d6304e6b816726f4482</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fstruct.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>fstruct_8h.html</filename>
    <class kind="struct">fstruct</class>
    <member kind="define">
      <type>#define</type>
      <name>BADBASE</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a8cb4e5c4349daa2af7ff42fc29aeb02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADFNUM</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>acd85a97620c7618ba53eeea9097c8caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADFORM</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>abce6a0ca241a9d2977f33dfd65d9cc36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADFREQ</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>abdbeccab2a8a8744f43c31609be2cbe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADROOT</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>adf21ee6ffc311dc2a74dfe64a47a11a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADSRC</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a12c1f0304ca65e8cf8e709fe2e3aa868</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADSTAT</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a52788b756b42d63dcacb015ae616248e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADSTRING</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a4e6f6ee7ca5cda7bee0b99246df977fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEGALPOLCHARS</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>ad81dbc3927857894a942d638f7dda91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFILES</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a95988532bf766e92740c5ee869778e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFNDIGITS</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>aa074ea212aa43a186cdfa0fb1531d53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_name</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>addf47aa14c39b79a935cc0a4ef595e41</anchor>
      <arglist>(char *, fstruct *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_fstruct</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>ac9806f9f34754bf59f2424ad208426c8</anchor>
      <arglist>(fstruct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>extract_filenames</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>acf4969b4c59930e9e05c6954ec631183</anchor>
      <arglist>(char *, int, fstruct **, int *, int *, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_filelist</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a3c9988d1a76e36c2e17771c027772076</anchor>
      <arglist>(int, char **, int, fstruct **)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gate_off.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>gate__off_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="function">
      <type>int</type>
      <name>gate_off</name>
      <anchorfile>gate__off_8c.html</anchorfile>
      <anchor>a44c1e6d3db8ca7cb16613890a8adba49</anchor>
      <arglist>(struct type_pass *pass, int frq, int ap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gen_new_chan_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourmer/src/</path>
    <filename>gen__new__chan__id_8c.html</filename>
    <includes id="fourmer_8h" name="fourmer.h" local="yes" imported="no">fourmer.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>gen_new_chan_id</name>
      <anchorfile>gen__new__chan__id_8c.html</anchorfile>
      <anchor>a2ceee5895b9978cd0cf92347dc3d4157</anchor>
      <arglist>(char *old, int isA, int isroot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relabel_chan_def</name>
      <anchorfile>gen__new__chan__id_8c.html</anchorfile>
      <anchor>ac1e2d9c1fc94530cf6e56b570a3abd60</anchor>
      <arglist>(char *line, int isA)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>general.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>general_8h.html</filename>
    <class kind="struct">datec</class>
    <class kind="struct">datef</class>
    <class kind="struct">dstats</class>
    <class kind="struct">fstats</class>
    <class kind="struct">istats</class>
    <class kind="struct">lvpair</class>
    <class kind="struct">polar</class>
    <class kind="struct">sbands</class>
    <class kind="struct">stsband</class>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>gen_done</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a47a50cb771d741520b3b226bfb95725a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>generate_cblock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>generate__cblock_8c.html</filename>
    <includes id="ovex_8h" name="ovex.h" local="yes" imported="no">ovex.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="function">
      <type>int</type>
      <name>generate_cblock</name>
      <anchorfile>generate__cblock_8c.html</anchorfile>
      <anchor>a8578c972e5673c81248e5e4864cb3e8a</anchor>
      <arglist>(struct scan_struct *ovex, struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>generate_graphs.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>generate__graphs_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="meta__struct_8h" name="meta_struct.h" local="yes" imported="no">meta_struct.h</includes>
    <includes id="ovex_8h" name="ovex.h" local="yes" imported="no">ovex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>generate_graphs</name>
      <anchorfile>generate__graphs_8c.html</anchorfile>
      <anchor>ab2766d83fd0369c10257c8df62729409</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, char *fringename, char *ps_file, double *tickinc)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>generate_text.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>generate__text_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="meta__struct_8h" name="meta_struct.h" local="yes" imported="no">meta_struct.h</includes>
    <includes id="ovex_8h" name="ovex.h" local="yes" imported="no">ovex.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>LREF</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a29f1bad874b6b8a247b95c4cd1461665</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LREM</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a6e43e4fd3536da94a83df1b61af0ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>pi</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a1daf785e3f68d293c7caa1c756d5cb74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>pscat</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a3d34757d54a2918fc49b6d1dd88a60e9</anchor>
      <arglist>(ps_string)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>pslabel</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>aa82c0f11add89c2bf9d9241a396671b8</anchor>
      <arglist>(lab)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>psleft</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>aed3cf83266ddb02ee5fdb746f31350cb</anchor>
      <arglist>(xcoord, ycoord, ps_string)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>psright</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a1e18467c2c75f73044bd38b712ef0642</anchor>
      <arglist>(xcoord, ycoord, ps_string)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RREF</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a668f403855f650c8181d56f44fd18460</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RREM</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a26f33d7a963c52b483e1f1651656e583</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setblack</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a5ee3aa7baaddfce94949193f6f00a047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setblue</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a8a916abd1388ebaa90a2b9a93a5301ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setcyan</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a9ad17df4940ff21e546bd101d6dc05d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setdarkorange</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>ab2a7d601957c1ea4c49504910f085733</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setgreen</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>aaf9c1110c1e376ef8af52e2773c34ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setmagenta</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a803234d9e098b07a86451bea074d8f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setorange</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>abfd19b0461186cb0b097bda7b4f85807</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setred</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a6a67b843e8e6ba016171500bdaa41140</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate_text</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>a4b83aca023435ab883da88cf6b1cb2a8</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, char *fringename, char *pplot, double tickinc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify_pol</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>af32316653e135da0967a9f83277ff3b8</anchor>
      <arglist>(struct type_pass *p, char *polstr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stripbuf</name>
      <anchorfile>generate__text_8c.html</anchorfile>
      <anchor>ada614d72f056e4b7e245e370e86cb7b9</anchor>
      <arglist>(char *list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GenerateOpenCLHeader.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Core/src/</path>
    <filename>GenerateOpenCLHeader_8cc.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>__CL_ENABLE_EXCEPTIONS</name>
      <anchorfile>GenerateOpenCLHeader_8cc.html</anchorfile>
      <anchor>af1b68fb4ba71d72d397f46a730f03f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>GenerateOpenCLHeader_8cc.html</anchorfile>
      <anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_abs_path.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>get__abs__path_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>get__abs__path_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>get__abs__path_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_abs_path</name>
      <anchorfile>get__abs__path_8c.html</anchorfile>
      <anchor>a533c4e6c5aecb3f58f3d319f83f66242</anchor>
      <arglist>(char input[], char rootname[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_axis.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>get__axis_8c.html</filename>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_axis</name>
      <anchorfile>get__axis_8c.html</anchorfile>
      <anchor>af085f244b3289fa38d0dc71fcaf8db11</anchor>
      <arglist>(char *string, char *ax_name, int *ax_index, char *ax_units, int *aux, int *plotby)</arglist>
    </member>
    <member kind="variable">
      <type>struct @1</type>
      <name>axes</name>
      <anchorfile>get__axis_8c.html</anchorfile>
      <anchor>aa8f772ee8b3d109bc9037ed4a4bef169</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_bfstring.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>get__bfstring_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>get__bfstring_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>get__bfstring_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_bfstring</name>
      <anchorfile>get__bfstring_8c.html</anchorfile>
      <anchor>a76e607b480ca2fe15aea237c170478b6</anchor>
      <arglist>(char *barg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_block_mode.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__block__mode_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__block__mode_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BLOCK_MODES</name>
      <anchorfile>get__block__mode_8c.html</anchorfile>
      <anchor>ab861c93416197825757a79f7a700db33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_BlockMode *</type>
      <name>get_block_mode</name>
      <anchorfile>get__block__mode_8c.html</anchorfile>
      <anchor>a08a91a68a31debd3578635bb46207032</anchor>
      <arglist>(char *block_mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_chip_mode.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__chip__mode_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__chip__mode_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CHIP_MODES</name>
      <anchorfile>get__chip__mode_8c.html</anchorfile>
      <anchor>adf52c686fd3d41b851e8167f0763240d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_ChipMode *</type>
      <name>get_chip_mode</name>
      <anchorfile>get__chip__mode_8c.html</anchorfile>
      <anchor>ae8117750f228da44c6fa0ba5c917fa01</anchor>
      <arglist>(char *chip_mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_corel_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>get__corel__data_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_corel_data</name>
      <anchorfile>get__corel__data_8c.html</anchorfile>
      <anchor>a9506c78558732ec7470e682054020337</anchor>
      <arglist>(fstruct *fs, struct scan_struct *ovex, char *filename, struct mk4_corel *cdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_corr_bd_parms.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__corr__bd__parms_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__corr__bd__parms_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CPARMS</name>
      <anchorfile>get__corr__bd__parms_8c.html</anchorfile>
      <anchor>a03fe0283dd8c798113607a3ee7308332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_BoardParms *</type>
      <name>get_corr_bd_parms</name>
      <anchorfile>get__corr__bd__parms_8c.html</anchorfile>
      <anchor>acfd3c45d5bfe38bba38118d9c2fa1bfd</anchor>
      <arglist>(char *parms_mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_corr_mode.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__corr__mode_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__corr__mode_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_Mode *</type>
      <name>get_corr_mode</name>
      <anchorfile>get__corr__mode_8c.html</anchorfile>
      <anchor>a23bda1a7b4161cbbf77ed29287c1d21e</anchor>
      <arglist>(char *modename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_def.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__def_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>struct def *</type>
      <name>get_def</name>
      <anchorfile>get__def_8c.html</anchorfile>
      <anchor>aa88a9a50409ebb9ceaa6cc3eaaec0c11</anchor>
      <arglist>(char *defname, char *blockname, int *blockno, int *defno)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_drive_init.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__drive__init_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__drive__init_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_drive_init</name>
      <anchorfile>get__drive__init_8c.html</anchorfile>
      <anchor>ad6c3e7ea93a0a4b823f9056c4cefc887</anchor>
      <arglist>(char *defname, struct drive_init_struct *drive_init)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_filelist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>get__filelist_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_filelist</name>
      <anchorfile>get__filelist_8c.html</anchorfile>
      <anchor>a5e29794c59a9f38d8411727903869c17</anchor>
      <arglist>(int argc, char **argv, int type, fstruct **files)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_global_deflist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__global__deflist_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_global_deflist</name>
      <anchorfile>get__global__deflist_8c.html</anchorfile>
      <anchor>a3d3a0e5c0e2b3ff3a11493e615d989ab</anchor>
      <arglist>(struct def_list **deflist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_int_time.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>get__int__time_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NTIMES</name>
      <anchorfile>get__int__time_8c.html</anchorfile>
      <anchor>a821b86aa6dffb342e46137bdc46576ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int_time</name>
      <anchorfile>get__int__time_8c.html</anchorfile>
      <anchor>adca7bdbd969137131adf47d4601be618</anchor>
      <arglist>(char *flag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_logscan.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__logscan_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ENDSCAN</name>
      <anchorfile>get__logscan_8c.html</anchorfile>
      <anchor>a3f6182c8dcbfa9ff8ea0e6a6f0afbf68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__logscan_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OTHER</name>
      <anchorfile>get__logscan_8c.html</anchorfile>
      <anchor>ac00c5fe00853dab2ff3d86ae62c83809</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCAN</name>
      <anchorfile>get__logscan_8c.html</anchorfile>
      <anchor>a7b114f85cab70531adc738c2e499df6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_logscan</name>
      <anchorfile>get__logscan_8c.html</anchorfile>
      <anchor>a12eb8b8ca359b9dfab074dc1b1c3e85d</anchor>
      <arglist>(struct def *ldef, char *scanname, struct station_log *logstn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_mode_deflist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__mode__deflist_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_mode_deflist</name>
      <anchorfile>get__mode__deflist_8c.html</anchorfile>
      <anchor>a03534b8105f35981c7eb741a6af99ef3</anchor>
      <arglist>(struct def *modedef, char *stname, struct def_list **deflist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_param.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>get__param_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="param__list_8h" name="param_list.h" local="yes" imported="no">param_list.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_param</name>
      <anchorfile>get__param_8c.html</anchorfile>
      <anchor>a2bbc40f6bef0a4710309cedc9e5ceec1</anchor>
      <arglist>(esum *data, char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_param_list.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>get__param__list_8c.html</filename>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>get__param__list_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>get__param__list_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_param_list</name>
      <anchorfile>get__param__list_8c.html</anchorfile>
      <anchor>a49cb5be88ac06672aef99cf1c952fb17</anchor>
      <arglist>(struct usearray *user_param, int maxfreq, char *args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_pbs_init.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__pbs__init_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__pbs__init_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pbs_init</name>
      <anchorfile>get__pbs__init_8c.html</anchorfile>
      <anchor>a2506e3bb75ae837efb09a40eade7270a</anchor>
      <arglist>(char *defname, struct pbs_init_struct *pbs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_pcm_config.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__pcm__config_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__pcm__config_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pcm_config</name>
      <anchorfile>get__pcm__config_8c.html</anchorfile>
      <anchor>a95eb2024901bfc4cc35fa531ca73f600</anchor>
      <arglist>(char *defname, struct svex_struct *svex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_pcm_tables.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__pcm__tables_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__pcm__tables_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWOPI</name>
      <anchorfile>get__pcm__tables_8c.html</anchorfile>
      <anchor>a4912c64aec0c943b7985db6cb61ff83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pcm_tables</name>
      <anchorfile>get__pcm__tables_8c.html</anchorfile>
      <anchor>abdbb1bf4216fca989fcf1309cfc3a4b7</anchor>
      <arglist>(char *defname, struct svex_struct *svex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_plot_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>get__plot__data_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NOSPLIT</name>
      <anchorfile>get__plot__data_8c.html</anchorfile>
      <anchor>a8d0c21a85089e5ad877d98c5627d7a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPLIT</name>
      <anchorfile>get__plot__data_8c.html</anchorfile>
      <anchor>ab9b059654b97e4d2d1ec92692e49dace</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plot_data</name>
      <anchorfile>get__plot__data_8c.html</anchorfile>
      <anchor>a28665a6090427927e687b185bee3da5f</anchor>
      <arglist>(esum *data, struct plot_info *pd, struct frqexp fqex, srcsum *sptr, char *plot_id, struct plot_points *pp, int symbol[3])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_plot_datum.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>get__plot__datum_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="function">
      <type>void</type>
      <name>get_plot_datum</name>
      <anchorfile>get__plot__datum_8c.html</anchorfile>
      <anchor>a341291cc87714d05f29eb368a32d023b</anchor>
      <arglist>(char *plot_id, esum *data, srcsum *sptr, int ptr, int n, int toffset, struct plot_ptqual *pt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_ps_indices4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>get__ps__indices4_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_ps_indices4</name>
      <anchorfile>get__ps__indices4_8c.html</anchorfile>
      <anchor>a7bdae14a1c1a673ceff04908887c7c76</anchor>
      <arglist>(esum *data, struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_section_mode.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__section__mode_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__section__mode_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SECT_MODES</name>
      <anchorfile>get__section__mode_8c.html</anchorfile>
      <anchor>a28f5e4ad6b70dce6c3d5bda15dcdf52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_SectionMode *</type>
      <name>get_section_mode</name>
      <anchorfile>get__section__mode_8c.html</anchorfile>
      <anchor>adff0bf2bc7e2f7cda56b469b8653d11b</anchor>
      <arglist>(char *sect_mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_statement.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__statement_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>get_statement</name>
      <anchorfile>get__statement_8c.html</anchorfile>
      <anchor>a329934bd56073c7f1cd4ae4d3868ef78</anchor>
      <arglist>(char *addr, char **first, char **last)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_station_deflist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__station__deflist_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_station_deflist</name>
      <anchorfile>get__station__deflist_8c.html</anchorfile>
      <anchor>a9fd22e19a8e7b18d9bbcae9ba9cd7543</anchor>
      <arglist>(char *stname, struct def_list **deflist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_su_chan_out.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__su__chan__out_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__su__chan__out_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_su_chan_out</name>
      <anchorfile>get__su__chan__out_8c.html</anchorfile>
      <anchor>adcbfa729725532939ad42e955aaf8bec</anchor>
      <arglist>(char *defname, struct svex_struct *svex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_su_connect.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__su__connect_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__su__connect_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_su_connect</name>
      <anchorfile>get__su__connect_8c.html</anchorfile>
      <anchor>ab16d4a6d383b13a22f5e7768fa39b8af</anchor>
      <arglist>(char *defname, struct su_connect_struct *su_connect)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_trm_config.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__trm__config_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__trm__config_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bitstream</name>
      <anchorfile>get__trm__config_8c.html</anchorfile>
      <anchor>a182364585ddd2a87b2622b06acf80c16</anchor>
      <arglist>(char *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_trm_config</name>
      <anchorfile>get__trm__config_8c.html</anchorfile>
      <anchor>acc8d14eb7bad608cb825d4556b55c149</anchor>
      <arglist>(char *defname, struct TRM_config_struct *trm_config)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_unique_name.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>get__unique__name_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_unique_name</name>
      <anchorfile>get__unique__name_8c.html</anchorfile>
      <anchor>a935b161ed3c94602913b554a4885c4b1</anchor>
      <arglist>(char *input, char *output)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_val_list.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__val__list_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_val_list</name>
      <anchorfile>get__val__list_8c.html</anchorfile>
      <anchor>ad38ce62ae01b274ee67c931bee301d1a</anchor>
      <arglist>(char *ptr, char *vlist[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_version.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__version_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>get__version_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_version</name>
      <anchorfile>get__version_8c.html</anchorfile>
      <anchor>a1462d818b1624f0e2d098ff1de3909c8</anchor>
      <arglist>(int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_vex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>get__vex_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_vex</name>
      <anchorfile>get__vex_8c.html</anchorfile>
      <anchor>a5c70930e7c0869e7a98ad6de05d33744</anchor>
      <arglist>(char *filename, int vextype, char *key, struct vex *vex)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reread_vexfile</name>
      <anchorfile>get__vex_8c.html</anchorfile>
      <anchor>a9c6806747248679ebbdd6bde9b3904e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_vis.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>get__vis_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CHUNK</name>
      <anchorfile>get__vis_8c.html</anchorfile>
      <anchor>a25022864dfc8ec428e7128282e57b136</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pfb_index</name>
      <anchorfile>get__vis_8c.html</anchorfile>
      <anchor>a171cc870b1cf4955044c42ee03e7717e</anchor>
      <arglist>(int baseline, int freq_index, struct fblock_tag *pfb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_vis</name>
      <anchorfile>get__vis_8c.html</anchorfile>
      <anchor>aed43b9c6a1a7418fbd881c5b307676bd</anchor>
      <arglist>(DifxInput *D, char *vf_name, struct CommandLineOptions *opts, int *nvrtot, int *nvis, int *vrsize, vis_record **vrec, char *corrdate, struct fblock_tag *pfb)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>grid.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>grid_8c.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>irint</name>
      <anchorfile>grid_8c.html</anchorfile>
      <anchor>aa23c2f6dc2d174b502752d798f2b81a8</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grid</name>
      <anchorfile>grid_8c.html</anchorfile>
      <anchor>a5fde272db6c175fab334b16591d44d64</anchor>
      <arglist>(char **matrix, int pos_x, int pos_y, int width, int height, double winstart, double winstop, double xscale, double yscale, double x, double y, char ch, char altch)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>grid_filler.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>grid__filler_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>REMLIMIT</name>
      <anchorfile>grid__filler_8c.html</anchorfile>
      <anchor>aed3a3eb58de5a56db675a308bc390e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERY_BIG</name>
      <anchorfile>grid__filler_8c.html</anchorfile>
      <anchor>ad8512644399ac6ec00af8f727bb4fac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_grids</name>
      <anchorfile>grid__filler_8c.html</anchorfile>
      <anchor>abfa1c94eed1fd16c440ced6fee4c69f1</anchor>
      <arglist>(struct srchsummary *srchdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>help.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>help_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>help</name>
      <anchorfile>help_8c.html</anchorfile>
      <anchor>aa1e9aaf83ee6a74d196830e5b7334be8</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>help_files</name>
      <anchorfile>help_8c.html</anchorfile>
      <anchor>a0e75d437d9fe7c8781e3dd0047a6cec4</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hetetimecode.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>hetetimecode_8h.html</filename>
    <class kind="struct">time_code</class>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH_HUBSYNC</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a32bf510ed75da18f64cf4c81b77c16d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH_IBEX</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a66c1525b75b545a621d43b5ef351f4e1</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH_NULL</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a21c666e04c680c6e7da649a96f7d661a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH_UNIX</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>ad01a7d2df2913f6f52658d77c0f708e1</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH_UNSYNC</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>aaa8d871bb2625517efb570825e81179e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH_WATCH</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a881d391474030f54ee2f15f757e41296</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>THIS_IS_IBEX</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a774fb1e43424c7c2132e07a5958ee65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>IPP_word</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a13ba3371e20c9b196b2d58823f210371</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>get_sc_time</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a7c99375b44189a44f1b8e78a34d338da</anchor>
      <arglist>(time_code *tc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_sc_time_array</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>ae912e71ab7308b1b564dbfc8d20a3e00</anchor>
      <arglist>(IPP_word time[4])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>has_this_time_passed</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a9c4800357e50c28301d3ea8970624e42</anchor>
      <arglist>(time_code *time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>time_cmp</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a8b8259b2285c5b6e5aaa5d55a5443f2d</anchor>
      <arglist>(time_code *time1, time_code *time2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops2flat.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>hops2flat_8cc.html</filename>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>hops2flat_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_to_binfile</name>
      <anchorfile>hops2flat_8cc.html</anchorfile>
      <anchor>ace4181e81eba99b050b70ee48315439e</anchor>
      <arglist>(const char *data, std::size_t size, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_to_cborfile</name>
      <anchorfile>hops2flat_8cc.html</anchorfile>
      <anchor>ab526f06a82ed26fb1dac3823f2f134cb</anchor>
      <arglist>(mho_json &amp;obj, const std::string &amp;meta_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_to_jsonfile</name>
      <anchorfile>hops2flat_8cc.html</anchorfile>
      <anchor>ad69d0dc777325c74e9cc1c2f1f06d47d</anchor>
      <arglist>(mho_json &amp;obj, const std::string &amp;meta_file, int nspaces)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops2hdf5.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/applications/</path>
    <filename>hops2hdf5_8cc.html</filename>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__HDF5TypeCode_8hh" name="MHO_HDF5TypeCode.hh" local="yes" imported="no">MHO_HDF5TypeCode.hh</includes>
    <includes id="MHO__HDF5ContainerFileInterface_8hh" name="MHO_HDF5ContainerFileInterface.hh" local="yes" imported="no">MHO_HDF5ContainerFileInterface.hh</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>hops2hdf5_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops2keys.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>hops2keys_8cc.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__FileKey_8hh" name="MHO_FileKey.hh" local="yes" imported="no">MHO_FileKey.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <member kind="function">
      <type>mho_json</type>
      <name>ConvertKey</name>
      <anchorfile>hops2keys_8cc.html</anchorfile>
      <anchor>a5f82efbfde9ab6ddcfb6a36c55400482</anchor>
      <arglist>(const MHO_FileKey &amp;key, const MHO_ContainerDictionary &amp;cdict)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>hops2keys_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops2mark4.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>hops2mark4_8cc.html</filename>
    <includes id="MHO__MK4ScanConverterReversed_8hh" name="MHO_MK4ScanConverterReversed.hh" local="yes" imported="no">MHO_MK4ScanConverterReversed.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__MPIInterfaceWrapper_8hh" name="MHO_MPIInterfaceWrapper.hh" local="yes" imported="no">MHO_MPIInterfaceWrapper.hh</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>hops2mark4_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops_complex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>hops__complex_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <member kind="function">
      <type>double</type>
      <name>abs_complex</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>ad9cc00534cc1f4a02e2c6b1780e5ccdc</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>arg_complex</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>abd07b943c929b39ce8da27d7a90895ee</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>hops_complex</type>
      <name>conjugate</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>a7d6cb6e72f48dcd2a81c74aa618fcb5b</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>hops_complex</type>
      <name>exp_complex</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>a0e90a82951116ef72bff59da6c6cc3f7</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>imag_comp</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>ab69eb771b7e667f2fd5dc0fcfe8c494b</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>real_comp</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>ac6e349636da430710526602618bbd151</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_complex</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>ab1bc30585f62894e777117627b64c0ba</anchor>
      <arglist>(hops_complex *val, double real, double imag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero_complex</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>ab0fbd0b538b3115c6f7b6fc4141aea63</anchor>
      <arglist>(hops_complex *val)</arglist>
    </member>
    <member kind="variable">
      <type>const std::complex&lt; double &gt;</type>
      <name>cmplx_unit_I</name>
      <anchorfile>hops__complex_8c.html</anchorfile>
      <anchor>ac13fd503dc891a8ca5e7fd9025608c8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops_complex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>hops__complex_8h.html</filename>
    <class kind="struct">hops_complex_tag</class>
    <member kind="define">
      <type>#define</type>
      <name>hops_complex</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>af7a658adea3e69cd3a77d59ba5183f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_C_COMPLEX</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>a3b8e92f63f2ae4f0f2b6a68ef2d38509</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct hops_complex_tag</type>
      <name>hops_scomplex</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>adae0563dbbe26b186882dbfbdbc679a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>abs_complex</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>ad9cc00534cc1f4a02e2c6b1780e5ccdc</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>arg_complex</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>abd07b943c929b39ce8da27d7a90895ee</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>hops_complex</type>
      <name>conjugate</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>a7d6cb6e72f48dcd2a81c74aa618fcb5b</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>hops_complex</type>
      <name>exp_complex</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>a0e90a82951116ef72bff59da6c6cc3f7</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>imag_comp</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>ab69eb771b7e667f2fd5dc0fcfe8c494b</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>real_comp</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>ac6e349636da430710526602618bbd151</anchor>
      <arglist>(hops_complex val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_complex</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>ab1bc30585f62894e777117627b64c0ba</anchor>
      <arglist>(hops_complex *val, double real, double imag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero_complex</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>ab0fbd0b538b3115c6f7b6fc4141aea63</anchor>
      <arglist>(hops_complex *val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops_time.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>hops__time_8c.html</filename>
    <includes id="hops__time_8h" name="hops_time.h" local="yes" imported="no">hops_time.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>hops__time_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>all</name>
      <anchorfile>hops__time_8c.html</anchorfile>
      <anchor>ab99a7ec2d33e014b5ebe0850968fbe9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>ofp</name>
      <anchorfile>hops__time_8c.html</anchorfile>
      <anchor>a60d8f653d68b80f5aa5dc098e90427df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verb</name>
      <anchorfile>hops__time_8c.html</anchorfile>
      <anchor>a0cdb2f0d2f1082eda441e24d39d87133</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops_time.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>hops__time_8h.html</filename>
    <includes id="htime_8h" name="htime.h" local="yes" imported="no">htime.h</includes>
    <member kind="function">
      <type>int</type>
      <name>all_arguments</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a60731a3c2e570cb4ff2abce565a23b59</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delta_setup</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a9a88842027f91290ff0a2ee9a5ed7129</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dump_formats</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>ac6d1d0a7271bae6ddd30a04b4e8e65d4</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>input_setup</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a6833a6601f248dfe2108b94408e51a46</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>query_setup</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a97e414d868aad14bc7e7544fff0a585e</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_origin</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>ae503a9e887cf83e318c56018a6d5dfb8</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>time_argument</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a4ec01185e1e89b10bdbdaee2c8ccfb96</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>d_mult</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a360449257fed8b1a5d7178a7ccd20659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>d_orig</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>ac9dbebd6102e66c2749a02f82ee9a006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>echo</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>abccc572653663cb1edfe91d0ae50af42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gibber</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>aaa528419ba077f4dc3508842a20d0dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>joiner</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a1a1bf897623e9f2949e731050bae2515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>ofp</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a60d8f653d68b80f5aa5dc098e90427df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qtype</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a7d25316a3044b7ac147657145e74bf74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>query_arg</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>ab056e7dcfb71fa88c4fcca38524113eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>replace</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a004af5ca6cfa65a7c82e1e0b44f90dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>report_arg</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a99658514687e587b412657d1cab58de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rtype</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>aab1bddf54962a004b258c1724b11f69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>statf</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>aa8b3f77336705157655ee5cfce5e177f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verb</name>
      <anchorfile>hops__time_8h.html</anchorfile>
      <anchor>a0cdb2f0d2f1082eda441e24d39d87133</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hops_version.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/</path>
    <filename>hops__version_8hh.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_VERSION</name>
      <anchorfile>hops__version_8hh.html</anchorfile>
      <anchor>a0e570fbf934940589cacba5070e84c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_VERSION_MAJOR</name>
      <anchorfile>hops__version_8hh.html</anchorfile>
      <anchor>a18bdb42ce104bd4ee6eb79da7f522814</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_VERSION_MINOR</name>
      <anchorfile>hops__version_8hh.html</anchorfile>
      <anchor>a937f66432ba32cdd5506f16af4f2e0f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_VERSION_PATCH</name>
      <anchorfile>hops__version_8hh.html</anchorfile>
      <anchor>a93aad87fe640b5d0409f2cbfcbb7d3ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hptoie.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>hptoie_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>hptoie</name>
      <anchorfile>hptoie_8c.html</anchorfile>
      <anchor>ae475b5ef8be726759f8b892893937ef7</anchor>
      <arglist>(int *input, int *output, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hptoie4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>hptoie4_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BIT23</name>
      <anchorfile>hptoie4_8c.html</anchorfile>
      <anchor>ada7be80971d1875e5c4774edd3ecd97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOW23</name>
      <anchorfile>hptoie4_8c.html</anchorfile>
      <anchor>a41cd016876940c1b8343cf0b935f12bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOW7</name>
      <anchorfile>hptoie4_8c.html</anchorfile>
      <anchor>ae0ecdc954fe1b295340e7a9e8095df9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SBIT</name>
      <anchorfile>hptoie4_8c.html</anchorfile>
      <anchor>a3f5141488c5bfd0d81d4b19091fd8497</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hptoie4</name>
      <anchorfile>hptoie4_8c.html</anchorfile>
      <anchor>a0cc55db3cf75722bc950a6650d0e99e8</anchor>
      <arglist>(float *finput, float *foutput)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hptoie8.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>hptoie8_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BIT23</name>
      <anchorfile>hptoie8_8c.html</anchorfile>
      <anchor>ada7be80971d1875e5c4774edd3ecd97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOW20</name>
      <anchorfile>hptoie8_8c.html</anchorfile>
      <anchor>a9999fc20f9a0a4263e66f205d449e84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOW23</name>
      <anchorfile>hptoie8_8c.html</anchorfile>
      <anchor>a41cd016876940c1b8343cf0b935f12bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOW7</name>
      <anchorfile>hptoie8_8c.html</anchorfile>
      <anchor>ae0ecdc954fe1b295340e7a9e8095df9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SBIT</name>
      <anchorfile>hptoie8_8c.html</anchorfile>
      <anchor>a3f5141488c5bfd0d81d4b19091fd8497</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hptoie8</name>
      <anchorfile>hptoie8_8c.html</anchorfile>
      <anchor>a17377e76f98ad3cd1a4db452e7e63eb9</anchor>
      <arglist>(double *dinput, double *doutput)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ht_parser.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>ht__parser_8c.html</filename>
    <includes id="hops__time_8h" name="hops_time.h" local="yes" imported="no">hops_time.h</includes>
    <member kind="function">
      <type>int</type>
      <name>delta_setup</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>aec9da7a316af8644beae974ff4158def</anchor>
      <arglist>(char *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dump_formats</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>ac6d1d0a7271bae6ddd30a04b4e8e65d4</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>input_setup</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>a6833a6601f248dfe2108b94408e51a46</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>query_setup</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>a97e414d868aad14bc7e7544fff0a585e</anchor>
      <arglist>(char *oa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_origin</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>ae3ce2bbeff6b07529b4f82a2b6921315</anchor>
      <arglist>(char *arg)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>echo</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>abccc572653663cb1edfe91d0ae50af42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gibber</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>aaa528419ba077f4dc3508842a20d0dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>joiner</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>a1a1bf897623e9f2949e731050bae2515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qtype</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>a7d25316a3044b7ac147657145e74bf74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>query_arg</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>af698b22b7f18dfe0e750de2f82e4668e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>replace</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>a004af5ca6cfa65a7c82e1e0b44f90dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>report_arg</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>adeddd48b876af6cd9b259bb74ffb3c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rtype</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>aab1bddf54962a004b258c1724b11f69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>statf</name>
      <anchorfile>ht__parser_8c.html</anchorfile>
      <anchor>aa8b3f77336705157655ee5cfce5e177f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ht_timeis.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>ht__timeis_8c.html</filename>
    <includes id="hops__time_8h" name="hops_time.h" local="yes" imported="no">hops_time.h</includes>
    <member kind="function">
      <type>int</type>
      <name>all_arguments</name>
      <anchorfile>ht__timeis_8c.html</anchorfile>
      <anchor>a64c4513e39320b392f7d29f4907b0274</anchor>
      <arglist>(char *ta)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>time_argument</name>
      <anchorfile>ht__timeis_8c.html</anchorfile>
      <anchor>ad08977c014d41ebd6a4e3c9c2739e7e0</anchor>
      <arglist>(char *ta)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>htime.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>htime_8c.html</filename>
    <includes id="htime_8h" name="htime.h" local="yes" imported="no">htime.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>Ht_String_GPS</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>abede3bb99b836596c93dce0345d982f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_String_HTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>aa2c9f3a469f61f48076e4999a394a100</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_String_UTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a274ee84d918a1fb489fbf67d595b5c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_WEEKS</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a424fe822ecd3e435c4d8dd339b57d829</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a2337a56efa1f13294af50ae9fc799534</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>what_type</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a6bf81dc44ef65c8f7fde96a6f9f6a495</anchor>
      <arglist>(T, S)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_delta_setup</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a5b31e5dd599642b47ffc253d7cab6a0f</anchor>
      <arglist>(char *type, char *base)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_delta_value</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>afac13ca49ce9d6f1e42a5b03d52a1c53</anchor>
      <arglist>(char *s, HTLdbl *pterror)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_GPS_to_string</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a857047944d91589d8f70bd67d8e946e3</anchor>
      <arglist>(GTime gt, int style)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_HTC_to_string</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a59fba69894045eaadb14ad78789d302d</anchor>
      <arglist>(HTime ht, int style)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_HTC_to_UTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a298a0dfa050b97be1bf33857fd300fb6</anchor>
      <arglist>(HTime ht, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_now_GPS</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>abdc33d6136e031af731b540e5d2bcab4</anchor>
      <arglist>(HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_now_HTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a3322c08130891630866e2234e469d619</anchor>
      <arglist>(HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_now_UTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a1f38999efabab45d6dd00da257d2f87b</anchor>
      <arglist>(HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_string_to_GPS</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a937ade1a79370e19c7f0ae1d507bc3ab</anchor>
      <arglist>(char *s, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_string_to_HTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a71e5f4a80cf29cd938693367e02a7747</anchor>
      <arglist>(char *s, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_string_to_UTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>af325fdf87e98491d32c7e59b8d2ca462</anchor>
      <arglist>(char *s, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_string_type</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a914bb8561b76d2d8a25e24e8153ead62</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_UTC_to_HTC</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a65face7a869e942d1d884ff7a5445d46</anchor>
      <arglist>(UTime ut, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_UTC_to_string</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>acf097732594eee131976230bd08304b7</anchor>
      <arglist>(UTime ut, int style)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_vdif_epoch</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a7a460e8890b2a217db11b535a5623b05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>pass_str2ut</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a74139cc28a11c18adbaa7c643602f743</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_default_error</name>
      <anchorfile>htime_8c.html</anchorfile>
      <anchor>a3df7aaf01b110959bd60e60a496eba8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>htime.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>htime_8h.html</filename>
    <includes id="hetetimecode_8h" name="hetetimecode.h" local="yes" imported="no">hetetimecode.h</includes>
    <includes id="time__float__type_8h" name="time_float_type.h" local="yes" imported="no">time_float_type.h</includes>
    <class kind="struct">sc_life</class>
    <member kind="define">
      <type>#define</type>
      <name>EPOCH_IBEX</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a66c1525b75b545a621d43b5ef351f4e1</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HETE_PECULIAR</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>abf4df1d059cf8dd029cddc08c7322897</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ROOT_BREAK</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ae8eb92a660cc13d39c42d3787a5528fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ROOT_EPOCH</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a2eaf34d8e412e82c97b00b37af2bee7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DATACALSC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ac8998f1de7d9ac7831da975cd74caef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_ADAT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a436e247b1225263a3d0ba8f01d6e68d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_DATE</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a8bb7f19f9303f00abe1a3c0e0f9c3dd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_FILE</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a042b85e492dad71eb1b0a69c2869bf43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_FILH</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a4ca1c9feb4d03b28c844b513df76385d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_GRBS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a9d4e87cb3573d8ec7fe212b9bb3f3d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_HOPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a6c75d9f6cd19a499e84c0231b451eebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_HT00</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a9a003c7de9d489c45c8b483b56728f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_HT03</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ac0e56188f784d49159720f8d1e573ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_ISOM</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a9f66d10dfc57582ce8aa5b9402c58cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_ISON</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa85074b6b22776e8935ca5e9ae736fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_ISOT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa28a94f8115ab6d81b013da407be2b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_JULD</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a2c7a303eb5ec9073cb2f1718b2c6fd9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_MAES</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a6f4e0fed8e45054ea21c9dfe18035422</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_MJUL</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a571960f2e15a62a46479136ee9f004b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_MY4C</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a0c79fa626d7141b45a9a42b2401ca1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_MY4D</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a73e600b9da18d5f62c7e238865c08c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_NUMB</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a100bf5265580e0d1b26eda3aa4a220cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_PASS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a9a538f98481ae6eb68f13cb8e2988ad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_PGMI</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a0eb5aca34b4a40f736f6aa77afa97c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_PLAN</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a8e9bae2d6e6b0fbd144f4e5ddb20358b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_PLOG</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ab94a6de98d0d1b9f4b7cbb4653a2e91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_RDBE</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a524a914652a25ff1492ef685070d5e00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_SECS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a6913afa0bcb62e2757aa444429c06b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_UNIX</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a1fab4ba04f0415a6e7aaf11b0b6edb69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_USVN</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ad2619c28000daf9310255d63859d18fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_USVZ</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a6e5faa25fff4db027a8376bd2c34fd6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_UTRL</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aced22f3b6fd6403df7a556eec507e393</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_UWKS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ab0c3c9d2cb88b45ea740babf12e72c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_VDIF</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a5b4599b04a9dd6493e1a4b9933ac41a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_VEXT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3c54f18c288a0b1c0659d44c08b00d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_Y2DS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a0dd5164739eecbe08666f238f2c6eb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_Y2KP</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a5907e09cd1390fdddc1a64b2d6ea235f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_Y4DS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ae019a9ddb6a1d09ca330742244ec3b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_DS_YDOY</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa8c5ed093d07b8da9c2964dda94b1243</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_IBEX_TIME_HELP</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a09c01f7f910f1c1ce74720454c9f842e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_IBEXTIMES</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ace67497be6c87a6a7c24dba6890ccb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_JULIAN_EPOCH_IS_UTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a21123f4786b5a053eb38ce5db1a996d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_LIFETIMES</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a319d64eea9fd03b20a2f836dde5a6700</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_ADAT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3d603a2f0c00dd2c4bcda03b6b3a56d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_FILE</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a173acaf8c066e796dc916ce63f883dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_FILH</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a63352e571750cc1d450d9e3f86c6ff6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_HOPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a007761fc732d1e44d07002325cf071f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_HT00</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a18bc6bead1feac0e6242c97c729b42dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_HT03</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ae05912ae5533d610432a3b7023f2654e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_HT0x</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>afb1d528472ec92dd5c922cc3bd0c7e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_HT0X</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a7d5171844a4dc98cedc28cf67ef67f17</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_HTYP</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a695dab5f3c40583af87af1e91265109c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_ISOM</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a9b4e861551735128193d9cd1bd7a8e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_ISON</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a6983c3674f37ab9f39e755e98664b4cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_ISOT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a60115268f6c1a15d748223f66f71a257</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_JDAY</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a75ca00765f43d49b5dd1b4536f8b2dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MAES</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a1f9ca940ce4d3a9ff06a18fa914f59e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MODJ</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa9b7efc269c2e9fe5054c5f4b5d0e2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MY0C</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>acdcd52243cad0234ab685b7b8f243df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MY0D</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a48d1ebb28afc8e957a130befc71ee234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MY2C</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ac71788e3345a7a663d38c2913564dbbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MY2D</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a267e511ca1e79854cc8878a5ec35ec5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MY4C</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aeb365aa8cb13e605520e89f5bfa2905b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_MY4D</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a7a5a93fadabe9bb1a7a236df601a94ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_NTYP</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a471369ebece33dd8fee390e80dd4c862</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_NULL</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a185abc1465524b2ab84c2392ec5a0e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_PGMI</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3a691bab656a531acb17e2240f8000bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_PLAN</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a9dfbeff592df410d17361465f1736139</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_PLOG</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a16fca4d5703b5261335f2dfb14c8c60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_RDBE</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ab20545c499b4f7c5f6c8c29f99367472</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UGPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a0012d2a3c6aed26fda6db2c9d69d97b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UGRB</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a57bb2b1d9ff1dfefc3eaaa9717db2ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_USVN</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a00e089ed61a8d54526d482dd7e414776</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UTDT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a204d946f3378c3354e392b8409ab24b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UTNX</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ad19698710305ff89d2021ea346bc9a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UTPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aae13a5fe057b967d1e8f4449fe818ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UTRL</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa73a62efe1ad7438225433e22dc6b052</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UTYP</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a8abb0116b956bc0225d60a6071749086</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_UWKS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aadd96c3bc252e5e823897cfd391304bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_VDIF</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a5a285f6534338b2783a3742ed3cd349a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_VEXT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3889072d3e7fc01cd7cd408dc2c37fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_Y2DS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a487e6f3fb0e54875bf91917bdfd39a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_Y4DS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a48b6bc76385210ab4cc49d02080aa3e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Ht_STR_YDOY</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ae11af0e9610c2420082392398759116c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J2000_EPOCH</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3bd7226dc60194ad396c4157b0007a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JD_GPS_EPOCH</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aad7245a7012ae452c145480d2cb978ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JD_UNIX_EPOCH</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>af8d16012c86d7893b87f65a3332db1d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_WEEKS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a424fe822ecd3e435c4d8dd339b57d829</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICE_ET_ORIGIN</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a7506f20af7af1ff5ebfe77619ea5d9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICE_ET_TYPE_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a69ffd38cb96bdd22bbcbff390621f863</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICE_ET_TYPE_TAI</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa333ab173b4068cd8f9e95a5a8e3a4c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICE_ET_TYPE_TDB</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a108bbe327e79c9573d8a54c2c81d9944</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICE_ET_TYPE_TDT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ac2b03c0770fdf2f84ad5aa5c13b56f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICE_ET_TYPE_UTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a16a40581f19225157a760a1bd6ca361d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAI_GPS_DELTA</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a691d6c9cb21051f7778fc2a0be9af2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAI_UTC_DATA</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a03cb3431533034d06589f3162779823c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TDT_GPS_DELTA</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a5aab7fab19d4a7b7b8c2464873401929</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TDT_TAI_DELTA</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a0ac29c7ec31b87e66ae198b8ee4c04dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>THIS_IS_IBEX</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a774fb1e43424c7c2132e07a5958ee65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HTLdbl</type>
      <name>GTime</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a94a762aeadbfad6e4dbc86e344c1d7ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct sc_life</type>
      <name>HLife</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ae985f809c2bec65c7cee733310c06bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HTLdbl</type>
      <name>HtErr</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3e951f6a401c0d2bd562b8fe7a98af4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>time_code</type>
      <name>HTime</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a0b2457f5821a4fe275e953e24fe686c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct timeval</type>
      <name>UTime</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aede5f328989162a4db4367c5843c120f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_convert_et_to_gps</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ad5f2b9b96e9e504ccfd275d1ffa473a7</anchor>
      <arglist>(char *arg, int eph_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_delta_setup</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a5b31e5dd599642b47ffc253d7cab6a0f</anchor>
      <arglist>(char *type, char *base)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_delta_value</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>afac13ca49ce9d6f1e42a5b03d52a1c53</anchor>
      <arglist>(char *s, HTLdbl *pterror)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_dump_lives</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a085d33a1d944f7b0f119fcef78aacde4</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_ephem_type</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>af9442419daeb2eae72ac4e74b2fa748d</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_format_help</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a35fcf10f3b592df9f9a88a1151a047de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_GPS_to_HTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ac33f21c6a616935d59d611e8fff9255c</anchor>
      <arglist>(GTime gt, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_julian</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a698788e236353dd54dae91c15137e275</anchor>
      <arglist>(GTime gps)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_modjul</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aab4994a14233ca1ebfaa61c277f4d837</anchor>
      <arglist>(GTime gps)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_GPS_to_string</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a857047944d91589d8f70bd67d8e946e3</anchor>
      <arglist>(GTime gt, int style)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_TAI</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a75c8591f21524453b7c73016e26f981f</anchor>
      <arglist>(HTLdbl gps)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_TDT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a44c3fd1d694d6a7f1c62c49dbd185d1f</anchor>
      <arglist>(HTLdbl gps)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_GPS_to_UTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3c0e89f81e7b752f8023a50bdf1d8825</anchor>
      <arglist>(GTime gt, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_HTC_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a511cf1f49779a273eca02e1b474a5f2a</anchor>
      <arglist>(HTime ht, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_HTC_to_secs</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a21aaf30533aabd95dcd6073678047277</anchor>
      <arglist>(HTime ht)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_HTC_to_string</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a59fba69894045eaadb14ad78789d302d</anchor>
      <arglist>(HTime ht, int style)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_HTC_to_UTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a298a0dfa050b97be1bf33857fd300fb6</anchor>
      <arglist>(HTime ht, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_initialize</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>afea19290ab6600d273b90c1ea7be75aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_julday</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a71b0bd9881fbfdf9fe2e53503faf47a3</anchor>
      <arglist>(int mm, int id, int iyyy)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_julday_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a4698c264a4cde7cce14717e624108114</anchor>
      <arglist>(HTLdbl julian)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_julian_epoch</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aba07f80329e8a2b22ca8e2a540585fbf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_julian_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa31942e360315221b4377d564e7fcca3</anchor>
      <arglist>(HTLdbl julian)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_leapsecs_from_year_start_to_gps</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>abbffbfc9dc3251c8771f5748a6ccb140</anchor>
      <arglist>(int year, GTime gps)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_leapsecs_since_J2000</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a55d9068b707b2ca6fbd5a576206dd218</anchor>
      <arglist>(GTime gt)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_modjul_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a584076495f1504487c40dfb6d63dd0cc</anchor>
      <arglist>(HTLdbl modjul)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_now_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>abdc33d6136e031af731b540e5d2bcab4</anchor>
      <arglist>(HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_now_HTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3322c08130891630866e2234e469d619</anchor>
      <arglist>(HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_now_UTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a1f38999efabab45d6dd00da257d2f87b</anchor>
      <arglist>(HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_qtype_to_style</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ae80511bc1aa0ecda1cbb09bdd25d282e</anchor>
      <arglist>(char *rtype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_reset</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a2f68a03e1bfb57277bae02a5f158c2b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_rtype_to_style</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ad957cb526bf9cc7ea69b0b295cd5f57b</anchor>
      <arglist>(char *rtype)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_secs_to_HTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ad4f945ae293a094f44739053d4ab3709</anchor>
      <arglist>(HTLdbl s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_spice_sprintf</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a8337ef72853ad3255b7138c7f50306f0</anchor>
      <arglist>(char *b, char *tla, HTLdbl t)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_string_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a937ade1a79370e19c7f0ae1d507bc3ab</anchor>
      <arglist>(char *s, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_string_to_HTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a71e5f4a80cf29cd938693367e02a7747</anchor>
      <arglist>(char *s, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_string_to_UTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>af325fdf87e98491d32c7e59b8d2ca462</anchor>
      <arglist>(char *s, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_string_type</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a914bb8561b76d2d8a25e24e8153ead62</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TAI_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a1fb67765cf1ba80aac57d6a1e2b18dab</anchor>
      <arglist>(HTLdbl tai)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TDB_to_TDT</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a675bbf79da63999e3e0911372ca629ae</anchor>
      <arglist>(HTLdbl tdb)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TDT_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>acb0a4683750acbe2cc084561189a6dd9</anchor>
      <arglist>(HTLdbl tdt)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_TDT_to_TDB</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ab2405aef0f678b53e8b985f9fc8e2473</anchor>
      <arglist>(HTLdbl tdt)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_UTC_to_GPS</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a361867e91e0454561c882ca759ddb602</anchor>
      <arglist>(UTime ut, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_UTC_to_HTC</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a65face7a869e942d1d884ff7a5445d46</anchor>
      <arglist>(UTime ut, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Ht_UTC_to_string</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>acf097732594eee131976230bd08304b7</anchor>
      <arglist>(UTime ut, int style)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_vdif_epoch</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a7a460e8890b2a217db11b535a5623b05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>pass_str2ut</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a74139cc28a11c18adbaa7c643602f743</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_asserted_string_type</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a4aa23030803fb3bcb0e61b001d3ea1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_d_mult</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>af942b81aecb53b53997b8a54e283543e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_d_orig</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a2444af1acc7c16f8ac670277dbdc5642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_default_error</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a3df7aaf01b110959bd60e60a496eba8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_dwab_dw_mult</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aa2bef73b983414eeb6d49101ef7b5777</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_dwab_dwdelta</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a7df533d0e40525899d79dea0fafe9e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GTime</type>
      <name>Ht_gps_origin</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ab6c2ab126dfc69a0344aa3de9fbcd320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IPP_word</type>
      <name>Ht_hete_epoch</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a5c90c1193ffac98d7fa1f8ba3af1ca0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HLife *</type>
      <name>Ht_last_life</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aea4d032ace72834fb4f2a229b4db1f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>Ht_life_file</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a9d74039e4cd6de46263d0f70bfec66bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HLife *</type>
      <name>Ht_lifetimes</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a7d3d0c415d215785568f57c4df70c158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_string_min_len</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>afffd75c4c5172e891471b21260cbd301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_suppress_Z</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>ae971c9a5d85beaf39ccbd8133c7c0cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_tz_unset</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a2cb8ea46fe955225eee0bfcb9fa610f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_update_interval</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a2bebc6636bac62000e015b41a29db720</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>in_comment.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>in__comment_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>in__comment_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>in__comment_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>in_comment</name>
      <anchorfile>in__comment_8c.html</anchorfile>
      <anchor>a30a8353092d79704638e3475ee55b840</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>in_quote.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>in__quote_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>in__quote_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>in__quote_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>in_quote</name>
      <anchorfile>in__quote_8c.html</anchorfile>
      <anchor>a72212bf508b0e227bd2733b6aca0cc5a</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>index_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>index__data_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <member kind="function">
      <type>int</type>
      <name>index_data</name>
      <anchorfile>index__data_8c.html</anchorfile>
      <anchor>acf0100fca2af66d17701bbfc83bc7261</anchor>
      <arglist>(seg_data *data, int nseg, summary dsumm[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_000.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>init__000_8c.html</filename>
    <includes id="type__000_8h" name="type_000.h" local="yes" imported="no">type_000.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>init__000_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>init__000_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_000</name>
      <anchorfile>init__000_8c.html</anchorfile>
      <anchor>ab98fe8b4d332b490cca22a03ad555bfa</anchor>
      <arglist>(struct type_000 *t000, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_fxp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>init__fxp_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>init_fxp</name>
      <anchorfile>init__fxp_8c.html</anchorfile>
      <anchor>aea46f6bc32b29701d6f545ec908c69ac</anchor>
      <arglist>(struct fxparam *fxp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_inputs.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>init__inputs_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>init_inputs</name>
      <anchorfile>init__inputs_8c.html</anchorfile>
      <anchor>addf1094bd04444873ba5599b4d3df5a0</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_scan.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>init__scan_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>init_scan</name>
      <anchorfile>init__scan_8c.html</anchorfile>
      <anchor>a9dbd68898be1eb6edbe097f20c915e79</anchor>
      <arglist>(struct scan_struct *scan, int nstat)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_summ.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>init__summ_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>init_summ</name>
      <anchorfile>init__summ_8c.html</anchorfile>
      <anchor>a60367e7cce2fbe848be958bb5374ec38</anchor>
      <arglist>(struct datasumm *summ, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_tokens.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>init__tokens_8c.html</filename>
    <includes id="parser_8h" name="parser.h" local="yes" imported="no">parser.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>tokenize</name>
      <anchorfile>init__tokens_8c.html</anchorfile>
      <anchor>a514d0d7146cbc5eb0e630930c64478ba</anchor>
      <arglist>(aa, bb, cc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_tokens</name>
      <anchorfile>init__tokens_8c.html</anchorfile>
      <anchor>af773e7385850540b832aff590170ceb0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>int_to_time.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>int__to__time_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>int_to_time</name>
      <anchorfile>int__to__time_8c.html</anchorfile>
      <anchor>a4a7431c54fab5d51566a9c051e8abb4d</anchor>
      <arglist>(int tim, int *year, int *day, int *hour, int *min, int *sec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>interp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>interp_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DR</name>
      <anchorfile>interp_8c.html</anchorfile>
      <anchor>a349dad5e520932e840e6f8fc806bd94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MD</name>
      <anchorfile>interp_8c.html</anchorfile>
      <anchor>aa7c91c377791a7af0880e479d30efe70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD</name>
      <anchorfile>interp_8c.html</anchorfile>
      <anchor>a9f5064fb4edd1381305163ee726f8ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp</name>
      <anchorfile>interp_8c.html</anchorfile>
      <anchor>afb8c133b5c47e4ff8b5ab5d974569b44</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>interp555.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/src/</path>
    <filename>interp555_8c.html</filename>
    <member kind="function">
      <type>void</type>
      <name>interp555</name>
      <anchorfile>interp555_8c.html</anchorfile>
      <anchor>ab05d92c15f8ae5f2fe56098d10c9a345</anchor>
      <arglist>(double drf[5][5][5], double xi[3], double *drfval)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ion_covariance.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>ion__covariance_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ion_covariance</name>
      <anchorfile>ion__covariance_8c.html</anchorfile>
      <anchor>a69bef583c20a74a4dd177187c00228a3</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ion_search.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>ion__search_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>N_FINE_PTS</name>
      <anchorfile>ion__search_8c.html</anchorfile>
      <anchor>a252e314e628877c6af790890212a532e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_FINE_PTS_SMOOTH</name>
      <anchorfile>ion__search_8c.html</anchorfile>
      <anchor>a6ca9355001574150c41296a11aa1c4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_MED_PTS</name>
      <anchorfile>ion__search_8c.html</anchorfile>
      <anchor>a7172fadd699bd6ab4d2a8f34c641792e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ion_search</name>
      <anchorfile>ion__search_8c.html</anchorfile>
      <anchor>a50b1a8010487945dd60319de611519bd</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ion_search_smooth</name>
      <anchorfile>ion__search_8c.html</anchorfile>
      <anchor>a42e487a5c3e10a1991d83db57f00725b</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>smoother</name>
      <anchorfile>ion__search_8c.html</anchorfile>
      <anchor>a53a10849ffb668136ba6a9d2402c782b</anchor>
      <arglist>(double *f, double *g, double *tec_step, int *npts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_tecs</name>
      <anchorfile>ion__search_8c.html</anchorfile>
      <anchor>a38f3fa9a9c361ce9be5a539d5499fb1c</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ismk4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>ismk4_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>ismk4_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>ismk4_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ismk4</name>
      <anchorfile>ismk4_8c.html</anchorfile>
      <anchor>a892126268b5961f7fa4cbdac55e64780</anchor>
      <arglist>(char *name, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>isoclog.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>isoclog_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>comlog</name>
      <anchorfile>isoclog_8h.html</anchorfile>
      <anchor>ac9f4817a8881fbbf7e7236030aad1bc6</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>comlog_enabled</name>
      <anchorfile>isoclog_8h.html</anchorfile>
      <anchor>a287df4e353ff1384c6dd7911de83521e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>errlog</name>
      <anchorfile>isoclog_8h.html</anchorfile>
      <anchor>ab888eab2f32d36457bc7afb603ae357f</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>errlog_enabled</name>
      <anchorfile>isoclog_8h.html</anchorfile>
      <anchor>af266e1e8ca46e805204679c0bf6a6236</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>isoclog</name>
      <anchorfile>isoclog_8h.html</anchorfile>
      <anchor>addf2ba0e9e90cd92217cafdfc7776956</anchor>
      <arglist>(X)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ivex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>ivex_8h.html</filename>
    <class kind="struct">bad_frame_struct</class>
    <class kind="struct">CUCC_port_struct</class>
    <class kind="struct">drive_init_struct</class>
    <class kind="struct">headstack_DIM_connect_struct</class>
    <class kind="struct">headstack_parms_struct</class>
    <class kind="struct">ivex_struct</class>
    <class kind="struct">moni_read_struct</class>
    <class kind="struct">pbs_init_struct</class>
    <class kind="struct">su_connect_struct</class>
    <class kind="struct">SUCC_port_struct</class>
    <class kind="struct">tim_mon_struct</class>
    <class kind="struct">TRM_config_struct</class>
    <class kind="struct">vacuum_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>MAXHEADS</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a67e488f26e398d2667d24c5c9b814d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_ABSENT</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>abf3c3f3084d9564414860637353d2330</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_MAG0</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ab5d8b3bc0985771121b51300b2b43edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_MAG1</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a36a993cfbe48d90a724e057bb9ad02ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_MAG2</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a9441add766e2950406080cfb6c205ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_MAG3</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>aedf1440797f1171f98bf5d26c33f98ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_SIGN0</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6e5668f948344972b2813e350caec3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_SIGN1</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ad673a9540d062c4dae4f5ba1807e31d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_SIGN2</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a5037ac168bbae25965bb414ff6a68d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRM_SIGN3</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>acee217794f1e41b3f98084bc60ccd5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRV_MK4</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6b7b47dd702d9e331586d485013fd1eaa8f1a7a8a1c338175c78c15569bb7cd30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRV_VLBA</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6b7b47dd702d9e331586d485013fd1eaa7a672a4c2613790d03397fd7aad1d5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRV_MK5P</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6b7b47dd702d9e331586d485013fd1eaa6849106c97d48d81bfc5a5f326e2edd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRV_MK5A</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6b7b47dd702d9e331586d485013fd1eaad8c15e841e78213d7e880e192cd0b7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRV_MK5B</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6b7b47dd702d9e331586d485013fd1eaa7819e15a95945d48c2579040636a5f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVEN</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>af9bdc3014f3d54c426b6d2df10de4960a8487756fbc720579906f0ae1738f0fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ODD</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>af9bdc3014f3d54c426b6d2df10de4960aa29cedab858353a26006af9db7cd1ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>af9bdc3014f3d54c426b6d2df10de4960ac157bdf0b85a40d2619cbc8bc1ae5fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HSC0</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>adb49720dc49f7d4e4cf9adbf2948e409a90d16746f0bfaafdfa194671636631d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HSC1</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>adb49720dc49f7d4e4cf9adbf2948e409ae4f6483509ae10d4ade268b73ea303dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HSC2</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>adb49720dc49f7d4e4cf9adbf2948e409af6847132715715c4d8647f9dcd49c209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HSC3</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>adb49720dc49f7d4e4cf9adbf2948e409afafadff52069a65acb80848afb4ed892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_HSC</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>adb49720dc49f7d4e4cf9adbf2948e409a471cbffe29f216c5590f85c0eed72fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVERSE</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>aae05225933a42f81e7c4a9fb286596f9a906b7cc20b42994dda4da492767c1de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORWARD</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>aae05225933a42f81e7c4a9fb286596f9aa26736999186daf8146f809e863712a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ivex_info.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>ivex__info_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ISNAME</name>
      <anchorfile>ivex__info_8c.html</anchorfile>
      <anchor>a97382308533703e394c3ea1e471b2848</anchor>
      <arglist>(namestring)</arglist>
    </member>
    <member kind="function">
      <type>struct ivex_struct *</type>
      <name>ivex_info</name>
      <anchorfile>ivex__info_8c.html</anchorfile>
      <anchor>af74004812bddace985dde569a93c1895</anchor>
      <arglist>(char *key)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ivex_del_list</name>
      <anchorfile>ivex__info_8c.html</anchorfile>
      <anchor>a216e2c4ab204b9ecd71908503931b784</anchor>
      <arglist>[2048]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>julian.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>julian_8c.html</filename>
    <includes id="julian_8h" name="julian.h" local="yes" imported="no">julian.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ITOA</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>aa2d59aa707464d38fd3c531f1e564c75</anchor>
      <arglist>(s, i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NSTAT</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a4a9a1642d81917a657708ea18c9c075c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SC</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a6bb7a09d1931dfbdd6d373cfe6e23357</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATIC</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a10b2d890d871e1489bb02b7e70d9bdfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>atomin</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>ad8a9e84d2a10cc7809dce6bf1f8f369f</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>SC void</type>
      <name>cpy0p</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a8780b294cc62d25b68a83c418503159f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>STATIC void</type>
      <name>cpy0p</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>acc42fb3b93bff7f23c6a6a82afa5de24</anchor>
      <arglist>(char *dest, char *src, int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>day_of_jd</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a37d541befafd57ea5ee9799d7dfe5433</anchor>
      <arglist>(long int jd)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>degdms</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a2b6ff79d2b92d8f7de844db6454adf07</anchor>
      <arglist>(int pre, HTLdbl x)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>jdstr</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>abb86a76f627c2b594da5c227ebd6f39f</anchor>
      <arglist>(long int jd)</arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>julday</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>ae09533a38bd5875e7fc74ddddb0119a9</anchor>
      <arglist>(int y, int m, int d)</arglist>
    </member>
    <member kind="function">
      <type>SC int</type>
      <name>leapyr</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a2f107fe03e93c062bbfdf733498c352a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>STATIC int</type>
      <name>leapyr</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a0b5e1925a2a09fa6aab202fc2d35c3a1</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>month_of_jd</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a92df59d4d0eefebe0cc3ee7f29fa0007</anchor>
      <arglist>(long int jd)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>stoup</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a222df5c8f8a255c0768cce87a012d789</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>timstr</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a6f3388806f18cdc86b0de9db5de79380</anchor>
      <arglist>(HTLdbl m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>year_of_jd</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>acdb19a7f41485aa533ba824e252ab9a1</anchor>
      <arglist>(long int jd)</arglist>
    </member>
    <member kind="variable">
      <type>STATIC struct month</type>
      <name>calndr</name>
      <anchorfile>julian_8c.html</anchorfile>
      <anchor>a6cb18a0862d27ff31e4afada7d9f9c06</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>julian.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>julian_8h.html</filename>
    <includes id="time__float__type_8h" name="time_float_type.h" local="yes" imported="no">time_float_type.h</includes>
    <member kind="function">
      <type>HTLdbl</type>
      <name>atomin</name>
      <anchorfile>julian_8h.html</anchorfile>
      <anchor>a306ba8e4c8ee6f935f573a118de824e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>degdms</name>
      <anchorfile>julian_8h.html</anchorfile>
      <anchor>a61fd6446f072d69af215be5f94a03992</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>jdstr</name>
      <anchorfile>julian_8h.html</anchorfile>
      <anchor>abcd47981b73e3dcb65ae75307671a98f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>julday</name>
      <anchorfile>julian_8h.html</anchorfile>
      <anchor>ae09533a38bd5875e7fc74ddddb0119a9</anchor>
      <arglist>(int y, int m, int d)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>stoup</name>
      <anchorfile>julian_8h.html</anchorfile>
      <anchor>a54b61925cebef47da0c5805a90c8d5ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>timstr</name>
      <anchorfile>julian_8h.html</anchorfile>
      <anchor>ac7abb3e54a8ee2e25beecfbb6a056e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>year_of_jd</name>
      <anchorfile>julian_8h.html</anchorfile>
      <anchor>acdb19a7f41485aa533ba824e252ab9a1</anchor>
      <arglist>(long int jd)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>leapsec.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>leapsec_8c.html</filename>
    <includes id="htime_8h" name="htime.h" local="yes" imported="no">htime.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CALCULATE_DEFAULT_TABLE</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>ade381ecce61b3ef5f1e1cebd7a6aa7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_LEAP_CNT</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a000a745b94b5cc6eca93ce302a844bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IGREG</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a7de2b0015202d4f9d026822cfea5cdb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct leaptable</type>
      <name>LeapTableEntry</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a8ff4ac953523d21aec62ec5a9b33d2c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_julian</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a698788e236353dd54dae91c15137e275</anchor>
      <arglist>(GTime gps)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_julian_via_UTC</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a1bc0a2070cd0ac4354f0d8a4df47a228</anchor>
      <arglist>(GTime gps)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_GPS_to_modjul</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>aab4994a14233ca1ebfaa61c277f4d837</anchor>
      <arglist>(GTime gps)</arglist>
    </member>
    <member kind="function">
      <type>UTime</type>
      <name>Ht_GPS_to_UTC</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a3c0e89f81e7b752f8023a50bdf1d8825</anchor>
      <arglist>(GTime gt, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_julday</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a71b0bd9881fbfdf9fe2e53503faf47a3</anchor>
      <arglist>(int mm, int id, int iyyy)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_julday_to_GPS</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a4698c264a4cde7cce14717e624108114</anchor>
      <arglist>(HTLdbl julian)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_julian_epoch</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>aba07f80329e8a2b22ca8e2a540585fbf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_julian_to_GPS</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>aa31942e360315221b4377d564e7fcca3</anchor>
      <arglist>(HTLdbl julian)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_julian_to_GPS_via_UTC</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>ac4a339502ffdd6dcf96107a53a323499</anchor>
      <arglist>(HTLdbl julian)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_leapsecs_from_year_start_to_gps</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>abbffbfc9dc3251c8771f5748a6ccb140</anchor>
      <arglist>(int year, GTime gps)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_leapsecs_since_J2000</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a55d9068b707b2ca6fbd5a576206dd218</anchor>
      <arglist>(GTime gt)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_modjul_to_GPS</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>ad8bfabc5f6b576bc82c6219bececb6be</anchor>
      <arglist>(HTLdbl mjd)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_UTC_to_GPS</name>
      <anchorfile>leapsec_8c.html</anchorfile>
      <anchor>a361867e91e0454561c882ca759ddb602</anchor>
      <arglist>(UTime ut, HtErr *err)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>legacy_hops_date.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>legacy__hops__date_8hh.html</filename>
    <class kind="class">hops::legacy_hops_date</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>lex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>lex_8c.html</filename>
    <includes id="parser_8h" name="parser.h" local="yes" imported="no">parser.h</includes>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>is_char</name>
      <anchorfile>lex_8c.html</anchorfile>
      <anchor>ae76ed1e347bf8e3a599366747f911a3c</anchor>
      <arglist>(char *next_token)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_float</name>
      <anchorfile>lex_8c.html</anchorfile>
      <anchor>a8f4eb4ff70ff5e27fc671b5f16cd288d</anchor>
      <arglist>(char *next_token, double *f_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_integer</name>
      <anchorfile>lex_8c.html</anchorfile>
      <anchor>abca49c9d3308c7561e359a6791a1bfd7</anchor>
      <arglist>(char *next_token, int *i_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_keyword</name>
      <anchorfile>lex_8c.html</anchorfile>
      <anchor>ace2a0aa3ce2eba14f5465e23af306cd0</anchor>
      <arglist>(char *next_token)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>is_timeval</name>
      <anchorfile>lex_8c.html</anchorfile>
      <anchor>a75aa02c466ed2b254fe35c4a8b52804c</anchor>
      <arglist>(char *next_token, int *i_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lex</name>
      <anchorfile>lex_8c.html</anchorfile>
      <anchor>aded062758c98d3a296703cce34d87d41</anchor>
      <arglist>(char *input_string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lifetime.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>lifetime_8c.html</filename>
    <includes id="htime_8h" name="htime.h" local="yes" imported="no">htime.h</includes>
    <includes id="isoclog_8h" name="isoclog.h" local="yes" imported="no">isoclog.h</includes>
    <member kind="function">
      <type>void</type>
      <name>Ht_dump_lives</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a085d33a1d944f7b0f119fcef78aacde4</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_GPS_to_HTC</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>ac33f21c6a616935d59d611e8fff9255c</anchor>
      <arglist>(GTime gt, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>GTime</type>
      <name>Ht_HTC_to_GPS</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a511cf1f49779a273eca02e1b474a5f2a</anchor>
      <arglist>(HTime ht, HtErr *err)</arglist>
    </member>
    <member kind="function">
      <type>HTLdbl</type>
      <name>Ht_HTC_to_secs</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a21aaf30533aabd95dcd6073678047277</anchor>
      <arglist>(HTime ht)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_initialize</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>afea19290ab6600d273b90c1ea7be75aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ht_reset</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a2f68a03e1bfb57277bae02a5f158c2b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>HTime</type>
      <name>Ht_secs_to_HTC</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>ad4f945ae293a094f44739053d4ab3709</anchor>
      <arglist>(HTLdbl s)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_asserted_string_type</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a4aa23030803fb3bcb0e61b001d3ea1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_d_mult</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>af942b81aecb53b53997b8a54e283543e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_d_orig</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a2444af1acc7c16f8ac670277dbdc5642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>Ht_dwab_dw_mult</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>aa2bef73b983414eeb6d49101ef7b5777</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_dwab_dwdelta</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a7df533d0e40525899d79dea0fafe9e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GTime</type>
      <name>Ht_gps_origin</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>ab6c2ab126dfc69a0344aa3de9fbcd320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IPP_word</type>
      <name>Ht_hete_epoch</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a5c90c1193ffac98d7fa1f8ba3af1ca0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HLife *</type>
      <name>Ht_last_life</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>aea4d032ace72834fb4f2a229b4db1f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>Ht_life_file</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a9d74039e4cd6de46263d0f70bfec66bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HLife *</type>
      <name>Ht_lifetimes</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a7d3d0c415d215785568f57c4df70c158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_string_min_len</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>afffd75c4c5172e891471b21260cbd301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_suppress_Z</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>ae971c9a5d85beaf39ccbd8133c7c0cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_tz_unset</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a2cb8ea46fe955225eee0bfcb9fa610f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Ht_update_interval</name>
      <anchorfile>lifetime_8c.html</anchorfile>
      <anchor>a2bebc6636bac62000e015b41a29db720</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>linterp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/src/</path>
    <filename>linterp_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>linterp</name>
      <anchorfile>linterp_8c.html</anchorfile>
      <anchor>a57b8842ba880dfbf6d1b7ca335a7e126</anchor>
      <arglist>(double coord1, double value1, double coord2, double value2, double coord, double *value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>locate_blocks.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>locate__blocks_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>locate_blocks</name>
      <anchorfile>locate__blocks_8c.html</anchorfile>
      <anchor>aa9b462a393638d52ef235a5b2503148a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>locate_cq.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>locate__cq_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>locate_cq</name>
      <anchorfile>locate__cq_8c.html</anchorfile>
      <anchor>a269a68432aa3882e709abc57ea5baf11</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>locate_pscurs.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>locate__pscurs_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>locate_pscurs</name>
      <anchorfile>locate__pscurs_8c.html</anchorfile>
      <anchor>a84877152fa62620c9f88cd23ab5ebcbc</anchor>
      <arglist>(float *x, float *y, struct ps_array *psarray, struct psplot_cell **cell)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lvex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>lvex_8h.html</filename>
    <class kind="struct">discinfo</class>
    <class kind="struct">lvex_struct</class>
    <class kind="struct">station_log</class>
    <member kind="define">
      <type>#define</type>
      <name>MAXDISCS</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a68726b2bd279851a0c67e0a52211ea6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTATIONS</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a5961d051984b9bee9a6e190abb80153d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lvex_info.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>lvex__info_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>struct lvex_struct *</type>
      <name>lvex_info</name>
      <anchorfile>lvex__info_8c.html</anchorfile>
      <anchor>a9e9340061bab9488ea27bd4c55f48ff3</anchor>
      <arglist>(char *scanname)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lvex_del_list</name>
      <anchorfile>lvex__info_8c.html</anchorfile>
      <anchor>a0aeb39eba9bbcd3ba9d542c59a72228c</anchor>
      <arglist>[200000]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>make_flist.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>make__flist_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="freqlist_8h" name="freqlist.h" local="yes" imported="no">freqlist.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>make__flist_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>make__flist_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_flist</name>
      <anchorfile>make__flist_8c.html</anchorfile>
      <anchor>a96671b54deb670aeac2ee53b103f93ca</anchor>
      <arglist>(struct station_struct *stn1, struct station_struct *stn2, struct freqlist *fl)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>make_passes.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>make__passes_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="function">
      <type>int</type>
      <name>make_passes</name>
      <anchorfile>make__passes_8c.html</anchorfile>
      <anchor>a25006d8390ed9ea55abb49e53422f06c</anchor>
      <arglist>(struct scan_struct *ovex, struct freq_corel *corel, struct type_param *param, struct type_pass **pass, int *npass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>make_plotdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>make__plotdata_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>GRID_PTS</name>
      <anchorfile>make__plotdata_8c.html</anchorfile>
      <anchor>a7036e1e75fbabd9310c6c47c09f945ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_plotdata</name>
      <anchorfile>make__plotdata_8c.html</anchorfile>
      <anchor>abc2f91d01372d8b8c2188440eed8b56b</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>make_postplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>make__postplot_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="ovex_8h" name="ovex.h" local="yes" imported="no">ovex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>make_postplot</name>
      <anchorfile>make__postplot_8c.html</anchorfile>
      <anchor>a106103535feafaa71357cf417a5931e9</anchor>
      <arglist>(struct scan_struct *root, struct type_pass *pass, char *fringename, struct type_221 **t221)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>make_psarray4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>make__psarray4_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>make_psarray4</name>
      <anchorfile>make__psarray4_8c.html</anchorfile>
      <anchor>a36cf8ece0e02525f350f045d425f8c41</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>make_tri.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>make__tri_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>make_tri</name>
      <anchorfile>make__tri_8c.html</anchorfile>
      <anchor>a88916dbeb64b226465af35312f1bc896</anchor>
      <arglist>(char *stations, int *ntri)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>newbase</name>
      <anchorfile>make__tri_8c.html</anchorfile>
      <anchor>a48d4313be27f05a0f0cd27bc54d712a8</anchor>
      <arglist>(char *baselist, char *triangle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>makekey.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>makekey_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="sort_8h" name="sort.h" local="yes" imported="no">sort.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>qflist</name>
      <anchorfile>makekey_8c.html</anchorfile>
      <anchor>af5fc15dfccd02cce5302ba7f8b3aa58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>makekey</name>
      <anchorfile>makekey_8c.html</anchorfile>
      <anchor>a95e037d16f0bc1a1b395330a14453f10</anchor>
      <arglist>(void *dptr, int key, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mark42hops.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>mark42hops_8cc.html</filename>
    <includes id="MHO__MK4ScanConverter_8hh" name="MHO_MK4ScanConverter.hh" local="yes" imported="no">MHO_MK4ScanConverter.hh</includes>
    <includes id="MHO__MPIInterfaceWrapper_8hh" name="MHO_MPIInterfaceWrapper.hh" local="yes" imported="no">MHO_MPIInterfaceWrapper.hh</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>mark42hops_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>max555.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/src/</path>
    <filename>max555_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>max</name>
      <anchorfile>max555_8c.html</anchorfile>
      <anchor>affe776513b24d84b39af8ab0930fef7f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>min</name>
      <anchorfile>max555_8c.html</anchorfile>
      <anchor>ac6afabdc09a49a433ee19d8a9486056d</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max555</name>
      <anchorfile>max555_8c.html</anchorfile>
      <anchor>aea074dcf34218c472a79b94ecb2addac</anchor>
      <arglist>(double drf[5][5][5], double xlim[3][2], double xi[3], double *drfmax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>meta_struct.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/include/</path>
    <filename>meta__struct_8h.html</filename>
    <class kind="struct">type_meta</class>
  </compound>
  <compound kind="file">
    <name>MHO_AbsoluteValue.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__AbsoluteValue_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__UnaryFunctor_8hh" name="MHO_UnaryFunctor.hh" local="yes" imported="no">MHO_UnaryFunctor.hh</includes>
    <class kind="class">hops::MHO_AbsoluteValue</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_AFileDefinitions.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__AFileDefinitions_8cc.html</filename>
    <includes id="MHO__AFileDefinitions_8hh" name="MHO_AFileDefinitions.hh" local="yes" imported="no">MHO_AFileDefinitions.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_AFileDefinitions.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__AFileDefinitions_8hh.html</filename>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <class kind="class">hops::MHO_AFileDefinitions</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_AFileInfoExtractor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__AFileInfoExtractor_8cc.html</filename>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__FileKey_8hh" name="MHO_FileKey.hh" local="yes" imported="no">MHO_FileKey.hh</includes>
    <includes id="MHO__AFileDefinitions_8hh" name="MHO_AFileDefinitions.hh" local="yes" imported="no">MHO_AFileDefinitions.hh</includes>
    <includes id="MHO__AFileInfoExtractor_8hh" name="MHO_AFileInfoExtractor.hh" local="yes" imported="no">MHO_AFileInfoExtractor.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CHAR_BUF_SIZE</name>
      <anchorfile>MHO__AFileInfoExtractor_8cc.html</anchorfile>
      <anchor>ad12b7d541d769891e4178442bec9c8e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>afile_header</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab62f3705527ff994bb1981588622fce9</anchor>
      <arglist>(int version, int type, char afile_com_char)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_buffer</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a34069855e99e339c27c8bcd3c6f864bc</anchor>
      <arglist>(char *buf)</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>afile_com_char</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a695ebe94a62183f552658efc11ae728b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>fformat_v5</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0744e6a58160c1eeb3f19e1fcfa6172e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>fformat_v6</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5357ca710b0a4b6eae37d0ebcd67daf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header50</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a65517ebb7561c68a573c841d57300e2e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header51</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab3bd2a1b96f4ace5f3b60c77a34fe62a</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header52</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a59114722cce0fe4e28e27b335a42573c</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header53</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7209e638225ae13a162dd9ec46786db9</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header60</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7e4c3ba12ee43067f5a58a18565ecf8f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header61</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9b3fb31578772ac6786982f52591a9a1</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header62</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab97818e5d05a2d7878276e76c9f2addf</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header63</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad50dec3694eabfecfb37b6ffee2fec5d</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_AFileInfoExtractor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__AFileInfoExtractor_8hh.html</filename>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <class kind="class">hops::MHO_AFileInfoExtractor</class>
    <namespace>hops</namespace>
    <member kind="enumeration">
      <type></type>
      <name>par_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a2d490927d4b284c0ef8b09343f9603ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>int64_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a39aa2d058a8feb36d0fafc94c4f9bd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>double_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6af3f7b4b7a81742aed110f3d50e900eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a8dd12b615b04dc9f4a5fcf47e7c6aee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bool_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a6810caa67243f3b2884fd5a482bf7603</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unknown_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a73d1ef5f73a1021623fd8ff11e3bb23e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ArrayMath.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Math/cl/</path>
    <filename>MHO__ArrayMath_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_Axis.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__Axis_8hh.html</filename>
    <includes id="MHO__IndexLabelInterface_8hh" name="MHO_IndexLabelInterface.hh" local="yes" imported="no">MHO_IndexLabelInterface.hh</includes>
    <includes id="MHO__IntervalLabelInterface_8hh" name="MHO_IntervalLabelInterface.hh" local="yes" imported="no">MHO_IntervalLabelInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <class kind="class">hops::MHO_Axis</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_Axis&lt; char &gt;</type>
      <name>MHO_AxisChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab28bb1a8d2574463f9671cfc095aaf96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::complex&lt; double &gt; &gt;</type>
      <name>MHO_AxisComplexDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad575b4e743c7d4fff1aa0a41511bbc29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::complex&lt; float &gt; &gt;</type>
      <name>MHO_AxisComplexFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a93b242d6e77cc9c6e784f445e1a5925d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::complex&lt; long double &gt; &gt;</type>
      <name>MHO_AxisComplexLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad142c2298784f348d8db7f42f30d7e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>MHO_AxisDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a68c52039667eee64c2b627f3f48325ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; float &gt;</type>
      <name>MHO_AxisFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af630eae72c4708218dfe859dd7824106</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; int &gt;</type>
      <name>MHO_AxisInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad2a938a2d29908e42015548966a4683d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; long &gt;</type>
      <name>MHO_AxisLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a02334ffe6d48c44145ae992353082334</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; long double &gt;</type>
      <name>MHO_AxisLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab3474bb63f09127b7f52b8ccecfe718b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; long long &gt;</type>
      <name>MHO_AxisLongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a761bbb9d4934c671c588a7befd6e52cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; short &gt;</type>
      <name>MHO_AxisShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1d9a678f77b431a09b11af38a69a243d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>MHO_AxisString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2d44b3ffd680e07afd52e53ddc0e273d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned char &gt;</type>
      <name>MHO_AxisUChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a27fceed677c4baa89b90b6f2808716b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned int &gt;</type>
      <name>MHO_AxisUInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7bfab43279798ac1e6453be1be794c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned long &gt;</type>
      <name>MHO_AxisULong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad840f91d2ab5dd52176c386987a4f512</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned long long &gt;</type>
      <name>MHO_AxisULongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3a2c8d6d8383694f293ea8bef564cd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned short &gt;</type>
      <name>MHO_AxisUShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a35f198950e86bf0616c1d7ec5015226e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_AxisPack.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__AxisPack_8hh.html</filename>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <class kind="class">hops::MHO_AxisPack</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DefAxisPack1</name>
      <anchorfile>MHO__AxisPack_8hh.html</anchorfile>
      <anchor>a7cd9be18ed070a4a1d79b12bd2b98465</anchor>
      <arglist>(TYPE1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DefAxisPack2</name>
      <anchorfile>MHO__AxisPack_8hh.html</anchorfile>
      <anchor>a405817bfbcf5e9aa2e384d65502714d7</anchor>
      <arglist>(TYPE1, TYPE2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DefAxisPack3</name>
      <anchorfile>MHO__AxisPack_8hh.html</anchorfile>
      <anchor>a280869185d0f8af23c6f3e40748f4058</anchor>
      <arglist>(TYPE1, TYPE2, TYPE3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DefAxisPack4</name>
      <anchorfile>MHO__AxisPack_8hh.html</anchorfile>
      <anchor>aaf7942e6f70c57263e9814e4d86cdd73</anchor>
      <arglist>(TYPE1, TYPE2, TYPE3, TYPE4)</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac5d5af22f2673e1a054bdd3eb64f5825</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Int</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5e46198ab188f5da37f5f03ebebcdc17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9163387793470606909d77fa3a33513d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack1</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa7e371fcc850757bd8f8ddabdc45a391</anchor>
      <arglist>(Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack1</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a448113d66dc1468c6e1cb3d65186b154</anchor>
      <arglist>(Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack1</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af0b40fe097c506704348d20cbb196a65</anchor>
      <arglist>(String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af8c28795e28809f4ab0954bd75015984</anchor>
      <arglist>(Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64e43b68b8ad8020d3e67f571727d591</anchor>
      <arglist>(Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa22d36ca42fb01dda36333b5c7315db2</anchor>
      <arglist>(Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ade8c9bff2715f81444d7cab0b21cb843</anchor>
      <arglist>(Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a88037b70c7c9da061fc7d9fffffc599d</anchor>
      <arglist>(Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a218c756b89f12b4f2bbbbe3d0359fe4c</anchor>
      <arglist>(Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a32476257141883bbd3d56c82d6994932</anchor>
      <arglist>(String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64f880b2026005fdf21b355ee1b569ff</anchor>
      <arglist>(String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae54372173572de85288948ee08de11d9</anchor>
      <arglist>(String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab494f9fd9472378e9666241117e1980b</anchor>
      <arglist>(Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af4770804e01ce20a06ad3dfebde65677</anchor>
      <arglist>(Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af5c1c84049c26d336c9256e65a383a28</anchor>
      <arglist>(Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4edeabf2eea790774debcbe393b2a6e6</anchor>
      <arglist>(Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a27019be0ec1e3b7a6eae6c97c68c8fb4</anchor>
      <arglist>(Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2cb525d99f3aee9047aeafe2a34a4410</anchor>
      <arglist>(Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af53445d9c9ff147eea83603cb3a11554</anchor>
      <arglist>(Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2b99e2484f51306d4ac7e6e59158c3c6</anchor>
      <arglist>(Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa5010d8d4cb192034d518b6241709b48</anchor>
      <arglist>(Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5f282101376bb44a8fb444e2c2f5a487</anchor>
      <arglist>(Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9fa11b02bf1e60ab37c873c700dcf62e</anchor>
      <arglist>(Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afedd69475409d572aa711574ec278751</anchor>
      <arglist>(Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a80e034e55c47ecdf7a55f9327500b6dd</anchor>
      <arglist>(Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a667f8a782613a5683117c78038717c2c</anchor>
      <arglist>(Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a51d40f4ff6a3b4cc54e77325cd3e7275</anchor>
      <arglist>(Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a52dc1927ea457f651a4b2a06e693bae9</anchor>
      <arglist>(Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac73c62965b8ea352a88f0cb186917208</anchor>
      <arglist>(Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba073cb004e87fc62ffbcc8f7da467ee</anchor>
      <arglist>(Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1eeaa8ab4170cf606c3870b349d4d6e8</anchor>
      <arglist>(String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1debf395b0334ff89f0440d8c74d213b</anchor>
      <arglist>(String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2f2267797758d1c21a9058c872878628</anchor>
      <arglist>(String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a020f89283201497f076765a2bba6976d</anchor>
      <arglist>(String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acf104c2fd7a030ccf399824229326593</anchor>
      <arglist>(String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac4ff07ff31378956b5bb0dade8bfd260</anchor>
      <arglist>(String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a655e80d6c21f3f1de4efbd3e6241d83d</anchor>
      <arglist>(String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1d906fec37b5d1b69cdf8e8f01b0ecfa</anchor>
      <arglist>(String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad3ca30d20396f068c26c7d994c987eef</anchor>
      <arglist>(String, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0ed3bdb4560d73476a9bb35f29cd0f85</anchor>
      <arglist>(Double, Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1fe58dcd3cdd981efccd3a635951054f</anchor>
      <arglist>(Double, Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a48bcd6c399d6744af06929fd39ecc9c1</anchor>
      <arglist>(Double, Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae781b85d95cf58ba6bba5a7249189595</anchor>
      <arglist>(Double, Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab204685e0c58f0681f31434ff157c4d1</anchor>
      <arglist>(Double, Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac17dd4ea91770c5e9dc26de233f1496b</anchor>
      <arglist>(Double, Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad0408eb0fda2f46c50f931087b203069</anchor>
      <arglist>(Double, Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af7c92693e9d51d79947093a7c1ff8661</anchor>
      <arglist>(Double, Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a74a19283629b57fc7ba9bb91abc169ae</anchor>
      <arglist>(Double, Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a181df0db06c15284692e99f222eab953</anchor>
      <arglist>(Double, Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8cf7ad7a7d6ee0940bff4777d70beaf9</anchor>
      <arglist>(Double, Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a570e91d6f080ecd892093db18a5223e1</anchor>
      <arglist>(Double, Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af49e9f0731c96049c026789d9b8b4c89</anchor>
      <arglist>(Double, Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6cb91eeafce50d168227bc076051b4fb</anchor>
      <arglist>(Double, Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aaece5e59c881e0f8928bf1be2e7fcdf1</anchor>
      <arglist>(Double, Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abe8c0bedfb3ca91945e86d76ee449189</anchor>
      <arglist>(Double, Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a71fab5189e2def6882362236a4ddf99c</anchor>
      <arglist>(Double, Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a88fea3689419f898691a3caa86f963fd</anchor>
      <arglist>(Double, Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba414cee0aad80baf2ea26b1bacf9a83</anchor>
      <arglist>(Double, String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac777451a6df11928be91f7b7f2b6f44e</anchor>
      <arglist>(Double, String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64770c279fca37026196c7f98b51c6bd</anchor>
      <arglist>(Double, String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a18f25a29509a32075accb5004c143702</anchor>
      <arglist>(Double, String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9e6830c8aa8646716959b7a221768d52</anchor>
      <arglist>(Double, String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af6dd2e0b7a7366860102b9bb7667ebd7</anchor>
      <arglist>(Double, String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a84495f90ffe9e9a3d127c71deaa2ee19</anchor>
      <arglist>(Double, String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af05c574f6c7793575943fa36612a537c</anchor>
      <arglist>(Double, String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a17cb2c210e0041930a92b22cd9b1c77f</anchor>
      <arglist>(Double, String, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3d1252351591ac7b892b3a5ede8d9512</anchor>
      <arglist>(Int, Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac849b8e1dfa5b4ed412af7de5cf3f7cf</anchor>
      <arglist>(Int, Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5086759d5ed7dfa116aa1a387c0d054d</anchor>
      <arglist>(Int, Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a69648e2b71941f75387b96a46720702a</anchor>
      <arglist>(Int, Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a40904beb2f614dd9a90c9ee3c73393d5</anchor>
      <arglist>(Int, Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6b2fd1e67990e8a854972f1911dfd53b</anchor>
      <arglist>(Int, Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aecf9204c7cd5a9d2a03e8bdda7e96ce3</anchor>
      <arglist>(Int, Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa7ce7b028ba950c44c93989b0a101cf8</anchor>
      <arglist>(Int, Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6081caee5e8bea69ea3d72f6ccc14aaa</anchor>
      <arglist>(Int, Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5d046471922264d099d40201b9542990</anchor>
      <arglist>(Int, Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a02a31899087f8b916474b5eaa7ee9bcb</anchor>
      <arglist>(Int, Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af7453ec2d35e002d35b6d7b3989b48de</anchor>
      <arglist>(Int, Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a87a63e11638f637565865590d02c8c75</anchor>
      <arglist>(Int, Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab315b360ca4a6b4825c0d442f9e18824</anchor>
      <arglist>(Int, Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae65a279180baa783d4b67532f6857972</anchor>
      <arglist>(Int, Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a30129a8dbd69efa63869e22031c8479b</anchor>
      <arglist>(Int, Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2480bb3119efcffb136e5e3b21705269</anchor>
      <arglist>(Int, Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abf22c32e1a191f3933d86847b374566e</anchor>
      <arglist>(Int, Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab7b8ab8523594917975102925ff4eb90</anchor>
      <arglist>(Int, String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acdd63a2acb8a0a53bdb7100fbdae2141</anchor>
      <arglist>(Int, String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ada3618e7c2fd363d26215ecac252b8dc</anchor>
      <arglist>(Int, String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4b94f21f0fdacaf8125f6a8503e2e4ba</anchor>
      <arglist>(Int, String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a72420512dd0b0f45978e4096829c2738</anchor>
      <arglist>(Int, String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0dda627124fb1e3611ce5d988c2d425a</anchor>
      <arglist>(Int, String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aee7c77def0bbf82329b2013d56ca7687</anchor>
      <arglist>(Int, String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1afe84c835e9235d0fcb196a80583df3</anchor>
      <arglist>(Int, String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a06538744f5f3b5e698a01f9db838d68c</anchor>
      <arglist>(Int, String, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5c99190b7cb7714eb81ba5fd31f53ba9</anchor>
      <arglist>(String, Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa0513cd15f14d0a4a496cc8255247961</anchor>
      <arglist>(String, Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5e54dbbe94451e0b7da8ed80820ce6d4</anchor>
      <arglist>(String, Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab75e66e6125c1df44ac22603c96aa9c1</anchor>
      <arglist>(String, Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afa21637ac9a4a42bc350c459c962ba90</anchor>
      <arglist>(String, Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4216f6c826facdc4a45ef2bf1885589a</anchor>
      <arglist>(String, Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae0d8c1cfb8593291280689dcbaf6fd9e</anchor>
      <arglist>(String, Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2c29a6ef3312b9d4007898bf2215db60</anchor>
      <arglist>(String, Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a75d8a8b769e89a522fb01ba0de94e71f</anchor>
      <arglist>(String, Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a01136372b7667743ee0c273e52aa1aee</anchor>
      <arglist>(String, Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2299823df5074fd7430ebb485b8ab421</anchor>
      <arglist>(String, Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a96ab6f2110ff5fc6c81a70840fa7d229</anchor>
      <arglist>(String, Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>add124d2a4cfdc55466f2062b22cfb86a</anchor>
      <arglist>(String, Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac2813a4cf08d1193ab4bfd64b7662a4c</anchor>
      <arglist>(String, Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6b917a80f3e9be386610c4c3aa56aa01</anchor>
      <arglist>(String, Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a90c4d815d6df28412de46ee891a7fa67</anchor>
      <arglist>(String, Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64e640f40fd8969f6fd5100cc75a0b79</anchor>
      <arglist>(String, Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba4ea403239e750e2dce743ebe274ff8</anchor>
      <arglist>(String, Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8fec75ff92cfe86bcd8c5c911eaaa3d3</anchor>
      <arglist>(String, String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8a5e43f3f4075770c7ce6b2ceb0c3641</anchor>
      <arglist>(String, String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afaa0566fdb51d05c3f63c93ec7bc8cb7</anchor>
      <arglist>(String, String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aed0f4121e6850532bf7cbb70b860df6d</anchor>
      <arglist>(String, String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8c0fd7eddfbc8bd6708a146078b66f9a</anchor>
      <arglist>(String, String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba8552a0854a2dfbcda2deccafbbfe63</anchor>
      <arglist>(String, String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1fc8520a8d74deca2fdc32e6ad24aa80</anchor>
      <arglist>(String, String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac4e7a1ece8950e1bbf7ca8bc390803b0</anchor>
      <arglist>(String, String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae3d3ee9d28e003fbd77f9b8d845dee99</anchor>
      <arglist>(String, String, String, String)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_AxisTypes.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__AxisTypes_8hh.html</filename>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>channel_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2859f63239a0103e37caa96041f657cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; int &gt;</type>
      <name>coeff_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a722c3b5840ed195f2f7b99ebab1ac67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>coord_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1397f942baddf540131095329c8a3ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>delay_rate_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a400119d44fcb0f0cbffd8a9bfb01e22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>frequency_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5b27a5854e62b4faacbedfe4e91cb322</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>phase_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a188bfd2d604e1c52bf641ae9390e7fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>pol_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2accf62c54a2f1e3d463614d9da0f5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>polprod_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1cabc272767304b4249535a2222103f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>time_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a33ae2c1875355c3959825a49b1080cad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_BaselineContainers.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__BaselineContainers_8hh.html</filename>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CHANNEL_AXIS</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>a843b672baf3c6931695722ce03e47628</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FREQ_AXIS</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>a7833826050c86ab6132bf256f1cec006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLPROD_AXIS</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>abaabaed5bff3c94d39d886e0dcfda551</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIME_AXIS</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>a897cf2a16955f6e17aaa6b91d0a77b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UCH_FREQ_AXIS</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>a1161f5cd414edc440d779b19c1f1a2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UCH_POLPROD_AXIS</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>ad3400debf485868a5ee80c2b5b68122e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UCH_TIME_AXIS</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>a83b3864c20adc822e29ad48ccf4c3f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UCH_VIS_NDIM</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>a684ed1fae6a2032703aac2b0543ce1b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VIS_NDIM</name>
      <anchorfile>MHO__BaselineContainers_8hh.html</anchorfile>
      <anchor>abe8e86022df5d5aebc0419841a0b98ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; polprod_axis_type, channel_axis_type, time_axis_type, frequency_axis_type &gt;</type>
      <name>baseline_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af48b735b87edae9b558863d649fe86d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_type, mbd_dr_axis_pack &gt;</type>
      <name>mbd_dr_amp_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ace31e8302ce3cb01e749115968385c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; time_axis_type, delay_rate_axis_type &gt;</type>
      <name>mbd_dr_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a51030cf719a4eee8c2aede06cbb18b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, mbd_dr_axis_pack &gt;</type>
      <name>mbd_dr_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a34485a13f7dbf2dc3fee00cbd94618ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; pol_axis_type, channel_axis_type &gt;</type>
      <name>pcal_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab7f1cb591e5863dd0c95bd1a71488345</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; double, pcal_axis_pack &gt;</type>
      <name>pcal_phase_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8b2403be2c8594f6b082398f4b2806c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>visibility_type</type>
      <name>sbd_dr_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aabbe0bfe9a11919b42c09e997f8138b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>visibility_type</type>
      <name>sbd_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a263565c55505788061e161e68af995e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; polprod_axis_type, time_axis_type, frequency_axis_type &gt;</type>
      <name>uch_baseline_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa7674bef0bbb74e125e5879b89d16e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_store_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_visibility_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8408c0f774da156de840825b92005e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_visibility_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1e59e456764cd51f36acca474ccde0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_store_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_weight_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac72deb6b4c0793fbb28d5c15b91bb6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_weight_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7fafaf7e27baefbdfd1115c1c9247753</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_store_type, baseline_axis_pack &gt;</type>
      <name>visibility_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa8731e6011eaaa14a1fbd1bb5515ea65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, baseline_axis_pack &gt;</type>
      <name>visibility_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afcc97dd4e78b9092817b1dbb0c561e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_store_type, baseline_axis_pack &gt;</type>
      <name>weight_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6d71a9ffaa068345a980f1e1613d97bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_type, baseline_axis_pack &gt;</type>
      <name>weight_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a74fe9c8c1d011d62f4fd08db2f915d01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeDataConfiguration.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__BasicFringeDataConfiguration_8cc.html</filename>
    <includes id="MHO__BasicFringeDataConfiguration_8hh" name="MHO_BasicFringeDataConfiguration.hh" local="yes" imported="no">MHO_BasicFringeDataConfiguration.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__Snapshot_8hh" name="MHO_Snapshot.hh" local="yes" imported="no">MHO_Snapshot.hh</includes>
    <includes id="MHO__ElementTypeCaster_8hh" name="MHO_ElementTypeCaster.hh" local="yes" imported="no">MHO_ElementTypeCaster.hh</includes>
    <includes id="MHO__VexInfoExtractor_8hh" name="MHO_VexInfoExtractor.hh" local="yes" imported="no">MHO_VexInfoExtractor.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeDataConfiguration.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__BasicFringeDataConfiguration_8hh.html</filename>
    <includes id="hops__version_8hh" name="hops_version.hh" local="yes" imported="no">hops_version.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Profiler_8hh" name="MHO_Profiler.hh" local="yes" imported="no">MHO_Profiler.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <includes id="MHO__OperatorBuilderManager_8hh" name="MHO_OperatorBuilderManager.hh" local="yes" imported="no">MHO_OperatorBuilderManager.hh</includes>
    <class kind="class">hops::MHO_BasicFringeDataConfiguration</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeFitter.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__BasicFringeFitter_8cc.html</filename>
    <includes id="MHO__BasicFringeFitter_8hh" name="MHO_BasicFringeFitter.hh" local="yes" imported="no">MHO_BasicFringeFitter.hh</includes>
    <includes id="MHO__Snapshot_8hh" name="MHO_Snapshot.hh" local="yes" imported="no">MHO_Snapshot.hh</includes>
    <includes id="MHO__ControlConditionEvaluator_8hh" name="MHO_ControlConditionEvaluator.hh" local="yes" imported="no">MHO_ControlConditionEvaluator.hh</includes>
    <includes id="MHO__ControlFileParser_8hh" name="MHO_ControlFileParser.hh" local="yes" imported="no">MHO_ControlFileParser.hh</includes>
    <includes id="MHO__OperatorBuilderManager_8hh" name="MHO_OperatorBuilderManager.hh" local="yes" imported="no">MHO_OperatorBuilderManager.hh</includes>
    <includes id="MHO__ParameterConfigurator_8hh" name="MHO_ParameterConfigurator.hh" local="yes" imported="no">MHO_ParameterConfigurator.hh</includes>
    <includes id="MHO__ParameterManager_8hh" name="MHO_ParameterManager.hh" local="yes" imported="no">MHO_ParameterManager.hh</includes>
    <includes id="MHO__BasicFringeDataConfiguration_8hh" name="MHO_BasicFringeDataConfiguration.hh" local="yes" imported="no">MHO_BasicFringeDataConfiguration.hh</includes>
    <includes id="MHO__BasicFringeInfo_8hh" name="MHO_BasicFringeInfo.hh" local="yes" imported="no">MHO_BasicFringeInfo.hh</includes>
    <includes id="MHO__BasicFringeUtilities_8hh" name="MHO_BasicFringeUtilities.hh" local="yes" imported="no">MHO_BasicFringeUtilities.hh</includes>
    <includes id="MHO__FringePlotInfo_8hh" name="MHO_FringePlotInfo.hh" local="yes" imported="no">MHO_FringePlotInfo.hh</includes>
    <includes id="MHO__InitialFringeInfo_8hh" name="MHO_InitialFringeInfo.hh" local="yes" imported="no">MHO_InitialFringeInfo.hh</includes>
    <includes id="MHO__InterpolateFringePeak_8hh" name="MHO_InterpolateFringePeak.hh" local="yes" imported="no">MHO_InterpolateFringePeak.hh</includes>
    <includes id="MHO__VexInfoExtractor_8hh" name="MHO_VexInfoExtractor.hh" local="yes" imported="no">MHO_VexInfoExtractor.hh</includes>
    <includes id="MHO__EstimatePCManual_8hh" name="MHO_EstimatePCManual.hh" local="yes" imported="no">MHO_EstimatePCManual.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MBD_SEARCH_TYPE</name>
      <anchorfile>MHO__BasicFringeFitter_8cc.html</anchorfile>
      <anchor>ab57fc607affd9acb350df8cff4b2a13b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeFitter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__BasicFringeFitter_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__FringeFitter_8hh" name="MHO_FringeFitter.hh" local="yes" imported="no">MHO_FringeFitter.hh</includes>
    <includes id="MHO__MixedSidebandNormFX_8hh" name="MHO_MixedSidebandNormFX.hh" local="yes" imported="no">MHO_MixedSidebandNormFX.hh</includes>
    <includes id="MHO__NormFX_8hh" name="MHO_NormFX.hh" local="yes" imported="no">MHO_NormFX.hh</includes>
    <includes id="MHO__SingleSidebandNormFX_8hh" name="MHO_SingleSidebandNormFX.hh" local="yes" imported="no">MHO_SingleSidebandNormFX.hh</includes>
    <includes id="MHO__InterpolateFringePeak_8hh" name="MHO_InterpolateFringePeak.hh" local="yes" imported="no">MHO_InterpolateFringePeak.hh</includes>
    <includes id="MHO__MBDelaySearch_8hh" name="MHO_MBDelaySearch.hh" local="yes" imported="no">MHO_MBDelaySearch.hh</includes>
    <class kind="class">hops::MHO_BasicFringeFitter</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeInfo.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__BasicFringeInfo_8cc.html</filename>
    <includes id="MHO__BasicFringeInfo_8hh" name="MHO_BasicFringeInfo.hh" local="yes" imported="no">MHO_BasicFringeInfo.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeInfo.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__BasicFringeInfo_8hh.html</filename>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_BasicFringeInfo</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeUtilities.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__BasicFringeUtilities_8cc.html</filename>
    <includes id="MHO__BasicFringeUtilities_8hh" name="MHO_BasicFringeUtilities.hh" local="yes" imported="no">MHO_BasicFringeUtilities.hh</includes>
    <includes id="MHO__BasicFringeInfo_8hh" name="MHO_BasicFringeInfo.hh" local="yes" imported="no">MHO_BasicFringeInfo.hh</includes>
    <includes id="MHO__Snapshot_8hh" name="MHO_Snapshot.hh" local="yes" imported="no">MHO_Snapshot.hh</includes>
    <includes id="MHO__MBDelaySearch_8hh" name="MHO_MBDelaySearch.hh" local="yes" imported="no">MHO_MBDelaySearch.hh</includes>
    <includes id="MHO__NormFX_8hh" name="MHO_NormFX.hh" local="yes" imported="no">MHO_NormFX.hh</includes>
    <includes id="MHO__InterpolateFringePeak_8hh" name="MHO_InterpolateFringePeak.hh" local="yes" imported="no">MHO_InterpolateFringePeak.hh</includes>
    <includes id="MHO__UniformGridPointsCalculator_8hh" name="MHO_UniformGridPointsCalculator.hh" local="yes" imported="no">MHO_UniformGridPointsCalculator.hh</includes>
    <includes id="MHO__LegacyDateConverter_8hh" name="MHO_LegacyDateConverter.hh" local="yes" imported="no">MHO_LegacyDateConverter.hh</includes>
    <includes id="MHO__ComputePlotData_8hh" name="MHO_ComputePlotData.hh" local="yes" imported="no">MHO_ComputePlotData.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BasicFringeUtilities.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__BasicFringeUtilities_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__BasicFringeInfo_8hh" name="MHO_BasicFringeInfo.hh" local="yes" imported="no">MHO_BasicFringeInfo.hh</includes>
    <class kind="class">hops::MHO_BasicFringeUtilities</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BidirectionalIndexedIterator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__BidirectionalIndexedIterator_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__NDArrayMath_8hh" name="MHO_NDArrayMath.hh" local="yes" imported="no">MHO_NDArrayMath.hh</includes>
    <class kind="class">hops::MHO_BidirectionalIndexedIterator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BidirectionalIterator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__BidirectionalIterator_8hh.html</filename>
    <class kind="class">hops::MHO_BidirectionalConstIterator</class>
    <class kind="class">hops::MHO_BidirectionalIterator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BidirectionalStrideIterator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__BidirectionalStrideIterator_8hh.html</filename>
    <class kind="class">hops::MHO_BidirectionalConstStrideIterator</class>
    <class kind="class">hops::MHO_BidirectionalStrideIterator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BinaryFileInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__BinaryFileInterface_8hh.html</filename>
    <includes id="MHO__BinaryFileStreamer_8hh" name="MHO_BinaryFileStreamer.hh" local="yes" imported="no">MHO_BinaryFileStreamer.hh</includes>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__FileKey_8hh" name="MHO_FileKey.hh" local="yes" imported="no">MHO_FileKey.hh</includes>
    <includes id="MHO__MD5HashGenerator_8hh" name="MHO_MD5HashGenerator.hh" local="yes" imported="no">MHO_MD5HashGenerator.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Serializable_8hh" name="MHO_Serializable.hh" local="yes" imported="no">MHO_Serializable.hh</includes>
    <includes id="MHO__UUIDGenerator_8hh" name="MHO_UUIDGenerator.hh" local="yes" imported="no">MHO_UUIDGenerator.hh</includes>
    <class kind="class">hops::MHO_BinaryFileInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BinaryFileStreamer.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__BinaryFileStreamer_8cc.html</filename>
    <includes id="MHO__BinaryFileStreamer_8hh" name="MHO_BinaryFileStreamer.hh" local="yes" imported="no">MHO_BinaryFileStreamer.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BinaryFileStreamer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__BinaryFileStreamer_8hh.html</filename>
    <includes id="MHO__FileStreamer_8hh" name="MHO_FileStreamer.hh" local="yes" imported="no">MHO_FileStreamer.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <class kind="class">hops::MHO_BinaryFileStreamer</class>
    <class kind="class">hops::MHO_BinaryFileStreamerMultiType&lt; XValueType &gt;</class>
    <class kind="class">hops::MHO_BinaryFileStreamerMultiType&lt; XValueType, XValueTypeS... &gt;</class>
    <class kind="class">hops::MHO_BinaryFileStreamerSingleType</class>
    <class kind="class">hops::MHO_BinaryFileStreamerSingleType&lt; mho_json &gt;</class>
    <class kind="class">hops::MHO_BinaryFileStreamerSingleType&lt; std::string &gt;</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_BinaryFileStreamerMultiType&lt; bool, char, unsigned char, short, unsigned short, int, unsigned int, long, unsigned long, long long, unsigned long long, float, double, long double, std::complex&lt; float &gt;, std::complex&lt; double &gt;, std::complex&lt; long double &gt;, std::string, mho_json &gt;</type>
      <name>MHO_BinaryFileStreamerBasicTypes</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8fcc30cc0b26685a20791dbeb9e1a340</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_BinaryOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__BinaryOperator_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <class kind="class">hops::MHO_BinaryOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BitReversalPermutation.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/</path>
    <filename>MHO__BitReversalPermutation_8cc.html</filename>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_BitReversalPermutation.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Math/cl/</path>
    <filename>MHO__BitReversalPermutation_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_BitReversalPermutation.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__BitReversalPermutation_8hh.html</filename>
    <class kind="class">hops::MHO_BitReversalPermutation</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>USE_STDALGO_SWAP</name>
      <anchorfile>MHO__BitReversalPermutation_8hh.html</anchorfile>
      <anchor>a47c0484ad1e92c82b6c5db6aa6313ea7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ChannelLabeler.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__ChannelLabeler_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__EncodeDecodeValue_8hh" name="MHO_EncodeDecodeValue.hh" local="yes" imported="no">MHO_EncodeDecodeValue.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_ChannelLabeler</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ChannelLabelerBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ChannelLabelerBuilder_8cc.html</filename>
    <includes id="MHO__ChannelLabelerBuilder_8hh" name="MHO_ChannelLabelerBuilder.hh" local="yes" imported="no">MHO_ChannelLabelerBuilder.hh</includes>
    <includes id="MHO__ChannelLabeler_8hh" name="MHO_ChannelLabeler.hh" local="yes" imported="no">MHO_ChannelLabeler.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ChannelLabelerBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ChannelLabelerBuilder_8hh.html</filename>
    <includes id="MHO__ChannelQuantity_8hh" name="MHO_ChannelQuantity.hh" local="yes" imported="no">MHO_ChannelQuantity.hh</includes>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_ChannelLabelerBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ChannelQuantity.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ChannelQuantity_8cc.html</filename>
    <includes id="MHO__ChannelQuantity_8hh" name="MHO_ChannelQuantity.hh" local="yes" imported="no">MHO_ChannelQuantity.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ChannelQuantity.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ChannelQuantity_8hh.html</filename>
    <class kind="class">hops::MHO_ChannelQuantity</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_CheckForNaN.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__CheckForNaN_8hh.html</filename>
    <class kind="class">hops::MHO_CheckForNaN</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_CircularFieldRotationBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__CircularFieldRotationBuilder_8cc.html</filename>
    <includes id="MHO__CircularFieldRotationBuilder_8hh" name="MHO_CircularFieldRotationBuilder.hh" local="yes" imported="no">MHO_CircularFieldRotationBuilder.hh</includes>
    <includes id="MHO__CircularFieldRotationCorrection_8hh" name="MHO_CircularFieldRotationCorrection.hh" local="yes" imported="no">MHO_CircularFieldRotationCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_CircularFieldRotationBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__CircularFieldRotationBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_CircularFieldRotationBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_CircularFieldRotationCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__CircularFieldRotationCorrection_8cc.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__CircularFieldRotationCorrection_8hh" name="MHO_CircularFieldRotationCorrection.hh" local="yes" imported="no">MHO_CircularFieldRotationCorrection.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CASSEGRAIN</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>a4bf9874fc82372c82f94dd1c87a43773</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASMYTHLEFT</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>a44156cfa79cc31970f09c34ee9a44a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASMYTHRIGHT</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>a32c0572972ed594f605c343235cb8e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_MOUNT_TYPE</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>ae813e60d1f7363764de79f97c39eda6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_LL</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>a0ae1498d31a9eb8ad1f38aa70188136d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_LR</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>ae09f2d599dad8f523d1489c2f982abb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RL</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>ab9a7453c1deb1ece02aad3953c42d0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RR</name>
      <anchorfile>MHO__CircularFieldRotationCorrection_8cc.html</anchorfile>
      <anchor>a8933d10561b3a974a83569ee74ad4a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_field_rotations_fixed</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3565637d587b82cd03dc8a5f4046835c</anchor>
      <arglist>(std::complex&lt; double &gt; cpolvalue[4], double *par_angle, double *elevation, int *mount_type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_CircularFieldRotationCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__CircularFieldRotationCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__StationModel_8hh" name="MHO_StationModel.hh" local="yes" imported="no">MHO_StationModel.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__Reducer_8hh" name="MHO_Reducer.hh" local="yes" imported="no">MHO_Reducer.hh</includes>
    <class kind="class">hops::MHO_CircularFieldRotationCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ClassIdentity.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__ClassIdentity_8hh.html</filename>
    <includes id="MHO__MD5HashGenerator_8hh" name="MHO_MD5HashGenerator.hh" local="yes" imported="no">MHO_MD5HashGenerator.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__TemplateTypenameDeduction_8hh" name="MHO_TemplateTypenameDeduction.hh" local="yes" imported="no">MHO_TemplateTypenameDeduction.hh</includes>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <class kind="class">hops::MHO_ClassIdentity</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MHO_ClassVersion</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a79b4811cd0a8f2e7e35c6d3f85ce8b1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ClassIdentityMap.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ClassIdentityMap_8hh.html</filename>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__ContainerJSONConverter_8hh" name="MHO_ContainerJSONConverter.hh" local="yes" imported="no">MHO_ContainerJSONConverter.hh</includes>
    <includes id="MHO__MD5HashGenerator_8hh" name="MHO_MD5HashGenerator.hh" local="yes" imported="no">MHO_MD5HashGenerator.hh</includes>
    <includes id="MHO__SerializableObjectFactory_8hh" name="MHO_SerializableObjectFactory.hh" local="yes" imported="no">MHO_SerializableObjectFactory.hh</includes>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <class kind="class">hops::MHO_ClassIdentityMap</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Clock.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Clock_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="legacy__hops__date_8hh" name="legacy_hops_date.hh" local="yes" imported="no">legacy_hops_date.hh</includes>
    <class kind="class">hops::hops_clock</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_TIME_DELIM</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>a81e550374ce93284b055e48da70a0990</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_TIME_UNIT</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>aaabd95160a63c85bc1ff95b933d1a036</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_TIMESTAMP_PREFIX</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>a665f4cfdcb1a37494f301db96131ea00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOUR_TO_SEC</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>af2f145e27389a1b0cde64f4f337abd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISO8601_UTC_FORMAT</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>a0001ca0d692c9870dab2338f5126f3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J2000_TAI_EPOCH</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>a330bcf30b1ad9427b6785630e7b2e5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JD_TO_SEC</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>ad9490f8be7103e4eb3193fcc48ab338a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINUTE_TO_SEC</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>a44b9c115366d65e7869265266aed127b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NANOSEC_TO_SEC</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>aaa02606af4eb29405e241248231eeb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEC_TO_NANOSEC</name>
      <anchorfile>MHO__Clock_8hh.html</anchorfile>
      <anchor>a49797cb2f3ab42b693dba6492ab01d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::chrono::time_point&lt; hops_clock, Duration &gt;</type>
      <name>hops_time</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae184e4a1cc248eab7c662c73f3817df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::basic_istream&lt; CharT, Traits &gt; &amp;</type>
      <name>from_stream</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1fdde9fc3b75f424635db92c8f07f54c</anchor>
      <arglist>(std::basic_istream&lt; CharT, Traits &gt; &amp;is, const CharT *fmt, hops_time&lt; Duration &gt; &amp;tp, std::basic_string&lt; CharT, Traits, Alloc &gt; *abbrev=nullptr, std::chrono::minutes *offset=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; CharT, Traits &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a174940b00c57da6d7b0e8d51ba70e21a</anchor>
      <arglist>(std::basic_ostream&lt; CharT, Traits &gt; &amp;os, const hops_time&lt; Duration &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; CharT, Traits &gt; &amp;</type>
      <name>to_stream</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae6072705dd8a3df2c27db3e3af380e7a</anchor>
      <arglist>(std::basic_ostream&lt; CharT, Traits &gt; &amp;os, const CharT *fmt, const hops_time&lt; Duration &gt; &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ComplexConjugator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__ComplexConjugator_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__UnaryFunctor_8hh" name="MHO_UnaryFunctor.hh" local="yes" imported="no">MHO_UnaryFunctor.hh</includes>
    <class kind="class">hops::MHO_ComplexConjugator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ComplexPointwiseMultiply.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/include/</path>
    <filename>MHO__ComplexPointwiseMultiply_8hh.html</filename>
    <includes id="MHO__BinaryOperator_8hh" name="MHO_BinaryOperator.hh" local="yes" imported="no">MHO_BinaryOperator.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <includes id="MHO__OpenCLKernelBuilder_8hh" name="MHO_OpenCLKernelBuilder.hh" local="yes" imported="no">MHO_OpenCLKernelBuilder.hh</includes>
    <class kind="class">hops::MHO_OpenCLComplexPointwiseMultiply</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ComplexUtils.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Math/cl/</path>
    <filename>MHO__ComplexUtils_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_CompoundReductions.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__CompoundReductions_8hh.html</filename>
    <class kind="struct">hops::MHO_CompoundMultiply</class>
    <class kind="struct">hops::MHO_CompoundSum</class>
    <class kind="struct">hops::MHO_MultiplyIdentity</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; bool &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; double &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; float &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; int &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; long double &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; short &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::complex&lt; double &gt; &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::complex&lt; float &gt; &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::complex&lt; long double &gt; &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::size_t &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; unsigned int &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; bool &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; double &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; float &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; int &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; long double &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; short &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::complex&lt; double &gt; &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::complex&lt; float &gt; &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::complex&lt; long double &gt; &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::size_t &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; unsigned int &gt;</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ComputePlotData.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__ComputePlotData_8cc.html</filename>
    <includes id="MHO__ComputePlotData_8hh" name="MHO_ComputePlotData.hh" local="yes" imported="no">MHO_ComputePlotData.hh</includes>
    <includes id="MHO__BasicFringeInfo_8hh" name="MHO_BasicFringeInfo.hh" local="yes" imported="no">MHO_BasicFringeInfo.hh</includes>
    <includes id="MHO__CyclicRotator_8hh" name="MHO_CyclicRotator.hh" local="yes" imported="no">MHO_CyclicRotator.hh</includes>
    <includes id="MHO__EndZeroPadder_8hh" name="MHO_EndZeroPadder.hh" local="yes" imported="no">MHO_EndZeroPadder.hh</includes>
    <includes id="MHO__SelectRepack_8hh" name="MHO_SelectRepack.hh" local="yes" imported="no">MHO_SelectRepack.hh</includes>
    <includes id="MHO__Reducer_8hh" name="MHO_Reducer.hh" local="yes" imported="no">MHO_Reducer.hh</includes>
    <includes id="MHO__UniformGridPointsCalculator_8hh" name="MHO_UniformGridPointsCalculator.hh" local="yes" imported="no">MHO_UniformGridPointsCalculator.hh</includes>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__LinearDParCorrection_8hh" name="MHO_LinearDParCorrection.hh" local="yes" imported="no">MHO_LinearDParCorrection.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_MultidimensionalFastFourierTransform&lt; visibility_type &gt;</type>
      <name>FFT_ENGINE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aabe0d71e00c2f8f265a53d47914a7893</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ComputePlotData.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__ComputePlotData_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__BinaryOperator_8hh" name="MHO_BinaryOperator.hh" local="yes" imported="no">MHO_BinaryOperator.hh</includes>
    <includes id="MHO__ComplexConjugator_8hh" name="MHO_ComplexConjugator.hh" local="yes" imported="no">MHO_ComplexConjugator.hh</includes>
    <includes id="MHO__CyclicRotator_8hh" name="MHO_CyclicRotator.hh" local="yes" imported="no">MHO_CyclicRotator.hh</includes>
    <includes id="MHO__FringeRotation_8hh" name="MHO_FringeRotation.hh" local="yes" imported="no">MHO_FringeRotation.hh</includes>
    <includes id="MHO__FunctorBroadcaster_8hh" name="MHO_FunctorBroadcaster.hh" local="yes" imported="no">MHO_FunctorBroadcaster.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <includes id="MHO__NaNMasker_8hh" name="MHO_NaNMasker.hh" local="yes" imported="no">MHO_NaNMasker.hh</includes>
    <includes id="MHO__SubSample_8hh" name="MHO_SubSample.hh" local="yes" imported="no">MHO_SubSample.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__FastFourierTransform_8hh" name="MHO_FastFourierTransform.hh" local="yes" imported="no">MHO_FastFourierTransform.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <class kind="class">hops::MHO_ComputePlotData</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Constants.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Constants_8hh.html</filename>
    <class kind="class">hops::MHO_Constants</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerDefinitions.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ContainerDefinitions_8hh.html</filename>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__ElementTypes_8hh" name="MHO_ElementTypes.hh" local="yes" imported="no">MHO_ElementTypes.hh</includes>
    <includes id="MHO__AxisTypes_8hh" name="MHO_AxisTypes.hh" local="yes" imported="no">MHO_AxisTypes.hh</includes>
    <includes id="MHO__BaselineContainers_8hh" name="MHO_BaselineContainers.hh" local="yes" imported="no">MHO_BaselineContainers.hh</includes>
    <includes id="MHO__StationContainers_8hh" name="MHO_StationContainers.hh" local="yes" imported="no">MHO_StationContainers.hh</includes>
    <includes id="MHO__FringeContainers_8hh" name="MHO_FringeContainers.hh" local="yes" imported="no">MHO_FringeContainers.hh</includes>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerDictionary.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__ContainerDictionary_8cc.html</filename>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AddTable1</name>
      <anchorfile>MHO__ContainerDictionary_8cc.html</anchorfile>
      <anchor>aed8690a91b55c1faee2d1c873d3485a8</anchor>
      <arglist>(TYPE1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AddTable2</name>
      <anchorfile>MHO__ContainerDictionary_8cc.html</anchorfile>
      <anchor>a493ee71a0406f7e7be4d4498c6f4fe78</anchor>
      <arglist>(TYPE1, TYPE2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AddTable3</name>
      <anchorfile>MHO__ContainerDictionary_8cc.html</anchorfile>
      <anchor>a0d0d71cfa8bf08fcf7bcd8899006fc58</anchor>
      <arglist>(TYPE1, TYPE2, TYPE3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AddTable4</name>
      <anchorfile>MHO__ContainerDictionary_8cc.html</anchorfile>
      <anchor>a798586e0beb731848deae1640fbd54fa</anchor>
      <arglist>(TYPE1, TYPE2, TYPE3, TYPE4)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerDictionary.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ContainerDictionary_8hh.html</filename>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__ClassIdentityMap_8hh" name="MHO_ClassIdentityMap.hh" local="yes" imported="no">MHO_ClassIdentityMap.hh</includes>
    <class kind="class">hops::MHO_ContainerDictionary</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerFileInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__ContainerFileInterface_8cc.html</filename>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerFileInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ContainerFileInterface_8hh.html</filename>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <class kind="class">hops::MHO_ContainerFileInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerHDF5Converter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/include/</path>
    <filename>MHO__ContainerHDF5Converter_8hh.html</filename>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__NumpyTypeCode_8hh" name="MHO_NumpyTypeCode.hh" local="yes" imported="no">MHO_NumpyTypeCode.hh</includes>
    <includes id="MHO__HDF5TypeCode_8hh" name="MHO_HDF5TypeCode.hh" local="yes" imported="no">MHO_HDF5TypeCode.hh</includes>
    <includes id="MHO__HDF5ConversionHelpers_8hh" name="MHO_HDF5ConversionHelpers.hh" local="yes" imported="no">MHO_HDF5ConversionHelpers.hh</includes>
    <class kind="class">hops::MHO_ContainerHDF5Converter::AxisDumper</class>
    <class kind="class">hops::MHO_ContainerHDF5Converter</class>
    <class kind="class">hops::MHO_ContainerHDF5Converter&lt; MHO_ObjectTags &gt;</class>
    <class kind="class">hops::MHO_HDF5Converter</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerJSONConverter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ContainerJSONConverter_8hh.html</filename>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__NumpyTypeCode_8hh" name="MHO_NumpyTypeCode.hh" local="yes" imported="no">MHO_NumpyTypeCode.hh</includes>
    <class kind="class">hops::MHO_ContainerJSONConverter::AxisDumper</class>
    <class kind="class">hops::MHO_ContainerJSONConverter</class>
    <class kind="class">hops::MHO_ContainerJSONConverter&lt; MHO_ObjectTags &gt;</class>
    <class kind="class">hops::MHO_JSONConverter</class>
    <namespace>hops</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MHO_JSONVerbosityLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONBasicLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a72010d59f8fe66d4a5e10884849fe4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONTagsLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3aa34bc7d673e8d53fd8ebc7be94b2c393</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONAxesLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a3fe29c8221f16602d0b07dea8d90872b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONAxesWithLabelsLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a09455e05581c81190d3174c3e0f2ec79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONAllLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a6a1dd75c51d5a0ca672f9863367acb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillJSONFromTaggable</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3f6f79dab809bb2fca3a8a7c59292cd8</anchor>
      <arglist>(const MHO_Taggable *map, mho_json &amp;obj_tags)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerStore.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__ContainerStore_8cc.html</filename>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ContainerStore.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ContainerStore_8hh.html</filename>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Serializable_8hh" name="MHO_Serializable.hh" local="yes" imported="no">MHO_Serializable.hh</includes>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <includes id="MHO__UUIDGenerator_8hh" name="MHO_UUIDGenerator.hh" local="yes" imported="no">MHO_UUIDGenerator.hh</includes>
    <class kind="class">hops::MHO_ContainerStore</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ControlConditionEvaluator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/src/</path>
    <filename>MHO__ControlConditionEvaluator_8cc.html</filename>
    <includes id="MHO__ControlConditionEvaluator_8hh" name="MHO_ControlConditionEvaluator.hh" local="yes" imported="no">MHO_ControlConditionEvaluator.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AND_OP</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>ad48d5f08d4f0bcecdf55906256c09451</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLOSED_PAR</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>abc1b7c45017e6e6570fa110d24375d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERROR_STATE</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>a60db3d3e5c5fb314c0d698922d0b7124</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE_STATE</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>ab51715e1e4fc2b5ea7344c2f7f568a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOT_OP</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>ad98f8e0bfde6bf1a246931bacf340987</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OPEN_PAR</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>afe3a424de4ef3228aa1e1fa9596cc979</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OR_OP</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>a9fcfec579448fc2020848911eab6d075</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE_STATE</name>
      <anchorfile>MHO__ControlConditionEvaluator_8cc.html</anchorfile>
      <anchor>a01903c062886b5cb9629cabcacda5f83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ControlConditionEvaluator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/include/</path>
    <filename>MHO__ControlConditionEvaluator_8hh.html</filename>
    <includes id="MHO__ControlDefinitions_8hh" name="MHO_ControlDefinitions.hh" local="yes" imported="no">MHO_ControlDefinitions.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_ControlConditionEvaluator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ControlDefinitions.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/src/</path>
    <filename>MHO__ControlDefinitions_8cc.html</filename>
    <includes id="MHO__ControlDefinitions_8hh" name="MHO_ControlDefinitions.hh" local="yes" imported="no">MHO_ControlDefinitions.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ControlDefinitions.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/include/</path>
    <filename>MHO__ControlDefinitions_8hh.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <class kind="class">hops::MHO_ControlDefinitions</class>
    <class kind="struct">hops::MHO_ControlLine</class>
    <class kind="struct">hops::MHO_ControlStatement</class>
    <class kind="struct">hops::MHO_Token</class>
    <namespace>hops</namespace>
    <member kind="enumeration">
      <type></type>
      <name>control_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca58d901115c1b20ac8e533363c3b70423</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_list_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcabc1b0033575e5b75903a3f6c55480b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcaeeedb14f290602c7c779aca6e8b069e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcaa28e13aa79ac578ec8d03defa1b6037e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_list_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca013d0b09045b27e75945b4049ea256ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_fixed_length_list_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcacbd5083e82de9a3c2bc78d515fa6edc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_list_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca5f8472dc665bad0c007ed38f16e2b040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_conditional_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca2442b2a3f7cf42f8a57477b38331e8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_compound_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca75c581e734adac305ac3cd953deac987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_bool_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcadc7cc77e6fc62cb864226c6ff14f251b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_unknown_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcaf2e37cd991df63994682d8f05bd137bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ControlElementParser.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/src/</path>
    <filename>MHO__ControlElementParser_8cc.html</filename>
    <includes id="MHO__ControlElementParser_8hh" name="MHO_ControlElementParser.hh" local="yes" imported="no">MHO_ControlElementParser.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ControlElementParser.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/include/</path>
    <filename>MHO__ControlElementParser_8hh.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__ControlDefinitions_8hh" name="MHO_ControlDefinitions.hh" local="yes" imported="no">MHO_ControlDefinitions.hh</includes>
    <includes id="MHO__ControlTokenProcessor_8hh" name="MHO_ControlTokenProcessor.hh" local="yes" imported="no">MHO_ControlTokenProcessor.hh</includes>
    <class kind="class">hops::MHO_ControlElementParser</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ControlFileParser.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/src/</path>
    <filename>MHO__ControlFileParser_8cc.html</filename>
    <includes id="MHO__ControlFileParser_8hh" name="MHO_ControlFileParser.hh" local="yes" imported="no">MHO_ControlFileParser.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>string_pattern_replace</name>
      <anchorfile>MHO__ControlFileParser_8cc.html</anchorfile>
      <anchor>abbf405784618c5a6a92a5b7cb2d3dc59</anchor>
      <arglist>(const std::string &amp;value, const std::string &amp;pattern, const std::string &amp;replacement)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ControlFileParser.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/include/</path>
    <filename>MHO__ControlFileParser_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__ControlDefinitions_8hh" name="MHO_ControlDefinitions.hh" local="yes" imported="no">MHO_ControlDefinitions.hh</includes>
    <includes id="MHO__ControlElementParser_8hh" name="MHO_ControlElementParser.hh" local="yes" imported="no">MHO_ControlElementParser.hh</includes>
    <class kind="class">hops::MHO_ControlFileParser</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ControlTokenProcessor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/src/</path>
    <filename>MHO__ControlTokenProcessor_8cc.html</filename>
    <includes id="MHO__ControlTokenProcessor_8hh" name="MHO_ControlTokenProcessor.hh" local="yes" imported="no">MHO_ControlTokenProcessor.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ControlTokenProcessor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Control/include/</path>
    <filename>MHO__ControlTokenProcessor_8hh.html</filename>
    <includes id="MHO__ControlDefinitions_8hh" name="MHO_ControlDefinitions.hh" local="yes" imported="no">MHO_ControlDefinitions.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_ControlTokenProcessor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_CyclicRotator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__CyclicRotator_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_CyclicRotator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DataSelectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__DataSelectionBuilder_8cc.html</filename>
    <includes id="MHO__DataSelectionBuilder_8hh" name="MHO_DataSelectionBuilder.hh" local="yes" imported="no">MHO_DataSelectionBuilder.hh</includes>
    <includes id="MHO__SelectRepack_8hh" name="MHO_SelectRepack.hh" local="yes" imported="no">MHO_SelectRepack.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DataSelectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__DataSelectionBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <class kind="class">hops::MHO_DataSelectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DCBlock.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__DCBlock_8cc.html</filename>
    <includes id="MHO__DCBlock_8hh" name="MHO_DCBlock.hh" local="yes" imported="no">MHO_DCBlock.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DCBlock.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__DCBlock_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_DCBlock</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DCBlockBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__DCBlockBuilder_8cc.html</filename>
    <includes id="MHO__DCBlockBuilder_8hh" name="MHO_DCBlockBuilder.hh" local="yes" imported="no">MHO_DCBlockBuilder.hh</includes>
    <includes id="MHO__DCBlock_8hh" name="MHO_DCBlock.hh" local="yes" imported="no">MHO_DCBlock.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DCBlockBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__DCBlockBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_DCBlockBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DefaultPythonPlotVisitor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__DefaultPythonPlotVisitor_8cc.html</filename>
    <includes id="MHO__DefaultPythonPlotVisitor_8hh" name="MHO_DefaultPythonPlotVisitor.hh" local="yes" imported="no">MHO_DefaultPythonPlotVisitor.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PYBIND11_DETAILED_ERROR_MESSAGES</name>
      <anchorfile>MHO__DefaultPythonPlotVisitor_8cc.html</anchorfile>
      <anchor>a7043d9d872fdca0ec538d37d04325f31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_DefaultPythonPlotVisitor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__DefaultPythonPlotVisitor_8hh.html</filename>
    <includes id="MHO__FringePlotVisitor_8hh" name="MHO_FringePlotVisitor.hh" local="yes" imported="no">MHO_FringePlotVisitor.hh</includes>
    <class kind="class">hops::MHO_DefaultPythonPlotVisitor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DelayModel.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__DelayModel_8cc.html</filename>
    <includes id="MHO__DelayModel_8hh" name="MHO_DelayModel.hh" local="yes" imported="no">MHO_DelayModel.hh</includes>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_COEFF_INDEX</name>
      <anchorfile>MHO__DelayModel_8cc.html</anchorfile>
      <anchor>acd376f7453b4a140f287838f3b70ef0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_DelayModel.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__DelayModel_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_DelayModel</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ACCEL_INDEX</name>
      <anchorfile>MHO__DelayModel_8hh.html</anchorfile>
      <anchor>a432272674eef5cea39d75cfb8c30ec25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_COEFF_INDEX</name>
      <anchorfile>MHO__DelayModel_8hh.html</anchorfile>
      <anchor>acd376f7453b4a140f287838f3b70ef0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_INDEX</name>
      <anchorfile>MHO__DelayModel_8hh.html</anchorfile>
      <anchor>ad5d0b837522e44fdc80d53eb845cbdb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RATE_INDEX</name>
      <anchorfile>MHO__DelayModel_8hh.html</anchorfile>
      <anchor>acffd575d7cc97f8b9f3f5cd04759f46c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_DelayRate.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__DelayRate_8cc.html</filename>
    <includes id="MHO__DelayRate_8hh" name="MHO_DelayRate.hh" local="yes" imported="no">MHO_DelayRate.hh</includes>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DelayRate.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__DelayRate_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__BinaryOperator_8hh" name="MHO_BinaryOperator.hh" local="yes" imported="no">MHO_BinaryOperator.hh</includes>
    <includes id="MHO__CyclicRotator_8hh" name="MHO_CyclicRotator.hh" local="yes" imported="no">MHO_CyclicRotator.hh</includes>
    <includes id="MHO__EndZeroPadder_8hh" name="MHO_EndZeroPadder.hh" local="yes" imported="no">MHO_EndZeroPadder.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <includes id="MHO__SubSample_8hh" name="MHO_SubSample.hh" local="yes" imported="no">MHO_SubSample.hh</includes>
    <class kind="class">hops::MHO_DelayRate</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXBaselineProcessor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/src/</path>
    <filename>MHO__DiFXBaselineProcessor_8cc.html</filename>
    <includes id="MHO__DiFXBaselineProcessor_8hh" name="MHO_DiFXBaselineProcessor.hh" local="yes" imported="no">MHO_DiFXBaselineProcessor.hh</includes>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__DoubleSidebandChannelLabeler_8hh" name="MHO_DoubleSidebandChannelLabeler.hh" local="yes" imported="no">MHO_DoubleSidebandChannelLabeler.hh</includes>
    <includes id="MHO__ElementTypeCaster_8hh" name="MHO_ElementTypeCaster.hh" local="yes" imported="no">MHO_ElementTypeCaster.hh</includes>
    <includes id="MHO__DiFXTimeUtilities_8hh" name="MHO_DiFXTimeUtilities.hh" local="yes" imported="no">MHO_DiFXTimeUtilities.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DIFX_BASE2ANT</name>
      <anchorfile>MHO__DiFXBaselineProcessor_8cc.html</anchorfile>
      <anchor>aaa7b3a09c9e5a8a16913939bb1e94518</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FREQ_EPS</name>
      <anchorfile>MHO__DiFXBaselineProcessor_8cc.html</anchorfile>
      <anchor>a317c46c390f8b49189cfb8e64eaae866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALE</name>
      <anchorfile>MHO__DiFXBaselineProcessor_8cc.html</anchorfile>
      <anchor>a0cbea62f1ce2043dd08108e65ed8de1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXBaselineProcessor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXBaselineProcessor_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__DiFXVisibilityRecord_8hh" name="MHO_DiFXVisibilityRecord.hh" local="yes" imported="no">MHO_DiFXVisibilityRecord.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__StationCodeMap_8hh" name="MHO_StationCodeMap.hh" local="yes" imported="no">MHO_StationCodeMap.hh</includes>
    <class kind="class">hops::MHO_DiFXBaselineProcessor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXChannelNameConstructor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/src/</path>
    <filename>MHO__DiFXChannelNameConstructor_8cc.html</filename>
    <includes id="MHO__DiFXChannelNameConstructor_8hh" name="MHO_DiFXChannelNameConstructor.hh" local="yes" imported="no">MHO_DiFXChannelNameConstructor.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXChannelNameConstructor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXChannelNameConstructor_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_DiFXChannelNameConstructor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXInputProcessor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/src/</path>
    <filename>MHO__DiFXInputProcessor_8cc.html</filename>
    <includes id="MHO__DiFXInputProcessor_8hh" name="MHO_DiFXInputProcessor.hh" local="yes" imported="no">MHO_DiFXInputProcessor.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXInputProcessor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXInputProcessor_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_DiFXInputProcessor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/src/</path>
    <filename>MHO__DiFXInterface_8cc.html</filename>
    <includes id="MHO__DiFXInterface_8hh" name="MHO_DiFXInterface.hh" local="yes" imported="no">MHO_DiFXInterface.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXInterface_8hh.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__LegacyRootCodeGenerator_8hh" name="MHO_LegacyRootCodeGenerator.hh" local="yes" imported="no">MHO_LegacyRootCodeGenerator.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__StationCodeMap_8hh" name="MHO_StationCodeMap.hh" local="yes" imported="no">MHO_StationCodeMap.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__DiFXScanFileSet_8hh" name="MHO_DiFXScanFileSet.hh" local="yes" imported="no">MHO_DiFXScanFileSet.hh</includes>
    <includes id="MHO__DiFXScanProcessor_8hh" name="MHO_DiFXScanProcessor.hh" local="yes" imported="no">MHO_DiFXScanProcessor.hh</includes>
    <class kind="class">hops::MHO_DiFXInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXPCalProcessor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/src/</path>
    <filename>MHO__DiFXPCalProcessor_8cc.html</filename>
    <includes id="MHO__DiFXPCalProcessor_8hh" name="MHO_DiFXPCalProcessor.hh" local="yes" imported="no">MHO_DiFXPCalProcessor.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXPCalProcessor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXPCalProcessor_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__DiFXTimeUtilities_8hh" name="MHO_DiFXTimeUtilities.hh" local="yes" imported="no">MHO_DiFXTimeUtilities.hh</includes>
    <class kind="class">hops::MHO_DiFXPCalProcessor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXScanFileSet.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXScanFileSet_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_DiFXScanFileSet</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXScanProcessor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/src/</path>
    <filename>MHO__DiFXScanProcessor_8cc.html</filename>
    <includes id="MHO__DiFXScanProcessor_8hh" name="MHO_DiFXScanProcessor.hh" local="yes" imported="no">MHO_DiFXScanProcessor.hh</includes>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <includes id="MHO__VexGenerator_8hh" name="MHO_VexGenerator.hh" local="yes" imported="no">MHO_VexGenerator.hh</includes>
    <includes id="MHO__VexParser_8hh" name="MHO_VexParser.hh" local="yes" imported="no">MHO_VexParser.hh</includes>
    <includes id="MHO__Reducer_8hh" name="MHO_Reducer.hh" local="yes" imported="no">MHO_Reducer.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DIFX_J2000_MJD_EPOCH_OFFSET</name>
      <anchorfile>MHO__DiFXScanProcessor_8cc.html</anchorfile>
      <anchor>a2de821a9696d978348b011922d137465</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIFX_J2000_MJD_EPOCH_UTC_ISO8601</name>
      <anchorfile>MHO__DiFXScanProcessor_8cc.html</anchorfile>
      <anchor>a744b328fb90650335b2b10e5958fb775</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPS</name>
      <anchorfile>MHO__DiFXScanProcessor_8cc.html</anchorfile>
      <anchor>a6ebf6899d6c1c8b7b9d09be872c05aae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXScanProcessor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXScanProcessor_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__BinaryFileStreamer_8hh" name="MHO_BinaryFileStreamer.hh" local="yes" imported="no">MHO_BinaryFileStreamer.hh</includes>
    <includes id="MHO__ClassIdentityMap_8hh" name="MHO_ClassIdentityMap.hh" local="yes" imported="no">MHO_ClassIdentityMap.hh</includes>
    <includes id="MHO__DiFXChannelNameConstructor_8hh" name="MHO_DiFXChannelNameConstructor.hh" local="yes" imported="no">MHO_DiFXChannelNameConstructor.hh</includes>
    <includes id="MHO__DiFXInputProcessor_8hh" name="MHO_DiFXInputProcessor.hh" local="yes" imported="no">MHO_DiFXInputProcessor.hh</includes>
    <includes id="MHO__DiFXPCalProcessor_8hh" name="MHO_DiFXPCalProcessor.hh" local="yes" imported="no">MHO_DiFXPCalProcessor.hh</includes>
    <includes id="MHO__DiFXScanFileSet_8hh" name="MHO_DiFXScanFileSet.hh" local="yes" imported="no">MHO_DiFXScanFileSet.hh</includes>
    <includes id="MHO__DiFXVisibilityProcessor_8hh" name="MHO_DiFXVisibilityProcessor.hh" local="yes" imported="no">MHO_DiFXVisibilityProcessor.hh</includes>
    <includes id="MHO__DiFXVisibilityRecord_8hh" name="MHO_DiFXVisibilityRecord.hh" local="yes" imported="no">MHO_DiFXVisibilityRecord.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__StationCodeMap_8hh" name="MHO_StationCodeMap.hh" local="yes" imported="no">MHO_StationCodeMap.hh</includes>
    <includes id="MHO__DiFXTimeUtilities_8hh" name="MHO_DiFXTimeUtilities.hh" local="yes" imported="no">MHO_DiFXTimeUtilities.hh</includes>
    <class kind="class">hops::MHO_DiFXScanProcessor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXTimeUtilities.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXTimeUtilities_8hh.html</filename>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DIFX_J2000_MJD_EPOCH_OFFSET</name>
      <anchorfile>MHO__DiFXTimeUtilities_8hh.html</anchorfile>
      <anchor>a2de821a9696d978348b011922d137465</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIFX_J2000_MJD_EPOCH_UTC_ISO8601</name>
      <anchorfile>MHO__DiFXTimeUtilities_8hh.html</anchorfile>
      <anchor>a744b328fb90650335b2b10e5958fb775</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXVisibilityProcessor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/src/</path>
    <filename>MHO__DiFXVisibilityProcessor_8cc.html</filename>
    <includes id="MHO__DiFXVisibilityProcessor_8hh" name="MHO_DiFXVisibilityProcessor.hh" local="yes" imported="no">MHO_DiFXVisibilityProcessor.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXVisibilityProcessor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXVisibilityProcessor_8hh.html</filename>
    <includes id="MHO__DiFXBaselineProcessor_8hh" name="MHO_DiFXBaselineProcessor.hh" local="yes" imported="no">MHO_DiFXBaselineProcessor.hh</includes>
    <includes id="MHO__DiFXVisibilityRecord_8hh" name="MHO_DiFXVisibilityRecord.hh" local="yes" imported="no">MHO_DiFXVisibilityRecord.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_DiFXVisibilityProcessor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DiFXVisibilityRecord.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/include/</path>
    <filename>MHO__DiFXVisibilityRecord_8hh.html</filename>
    <class kind="class">hops::MHO_DiFXVisibilityRecord</class>
    <class kind="union">hops::MHO_VisibilityChunk</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DirectoryInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__DirectoryInterface_8cc.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__TimeStampConverter_8hh" name="MHO_TimeStampConverter.hh" local="yes" imported="no">MHO_TimeStampConverter.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DirectoryInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__DirectoryInterface_8hh.html</filename>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <class kind="class">hops::MHO_DirectoryInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_DoubleSidebandChannelLabeler.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__DoubleSidebandChannelLabeler_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__EncodeDecodeValue_8hh" name="MHO_EncodeDecodeValue.hh" local="yes" imported="no">MHO_EncodeDecodeValue.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_DoubleSidebandChannelLabeler</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ElementTypeCaster.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__ElementTypeCaster_8hh.html</filename>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TransformingOperator_8hh" name="MHO_TransformingOperator.hh" local="yes" imported="no">MHO_TransformingOperator.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <class kind="class">hops::MHO_ElementTypeCaster</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ElementTypes.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ElementTypes_8hh.html</filename>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>FLAG_TYPE</type>
      <name>flag_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba71fe94b8e0028458f45a1f1032a6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>FLAG_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afc2319090e7d24f7e26f6f22da6e605f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PCFP_TYPE</type>
      <name>manual_pcal_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6e1fd514a425115a857fff21f598845f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; PCFP_TYPE &gt;</type>
      <name>pcal_phasor_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa558c2e0a424c958495757fab2eaa6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>PCFP_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab1c120560d091c1b355299adbd274a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SPLINE_TYPE</type>
      <name>spline_coeff_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab6b2a0f7448d5b24e6418d64d01fb5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>SPLINE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2e8f2c2c3a84cb54d2a3732750ba301d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>VFP_STORE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7271f63209a0610d8be0a659ed3bc7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>VFP_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac7ed0ca1886593ccfab9335d9b2388c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; VFP_STORE_TYPE &gt;</type>
      <name>visibility_element_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3284541bb8c2e9eb114b2016f5805658</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; VFP_TYPE &gt;</type>
      <name>visibility_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a741de096410bb20f75acc7c8c00bd0b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WFP_STORE_TYPE</type>
      <name>weight_element_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7d13ce806c7759b51fcda8a3bd6bf5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WFP_TYPE</type>
      <name>weight_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aae1b8cfd47782523a6e6173e0927df21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>WFP_STORE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af63c410bcc02bbd8b36bbbeff0a52b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>WFP_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3b029f345d31806548518716602b5015</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_EncodeDecodeValue.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__EncodeDecodeValue_8hh.html</filename>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <class kind="class">hops::MHO_ChannelIndexLabeler</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>uint64_t</type>
      <name>decode_value</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2b37bfe1aa0771554f22d5b183682ea7</anchor>
      <arglist>(const std::string &amp;code, const std::string &amp;character_set)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>encode_value</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1aec64eb770cf9fe2ea0dff3b4f9a779</anchor>
      <arglist>(const uint64_t &amp;value, const std::string &amp;character_set)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_EndZeroPadder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__EndZeroPadder_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_EndZeroPadder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_EstimatePCManual.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__EstimatePCManual_8cc.html</filename>
    <includes id="MHO__EstimatePCManual_8hh" name="MHO_EstimatePCManual.hh" local="yes" imported="no">MHO_EstimatePCManual.hh</includes>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_EstimatePCManual.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__EstimatePCManual_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__InspectingOperator_8hh" name="MHO_InspectingOperator.hh" local="yes" imported="no">MHO_InspectingOperator.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_EstimatePCManual</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ExtensibleElement.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__ExtensibleElement_8hh.html</filename>
    <class kind="class">hops::MHO_ExtendedElement::ExtendedVisitor</class>
    <class kind="class">hops::MHO_Element</class>
    <class kind="class">hops::MHO_ExtendedElement</class>
    <class kind="class">hops::MHO_ExtensibleElement</class>
    <class kind="class">hops::MHO_Visitor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ExtremaSearch.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__ExtremaSearch_8hh.html</filename>
    <includes id="MHO__InspectingOperator_8hh" name="MHO_InspectingOperator.hh" local="yes" imported="no">MHO_InspectingOperator.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_ExtremaSearch</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FastFourierTransform.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__FastFourierTransform_8hh.html</filename>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <includes id="MHO__FastFourierTransformCalls_8hh" name="MHO_FastFourierTransformCalls.hh" local="yes" imported="no">MHO_FastFourierTransformCalls.hh</includes>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__FastFourierTransformWorkspace_8hh" name="MHO_FastFourierTransformWorkspace.hh" local="yes" imported="no">MHO_FastFourierTransformWorkspace.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_FastFourierTransform</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FastFourierTransformCalls.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__FastFourierTransformCalls_8hh.html</filename>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__FastFourierTransformWorkspace_8hh" name="MHO_FastFourierTransformWorkspace.hh" local="yes" imported="no">MHO_FastFourierTransformWorkspace.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>FFTBluestein</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac1bdf8477fb0b742fb1151553218c088</anchor>
      <arglist>(std::complex&lt; XFloatType &gt; *data, MHO_FastFourierTransformWorkspace&lt; XFloatType &gt; &amp;work, bool isForward, unsigned int stride=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FFTRadix2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afcf03d23bacb0b9a76beda3a26854384</anchor>
      <arglist>(std::complex&lt; XFloatType &gt; *data, MHO_FastFourierTransformWorkspace&lt; XFloatType &gt; &amp;work, bool isForward, unsigned int stride=1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_FastFourierTransformUtilities.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Math/cl/</path>
    <filename>MHO__FastFourierTransformUtilities_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_FastFourierTransformUtilities.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__FastFourierTransformUtilities_8hh.html</filename>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_FastFourierTransformUtilities</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FastFourierTransformWorkspace.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__FastFourierTransformWorkspace_8hh.html</filename>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_FastFourierTransformWorkspace</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FFTWTypes.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/src/</path>
    <filename>MHO__FFTWTypes_8cc.html</filename>
    <includes id="MHO__FFTWTypes_8hh" name="MHO_FFTWTypes.hh" local="yes" imported="no">MHO_FFTWTypes.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FFTWTypes.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__FFTWTypes_8hh.html</filename>
    <class kind="class">hops::MHO_FFTWTypeInfo</class>
    <class kind="struct">hops::MHO_FFTWTypes&lt; double &gt;</class>
    <class kind="struct">hops::MHO_FFTWTypes&lt; float &gt;</class>
    <class kind="struct">hops::MHO_FFTWTypes&lt; long double &gt;</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>int</type>
      <name>fftw_alignment_of</name>
      <anchorfile>MHO__FFTWTypes_8hh.html</anchorfile>
      <anchor>a55e522cd62c817b55ccb8f6232adcdc4</anchor>
      <arglist>(double *) __attribute__((weak))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fftwf_alignment_of</name>
      <anchorfile>MHO__FFTWTypes_8hh.html</anchorfile>
      <anchor>a7ea97135289815eb82da439491c0b45d</anchor>
      <arglist>(float *) __attribute__((weak))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fftwl_alignment_of</name>
      <anchorfile>MHO__FFTWTypes_8hh.html</anchorfile>
      <anchor>a69f9e16b912d2427c8fb5d97b8e2c2c5</anchor>
      <arglist>(long double *) __attribute__((weak))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_FileKey.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__FileKey_8hh.html</filename>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <class kind="class">hops::MHO_FileKey</class>
    <class kind="union">hops::MHO_FileKeyVersionInfo</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FileStreamer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__FileStreamer_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_FileStreamer</class>
    <class kind="struct">hops::MHO_ObjectStreamState</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeContainers.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__FringeContainers_8hh.html</filename>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; std::complex&lt; double &gt;, MHO_AxisPack&lt; MHO_Axis&lt; double &gt;, MHO_Axis&lt; double &gt; &gt; &gt;</type>
      <name>phasor_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae84ae133e425a9e97ee17c8fa9f57a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; double, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</type>
      <name>xpower_amp_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0876bf037431c9d1550c2af6cb40a34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; std::complex&lt; double &gt;, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</type>
      <name>xpower_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a085bda9bb87c6f1100bf200de099be8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_FringeControlInitialization.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__FringeControlInitialization_8cc.html</filename>
    <includes id="MHO__FringeControlInitialization_8hh" name="MHO_FringeControlInitialization.hh" local="yes" imported="no">MHO_FringeControlInitialization.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__ControlConditionEvaluator_8hh" name="MHO_ControlConditionEvaluator.hh" local="yes" imported="no">MHO_ControlConditionEvaluator.hh</includes>
    <includes id="MHO__ControlDefinitions_8hh" name="MHO_ControlDefinitions.hh" local="yes" imported="no">MHO_ControlDefinitions.hh</includes>
    <includes id="MHO__ControlFileParser_8hh" name="MHO_ControlFileParser.hh" local="yes" imported="no">MHO_ControlFileParser.hh</includes>
    <includes id="MHO__ParameterManager_8hh" name="MHO_ParameterManager.hh" local="yes" imported="no">MHO_ParameterManager.hh</includes>
    <includes id="MHO__InitialFringeInfo_8hh" name="MHO_InitialFringeInfo.hh" local="yes" imported="no">MHO_InitialFringeInfo.hh</includes>
    <includes id="MHO__VexInfoExtractor_8hh" name="MHO_VexInfoExtractor.hh" local="yes" imported="no">MHO_VexInfoExtractor.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeControlInitialization.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__FringeControlInitialization_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <includes id="MHO__OperatorBuilderManager_8hh" name="MHO_OperatorBuilderManager.hh" local="yes" imported="no">MHO_OperatorBuilderManager.hh</includes>
    <class kind="class">hops::MHO_FringeControlInitialization</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeData.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__FringeData_8cc.html</filename>
    <includes id="MHO__FringeData_8hh" name="MHO_FringeData.hh" local="yes" imported="no">MHO_FringeData.hh</includes>
    <includes id="MHO__UUIDGenerator_8hh" name="MHO_UUIDGenerator.hh" local="yes" imported="no">MHO_UUIDGenerator.hh</includes>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__LockFileHandler_8hh" name="MHO_LockFileHandler.hh" local="yes" imported="no">MHO_LockFileHandler.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeData.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__FringeData_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <class kind="class">hops::MHO_FringeData</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeFitter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__FringeFitter_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__FringeData_8hh" name="MHO_FringeData.hh" local="yes" imported="no">MHO_FringeData.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <includes id="MHO__OperatorBuilderManager_8hh" name="MHO_OperatorBuilderManager.hh" local="yes" imported="no">MHO_OperatorBuilderManager.hh</includes>
    <includes id="MHO__ParameterConfigurator_8hh" name="MHO_ParameterConfigurator.hh" local="yes" imported="no">MHO_ParameterConfigurator.hh</includes>
    <includes id="MHO__ParameterManager_8hh" name="MHO_ParameterManager.hh" local="yes" imported="no">MHO_ParameterManager.hh</includes>
    <class kind="class">hops::MHO_FringeFitter</class>
    <class kind="class">hops::MHO_FringeFitterVisitor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeFitterFactory.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__FringeFitterFactory_8cc.html</filename>
    <includes id="MHO__FringeFitterFactory_8hh" name="MHO_FringeFitterFactory.hh" local="yes" imported="no">MHO_FringeFitterFactory.hh</includes>
    <includes id="MHO__BasicFringeFitter_8hh" name="MHO_BasicFringeFitter.hh" local="yes" imported="no">MHO_BasicFringeFitter.hh</includes>
    <includes id="MHO__IonosphericFringeFitter_8hh" name="MHO_IonosphericFringeFitter.hh" local="yes" imported="no">MHO_IonosphericFringeFitter.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeFitterFactory.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__FringeFitterFactory_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__FringeData_8hh" name="MHO_FringeData.hh" local="yes" imported="no">MHO_FringeData.hh</includes>
    <includes id="MHO__FringeFitter_8hh" name="MHO_FringeFitter.hh" local="yes" imported="no">MHO_FringeFitter.hh</includes>
    <class kind="class">hops::MHO_FringeFitterFactory</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringePlotInfo.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__FringePlotInfo_8cc.html</filename>
    <includes id="MHO__FringePlotInfo_8hh" name="MHO_FringePlotInfo.hh" local="yes" imported="no">MHO_FringePlotInfo.hh</includes>
    <includes id="MHO__ComputePlotData_8hh" name="MHO_ComputePlotData.hh" local="yes" imported="no">MHO_ComputePlotData.hh</includes>
    <includes id="MHO__BasicFringeInfo_8hh" name="MHO_BasicFringeInfo.hh" local="yes" imported="no">MHO_BasicFringeInfo.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringePlotInfo.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__FringePlotInfo_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <class kind="class">hops::MHO_FringePlotInfo</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringePlotVisitor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__FringePlotVisitor_8hh.html</filename>
    <includes id="MHO__FringeFitter_8hh" name="MHO_FringeFitter.hh" local="yes" imported="no">MHO_FringeFitter.hh</includes>
    <class kind="class">hops::MHO_FringePlotVisitor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeRotation.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/</path>
    <filename>MHO__FringeRotation_8cc.html</filename>
    <includes id="MHO__FringeRotation_8hh" name="MHO_FringeRotation.hh" local="yes" imported="no">MHO_FringeRotation.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FringeRotation.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__FringeRotation_8hh.html</filename>
    <class kind="class">hops::MHO_FringeRotation</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_FunctorBroadcaster.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__FunctorBroadcaster_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_FunctorBroadcaster</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_GaussianWhiteNoiseSignal.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/</path>
    <filename>MHO__GaussianWhiteNoiseSignal_8cc.html</filename>
    <includes id="MHO__GaussianWhiteNoiseSignal_8hh" name="MHO_GaussianWhiteNoiseSignal.hh" local="yes" imported="no">MHO_GaussianWhiteNoiseSignal.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_GaussianWhiteNoiseSignal.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__GaussianWhiteNoiseSignal_8hh.html</filename>
    <includes id="MHO__SimulatedSignalGenerator_8hh" name="MHO_SimulatedSignalGenerator.hh" local="yes" imported="no">MHO_SimulatedSignalGenerator.hh</includes>
    <class kind="class">hops::MHO_GaussianWhiteNoiseSignal</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5Attributes.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/include/</path>
    <filename>MHO__HDF5Attributes_8hh.html</filename>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__NumpyTypeCode_8hh" name="MHO_NumpyTypeCode.hh" local="yes" imported="no">MHO_NumpyTypeCode.hh</includes>
    <includes id="MHO__HDF5TypeCode_8hh" name="MHO_HDF5TypeCode.hh" local="yes" imported="no">MHO_HDF5TypeCode.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>make_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a92a45302a8be10d376ec255feefdae19</anchor>
      <arglist>(const std::string &amp;key, const mho_json &amp;value, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a685b6f126da52cab94881345499ba338</anchor>
      <arglist>(const std::string &amp;key, XValueType value, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_attribute&lt; std::string &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a95e7643d7d4758dc9eb79e4636348919</anchor>
      <arglist>(const std::string &amp;key, std::string value, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_vector_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a037d2482ff0f513dec143a00bdce3a49</anchor>
      <arglist>(const std::string &amp;key, const std::vector&lt; std::string &gt; *data, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_vector_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad2a0a89a47551138813c1b3cb082c5e0</anchor>
      <arglist>(const std::string &amp;key, const std::vector&lt; XDataType &gt; *data, hid_t parent_dataset_id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5ContainerFileInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/src/</path>
    <filename>MHO__HDF5ContainerFileInterface_8cc.html</filename>
    <includes id="MHO__HDF5ContainerFileInterface_8hh" name="MHO_HDF5ContainerFileInterface.hh" local="yes" imported="no">MHO_HDF5ContainerFileInterface.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5ContainerFileInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/include/</path>
    <filename>MHO__HDF5ContainerFileInterface_8hh.html</filename>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__HDF5ConverterDictionary_8hh" name="MHO_HDF5ConverterDictionary.hh" local="yes" imported="no">MHO_HDF5ConverterDictionary.hh</includes>
    <class kind="class">hops::MHO_HDF5ContainerFileInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5ConversionHelpers.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/include/</path>
    <filename>MHO__HDF5ConversionHelpers_8hh.html</filename>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__NumpyTypeCode_8hh" name="MHO_NumpyTypeCode.hh" local="yes" imported="no">MHO_NumpyTypeCode.hh</includes>
    <includes id="MHO__HDF5TypeCode_8hh" name="MHO_HDF5TypeCode.hh" local="yes" imported="no">MHO_HDF5TypeCode.hh</includes>
    <includes id="MHO__HDF5Attributes_8hh" name="MHO_HDF5Attributes.hh" local="yes" imported="no">MHO_HDF5Attributes.hh</includes>
    <includes id="MHO__HDF5Datasets_8hh" name="MHO_HDF5Datasets.hh" local="yes" imported="no">MHO_HDF5Datasets.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>json_to_hdf5_attributes</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9e009f3898e156f1f46f9cd47b152e5e</anchor>
      <arglist>(const mho_json &amp;j, hid_t parent_group)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5ConverterDictionary.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/src/</path>
    <filename>MHO__HDF5ConverterDictionary_8cc.html</filename>
    <includes id="MHO__HDF5ConverterDictionary_8hh" name="MHO_HDF5ConverterDictionary.hh" local="yes" imported="no">MHO_HDF5ConverterDictionary.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AddTable1</name>
      <anchorfile>MHO__HDF5ConverterDictionary_8cc.html</anchorfile>
      <anchor>aed8690a91b55c1faee2d1c873d3485a8</anchor>
      <arglist>(TYPE1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AddTable2</name>
      <anchorfile>MHO__HDF5ConverterDictionary_8cc.html</anchorfile>
      <anchor>a493ee71a0406f7e7be4d4498c6f4fe78</anchor>
      <arglist>(TYPE1, TYPE2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AddTable3</name>
      <anchorfile>MHO__HDF5ConverterDictionary_8cc.html</anchorfile>
      <anchor>a0d0d71cfa8bf08fcf7bcd8899006fc58</anchor>
      <arglist>(TYPE1, TYPE2, TYPE3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AddTable4</name>
      <anchorfile>MHO__HDF5ConverterDictionary_8cc.html</anchorfile>
      <anchor>a798586e0beb731848deae1640fbd54fa</anchor>
      <arglist>(TYPE1, TYPE2, TYPE3, TYPE4)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5ConverterDictionary.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/include/</path>
    <filename>MHO__HDF5ConverterDictionary_8hh.html</filename>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <includes id="MHO__MD5HashGenerator_8hh" name="MHO_MD5HashGenerator.hh" local="yes" imported="no">MHO_MD5HashGenerator.hh</includes>
    <includes id="MHO__ContainerHDF5Converter_8hh" name="MHO_ContainerHDF5Converter.hh" local="yes" imported="no">MHO_ContainerHDF5Converter.hh</includes>
    <class kind="class">hops::MHO_HDF5ConverterDictionary</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5Datasets.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/include/</path>
    <filename>MHO__HDF5Datasets_8hh.html</filename>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ObjectTags_8hh" name="MHO_ObjectTags.hh" local="yes" imported="no">MHO_ObjectTags.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__NumpyTypeCode_8hh" name="MHO_NumpyTypeCode.hh" local="yes" imported="no">MHO_NumpyTypeCode.hh</includes>
    <includes id="MHO__HDF5TypeCode_8hh" name="MHO_HDF5TypeCode.hh" local="yes" imported="no">MHO_HDF5TypeCode.hh</includes>
    <includes id="MHO__HDF5Attributes_8hh" name="MHO_HDF5Attributes.hh" local="yes" imported="no">MHO_HDF5Attributes.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>herr_t</type>
      <name>make_dataset</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae9d6504fdbc8179c19333b27d52e095f</anchor>
      <arglist>(hid_t group_id, hid_t &amp;dataset_id, const std::string &amp;name, hsize_t rank, hsize_t *dims, const XDataType *data, const mho_json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_scalar_dataset</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a780c5313aed60980443722bbec5359fe</anchor>
      <arglist>(hid_t group_id, hid_t &amp;dataset_id, const std::string &amp;name, const XValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_scalar_dataset&lt; std::string &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a32c76108bb01b35a1842ddad67a7acc7</anchor>
      <arglist>(hid_t group_id, hid_t &amp;dataset_id, const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_scale</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64086a2b9c99d2972988c1137ef74cc2</anchor>
      <arglist>(hid_t group_id, hid_t dataset_id, std::size_t axis_idx, const std::string &amp;parent_name, const std::string &amp;name, const std::vector&lt; XDataType &gt; *data, const mho_json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_scale&lt; std::string &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afe29cba57ee8ed9e6dee0a6ecdac3cfa</anchor>
      <arglist>(hid_t group_id, hid_t dataset_id, std::size_t axis_idx, const std::string &amp;parent_name, const std::string &amp;name, const std::vector&lt; std::string &gt; *data, const mho_json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_string_vector_dataset</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a845cac6521c1636edb068e2c86b2a085</anchor>
      <arglist>(hid_t group_id, hid_t dataset_id, const std::string &amp;name, const std::vector&lt; std::string &gt; *data, const mho_json &amp;metadata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_HDF5TypeCode.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/HDF5/include/</path>
    <filename>MHO__HDF5TypeCode_8hh.html</filename>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <class kind="struct">hops::h5helper_complex_double</class>
    <class kind="struct">hops::h5helper_complex_float</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>struct hops::h5helper_complex_double</type>
      <name>h5helper_complex_double</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5860a53ed4d3448019e6c1c1e09cdeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct hops::h5helper_complex_float</type>
      <name>h5helper_complex_float</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a70e95959da2b39bc66eb98400afbb2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>create_complex_dtype_double</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a06bede74dd75a66d1f4af82b207c9a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>create_complex_dtype_float</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adf2f1a224a76181a28251dd23cda734b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a07d1b26cb2d9dd73446ce44c21ed1363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; double &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac4e09a6809fad69a32e530b2cd61aa37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; float &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abf9b76138f0b60402ccd520e938d13a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7eddf47c9fec858deccfdb6c9e06c696</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a58651101c65f4ee5ac9ed5504352dc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a87b145ec0f5f43d5d8e8a8dd53d9aa5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5d90d8725b748d261d577760d960f11f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; std::complex&lt; double &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9c89df1262c0e55d85462266b6668fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; std::complex&lt; float &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab4ca57cf28e33d433cf1ed4e43b5f296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>add513e78f4c5f94322c1b59c081dc462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9fd2ad491108d4d99c17025f0d77e2e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a03dcd8163b006fd80d59c8d825faae9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adbbeb510d14c4df1ec10ad28f66ff594</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_IndexLabelInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__IndexLabelInterface_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <class kind="class">hops::MHO_IndexLabelInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_InitialFringeInfo.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__InitialFringeInfo_8cc.html</filename>
    <includes id="MHO__InitialFringeInfo_8hh" name="MHO_InitialFringeInfo.hh" local="yes" imported="no">MHO_InitialFringeInfo.hh</includes>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <includes id="MHO__DelayModel_8hh" name="MHO_DelayModel.hh" local="yes" imported="no">MHO_DelayModel.hh</includes>
    <includes id="MHO__Reducer_8hh" name="MHO_Reducer.hh" local="yes" imported="no">MHO_Reducer.hh</includes>
    <includes id="MHO__StationModel_8hh" name="MHO_StationModel.hh" local="yes" imported="no">MHO_StationModel.hh</includes>
    <includes id="MHO__UniformGridPointsCalculator_8hh" name="MHO_UniformGridPointsCalculator.hh" local="yes" imported="no">MHO_UniformGridPointsCalculator.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_InitialFringeInfo.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__InitialFringeInfo_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <class kind="class">hops::MHO_InitialFringeInfo</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_InspectingOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__InspectingOperator_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <class kind="class">hops::MHO_InspectingOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_InterpolateFringePeak.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__InterpolateFringePeak_8cc.html</filename>
    <includes id="MHO__InterpolateFringePeak_8hh" name="MHO_InterpolateFringePeak.hh" local="yes" imported="no">MHO_InterpolateFringePeak.hh</includes>
    <includes id="MHO__FringeRotation_8hh" name="MHO_FringeRotation.hh" local="yes" imported="no">MHO_FringeRotation.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_InterpolateFringePeak.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__InterpolateFringePeak_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <includes id="MHO__FringeRotation_8hh" name="MHO_FringeRotation.hh" local="yes" imported="no">MHO_FringeRotation.hh</includes>
    <class kind="class">hops::MHO_InterpolateFringePeak</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Interval.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Interval_8hh.html</filename>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <class kind="class">hops::MHO_Interval</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_IntervalLabel.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__IntervalLabel_8cc.html</filename>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_IntervalLabelInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__IntervalLabelInterface_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <class kind="class">hops::MHO_IntervalLabelInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_IntervalLabelTree.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__IntervalLabelTree_8cc.html</filename>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_IonosphericFringeFitter.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__IonosphericFringeFitter_8cc.html</filename>
    <includes id="MHO__IonosphericFringeFitter_8hh" name="MHO_IonosphericFringeFitter.hh" local="yes" imported="no">MHO_IonosphericFringeFitter.hh</includes>
    <includes id="MHO__Snapshot_8hh" name="MHO_Snapshot.hh" local="yes" imported="no">MHO_Snapshot.hh</includes>
    <includes id="MHO__ControlConditionEvaluator_8hh" name="MHO_ControlConditionEvaluator.hh" local="yes" imported="no">MHO_ControlConditionEvaluator.hh</includes>
    <includes id="MHO__ControlFileParser_8hh" name="MHO_ControlFileParser.hh" local="yes" imported="no">MHO_ControlFileParser.hh</includes>
    <includes id="MHO__OperatorBuilderManager_8hh" name="MHO_OperatorBuilderManager.hh" local="yes" imported="no">MHO_OperatorBuilderManager.hh</includes>
    <includes id="MHO__ParameterConfigurator_8hh" name="MHO_ParameterConfigurator.hh" local="yes" imported="no">MHO_ParameterConfigurator.hh</includes>
    <includes id="MHO__ParameterManager_8hh" name="MHO_ParameterManager.hh" local="yes" imported="no">MHO_ParameterManager.hh</includes>
    <includes id="MHO__BasicFringeDataConfiguration_8hh" name="MHO_BasicFringeDataConfiguration.hh" local="yes" imported="no">MHO_BasicFringeDataConfiguration.hh</includes>
    <includes id="MHO__BasicFringeInfo_8hh" name="MHO_BasicFringeInfo.hh" local="yes" imported="no">MHO_BasicFringeInfo.hh</includes>
    <includes id="MHO__BasicFringeUtilities_8hh" name="MHO_BasicFringeUtilities.hh" local="yes" imported="no">MHO_BasicFringeUtilities.hh</includes>
    <includes id="MHO__FringePlotInfo_8hh" name="MHO_FringePlotInfo.hh" local="yes" imported="no">MHO_FringePlotInfo.hh</includes>
    <includes id="MHO__InitialFringeInfo_8hh" name="MHO_InitialFringeInfo.hh" local="yes" imported="no">MHO_InitialFringeInfo.hh</includes>
    <includes id="MHO__VexInfoExtractor_8hh" name="MHO_VexInfoExtractor.hh" local="yes" imported="no">MHO_VexInfoExtractor.hh</includes>
    <includes id="MHO__IonosphericPhaseCorrection_8hh" name="MHO_IonosphericPhaseCorrection.hh" local="yes" imported="no">MHO_IonosphericPhaseCorrection.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAX_ION_PTS</name>
      <anchorfile>MHO__IonosphericFringeFitter_8cc.html</anchorfile>
      <anchor>a447e1e4a790ac02e8865e7742514eb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_FINE_PTS</name>
      <anchorfile>MHO__IonosphericFringeFitter_8cc.html</anchorfile>
      <anchor>a252e314e628877c6af790890212a532e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_FINE_PTS_SMOOTH</name>
      <anchorfile>MHO__IonosphericFringeFitter_8cc.html</anchorfile>
      <anchor>a6ca9355001574150c41296a11aa1c4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_MED_PTS</name>
      <anchorfile>MHO__IonosphericFringeFitter_8cc.html</anchorfile>
      <anchor>a7172fadd699bd6ab4d2a8f34c641792e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_IonosphericFringeFitter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__IonosphericFringeFitter_8hh.html</filename>
    <includes id="MHO__BasicFringeFitter_8hh" name="MHO_BasicFringeFitter.hh" local="yes" imported="no">MHO_BasicFringeFitter.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <class kind="class">hops::MHO_IonosphericFringeFitter</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_IonosphericPhaseCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__IonosphericPhaseCorrection_8cc.html</filename>
    <includes id="MHO__IonosphericPhaseCorrection_8hh" name="MHO_IonosphericPhaseCorrection.hh" local="yes" imported="no">MHO_IonosphericPhaseCorrection.hh</includes>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_IonosphericPhaseCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__IonosphericPhaseCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_IonosphericPhaseCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_JSONHeaderWrapper.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__JSONHeaderWrapper_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <class kind="class">hops::MHO_JSONWrapper</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>nlohmann::json</type>
      <name>mho_json</name>
      <anchorfile>MHO__JSONHeaderWrapper_8hh.html</anchorfile>
      <anchor>ad8862af8dd9e65e2990665b6bbfcb6fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>nlohmann::ordered_json</type>
      <name>mho_ordered_json</name>
      <anchorfile>MHO__JSONHeaderWrapper_8hh.html</anchorfile>
      <anchor>a5a966f6fa8674ac7dbf7e15f0ce9c277</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_LegacyDateConverter.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__LegacyDateConverter_8cc.html</filename>
    <includes id="MHO__LegacyDateConverter_8hh" name="MHO_LegacyDateConverter.hh" local="yes" imported="no">MHO_LegacyDateConverter.hh</includes>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LegacyDateConverter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__LegacyDateConverter_8hh.html</filename>
    <includes id="legacy__hops__date_8hh" name="legacy_hops_date.hh" local="yes" imported="no">legacy_hops_date.hh</includes>
    <class kind="class">hops::MHO_LegacyDateConverter</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LegacyRootCodeGenerator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__LegacyRootCodeGenerator_8cc.html</filename>
    <includes id="MHO__LegacyRootCodeGenerator_8hh" name="MHO_LegacyRootCodeGenerator.hh" local="yes" imported="no">MHO_LegacyRootCodeGenerator.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ROOT_BREAK</name>
      <anchorfile>MHO__LegacyRootCodeGenerator_8cc.html</anchorfile>
      <anchor>ae8eb92a660cc13d39c42d3787a5528fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_LegacyRootCodeGenerator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__LegacyRootCodeGenerator_8hh.html</filename>
    <class kind="class">hops::MHO_LegacyRootCodeGenerator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LinearDParCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__LinearDParCorrection_8cc.html</filename>
    <includes id="MHO__LinearDParCorrection_8hh" name="MHO_LinearDParCorrection.hh" local="yes" imported="no">MHO_LinearDParCorrection.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>signum</name>
      <anchorfile>MHO__LinearDParCorrection_8cc.html</anchorfile>
      <anchor>a34b0a373ed8bc3a7cd512552f08fa7b8</anchor>
      <arglist>(a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_LinearDParCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__LinearDParCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__Reducer_8hh" name="MHO_Reducer.hh" local="yes" imported="no">MHO_Reducer.hh</includes>
    <class kind="class">hops::MHO_LinearDParCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LinearDParCorrectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__LinearDParCorrectionBuilder_8cc.html</filename>
    <includes id="MHO__LinearDParCorrectionBuilder_8hh" name="MHO_LinearDParCorrectionBuilder.hh" local="yes" imported="no">MHO_LinearDParCorrectionBuilder.hh</includes>
    <includes id="MHO__LinearDParCorrection_8hh" name="MHO_LinearDParCorrection.hh" local="yes" imported="no">MHO_LinearDParCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LinearDParCorrectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__LinearDParCorrectionBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_LinearDParCorrectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LockFileHandler.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__LockFileHandler_8cc.html</filename>
    <includes id="MHO__LockFileHandler_8hh" name="MHO_LockFileHandler.hh" local="yes" imported="no">MHO_LockFileHandler.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_INVALID</name>
      <anchorfile>MHO__LockFileHandler_8cc.html</anchorfile>
      <anchor>a5c3ac8668fcdddd83b604873aaba1dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_STALE_SEC</name>
      <anchorfile>MHO__LockFileHandler_8cc.html</anchorfile>
      <anchor>af3f2d252bde2e9f543830eac049aed9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_TIMEOUT</name>
      <anchorfile>MHO__LockFileHandler_8cc.html</anchorfile>
      <anchor>ab51d0a82c92884eb8dd5d058a91449af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_VALID</name>
      <anchorfile>MHO__LockFileHandler_8cc.html</anchorfile>
      <anchor>a999e0b3a2cc8690bbdfc539561737bc6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_LockFileHandler.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__LockFileHandler_8hh.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <class kind="struct">hops::lockfile_data</class>
    <class kind="class">hops::MHO_LockFileHandler</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_FILE_ERROR</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a042fbeabf6dd83e6d1e4d6261ba32f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_FILESET_FAIL</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a984c7b1bc202cc0954403d5ff12f24af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_PARSE_ERROR</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a20736cc5374941215563417e654e708f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_PROCESS_HAS_PRIORITY</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>ada14ed221c6fca414927b85f40752bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_PROCESS_NO_PRIORITY</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a634af58707c7580779b4cfcf72b90e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_STALE_ERROR</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a8d804dc8f5cc64826a455c0b93ecaded</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_STATUS_OK</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a680d6306c359d72e483fad9ebc01e605</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_TIMEOUT_ERROR</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a64ba1a8d0182143f221401dc14e8fc06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LOCKNAME_LEN</name>
      <anchorfile>MHO__LockFileHandler_8hh.html</anchorfile>
      <anchor>a841777a085183b78e955e43d25a258a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_LSBOffset.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__LSBOffset_8cc.html</filename>
    <includes id="MHO__LSBOffset_8hh" name="MHO_LSBOffset.hh" local="yes" imported="no">MHO_LSBOffset.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LSBOffset.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__LSBOffset_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_LSBOffset</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LSBOffsetBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__LSBOffsetBuilder_8cc.html</filename>
    <includes id="MHO__LSBOffsetBuilder_8hh" name="MHO_LSBOffsetBuilder.hh" local="yes" imported="no">MHO_LSBOffsetBuilder.hh</includes>
    <includes id="MHO__LSBOffset_8hh" name="MHO_LSBOffset.hh" local="yes" imported="no">MHO_LSBOffset.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_LSBOffsetBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__LSBOffsetBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_LSBOffsetBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelDelayCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__ManualChannelDelayCorrection_8cc.html</filename>
    <includes id="MHO__ManualChannelDelayCorrection_8hh" name="MHO_ManualChannelDelayCorrection.hh" local="yes" imported="no">MHO_ManualChannelDelayCorrection.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelDelayCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__ManualChannelDelayCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_ManualChannelDelayCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelDelayCorrectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ManualChannelDelayCorrectionBuilder_8cc.html</filename>
    <includes id="MHO__ManualChannelDelayCorrectionBuilder_8hh" name="MHO_ManualChannelDelayCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualChannelDelayCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualChannelDelayCorrection_8hh" name="MHO_ManualChannelDelayCorrection.hh" local="yes" imported="no">MHO_ManualChannelDelayCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelDelayCorrectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ManualChannelDelayCorrectionBuilder_8hh.html</filename>
    <includes id="MHO__ChannelQuantity_8hh" name="MHO_ChannelQuantity.hh" local="yes" imported="no">MHO_ChannelQuantity.hh</includes>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_ManualChannelDelayCorrectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelPhaseCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__ManualChannelPhaseCorrection_8cc.html</filename>
    <includes id="MHO__ManualChannelPhaseCorrection_8hh" name="MHO_ManualChannelPhaseCorrection.hh" local="yes" imported="no">MHO_ManualChannelPhaseCorrection.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelPhaseCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__ManualChannelPhaseCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_ManualChannelPhaseCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelPhaseCorrectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ManualChannelPhaseCorrectionBuilder_8cc.html</filename>
    <includes id="MHO__ManualChannelPhaseCorrectionBuilder_8hh" name="MHO_ManualChannelPhaseCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualChannelPhaseCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualChannelPhaseCorrection_8hh" name="MHO_ManualChannelPhaseCorrection.hh" local="yes" imported="no">MHO_ManualChannelPhaseCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualChannelPhaseCorrectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ManualChannelPhaseCorrectionBuilder_8hh.html</filename>
    <includes id="MHO__ChannelQuantity_8hh" name="MHO_ChannelQuantity.hh" local="yes" imported="no">MHO_ChannelQuantity.hh</includes>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_ManualChannelPhaseCorrectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolDelayCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__ManualPolDelayCorrection_8cc.html</filename>
    <includes id="MHO__ManualPolDelayCorrection_8hh" name="MHO_ManualPolDelayCorrection.hh" local="yes" imported="no">MHO_ManualPolDelayCorrection.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolDelayCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__ManualPolDelayCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_ManualPolDelayCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolDelayCorrectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ManualPolDelayCorrectionBuilder_8cc.html</filename>
    <includes id="MHO__ManualPolDelayCorrectionBuilder_8hh" name="MHO_ManualPolDelayCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualPolDelayCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualPolDelayCorrection_8hh" name="MHO_ManualPolDelayCorrection.hh" local="yes" imported="no">MHO_ManualPolDelayCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolDelayCorrectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ManualPolDelayCorrectionBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_ManualPolDelayCorrectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolPhaseCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__ManualPolPhaseCorrection_8cc.html</filename>
    <includes id="MHO__ManualPolPhaseCorrection_8hh" name="MHO_ManualPolPhaseCorrection.hh" local="yes" imported="no">MHO_ManualPolPhaseCorrection.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolPhaseCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__ManualPolPhaseCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_ManualPolPhaseCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolPhaseCorrectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ManualPolPhaseCorrectionBuilder_8cc.html</filename>
    <includes id="MHO__ManualPolPhaseCorrectionBuilder_8hh" name="MHO_ManualPolPhaseCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualPolPhaseCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualPolPhaseCorrection_8hh" name="MHO_ManualPolPhaseCorrection.hh" local="yes" imported="no">MHO_ManualPolPhaseCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ManualPolPhaseCorrectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ManualPolPhaseCorrectionBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_ManualPolPhaseCorrectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MathUtilities.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/</path>
    <filename>MHO__MathUtilities_8cc.html</filename>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTATAP</name>
      <anchorfile>MHO__MathUtilities_8cc.html</anchorfile>
      <anchor>acd223cd436508c24ea32eaddd831bfa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTATPER</name>
      <anchorfile>MHO__MathUtilities_8cc.html</anchorfile>
      <anchor>a5a9b9652ba48bf345dbc7c970348a564</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MathUtilities.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__MathUtilities_8hh.html</filename>
    <class kind="class">hops::MHO_MathUtilities</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MBDelaySearch.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__MBDelaySearch_8cc.html</filename>
    <includes id="MHO__MBDelaySearch_8hh" name="MHO_MBDelaySearch.hh" local="yes" imported="no">MHO_MBDelaySearch.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MBDelaySearch.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__MBDelaySearch_8hh.html</filename>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__CyclicRotator_8hh" name="MHO_CyclicRotator.hh" local="yes" imported="no">MHO_CyclicRotator.hh</includes>
    <includes id="MHO__DelayRate_8hh" name="MHO_DelayRate.hh" local="yes" imported="no">MHO_DelayRate.hh</includes>
    <includes id="MHO__ExtremaSearch_8hh" name="MHO_ExtremaSearch.hh" local="yes" imported="no">MHO_ExtremaSearch.hh</includes>
    <includes id="MHO__InspectingOperator_8hh" name="MHO_InspectingOperator.hh" local="yes" imported="no">MHO_InspectingOperator.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UniformGridPointsCalculator_8hh" name="MHO_UniformGridPointsCalculator.hh" local="yes" imported="no">MHO_UniformGridPointsCalculator.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <class kind="class">hops::MHO_MBDelaySearch</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; double, mbd_axis_pack &gt;</type>
      <name>mbd_amp_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a14d8b513a00fa05f407b5a6142f31238</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; time_axis_type &gt;</type>
      <name>mbd_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a73c3f8a3e90792851cbeb56a1a8dd7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt;</type>
      <name>mbd_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a07871b98086236e6650863c1bf955e26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MBDelaySearchCUDA.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/CUDA/CUDAModules/src/</path>
    <filename>MHO__MBDelaySearchCUDA_8cc.html</filename>
    <includes id="MHO__MBDelaySearchCUDA_8hh" name="MHO_MBDelaySearchCUDA.hh" local="yes" imported="no">MHO_MBDelaySearchCUDA.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MBDelaySearchCUDA.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/CUDA/CUDAModules/include/</path>
    <filename>MHO__MBDelaySearchCUDA_8hh.html</filename>
    <includes id="MHO__MBDelaySearch_8hh" name="MHO_MBDelaySearch.hh" local="yes" imported="no">MHO_MBDelaySearch.hh</includes>
    <class kind="class">hops::MHO_MBDelaySearchCUDA</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MD5HashGenerator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__MD5HashGenerator_8hh.html</filename>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <includes id="picohash_8h" name="picohash.h" local="yes" imported="no">picohash.h</includes>
    <class kind="class">hops::MHO_MD5HashGenerator</class>
    <class kind="class">hops::MHO_MD5HashGeneratorMultiType&lt; XValueType &gt;</class>
    <class kind="class">hops::MHO_MD5HashGeneratorMultiType&lt; XValueType, XValueTypeS... &gt;</class>
    <class kind="class">hops::MHO_MD5HashGeneratorSingleType</class>
    <class kind="class">hops::MHO_MD5HashGeneratorSingleType&lt; std::string &gt;</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_MD5HashGeneratorMultiType&lt; bool, char, unsigned char, short, unsigned short, int, unsigned int, long, unsigned long, long long, unsigned long long, float, double, long double, std::string &gt;</type>
      <name>MHO_MD5HashGeneratorBasicTypes</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a219036a368246e0e2f11100e110920cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_Message.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/src/</path>
    <filename>MHO__Message_8cc.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSG_ALIGN_PAD</name>
      <anchorfile>MHO__Message_8cc.html</anchorfile>
      <anchor>a649d27adf93795adf5c2a5c44f0e58bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr const char *</type>
      <name>PADDING</name>
      <anchorfile>MHO__Message_8cc.html</anchorfile>
      <anchor>acb31bad7bea2cdd37943c81ff1ce37ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_Message.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/include/</path>
    <filename>MHO__Message_8hh.html</filename>
    <includes id="MHO__SelfName_8hh" name="MHO_SelfName.hh" local="yes" imported="no">MHO_SelfName.hh</includes>
    <includes id="MHO__TestAssertions_8hh" name="MHO_TestAssertions.hh" local="yes" imported="no">MHO_TestAssertions.hh</includes>
    <includes id="MHO__Profiler_8hh" name="MHO_Profiler.hh" local="yes" imported="no">MHO_Profiler.hh</includes>
    <class kind="class">hops::MHO_Message</class>
    <class kind="class">hops::MHO_MessageEndline</class>
    <class kind="class">hops::MHO_MessageNewline</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>check_step_error</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>a7743efd415c40378a5bfdf2ecad199bb</anchor>
      <arglist>(xVALUE, xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>check_step_fatal</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>af6437b9d519f790db58bab45c8559082</anchor>
      <arglist>(xVALUE, xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>msg_debug</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>a1e1991911fa5625912e391fd7876c575</anchor>
      <arglist>(xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>msg_error</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>acd8d50c6722941e40e21c59ffba48011</anchor>
      <arglist>(xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>msg_fatal</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>abe5a333c46f4dfc7cd3601865c9252d4</anchor>
      <arglist>(xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>msg_info</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>a70d2a69334c19db04365eb32a1d26447</anchor>
      <arglist>(xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>msg_status</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>ac5bed42036d39970084a79ac0f3f9591</anchor>
      <arglist>(xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>msg_warn</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>a1f24dc78f2cec992c3a9752db555b06d</anchor>
      <arglist>(xKEY, xCONTENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STR</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>a977fb55869ebbffea7d9e0626869a8f1</anchor>
      <arglist>(str)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>aaca74301fd2e4904c2bde5f202889aeb</anchor>
      <arglist>(str)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TODO_FIXME_MSG</name>
      <anchorfile>MHO__Message_8hh.html</anchorfile>
      <anchor>aecaae848aae9625eafba624faf0a17ab</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MHO_MessageLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eSpecialLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09aaac756650fbaa2d4e6b756c9287a5e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eSilentErrorLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09ae5f55ad64222c98562d16d45b475ca59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eFatalErrorLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09adbb7a8dd881e5846fcca150304d11771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eErrorLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09aaba5b52ec3480e7f5cd7e6157457030c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eWarningLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09aa73d0d4f73e6cfd4654e75e967818ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eStatusLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09a1c875665edba4b8c0fdd234e041c04bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eInfoLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09acb6ccc2eef78772406d1d53dd65f3f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eDebugLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09a6dcc05af4179555fa24fbcf7ebe99d34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_Meta.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Meta_8hh.html</filename>
    <class kind="struct">hops::apply_to_tuple</class>
    <class kind="struct">hops::apply_to_tuple2</class>
    <class kind="struct">hops::apply_to_tuple2&lt; 0 &gt;</class>
    <class kind="struct">hops::apply_to_tuple&lt; 0 &gt;</class>
    <class kind="struct">hops::count_instances_of_type</class>
    <class kind="struct">hops::count_instances_of_type&lt; XCheckType, 0, T... &gt;</class>
    <class kind="struct">hops::indexed_tuple_visit</class>
    <class kind="struct">hops::indexed_tuple_visit&lt; 0 &gt;</class>
    <class kind="struct">hops::is_complex</class>
    <class kind="struct">hops::is_complex&lt; std::complex&lt; double &gt; &gt;</class>
    <class kind="struct">hops::is_complex&lt; std::complex&lt; float &gt; &gt;</class>
    <class kind="struct">hops::is_complex&lt; std::complex&lt; long double &gt; &gt;</class>
    <class kind="struct">hops::is_same_count</class>
    <class kind="struct">hops::is_same_count&lt; T, T &gt;</class>
    <class kind="class">hops::MHO_AxisBase</class>
    <class kind="struct">hops::MHO_EmptyType</class>
    <class kind="class">hops::MHO_NullType</class>
    <class kind="class">hops::MHO_ScalarContainerBase</class>
    <class kind="class">hops::MHO_TableContainerBase</class>
    <class kind="struct">hops::MHO_Typelist</class>
    <class kind="struct">hops::MHO_TypelistSizeImpl&lt; MHO_Typelist&lt; T... &gt; &gt;</class>
    <class kind="class">hops::MHO_VectorContainerBase</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>typename MHO_TypelistSizeImpl&lt; L &gt;::type</type>
      <name>MHO_TypelistSize</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a81428c7deedf83c6fd0583047fe632d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae4eeea1c905e099b4e62f6b9edc75adb</anchor>
      <arglist>(const XTupleType &amp;tup, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1b41da5b6d9a0dd5a33bc7ce8bddcb24</anchor>
      <arglist>(XTupleType &amp;tup, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7fc2aff6d5cdcded0f07cf55d8b3de1b</anchor>
      <arglist>(const XTupleType &amp;tup1, XTupleType &amp;tup2, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0b2cebee4189d48a621294b3f3cef539</anchor>
      <arglist>(XTupleType &amp;tup1, XTupleType2 &amp;tup2, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N &gt;=sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>istream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a41bd4d58a4b5e7caefd28e2f16f935c6</anchor>
      <arglist>(XStream &amp;s, std::tuple&lt; T... &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N&lt; sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>istream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0cb668b8c617cb12dec59f0788a3376e</anchor>
      <arglist>(XStream &amp;s, std::tuple&lt; T... &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N &gt;=sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>ostream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad032a709a8441f20b6a217c616cbff2a</anchor>
      <arglist>(XStream &amp;s, const std::tuple&lt; T... &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N&lt; sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>ostream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae7d2a541be200cdbbfeff8e7ca64c4af</anchor>
      <arglist>(XStream &amp;s, const std::tuple&lt; T... &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; typename XContainer1::value_type, typename XContainer2::value_type &gt;</type>
      <name>zip_into_map</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8d0f4fafdc07ca17ed352822e742aad4</anchor>
      <arglist>(const XContainer1 &amp;c1, const XContainer2 &amp;c2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MinWeight.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__MinWeight_8cc.html</filename>
    <includes id="MHO__MinWeight_8hh" name="MHO_MinWeight.hh" local="yes" imported="no">MHO_MinWeight.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MinWeight.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__MinWeight_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_MinWeight</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MinWeightBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__MinWeightBuilder_8cc.html</filename>
    <includes id="MHO__MinWeightBuilder_8hh" name="MHO_MinWeightBuilder.hh" local="yes" imported="no">MHO_MinWeightBuilder.hh</includes>
    <includes id="MHO__MinWeight_8hh" name="MHO_MinWeight.hh" local="yes" imported="no">MHO_MinWeight.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MinWeightBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__MinWeightBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_MinWeightBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MixedPolYShift.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__MixedPolYShift_8cc.html</filename>
    <includes id="MHO__MixedPolYShift_8hh" name="MHO_MixedPolYShift.hh" local="yes" imported="no">MHO_MixedPolYShift.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MixedPolYShift.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__MixedPolYShift_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_MixedPolYShift</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MixedPolYShiftBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__MixedPolYShiftBuilder_8cc.html</filename>
    <includes id="MHO__MixedPolYShiftBuilder_8hh" name="MHO_MixedPolYShiftBuilder.hh" local="yes" imported="no">MHO_MixedPolYShiftBuilder.hh</includes>
    <includes id="MHO__MixedPolYShift_8hh" name="MHO_MixedPolYShift.hh" local="yes" imported="no">MHO_MixedPolYShift.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MixedPolYShiftBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__MixedPolYShiftBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_MixedPolYShiftBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MixedSidebandNormFX.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__MixedSidebandNormFX_8cc.html</filename>
    <includes id="MHO__MixedSidebandNormFX_8hh" name="MHO_MixedSidebandNormFX.hh" local="yes" imported="no">MHO_MixedSidebandNormFX.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MixedSidebandNormFX.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__MixedSidebandNormFX_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__ComplexConjugator_8hh" name="MHO_ComplexConjugator.hh" local="yes" imported="no">MHO_ComplexConjugator.hh</includes>
    <includes id="MHO__CyclicRotator_8hh" name="MHO_CyclicRotator.hh" local="yes" imported="no">MHO_CyclicRotator.hh</includes>
    <includes id="MHO__EndZeroPadder_8hh" name="MHO_EndZeroPadder.hh" local="yes" imported="no">MHO_EndZeroPadder.hh</includes>
    <includes id="MHO__FunctorBroadcaster_8hh" name="MHO_FunctorBroadcaster.hh" local="yes" imported="no">MHO_FunctorBroadcaster.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <includes id="MHO__NaNMasker_8hh" name="MHO_NaNMasker.hh" local="yes" imported="no">MHO_NaNMasker.hh</includes>
    <includes id="MHO__NormFX_8hh" name="MHO_NormFX.hh" local="yes" imported="no">MHO_NormFX.hh</includes>
    <includes id="MHO__SubSample_8hh" name="MHO_SubSample.hh" local="yes" imported="no">MHO_SubSample.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_MixedSidebandNormFX</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4CorelInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4CorelInterface_8cc.html</filename>
    <includes id="MHO__MK4CorelInterface_8hh" name="MHO_MK4CorelInterface.hh" local="yes" imported="no">MHO_MK4CorelInterface.hh</includes>
    <includes id="MHO__LegacyDateConverter_8hh" name="MHO_LegacyDateConverter.hh" local="yes" imported="no">MHO_LegacyDateConverter.hh</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__records_8h" name="mk4_records.h" local="yes" imported="no">mk4_records.h</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4CorelInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4CorelInterface_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__MK4VexInterface_8hh" name="MHO_MK4VexInterface.hh" local="yes" imported="no">MHO_MK4VexInterface.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_MK4CorelInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4CorelInterfaceReversed.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4CorelInterfaceReversed_8cc.html</filename>
    <includes id="MHO__MK4CorelInterfaceReversed_8hh" name="MHO_MK4CorelInterfaceReversed.hh" local="yes" imported="no">MHO_MK4CorelInterfaceReversed.hh</includes>
    <includes id="MHO__LegacyDateConverter_8hh" name="MHO_LegacyDateConverter.hh" local="yes" imported="no">MHO_LegacyDateConverter.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__records_8h" name="mk4_records.h" local="yes" imported="no">mk4_records.h</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>FillDate</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a89ca0e9a12cdc77628b52f6bd9e11174</anchor>
      <arglist>(struct date *destination, struct legacy_hops_date &amp;a_date)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MK4CorelInterfaceReversed.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4CorelInterfaceReversed_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_MK4CorelInterfaceReversed</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4FringeExport.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4FringeExport_8cc.html</filename>
    <includes id="MHO__MK4FringeExport_8hh" name="MHO_MK4FringeExport.hh" local="yes" imported="no">MHO_MK4FringeExport.hh</includes>
    <includes id="hops__version_8hh" name="hops_version.hh" local="yes" imported="no">hops_version.hh</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="MHO__LegacyDateConverter_8hh" name="MHO_LegacyDateConverter.hh" local="yes" imported="no">MHO_LegacyDateConverter.hh</includes>
    <includes id="MHO__LockFileHandler_8hh" name="MHO_LockFileHandler.hh" local="yes" imported="no">MHO_LockFileHandler.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_STATUS_OK</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>a680d6306c359d72e483fad9ebc01e605</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOD_ADLER</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>a0dff171c2773de00b3f678d3cee156f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_ALL</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>aa95e2f85444e56d7c826b0713ba74c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_IXY</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>aa3e95a123f5758bd1cc18ea74ecc4119</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_LL</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>a0ae1498d31a9eb8ad1f38aa70188136d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_LR</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>ae09f2d599dad8f523d1489c2f982abb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RL</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>ab9a7453c1deb1ece02aad3953c42d0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RR</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>a8933d10561b3a974a83569ee74ad4a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLCHAR_OFFSET</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>ae570aec987d5621c1e53525c5769fb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_LL</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>a39ec457f686b4335eca0c9e3dcede62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_LR</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>af5c1f702453f08e14ef6091b7292a07f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_RL</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>a7317001adabe10724c7b927c33a3a458</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_RR</name>
      <anchorfile>MHO__MK4FringeExport_8cc.html</anchorfile>
      <anchor>a6bf46f28458c301ec9f0c058ebc1e660</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>adler32_checksum</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9d689dcf5ca4aae4fceecfad2cca1a09</anchor>
      <arglist>(unsigned char *buf, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MK4FringeExport.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4FringeExport_8hh.html</filename>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <class kind="class">hops::MHO_MK4FringeExport</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4ScanConverter.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4ScanConverter_8cc.html</filename>
    <includes id="MHO__MK4ScanConverter_8hh" name="MHO_MK4ScanConverter.hh" local="yes" imported="no">MHO_MK4ScanConverter.hh</includes>
    <includes id="MHO__DoubleSidebandChannelLabeler_8hh" name="MHO_DoubleSidebandChannelLabeler.hh" local="yes" imported="no">MHO_DoubleSidebandChannelLabeler.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4ScanConverter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4ScanConverter_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__MK4CorelInterface_8hh" name="MHO_MK4CorelInterface.hh" local="yes" imported="no">MHO_MK4CorelInterface.hh</includes>
    <includes id="MHO__MK4StationInterface_8hh" name="MHO_MK4StationInterface.hh" local="yes" imported="no">MHO_MK4StationInterface.hh</includes>
    <includes id="MHO__MK4VexInterface_8hh" name="MHO_MK4VexInterface.hh" local="yes" imported="no">MHO_MK4VexInterface.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__VisibilityChannelizer_8hh" name="MHO_VisibilityChannelizer.hh" local="yes" imported="no">MHO_VisibilityChannelizer.hh</includes>
    <includes id="MHO__WeightChannelizer_8hh" name="MHO_WeightChannelizer.hh" local="yes" imported="no">MHO_WeightChannelizer.hh</includes>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__BinaryFileStreamer_8hh" name="MHO_BinaryFileStreamer.hh" local="yes" imported="no">MHO_BinaryFileStreamer.hh</includes>
    <includes id="MHO__ClassIdentityMap_8hh" name="MHO_ClassIdentityMap.hh" local="yes" imported="no">MHO_ClassIdentityMap.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <class kind="class">hops::MHO_MK4ScanConverter</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MK4_EXPDIR</name>
      <anchorfile>MHO__MK4ScanConverter_8hh.html</anchorfile>
      <anchor>a60457ed8141c8ced809974bb13e421c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MK4_SCANDIR</name>
      <anchorfile>MHO__MK4ScanConverter_8hh.html</anchorfile>
      <anchor>ad92672cff1da2fcf8d787dec1bc68790</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MK4_UNKNOWNDIR</name>
      <anchorfile>MHO__MK4ScanConverter_8hh.html</anchorfile>
      <anchor>a4904858ed5dca80f2e47ee322edf55b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MK4ScanConverterReversed.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4ScanConverterReversed_8cc.html</filename>
    <includes id="MHO__MK4ScanConverterReversed_8hh" name="MHO_MK4ScanConverterReversed.hh" local="yes" imported="no">MHO_MK4ScanConverterReversed.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <includes id="MHO__VexGenerator_8hh" name="MHO_VexGenerator.hh" local="yes" imported="no">MHO_VexGenerator.hh</includes>
    <includes id="MHO__MK4CorelInterfaceReversed_8hh" name="MHO_MK4CorelInterfaceReversed.hh" local="yes" imported="no">MHO_MK4CorelInterfaceReversed.hh</includes>
    <includes id="MHO__MK4StationInterfaceReversed_8hh" name="MHO_MK4StationInterfaceReversed.hh" local="yes" imported="no">MHO_MK4StationInterfaceReversed.hh</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__records_8h" name="mk4_records.h" local="yes" imported="no">mk4_records.h</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4ScanConverterReversed.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4ScanConverterReversed_8hh.html</filename>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <class kind="class">hops::MHO_MK4ScanConverterReversed</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HOPS4_EXPDIR</name>
      <anchorfile>MHO__MK4ScanConverterReversed_8hh.html</anchorfile>
      <anchor>aadcda31934e096e2d96c34307297f947</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS4_SCANDIR</name>
      <anchorfile>MHO__MK4ScanConverterReversed_8hh.html</anchorfile>
      <anchor>a1c7d4accc2fe1ddb0e866f4e646ab7fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS4_UNKNOWNDIR</name>
      <anchorfile>MHO__MK4ScanConverterReversed_8hh.html</anchorfile>
      <anchor>a21c4d38b0969de70d1060973c4f022a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MK4StationInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4StationInterface_8cc.html</filename>
    <includes id="MHO__MK4StationInterface_8hh" name="MHO_MK4StationInterface.hh" local="yes" imported="no">MHO_MK4StationInterface.hh</includes>
    <includes id="MHO__LegacyDateConverter_8hh" name="MHO_LegacyDateConverter.hh" local="yes" imported="no">MHO_LegacyDateConverter.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__records_8h" name="mk4_records.h" local="yes" imported="no">mk4_records.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>T309_MAX_CHAN</name>
      <anchorfile>MHO__MK4StationInterface_8cc.html</anchorfile>
      <anchor>a35afb7d323316dc671160e63016d06f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T309_MAX_PHASOR</name>
      <anchorfile>MHO__MK4StationInterface_8cc.html</anchorfile>
      <anchor>a2c80be61c2c87dbb366f9d38ec5a5810</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO31</name>
      <anchorfile>MHO__MK4StationInterface_8cc.html</anchorfile>
      <anchor>a42cf1e6775231cf1ca1e873889f58dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO32</name>
      <anchorfile>MHO__MK4StationInterface_8cc.html</anchorfile>
      <anchor>a9296cb585de000681fc929e5ec247e74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MK4StationInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4StationInterface_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__MK4VexInterface_8hh" name="MHO_MK4VexInterface.hh" local="yes" imported="no">MHO_MK4VexInterface.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_MK4StationInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4StationInterfaceReversed.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4StationInterfaceReversed_8cc.html</filename>
    <includes id="MHO__MK4StationInterfaceReversed_8hh" name="MHO_MK4StationInterfaceReversed.hh" local="yes" imported="no">MHO_MK4StationInterfaceReversed.hh</includes>
    <includes id="MHO__LegacyDateConverter_8hh" name="MHO_LegacyDateConverter.hh" local="yes" imported="no">MHO_LegacyDateConverter.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__records_8h" name="mk4_records.h" local="yes" imported="no">mk4_records.h</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MHZ_TO_HZ</name>
      <anchorfile>MHO__MK4StationInterfaceReversed_8cc.html</anchorfile>
      <anchor>a025af2a4a05cf4eee84d9c6cb893dad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MK4_MAX_COEFF</name>
      <anchorfile>MHO__MK4StationInterfaceReversed_8cc.html</anchorfile>
      <anchor>a124f59549a046737ad5ff5226b272f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T309_MAX_CHAN</name>
      <anchorfile>MHO__MK4StationInterfaceReversed_8cc.html</anchorfile>
      <anchor>a35afb7d323316dc671160e63016d06f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T309_MAX_PHASOR</name>
      <anchorfile>MHO__MK4StationInterfaceReversed_8cc.html</anchorfile>
      <anchor>a2c80be61c2c87dbb366f9d38ec5a5810</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO31</name>
      <anchorfile>MHO__MK4StationInterfaceReversed_8cc.html</anchorfile>
      <anchor>a42cf1e6775231cf1ca1e873889f58dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO32</name>
      <anchorfile>MHO__MK4StationInterfaceReversed_8cc.html</anchorfile>
      <anchor>a9296cb585de000681fc929e5ec247e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillDateStation</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa36b5429472f9eab39202f6535614112</anchor>
      <arglist>(struct date *destination, struct legacy_hops_date &amp;a_date)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MK4StationInterfaceReversed.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4StationInterfaceReversed_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_MK4StationInterfaceReversed</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4VexInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/src/</path>
    <filename>MHO__MK4VexInterface_8cc.html</filename>
    <includes id="MHO__MK4VexInterface_8hh" name="MHO_MK4VexInterface.hh" local="yes" imported="no">MHO_MK4VexInterface.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MK4VexInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/MK4Interface/include/</path>
    <filename>MHO__MK4VexInterface_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__VexParser_8hh" name="MHO_VexParser.hh" local="yes" imported="no">MHO_VexParser.hh</includes>
    <class kind="class">hops::MHO_MK4VexInterface</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MPIInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__MPIInterface_8cc.html</filename>
    <includes id="MHO__MPIInterface_8hh" name="MHO_MPIInterface.hh" local="yes" imported="no">MHO_MPIInterface.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_MPI_SIZE_T</name>
      <anchorfile>MHO__MPIInterface_8cc.html</anchorfile>
      <anchor>a7cb9bc6ca6e3775c84241637dc46766d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOST_DETERMINATION_TAG</name>
      <anchorfile>MHO__MPIInterface_8cc.html</anchorfile>
      <anchor>a7b2d4bae5dd1ad1dc5c4bcba2a97e4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCALID_DETERMINATION_TAG</name>
      <anchorfile>MHO__MPIInterface_8cc.html</anchorfile>
      <anchor>afdda3abc919250e1e4a526a868f2dba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MSG_TAG</name>
      <anchorfile>MHO__MPIInterface_8cc.html</anchorfile>
      <anchor>ae9267a3d267c54be2838a541b186af20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MPIInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__MPIInterface_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_MPIInterface</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LOCAL_RANK_MPI</name>
      <anchorfile>MHO__MPIInterface_8hh.html</anchorfile>
      <anchor>ae1503405cdf32bf55fa06d0256de2173</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MPIInterfaceWrapper.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__MPIInterfaceWrapper_8hh.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MPI_SINGLE_PROCESS</name>
      <anchorfile>MHO__MPIInterfaceWrapper_8hh.html</anchorfile>
      <anchor>a93e6bc68c0b14a44a611ae8caf8f2640</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MultidimensionalFastFourierTransform.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__MultidimensionalFastFourierTransform_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__FastFourierTransformCalls_8hh" name="MHO_FastFourierTransformCalls.hh" local="yes" imported="no">MHO_FastFourierTransformCalls.hh</includes>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__FastFourierTransformWorkspace_8hh" name="MHO_FastFourierTransformWorkspace.hh" local="yes" imported="no">MHO_FastFourierTransformWorkspace.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransformInterface_8hh" name="MHO_MultidimensionalFastFourierTransformInterface.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransformInterface.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransform</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MultidimensionalFastFourierTransformFFTW.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__MultidimensionalFastFourierTransformFFTW_8hh.html</filename>
    <includes id="MHO__FFTWTypes_8hh" name="MHO_FFTWTypes.hh" local="yes" imported="no">MHO_FFTWTypes.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransformInterface_8hh" name="MHO_MultidimensionalFastFourierTransformInterface.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransformInterface.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransformFFTW</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_FFTW_PLAN_ALGO</name>
      <anchorfile>MHO__MultidimensionalFastFourierTransformFFTW_8hh.html</anchorfile>
      <anchor>a1d789b27b11bc15726f546a936f4e283</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MultidimensionalFastFourierTransformInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__MultidimensionalFastFourierTransformInterface_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransformInterface</class>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransformInterface::TransformAxis</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MultitonePhaseCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__MultitonePhaseCorrection_8cc.html</filename>
    <includes id="MHO__MultitonePhaseCorrection_8hh" name="MHO_MultitonePhaseCorrection.hh" local="yes" imported="no">MHO_MultitonePhaseCorrection.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <includes id="MHO__BitReversalPermutation_8hh" name="MHO_BitReversalPermutation.hh" local="yes" imported="no">MHO_BitReversalPermutation.hh</includes>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>N_MASK_BITS</name>
      <anchorfile>MHO__MultitonePhaseCorrection_8cc.html</anchorfile>
      <anchor>a7e81effbbc0309d80d07e52c91c678db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverse_bits</name>
      <anchorfile>MHO__MultitonePhaseCorrection_8cc.html</anchorfile>
      <anchor>a59ba63a94265e429c30efebfafbcd7c6</anchor>
      <arglist>(std::bitset&lt; N &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_MultitonePhaseCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__MultitonePhaseCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <includes id="MHO__PhaseCalibrationTrim_8hh" name="MHO_PhaseCalibrationTrim.hh" local="yes" imported="no">MHO_PhaseCalibrationTrim.hh</includes>
    <class kind="class">hops::MHO_MultitonePhaseCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MultitonePhaseCorrectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__MultitonePhaseCorrectionBuilder_8cc.html</filename>
    <includes id="MHO__MultitonePhaseCorrectionBuilder_8hh" name="MHO_MultitonePhaseCorrectionBuilder.hh" local="yes" imported="no">MHO_MultitonePhaseCorrectionBuilder.hh</includes>
    <includes id="MHO__MultitonePhaseCorrection_8hh" name="MHO_MultitonePhaseCorrection.hh" local="yes" imported="no">MHO_MultitonePhaseCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_MultitonePhaseCorrectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__MultitonePhaseCorrectionBuilder_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_MultitonePhaseCorrectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NaNMasker.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__NaNMasker_8hh.html</filename>
    <includes id="MHO__CheckForNaN_8hh" name="MHO_CheckForNaN.hh" local="yes" imported="no">MHO_CheckForNaN.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__UnaryFunctor_8hh" name="MHO_UnaryFunctor.hh" local="yes" imported="no">MHO_UnaryFunctor.hh</includes>
    <class kind="class">hops::MHO_NaNMasker</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NDArrayMath.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__NDArrayMath_8hh.html</filename>
    <class kind="struct">hops::MHO_NDArrayMath::Divide</class>
    <class kind="struct">hops::MHO_NDArrayMath::Divide&lt; numerator, 1 &gt;</class>
    <class kind="class">hops::MHO_NDArrayMath</class>
    <class kind="struct">hops::MHO_NDArrayMath::PowerOfTwo</class>
    <class kind="struct">hops::MHO_NDArrayMath::PowerOfTwo&lt; 0 &gt;</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NDArrayTypeCastFunctor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__NDArrayTypeCastFunctor_8hh.html</filename>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <class kind="class">hops::MHO_NDArrayTypeCastFunctor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NDArrayView.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__NDArrayView_8hh.html</filename>
    <includes id="MHO__BidirectionalIndexedIterator_8hh" name="MHO_BidirectionalIndexedIterator.hh" local="yes" imported="no">MHO_BidirectionalIndexedIterator.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayMath_8hh" name="MHO_NDArrayMath.hh" local="yes" imported="no">MHO_NDArrayMath.hh</includes>
    <class kind="class">hops::MHO_NDArrayView</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NDArrayWrapper.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__NDArrayWrapper_8hh.html</filename>
    <includes id="MHO__BidirectionalIterator_8hh" name="MHO_BidirectionalIterator.hh" local="yes" imported="no">MHO_BidirectionalIterator.hh</includes>
    <includes id="MHO__BidirectionalStrideIterator_8hh" name="MHO_BidirectionalStrideIterator.hh" local="yes" imported="no">MHO_BidirectionalStrideIterator.hh</includes>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayMath_8hh" name="MHO_NDArrayMath.hh" local="yes" imported="no">MHO_NDArrayMath.hh</includes>
    <includes id="MHO__NDArrayView_8hh" name="MHO_NDArrayView.hh" local="yes" imported="no">MHO_NDArrayView.hh</includes>
    <includes id="MHO__NDArrayWrapper__0_8hh" name="MHO_NDArrayWrapper_0.hh" local="yes" imported="no">MHO_NDArrayWrapper_0.hh</includes>
    <includes id="MHO__NDArrayWrapper__1_8hh" name="MHO_NDArrayWrapper_1.hh" local="yes" imported="no">MHO_NDArrayWrapper_1.hh</includes>
    <class kind="class">hops::MHO_NDArrayWrapper</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NDArrayWrapper_0.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__NDArrayWrapper__0_8hh.html</filename>
    <class kind="class">hops::MHO_NDArrayWrapper&lt; XValueType, 0 &gt;</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NDArrayWrapper_1.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__NDArrayWrapper__1_8hh.html</filename>
    <class kind="class">hops::MHO_NDArrayWrapper&lt; XValueType, 1 &gt;</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NDFFTBluestein_kernel.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/cl/</path>
    <filename>MHO__NDFFTBluestein__kernel_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_NDFFTRadix2Stage_kernel.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/cl/</path>
    <filename>MHO__NDFFTRadix2Stage__kernel_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_NormFX.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__NormFX_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_NormFX</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Notches.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__Notches_8cc.html</filename>
    <includes id="MHO__Notches_8hh" name="MHO_Notches.hh" local="yes" imported="no">MHO_Notches.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Notches.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__Notches_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_Notches</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NotchesBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__NotchesBuilder_8cc.html</filename>
    <includes id="MHO__NotchesBuilder_8hh" name="MHO_NotchesBuilder.hh" local="yes" imported="no">MHO_NotchesBuilder.hh</includes>
    <includes id="MHO__Notches_8hh" name="MHO_Notches.hh" local="yes" imported="no">MHO_Notches.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NotchesBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__NotchesBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_NotchesBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_NumpyTypeCode.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__NumpyTypeCode_8hh.html</filename>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae1e001fffefcd1f966ad1dce82f0b61d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; double &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0602315ab6bdf049da5b245d00bbe483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; float &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac55e2fc2521f7fa12ea7b8824b79ea9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3dfe4e5d278b3cbfd449cfba436434ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac1c790f251e17e29d51ed101d062e617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a78a66c7350c3700dd2aded10692506c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ade141b4e0812f17bef7726a143da76ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; std::complex&lt; double &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a05b251f9a0b9719390a4723d2a615678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; std::complex&lt; float &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8ca5636b5f82451873ba2eff237bac60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1251404e92436967f3b0d2de68c7b9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7af77a828f4d8c38850cd57097f12da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94194623de5019a9a525fd8eee981eed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a998264622a587a776290a3daefb0c8da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ObjectTags.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ObjectTags_8hh.html</filename>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <class kind="class">hops::MHO_ObjectTags</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLBatchedMultidimensionalFastFourierTransform.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/include/</path>
    <filename>MHO__OpenCLBatchedMultidimensionalFastFourierTransform_8hh.html</filename>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <includes id="MHO__OpenCLKernelBuilder_8hh" name="MHO_OpenCLKernelBuilder.hh" local="yes" imported="no">MHO_OpenCLKernelBuilder.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_OpenCLBatchedMultidimensionalFastFourierTransform</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ENFORCE_CL_FINISH</name>
      <anchorfile>MHO__OpenCLBatchedMultidimensionalFastFourierTransform_8hh.html</anchorfile>
      <anchor>a3f453bc873fafeb0af34e26ed5b29930</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLFastFourierTransformPlan.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/src/</path>
    <filename>MHO__OpenCLFastFourierTransformPlan_8cc.html</filename>
    <includes id="MHO__OpenCLFastFourierTransformPlan_8hh" name="MHO_OpenCLFastFourierTransformPlan.hh" local="yes" imported="no">MHO_OpenCLFastFourierTransformPlan.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a57e46aa8499c286e98a416e3baf8cc74</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLFastFourierTransformPlan.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/include/</path>
    <filename>MHO__OpenCLFastFourierTransformPlan_8hh.html</filename>
    <includes id="MHO__FastFourierTransform_8hh" name="MHO_FastFourierTransform.hh" local="yes" imported="no">MHO_FastFourierTransform.hh</includes>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__FastFourierTransformWorkspace_8hh" name="MHO_FastFourierTransformWorkspace.hh" local="yes" imported="no">MHO_FastFourierTransformWorkspace.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransformInterface_8hh" name="MHO_MultidimensionalFastFourierTransformInterface.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransformInterface.hh</includes>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <includes id="MHO__OpenCLKernelBuilder_8hh" name="MHO_OpenCLKernelBuilder.hh" local="yes" imported="no">MHO_OpenCLKernelBuilder.hh</includes>
    <class kind="class">hops::MHO_OpenCLFastFourierTransformPlan</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLFastFourierTransformRadix2Stage.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/include/</path>
    <filename>MHO__OpenCLFastFourierTransformRadix2Stage_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryInPlaceOperator_8hh" name="MHO_UnaryInPlaceOperator.hh" local="yes" imported="no">MHO_UnaryInPlaceOperator.hh</includes>
    <includes id="MHO__FastFourierTransform_8hh" name="MHO_FastFourierTransform.hh" local="yes" imported="no">MHO_FastFourierTransform.hh</includes>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__FastFourierTransformWorkspace_8hh" name="MHO_FastFourierTransformWorkspace.hh" local="yes" imported="no">MHO_FastFourierTransformWorkspace.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransformInterface_8hh" name="MHO_MultidimensionalFastFourierTransformInterface.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransformInterface.hh</includes>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <includes id="MHO__OpenCLKernelBuilder_8hh" name="MHO_OpenCLKernelBuilder.hh" local="yes" imported="no">MHO_OpenCLKernelBuilder.hh</includes>
    <includes id="MHO__OpenCLNDArrayBuffer_8hh" name="MHO_OpenCLNDArrayBuffer.hh" local="yes" imported="no">MHO_OpenCLNDArrayBuffer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_OpenCLFastFourierTransformRadix2Stage</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLHeaderWrapper.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Core/include/</path>
    <filename>MHO__OpenCLHeaderWrapper_8hh.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLInterface.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Core/src/</path>
    <filename>MHO__OpenCLInterface_8cc.html</filename>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_KERNEL_DIR</name>
      <anchorfile>MHO__OpenCLInterface_8cc.html</anchorfile>
      <anchor>a60d961702e18c204f3a7a33c1335f5f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Core/include/</path>
    <filename>MHO__OpenCLInterface_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__TemplateTypenameDeduction_8hh" name="MHO_TemplateTypenameDeduction.hh" local="yes" imported="no">MHO_TemplateTypenameDeduction.hh</includes>
    <includes id="MHO__OpenCLHeaderWrapper_8hh" name="MHO_OpenCLHeaderWrapper.hh" local="yes" imported="no">MHO_OpenCLHeaderWrapper.hh</includes>
    <class kind="class">hops::MHO_OpenCLInterface</class>
    <class kind="struct">MHO_OpenCLTypeMap</class>
    <class kind="struct">MHO_OpenCLTypeMap&lt; float &gt;</class>
    <class kind="struct">MHO_OpenCLTypeMap&lt; std::complex&lt; float &gt; &gt;</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>__CL_ENABLE_EXCEPTIONS</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>af1b68fb4ba71d72d397f46a730f03f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_ERROR_CATCH</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a3a05039be307b6ffdac8a16a93801001</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_ERROR_TRY</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>afb1e7b05efe6d7d7601c352b65756889</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_TYPE</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a68c58b11b36e022127c036b466eb4d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_TYPE16</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>af404787a48f7b54668d96a4ad4007e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_TYPE2</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>ac7b4cbecf9466a99c1c1bb6a5a0bb83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_TYPE4</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a791b5c75a9d3bf8fd8564c028eb2686b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_TYPE8</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>aea29cd042fe96345dfc84c8182d45e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CL_VECTOR_TYPE</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a7b6800b76997b2a8704db160c0d4799c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENFORCE_CL_FINISH</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a3f453bc873fafeb0af34e26ed5b29930</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_CL_ERROR_TRY_CATCH</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a45d9331192cc026742985b68d8bc0898</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLKernelBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Core/src/</path>
    <filename>MHO__OpenCLKernelBuilder_8cc.html</filename>
    <includes id="MHO__OpenCLKernelBuilder_8hh" name="MHO_OpenCLKernelBuilder.hh" local="yes" imported="no">MHO_OpenCLKernelBuilder.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_OPENCL_COMPILER_OUTPUT</name>
      <anchorfile>MHO__OpenCLKernelBuilder_8cc.html</anchorfile>
      <anchor>af5ab2556d9ebdac60954f800ff96f304</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLKernelBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Core/include/</path>
    <filename>MHO__OpenCLKernelBuilder_8hh.html</filename>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <class kind="class">hops::MHO_OpenCLKernelBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLMultidimensionalFastFourierTransform.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/include/</path>
    <filename>MHO__OpenCLMultidimensionalFastFourierTransform_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryInPlaceOperator_8hh" name="MHO_UnaryInPlaceOperator.hh" local="yes" imported="no">MHO_UnaryInPlaceOperator.hh</includes>
    <includes id="MHO__FastFourierTransform_8hh" name="MHO_FastFourierTransform.hh" local="yes" imported="no">MHO_FastFourierTransform.hh</includes>
    <includes id="MHO__FastFourierTransformUtilities_8hh" name="MHO_FastFourierTransformUtilities.hh" local="yes" imported="no">MHO_FastFourierTransformUtilities.hh</includes>
    <includes id="MHO__FastFourierTransformWorkspace_8hh" name="MHO_FastFourierTransformWorkspace.hh" local="yes" imported="no">MHO_FastFourierTransformWorkspace.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransformInterface_8hh" name="MHO_MultidimensionalFastFourierTransformInterface.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransformInterface.hh</includes>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <includes id="MHO__OpenCLKernelBuilder_8hh" name="MHO_OpenCLKernelBuilder.hh" local="yes" imported="no">MHO_OpenCLKernelBuilder.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_OpenCLMultidimensionalFastFourierTransform</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLNDArrayBuffer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Containers/include/</path>
    <filename>MHO__OpenCLNDArrayBuffer_8hh.html</filename>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <class kind="class">hops::MHO_OpenCLNDArrayBuffer</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OpenCLScalarMultiply.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/include/</path>
    <filename>MHO__OpenCLScalarMultiply_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__OpenCLInterface_8hh" name="MHO_OpenCLInterface.hh" local="yes" imported="no">MHO_OpenCLInterface.hh</includes>
    <includes id="MHO__OpenCLKernelBuilder_8hh" name="MHO_OpenCLKernelBuilder.hh" local="yes" imported="no">MHO_OpenCLKernelBuilder.hh</includes>
    <includes id="MHO__OpenCLNDArrayBuffer_8hh" name="MHO_OpenCLNDArrayBuffer.hh" local="yes" imported="no">MHO_OpenCLNDArrayBuffer.hh</includes>
    <class kind="class">hops::MHO_OpenCLScalarMultiply</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Operator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/src/</path>
    <filename>MHO__Operator_8cc.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Operator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__Operator_8hh.html</filename>
    <class kind="class">hops::MHO_Operator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OperatorBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__OperatorBuilder_8hh.html</filename>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__FringeData_8hh" name="MHO_FringeData.hh" local="yes" imported="no">MHO_FringeData.hh</includes>
    <class kind="class">hops::MHO_OperatorBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OperatorBuilderManager.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__OperatorBuilderManager_8cc.html</filename>
    <includes id="MHO__OperatorBuilderManager_8hh" name="MHO_OperatorBuilderManager.hh" local="yes" imported="no">MHO_OperatorBuilderManager.hh</includes>
    <includes id="MHO__ChannelLabelerBuilder_8hh" name="MHO_ChannelLabelerBuilder.hh" local="yes" imported="no">MHO_ChannelLabelerBuilder.hh</includes>
    <includes id="MHO__CircularFieldRotationBuilder_8hh" name="MHO_CircularFieldRotationBuilder.hh" local="yes" imported="no">MHO_CircularFieldRotationBuilder.hh</includes>
    <includes id="MHO__DCBlockBuilder_8hh" name="MHO_DCBlockBuilder.hh" local="yes" imported="no">MHO_DCBlockBuilder.hh</includes>
    <includes id="MHO__DataSelectionBuilder_8hh" name="MHO_DataSelectionBuilder.hh" local="yes" imported="no">MHO_DataSelectionBuilder.hh</includes>
    <includes id="MHO__LSBOffsetBuilder_8hh" name="MHO_LSBOffsetBuilder.hh" local="yes" imported="no">MHO_LSBOffsetBuilder.hh</includes>
    <includes id="MHO__LinearDParCorrectionBuilder_8hh" name="MHO_LinearDParCorrectionBuilder.hh" local="yes" imported="no">MHO_LinearDParCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualChannelDelayCorrectionBuilder_8hh" name="MHO_ManualChannelDelayCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualChannelDelayCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualChannelPhaseCorrectionBuilder_8hh" name="MHO_ManualChannelPhaseCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualChannelPhaseCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualPolDelayCorrectionBuilder_8hh" name="MHO_ManualPolDelayCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualPolDelayCorrectionBuilder.hh</includes>
    <includes id="MHO__ManualPolPhaseCorrectionBuilder_8hh" name="MHO_ManualPolPhaseCorrectionBuilder.hh" local="yes" imported="no">MHO_ManualPolPhaseCorrectionBuilder.hh</includes>
    <includes id="MHO__MinWeightBuilder_8hh" name="MHO_MinWeightBuilder.hh" local="yes" imported="no">MHO_MinWeightBuilder.hh</includes>
    <includes id="MHO__MixedPolYShiftBuilder_8hh" name="MHO_MixedPolYShiftBuilder.hh" local="yes" imported="no">MHO_MixedPolYShiftBuilder.hh</includes>
    <includes id="MHO__MultitonePhaseCorrectionBuilder_8hh" name="MHO_MultitonePhaseCorrectionBuilder.hh" local="yes" imported="no">MHO_MultitonePhaseCorrectionBuilder.hh</includes>
    <includes id="MHO__NotchesBuilder_8hh" name="MHO_NotchesBuilder.hh" local="yes" imported="no">MHO_NotchesBuilder.hh</includes>
    <includes id="MHO__PassbandBuilder_8hh" name="MHO_PassbandBuilder.hh" local="yes" imported="no">MHO_PassbandBuilder.hh</includes>
    <includes id="MHO__PolProductSummationBuilder_8hh" name="MHO_PolProductSummationBuilder.hh" local="yes" imported="no">MHO_PolProductSummationBuilder.hh</includes>
    <includes id="MHO__SamplerLabelerBuilder_8hh" name="MHO_SamplerLabelerBuilder.hh" local="yes" imported="no">MHO_SamplerLabelerBuilder.hh</includes>
    <includes id="MHO__StationDelayCorrectionBuilder_8hh" name="MHO_StationDelayCorrectionBuilder.hh" local="yes" imported="no">MHO_StationDelayCorrectionBuilder.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OperatorBuilderManager.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__OperatorBuilderManager_8hh.html</filename>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__FringeData_8hh" name="MHO_FringeData.hh" local="yes" imported="no">MHO_FringeData.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <class kind="class">hops::MHO_OperatorBuilderManager</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_OperatorToolbox.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__OperatorToolbox_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <class kind="class">hops::MHO_OperatorToolbox</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ParameterConfigurator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ParameterConfigurator_8cc.html</filename>
    <includes id="MHO__ParameterConfigurator_8hh" name="MHO_ParameterConfigurator.hh" local="yes" imported="no">MHO_ParameterConfigurator.hh</includes>
    <includes id="MHO__EncodeDecodeValue_8hh" name="MHO_EncodeDecodeValue.hh" local="yes" imported="no">MHO_EncodeDecodeValue.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ParameterConfigurator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ParameterConfigurator_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <class kind="class">hops::MHO_ParameterConfigurator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ParameterManager.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__ParameterManager_8cc.html</filename>
    <includes id="MHO__ParameterManager_8hh" name="MHO_ParameterManager.hh" local="yes" imported="no">MHO_ParameterManager.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ParameterManager.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__ParameterManager_8hh.html</filename>
    <includes id="MHO__ParameterConfigurator_8hh" name="MHO_ParameterConfigurator.hh" local="yes" imported="no">MHO_ParameterConfigurator.hh</includes>
    <class kind="class">hops::MHO_ParameterManager</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ParameterStore.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__ParameterStore_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <class kind="class">hops::MHO_ParameterStore</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Passband.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__Passband_8cc.html</filename>
    <includes id="MHO__Passband_8hh" name="MHO_Passband.hh" local="yes" imported="no">MHO_Passband.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Passband.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__Passband_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_Passband</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PassbandBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__PassbandBuilder_8cc.html</filename>
    <includes id="MHO__PassbandBuilder_8hh" name="MHO_PassbandBuilder.hh" local="yes" imported="no">MHO_PassbandBuilder.hh</includes>
    <includes id="MHO__Passband_8hh" name="MHO_Passband.hh" local="yes" imported="no">MHO_Passband.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PassbandBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__PassbandBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_PassbandBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PhaseCalibrationTrim.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__PhaseCalibrationTrim_8cc.html</filename>
    <includes id="MHO__PhaseCalibrationTrim_8hh" name="MHO_PhaseCalibrationTrim.hh" local="yes" imported="no">MHO_PhaseCalibrationTrim.hh</includes>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <includes id="MHO__SelectRepack_8hh" name="MHO_SelectRepack.hh" local="yes" imported="no">MHO_SelectRepack.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PhaseCalibrationTrim.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__PhaseCalibrationTrim_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_PhaseCalibrationTrim</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PointwiseComplexVectorAdd_kernel.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Math/cl/</path>
    <filename>MHO__PointwiseComplexVectorAdd__kernel_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_PointwiseComplexVectorMultiply_kernel.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Math/cl/</path>
    <filename>MHO__PointwiseComplexVectorMultiply__kernel_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_PolProductSummation.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__PolProductSummation_8cc.html</filename>
    <includes id="MHO__PolProductSummation_8hh" name="MHO_PolProductSummation.hh" local="yes" imported="no">MHO_PolProductSummation.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>signum</name>
      <anchorfile>MHO__PolProductSummation_8cc.html</anchorfile>
      <anchor>a34b0a373ed8bc3a7cd512552f08fa7b8</anchor>
      <arglist>(a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PolProductSummation.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__PolProductSummation_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__Reducer_8hh" name="MHO_Reducer.hh" local="yes" imported="no">MHO_Reducer.hh</includes>
    <class kind="class">hops::MHO_PolProductSummation</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PolProductSummationBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__PolProductSummationBuilder_8cc.html</filename>
    <includes id="MHO__PolProductSummationBuilder_8hh" name="MHO_PolProductSummationBuilder.hh" local="yes" imported="no">MHO_PolProductSummationBuilder.hh</includes>
    <includes id="MHO__PolProductSummation_8hh" name="MHO_PolProductSummation.hh" local="yes" imported="no">MHO_PolProductSummation.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PolProductSummationBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__PolProductSummationBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_PolProductSummationBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Profiler.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/src/</path>
    <filename>MHO__Profiler_8cc.html</filename>
    <includes id="MHO__Profiler_8hh" name="MHO_Profiler.hh" local="yes" imported="no">MHO_Profiler.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Profiler.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/include/</path>
    <filename>MHO__Profiler_8hh.html</filename>
    <includes id="MHO__SelfName_8hh" name="MHO_SelfName.hh" local="yes" imported="no">MHO_SelfName.hh</includes>
    <includes id="MHO__Timer_8hh" name="MHO_Timer.hh" local="yes" imported="no">MHO_Timer.hh</includes>
    <class kind="struct">hops::MHO_ProfileEvent</class>
    <class kind="class">hops::MHO_Profiler</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_USE_PROFILER</name>
      <anchorfile>MHO__Profiler_8hh.html</anchorfile>
      <anchor>a7603f005cbee8e8000af8140b1304a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROFILE_INFO_LEN</name>
      <anchorfile>MHO__Profiler_8hh.html</anchorfile>
      <anchor>a0b8778b4583569cc6cc5ea0a09abc936</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>profiler_start</name>
      <anchorfile>MHO__Profiler_8hh.html</anchorfile>
      <anchor>a749ffd4807ab8b95afc5b20ef5d13d87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>profiler_stop</name>
      <anchorfile>MHO__Profiler_8hh.html</anchorfile>
      <anchor>ad81947734289cfba81adf8690b6492e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MHO_ProfilerFlag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8f9c03709f211d49ed4caaf36ce118b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pStartFlag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8f9c03709f211d49ed4caaf36ce118b6a2f310b19d2c406ae4a6a6c1dd9320f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pStopFlag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8f9c03709f211d49ed4caaf36ce118b6ae8cec9d95f167ac1a0bc13807053da97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyConfigurePath.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Containers/include/</path>
    <filename>MHO__PyConfigurePath_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MHO_PyConfigurePath_HH_</name>
      <anchorfile>MHO__PyConfigurePath_8hh.html</anchorfile>
      <anchor>a680ddf6ffe67e286c4666ab07f5e7b06</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyContainersModuleDefinition.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Containers/src/</path>
    <filename>MHO__PyContainersModuleDefinition_8cc.html</filename>
    <includes id="MHO__PyContainerStoreInterface_8hh" name="MHO_PyContainerStoreInterface.hh" local="yes" imported="no">MHO_PyContainerStoreInterface.hh</includes>
    <includes id="MHO__PyFringeDataInterface_8hh" name="MHO_PyFringeDataInterface.hh" local="yes" imported="no">MHO_PyFringeDataInterface.hh</includes>
    <includes id="MHO__PyParameterStoreInterface_8hh" name="MHO_PyParameterStoreInterface.hh" local="yes" imported="no">MHO_PyParameterStoreInterface.hh</includes>
    <includes id="MHO__PyScanStoreInterface_8hh" name="MHO_PyScanStoreInterface.hh" local="yes" imported="no">MHO_PyScanStoreInterface.hh</includes>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <member kind="function">
      <type></type>
      <name>PYBIND11_MODULE</name>
      <anchorfile>MHO__PyContainersModuleDefinition_8cc.html</anchorfile>
      <anchor>ae94c9e1ee7429780c5dbc24d2812d733</anchor>
      <arglist>(pyMHO_Containers, m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyContainerStoreInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Containers/include/</path>
    <filename>MHO__PyContainerStoreInterface_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <class kind="class">hops::MHO_PyContainerStoreInterface</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyContainerStoreInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5ef5add9610b6df765276f64d068ed2b</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyFringeDataInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Containers/include/</path>
    <filename>MHO__PyFringeDataInterface_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__FringeData_8hh" name="MHO_FringeData.hh" local="yes" imported="no">MHO_FringeData.hh</includes>
    <includes id="MHO__PyContainerStoreInterface_8hh" name="MHO_PyContainerStoreInterface.hh" local="yes" imported="no">MHO_PyContainerStoreInterface.hh</includes>
    <includes id="MHO__PyParameterStoreInterface_8hh" name="MHO_PyParameterStoreInterface.hh" local="yes" imported="no">MHO_PyParameterStoreInterface.hh</includes>
    <includes id="MHO__PyScanStoreInterface_8hh" name="MHO_PyScanStoreInterface.hh" local="yes" imported="no">MHO_PyScanStoreInterface.hh</includes>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <class kind="class">hops::MHO_PyFringeDataInterface</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyFringeDataInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a431846e8de6844bd66d74ca03a11d5c6</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyFringeFitterInstance.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Operators/include/</path>
    <filename>MHO__PyFringeFitterInstance_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__PyContainerStoreInterface_8hh" name="MHO_PyContainerStoreInterface.hh" local="yes" imported="no">MHO_PyContainerStoreInterface.hh</includes>
    <includes id="MHO__PyParameterStoreInterface_8hh" name="MHO_PyParameterStoreInterface.hh" local="yes" imported="no">MHO_PyParameterStoreInterface.hh</includes>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <class kind="class">hops::MHO_PyFringeFitterInstance</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PyGenericOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Operators/include/</path>
    <filename>MHO__PyGenericOperator_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__PyContainerStoreInterface_8hh" name="MHO_PyContainerStoreInterface.hh" local="yes" imported="no">MHO_PyContainerStoreInterface.hh</includes>
    <includes id="MHO__PyParameterStoreInterface_8hh" name="MHO_PyParameterStoreInterface.hh" local="yes" imported="no">MHO_PyParameterStoreInterface.hh</includes>
    <includes id="MHO__PyFringeDataInterface_8hh" name="MHO_PyFringeDataInterface.hh" local="yes" imported="no">MHO_PyFringeDataInterface.hh</includes>
    <includes id="MHO__FringeData_8hh" name="MHO_FringeData.hh" local="yes" imported="no">MHO_FringeData.hh</includes>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <class kind="class">hops::MHO_PyGenericOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PyOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Operators/include/</path>
    <filename>MHO__PyOperator_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <class kind="class">hops::MHO_PyOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PyOperatorsModuleDefinition.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Operators/src/</path>
    <filename>MHO__PyOperatorsModuleDefinition_8cc.html</filename>
    <includes id="MHO__PyOperator_8hh" name="MHO_PyOperator.hh" local="yes" imported="no">MHO_PyOperator.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>PYBIND11_DETAILED_ERROR_MESSAGES</name>
      <anchorfile>MHO__PyOperatorsModuleDefinition_8cc.html</anchorfile>
      <anchor>a7043d9d872fdca0ec538d37d04325f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PYBIND11_MODULE</name>
      <anchorfile>MHO__PyOperatorsModuleDefinition_8cc.html</anchorfile>
      <anchor>a64a51e770979feaebcbf8504a52d74cd</anchor>
      <arglist>(pyMHO_Operators, m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyParameterStoreInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Containers/include/</path>
    <filename>MHO__PyParameterStoreInterface_8hh.html</filename>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <class kind="class">hops::MHO_PyParameterStoreInterface</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyParameterStoreInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94bcd64fcaad24df3ddaeef1d4858c2f</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyScanStoreInterface.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Containers/include/</path>
    <filename>MHO__PyScanStoreInterface_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <class kind="class">hops::MHO_PyScanStoreInterface</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyScanStoreInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad1dd1a197d643b937a5995761efa7dfa</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PyTableContainer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Containers/include/</path>
    <filename>MHO__PyTableContainer_8hh.html</filename>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__TemplateTypenameDeduction_8hh" name="MHO_TemplateTypenameDeduction.hh" local="yes" imported="no">MHO_TemplateTypenameDeduction.hh</includes>
    <class kind="class">hops::MHO_PyTableContainer</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyTableContainer</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a677938cf651793d79237261f93e1571d</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_PythonOperatorBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Operators/include/</path>
    <filename>MHO__PythonOperatorBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <includes id="MHO__PyGenericOperator_8hh" name="MHO_PyGenericOperator.hh" local="yes" imported="no">MHO_PyGenericOperator.hh</includes>
    <class kind="class">hops::MHO_PythonOperatorBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PyUnaryOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Operators/include/</path>
    <filename>MHO__PyUnaryOperator_8hh.html</filename>
    <includes id="MHO__PyOperator_8hh" name="MHO_PyOperator.hh" local="yes" imported="no">MHO_PyOperator.hh</includes>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <class kind="class">hops::MHO_PyUnaryOperator</class>
    <class kind="class">hops::MHO_UnaryOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_PyUnaryTableOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/PythonBindings/Operators/include/</path>
    <filename>MHO__PyUnaryTableOperator_8hh.html</filename>
    <includes id="MHO__PyTableContainer_8hh" name="MHO_PyTableContainer.hh" local="yes" imported="no">MHO_PyTableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_PyUnaryTableOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Reducer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__Reducer_8hh.html</filename>
    <includes id="MHO__CompoundReductions_8hh" name="MHO_CompoundReductions.hh" local="yes" imported="no">MHO_CompoundReductions.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_Reducer</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SamplerLabeler.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__SamplerLabeler_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_SamplerLabeler</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SamplerLabelerBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__SamplerLabelerBuilder_8cc.html</filename>
    <includes id="MHO__SamplerLabelerBuilder_8hh" name="MHO_SamplerLabelerBuilder.hh" local="yes" imported="no">MHO_SamplerLabelerBuilder.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__SamplerLabeler_8hh" name="MHO_SamplerLabeler.hh" local="yes" imported="no">MHO_SamplerLabeler.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SamplerLabelerBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__SamplerLabelerBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_SamplerLabelerBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SBDTableGenerator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__SBDTableGenerator_8cc.html</filename>
    <includes id="MHO__SBDTableGenerator_8hh" name="MHO_SBDTableGenerator.hh" local="yes" imported="no">MHO_SBDTableGenerator.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PADDING_FACTOR</name>
      <anchorfile>MHO__SBDTableGenerator_8cc.html</anchorfile>
      <anchor>adeb73d09534782eaa8034cbf1b918e12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_SBDTableGenerator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__SBDTableGenerator_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__TransformingOperator_8hh" name="MHO_TransformingOperator.hh" local="yes" imported="no">MHO_TransformingOperator.hh</includes>
    <class kind="class">hops::MHO_SBDTableGenerator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ScalarContainer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ScalarContainer_8hh.html</filename>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__Serializable_8hh" name="MHO_Serializable.hh" local="yes" imported="no">MHO_Serializable.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <class kind="class">hops::MHO_ScalarContainer</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; bool &gt;</type>
      <name>MHO_ScalarBool</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ade1d04834c517ba8ed0a8c05bdad6b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; char &gt;</type>
      <name>MHO_ScalarChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac40bc6bc90b9052f4ec8d8d62a22baa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::complex&lt; double &gt; &gt;</type>
      <name>MHO_ScalarComplexDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7d097b554ab3d0b2ba2060dfb5bf10a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::complex&lt; float &gt; &gt;</type>
      <name>MHO_ScalarComplexFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a873e3ba9c24123c34a114d414ded404e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::complex&lt; long double &gt; &gt;</type>
      <name>MHO_ScalarComplexLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1dc5ecefc988bd90eb028ea4fb5e4948</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; double &gt;</type>
      <name>MHO_ScalarDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6f11084c68244831cfa07add8ab83947</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; float &gt;</type>
      <name>MHO_ScalarFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8ec24681caf44e7dc10e8fbc3c401799</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; int &gt;</type>
      <name>MHO_ScalarInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1a5d3d4b516a67071666f61dfbaa40b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; long &gt;</type>
      <name>MHO_ScalarLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a034099594b108bd673782ae23eacc539</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; long double &gt;</type>
      <name>MHO_ScalarLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3a5d42b1ead3dd415a4151ee046a99f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; long long &gt;</type>
      <name>MHO_ScalarLongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab61536f020e5eb3375c84197e219d130</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; short &gt;</type>
      <name>MHO_ScalarShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af1e6211c91648ad8d05005af02941f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::string &gt;</type>
      <name>MHO_ScalarString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a55f2b27c57170bec11ef314d113a956d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned char &gt;</type>
      <name>MHO_ScalarUChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abef6a948319fcac017e30ffc68bcf031</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned int &gt;</type>
      <name>MHO_ScalarUInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a886f21b0a37e387dae91a906415af96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned long &gt;</type>
      <name>MHO_ScalarULong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af24da85abf3448a82d8d119a04dbeff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned long long &gt;</type>
      <name>MHO_ScalarULongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6cf7fedae5dc19e09dcba53bb4fdf0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned short &gt;</type>
      <name>MHO_ScalarUShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab37f7561df3aeab7181f6c71e11ec8ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_ScanDataStore.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__ScanDataStore_8cc.html</filename>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ScanDataStore.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__ScanDataStore_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <class kind="class">hops::MHO_ScanDataStore</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SelectRepack.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__SelectRepack_8hh.html</filename>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <class kind="class">hops::MHO_SelectRepack</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SelfName.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/include/</path>
    <filename>MHO__SelfName_8hh.html</filename>
    <namespace>hops</namespace>
    <namespace>hops::selfname</namespace>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>file_basename</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a7349e6c374784eeb941e65d6f979215a</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>r_slash</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a4b727f3b94f924cec2c986e4d8bd58c3</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>str_end</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a3e4c3b136de3b8499ee63f8c8a57a2a3</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>str_slash</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a8c0d550f499dc2b87c3ca478a6606587</anchor>
      <arglist>(const char *str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_Serializable.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Serializable_8hh.html</filename>
    <includes id="MHO__ClassIdentity_8hh" name="MHO_ClassIdentity.hh" local="yes" imported="no">MHO_ClassIdentity.hh</includes>
    <includes id="MHO__FileStreamer_8hh" name="MHO_FileStreamer.hh" local="yes" imported="no">MHO_FileStreamer.hh</includes>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <includes id="MHO__UUIDGenerator_8hh" name="MHO_UUIDGenerator.hh" local="yes" imported="no">MHO_UUIDGenerator.hh</includes>
    <class kind="class">hops::MHO_Serializable</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SerializableObjectFactory.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__SerializableObjectFactory_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Serializable_8hh" name="MHO_Serializable.hh" local="yes" imported="no">MHO_Serializable.hh</includes>
    <class kind="class">hops::MHO_SerializableObjectFactory</class>
    <class kind="class">hops::MHO_SerializableObjectFactorySpecific</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SimulatedSignalGenerator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__SimulatedSignalGenerator_8hh.html</filename>
    <class kind="class">hops::MHO_SimulatedSignalGenerator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SingleSidebandNormFX.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__SingleSidebandNormFX_8cc.html</filename>
    <includes id="MHO__SingleSidebandNormFX_8hh" name="MHO_SingleSidebandNormFX.hh" local="yes" imported="no">MHO_SingleSidebandNormFX.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PADDING_FACTOR</name>
      <anchorfile>MHO__SingleSidebandNormFX_8cc.html</anchorfile>
      <anchor>adeb73d09534782eaa8034cbf1b918e12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_SingleSidebandNormFX.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__SingleSidebandNormFX_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__ComplexConjugator_8hh" name="MHO_ComplexConjugator.hh" local="yes" imported="no">MHO_ComplexConjugator.hh</includes>
    <includes id="MHO__CyclicRotator_8hh" name="MHO_CyclicRotator.hh" local="yes" imported="no">MHO_CyclicRotator.hh</includes>
    <includes id="MHO__EndZeroPadder_8hh" name="MHO_EndZeroPadder.hh" local="yes" imported="no">MHO_EndZeroPadder.hh</includes>
    <includes id="MHO__FunctorBroadcaster_8hh" name="MHO_FunctorBroadcaster.hh" local="yes" imported="no">MHO_FunctorBroadcaster.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <includes id="MHO__NaNMasker_8hh" name="MHO_NaNMasker.hh" local="yes" imported="no">MHO_NaNMasker.hh</includes>
    <includes id="MHO__NormFX_8hh" name="MHO_NormFX.hh" local="yes" imported="no">MHO_NormFX.hh</includes>
    <includes id="MHO__SBDTableGenerator_8hh" name="MHO_SBDTableGenerator.hh" local="yes" imported="no">MHO_SBDTableGenerator.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_SingleSidebandNormFX</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SingleToneSignal.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/</path>
    <filename>MHO__SingleToneSignal_8cc.html</filename>
    <includes id="MHO__SingleToneSignal_8hh" name="MHO_SingleToneSignal.hh" local="yes" imported="no">MHO_SingleToneSignal.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SingleToneSignal.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__SingleToneSignal_8hh.html</filename>
    <includes id="MHO__SimulatedSignalGenerator_8hh" name="MHO_SimulatedSignalGenerator.hh" local="yes" imported="no">MHO_SimulatedSignalGenerator.hh</includes>
    <class kind="class">hops::MHO_SingleToneSignal</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Snapshot.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/src/</path>
    <filename>MHO__Snapshot_8cc.html</filename>
    <includes id="MHO__Snapshot_8hh" name="MHO_Snapshot.hh" local="yes" imported="no">MHO_Snapshot.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Snapshot.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__Snapshot_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__ContainerDictionary_8hh" name="MHO_ContainerDictionary.hh" local="yes" imported="no">MHO_ContainerDictionary.hh</includes>
    <includes id="MHO__ContainerFileInterface_8hh" name="MHO_ContainerFileInterface.hh" local="yes" imported="no">MHO_ContainerFileInterface.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <class kind="class">hops::MHO_Snapshot</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_SNAPSHOT_DIR_STR</name>
      <anchorfile>MHO__Snapshot_8hh.html</anchorfile>
      <anchor>a30a9bda15ca2db64e2f46c24882995f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>take_snapshot</name>
      <anchorfile>MHO__Snapshot_8hh.html</anchorfile>
      <anchor>a7e5d199fb193fc46e0c6dce26f7311a7</anchor>
      <arglist>(xKEY, xNAME, xOBJECT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>take_snapshot_here</name>
      <anchorfile>MHO__Snapshot_8hh.html</anchorfile>
      <anchor>a3690c1595a060b92308c28a652b7e67e</anchor>
      <arglist>(xKEY, xNAME, xFILE, xLINE, xOBJECT)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_StationCodeMap.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__StationCodeMap_8cc.html</filename>
    <includes id="MHO__StationCodeMap_8hh" name="MHO_StationCodeMap.hh" local="yes" imported="no">MHO_StationCodeMap.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_StationCodeMap.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__StationCodeMap_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <class kind="class">hops::MHO_StationCodeMap</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_StationContainers.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__StationContainers_8hh.html</filename>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>COEFF_AXIS</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a880cea937f3e2da61866c2f083815a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COORD_AXIS</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a84ad0f201d10bcf48e725f2e18094e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERVAL_AXIS</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a2d3be5f41e7db67eb080849ca19f56f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MTPCAL_FREQ_AXIS</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>aa02c030956ae07e1ce4f19acdf628dc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MTPCAL_NDIM</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a1cb0009357ff8fbb575a0908c1327b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MTPCAL_POL_AXIS</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>ac2d829b3620e850538e5334af90aac5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MTPCAL_TIME_AXIS</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a996acaa4147c697e8f9666ad8f15f759</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCOEFF</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a83cec88d1ea888abe76d894b3a1f9c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCOORD</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a0279668b4c38a86a2876e1bd9f8bdd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATION_NDIM</name>
      <anchorfile>MHO__StationContainers_8hh.html</anchorfile>
      <anchor>a740f78e34b6a97dd9a8363e38ee1685f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; pol_axis_type, channel_axis_type &gt;</type>
      <name>manual_pcal_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1d483b5c48c0a8f7f2e213f11c3c5f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; manual_pcal_element_type, manual_pcal_axis_type &gt;</type>
      <name>manual_pcal_delay_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0056676cc2cdefcf839a9a50b03b1044</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; manual_pcal_element_type, manual_pcal_axis_type &gt;</type>
      <name>manual_pcal_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4eaba5675cabcc15609b4a8af1610cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; pol_axis_type, time_axis_type, frequency_axis_type &gt;</type>
      <name>multitone_pcal_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6ba0b1d8890636426cda441f4a98a360</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; pcal_phasor_type, multitone_pcal_axis_type &gt;</type>
      <name>multitone_pcal_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a635984d730aadef0172598ca5fbfe135</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; coord_axis_type, time_axis_type, coeff_axis_type &gt;</type>
      <name>station_coord_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a43d60f805a8b120faef21ff6aa9e4a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; spline_coeff_type, station_coord_axis_pack &gt;</type>
      <name>station_coord_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6f27aa7690ad9ea81270e4c98605d9bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_StationDelayCorrection.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__StationDelayCorrection_8cc.html</filename>
    <includes id="MHO__StationDelayCorrection_8hh" name="MHO_StationDelayCorrection.hh" local="yes" imported="no">MHO_StationDelayCorrection.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_StationDelayCorrection.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__StationDelayCorrection_8hh.html</filename>
    <includes id="MHO__Constants_8hh" name="MHO_Constants.hh" local="yes" imported="no">MHO_Constants.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_StationDelayCorrection</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_StationDelayCorrectionBuilder.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/src/</path>
    <filename>MHO__StationDelayCorrectionBuilder_8cc.html</filename>
    <includes id="MHO__StationDelayCorrectionBuilder_8hh" name="MHO_StationDelayCorrectionBuilder.hh" local="yes" imported="no">MHO_StationDelayCorrectionBuilder.hh</includes>
    <includes id="MHO__StationDelayCorrection_8hh" name="MHO_StationDelayCorrection.hh" local="yes" imported="no">MHO_StationDelayCorrection.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_StationDelayCorrectionBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Initialization/include/</path>
    <filename>MHO__StationDelayCorrectionBuilder_8hh.html</filename>
    <includes id="MHO__OperatorBuilder_8hh" name="MHO_OperatorBuilder.hh" local="yes" imported="no">MHO_OperatorBuilder.hh</includes>
    <class kind="class">hops::MHO_StationDelayCorrectionBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_StationModel.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__StationModel_8cc.html</filename>
    <includes id="MHO__StationModel_8hh" name="MHO_StationModel.hh" local="yes" imported="no">MHO_StationModel.hh</includes>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AZIMUTH_INDEX</name>
      <anchorfile>MHO__StationModel_8cc.html</anchorfile>
      <anchor>a9cffa74d35c41af53af15aad0071f076</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_INDEX</name>
      <anchorfile>MHO__StationModel_8cc.html</anchorfile>
      <anchor>ad5d0b837522e44fdc80d53eb845cbdb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELEVATION_INDEX</name>
      <anchorfile>MHO__StationModel_8cc.html</anchorfile>
      <anchor>afcd5745307e568de9fa305dad9ea4b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARANGLE_INDEX</name>
      <anchorfile>MHO__StationModel_8cc.html</anchorfile>
      <anchor>a092c8772e4b3a37a730e4c2af861f690</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>U_INDEX</name>
      <anchorfile>MHO__StationModel_8cc.html</anchorfile>
      <anchor>a30872f43bf51b032f6cb6a1ede150a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V_INDEX</name>
      <anchorfile>MHO__StationModel_8cc.html</anchorfile>
      <anchor>ac8c478466f3dee8d29ee6a0b4a374854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>W_INDEX</name>
      <anchorfile>MHO__StationModel_8cc.html</anchorfile>
      <anchor>a4afbcf260c94a62c1cd8c524f5612d84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_StationModel.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__StationModel_8hh.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_StationModel</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_SubSample.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__SubSample_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__UnaryOperator_8hh" name="MHO_UnaryOperator.hh" local="yes" imported="no">MHO_UnaryOperator.hh</includes>
    <class kind="class">hops::MHO_SubSample</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_TableContainer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__TableContainer_8hh.html</filename>
    <includes id="MHO__Axis_8hh" name="MHO_Axis.hh" local="yes" imported="no">MHO_Axis.hh</includes>
    <includes id="MHO__AxisPack_8hh" name="MHO_AxisPack.hh" local="yes" imported="no">MHO_AxisPack.hh</includes>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__FileStreamer_8hh" name="MHO_FileStreamer.hh" local="yes" imported="no">MHO_FileStreamer.hh</includes>
    <class kind="class">hops::MHO_TableContainer</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DefTableContainers</name>
      <anchorfile>MHO__TableContainer_8hh.html</anchorfile>
      <anchor>a08d4f8768b957d737965e86c7569b148</anchor>
      <arglist>(TYPE)</arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>ComplexD</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afdc59198fd24a8457048c3970e71de16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; float &gt;</type>
      <name>ComplexF</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a80e99f6a68015d31363e343d4e22e57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad4be88576c756e5030c8f0a9d61b9f66</anchor>
      <arglist>(ComplexD)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a21764b2da632a79dc9e66b601d6b8707</anchor>
      <arglist>(ComplexF)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0798bd97b6d036495f3361e4cab75979</anchor>
      <arglist>(Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7e5a636fe6d5781188f51c8be9d45c91</anchor>
      <arglist>(Int)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_TableContainerBufferBuilder.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Containers/include/</path>
    <filename>MHO__TableContainerBufferBuilder_8hh.html</filename>
    <includes id="MHO__ExtensibleElement_8hh" name="MHO_ExtensibleElement.hh" local="yes" imported="no">MHO_ExtensibleElement.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <class kind="class">hops::MHO_TableContainerBufferBuilder</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Taggable.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__Taggable_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Serializable_8hh" name="MHO_Serializable.hh" local="yes" imported="no">MHO_Serializable.hh</includes>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <class kind="class">hops::MHO_Taggable</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_TemplateTypenameDeduction.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__TemplateTypenameDeduction_8hh.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>compiler_func_function</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a3a409e2ac43eeccba5d18c12d30ce6c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>compiler_func_prefix</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a1038c775c613ad10aae95641b67aeea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>compiler_func_suffix</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a62b6fc609c9e767bad47574bdcef4656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_ClassName</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a2f538db23f44ac6bbd73d711cf4ce9a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_ClassName&lt; std::string &gt;</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a4d99b3a7647450f02bdcb356a797d7ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_RawCompilerName</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a5a14efb0a274e276e0e082471539144b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_RawCompilerNameWithoutSpaces</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a53557213efe021079d14bb4e89b263b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_TupleElementNameWithoutSpaces</name>
      <anchorfile>MHO__TemplateTypenameDeduction_8hh.html</anchorfile>
      <anchor>a063f2cd48a0e3f093098bde0f0d7a50f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_TestAssertions.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/include/</path>
    <filename>MHO__TestAssertions_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ASSERT_EQUAL</name>
      <anchorfile>MHO__TestAssertions_8hh.html</anchorfile>
      <anchor>ab71c40be0dcf5ed31431361e1abdb6ea</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ASSERT_FLOAT_LESS_THAN</name>
      <anchorfile>MHO__TestAssertions_8hh.html</anchorfile>
      <anchor>a436873a795cfe90cc25ed1454f7c1488</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ASSERT_THROW</name>
      <anchorfile>MHO__TestAssertions_8hh.html</anchorfile>
      <anchor>a1fd97ddd737eec42954122c68d60318e</anchor>
      <arglist>(test_cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_THROW</name>
      <anchorfile>MHO__TestAssertions_8hh.html</anchorfile>
      <anchor>a02277ea2d414a6124f66b5a9cf6611f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Message/src/MHO_Timer.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/src/</path>
    <filename>Message_2src_2MHO__Timer_8cc.html</filename>
    <includes id="MHO__Timer_8hh" name="MHO_Timer.hh" local="yes" imported="no">MHO_Timer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>Utilities/src/MHO_Timer.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>Utilities_2src_2MHO__Timer_8cc.html</filename>
    <includes id="MHO__Timer_8hh" name="MHO_Timer.hh" local="yes" imported="no">MHO_Timer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Timer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Message/include/</path>
    <filename>MHO__Timer_8hh.html</filename>
    <class kind="class">hops::MHO_Timer</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_TimeStampConverter.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__TimeStampConverter_8cc.html</filename>
    <includes id="MHO__TimeStampConverter_8hh" name="MHO_TimeStampConverter.hh" local="yes" imported="no">MHO_TimeStampConverter.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_TimeStampConverter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__TimeStampConverter_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_TimeStampConverter</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Tokenizer.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__Tokenizer_8cc.html</filename>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>SplitString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a595136c6bf4b755717a2b7b5ba7ccff8</anchor>
      <arglist>(const std::string &amp;input, std::string delim=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_Tokenizer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Tokenizer_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_Tokenizer</class>
    <namespace>hops</namespace>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>SplitString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a595136c6bf4b755717a2b7b5ba7ccff8</anchor>
      <arglist>(const std::string &amp;input, std::string delim=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_TransformingOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__TransformingOperator_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <class kind="class">hops::MHO_TransformingOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Types.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Types_8hh.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ENSURE_PORTABILITY</name>
      <anchorfile>MHO__Types_8hh.html</anchorfile>
      <anchor>a004fe462fcbc4f57e973cdf8b61be6f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_UnaryFunctor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__UnaryFunctor_8hh.html</filename>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <class kind="class">hops::MHO_UnaryFunctor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_UnaryInPlaceOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__UnaryInPlaceOperator_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <class kind="class">hops::MHO_UnaryInPlaceOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_UnaryOperator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/</path>
    <filename>MHO__UnaryOperator_8hh.html</filename>
    <includes id="MHO__Operator_8hh" name="MHO_Operator.hh" local="yes" imported="no">MHO_Operator.hh</includes>
    <class kind="class">hops::MHO_UnaryOperator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_UniformGridPointsCalculator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/</path>
    <filename>MHO__UniformGridPointsCalculator_8cc.html</filename>
    <includes id="MHO__UniformGridPointsCalculator_8hh" name="MHO_UniformGridPointsCalculator.hh" local="yes" imported="no">MHO_UniformGridPointsCalculator.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EXTRA_INTERP_DBG</name>
      <anchorfile>MHO__UniformGridPointsCalculator_8cc.html</anchorfile>
      <anchor>ae944eef1d5d223451c8675c39e8f7247</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_UniformGridPointsCalculator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/</path>
    <filename>MHO__UniformGridPointsCalculator_8hh.html</filename>
    <class kind="class">hops::MHO_UniformGridPointsCalculator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_Unit.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__Unit_8hh.html</filename>
    <class kind="class">hops::MHO_Unit</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_UUID.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__UUID_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Types_8hh" name="MHO_Types.hh" local="yes" imported="no">MHO_Types.hh</includes>
    <class kind="union">hops::MHO_UUID::byte2ints</class>
    <class kind="class">hops::MHO_UUID</class>
    <namespace>hops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MHO_UUID_LENGTH</name>
      <anchorfile>MHO__UUID_8hh.html</anchorfile>
      <anchor>afd4aecba0878a658fe55a9caccdd3670</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7e8434b0f8b1ccd39b88ac1bc80aec95</anchor>
      <arglist>(XStream &amp;s, const MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2aea726ae9199bde2012cf8534ad1be1</anchor>
      <arglist>(XStream &amp;s, MHO_UUID &amp;uuid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_UUIDGenerator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/</path>
    <filename>MHO__UUIDGenerator_8cc.html</filename>
    <includes id="MHO__UUIDGenerator_8hh" name="MHO_UUIDGenerator.hh" local="yes" imported="no">MHO_UUIDGenerator.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_UUIDGenerator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>MHO__UUIDGenerator_8hh.html</filename>
    <includes id="MHO__UUID_8hh" name="MHO_UUID.hh" local="yes" imported="no">MHO_UUID.hh</includes>
    <class kind="class">hops::MHO_UUIDGenerator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VectorContainer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/</path>
    <filename>MHO__VectorContainer_8hh.html</filename>
    <includes id="MHO__Meta_8hh" name="MHO_Meta.hh" local="yes" imported="no">MHO_Meta.hh</includes>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__Serializable_8hh" name="MHO_Serializable.hh" local="yes" imported="no">MHO_Serializable.hh</includes>
    <includes id="MHO__Taggable_8hh" name="MHO_Taggable.hh" local="yes" imported="no">MHO_Taggable.hh</includes>
    <class kind="class">hops::MHO_VectorContainer</class>
    <namespace>hops</namespace>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; char &gt;</type>
      <name>MHO_VectorChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a29f00cfe63c7fc6ac3591215c4efa724</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::complex&lt; double &gt; &gt;</type>
      <name>MHO_VectorComplexDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9f5ff6f143076c1c92a70500d76a7a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::complex&lt; float &gt; &gt;</type>
      <name>MHO_VectorComplexFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae42aae4aa1cbc028fd45769f2643af98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::complex&lt; long double &gt; &gt;</type>
      <name>MHO_VectorComplexLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1e8fee182ecb9322f08aaa8668d8a99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; double &gt;</type>
      <name>MHO_VectorDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a05963e248b42eb6d1153148756694cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; float &gt;</type>
      <name>MHO_VectorFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a75bfc06f19bc97169f3105ac9cb1ac3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; int &gt;</type>
      <name>MHO_VectorInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a11a102c0a6bea5eeb7cbb80b04a5cd42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; long &gt;</type>
      <name>MHO_VectorLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a76fa5aeaeda9727ed2cb5761b6a2a366</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; long double &gt;</type>
      <name>MHO_VectorLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7f33f180c4e7ea9ddf340708316cab05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; long long &gt;</type>
      <name>MHO_VectorLongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a21a71621ea785944afba5332c73bffbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; short &gt;</type>
      <name>MHO_VectorShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a45af48428c7c6e933c7436c342f4d215</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::string &gt;</type>
      <name>MHO_VectorString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a63045d71eca449d36b1e5a9f619008d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned char &gt;</type>
      <name>MHO_VectorUChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac7e60405fd7ba13b63a2fa0bb1895867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned int &gt;</type>
      <name>MHO_VectorUInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a66f406045e3731107f679448e4e339dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned long &gt;</type>
      <name>MHO_VectorULong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5d600f505d24e80546c63a74e5876a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned long long &gt;</type>
      <name>MHO_VectorULongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae5af04ca5354f16f9f62f5db34b7d6f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned short &gt;</type>
      <name>MHO_VectorUShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0a98f83602d1bd34280b6fe7def8f844</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_VectorScale_kernel.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Operators/cl/</path>
    <filename>MHO__VectorScale__kernel_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>MHO_VexBlockParser.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/src/</path>
    <filename>MHO__VexBlockParser_8cc.html</filename>
    <includes id="MHO__VexBlockParser_8hh" name="MHO_VexBlockParser.hh" local="yes" imported="no">MHO_VexBlockParser.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexBlockParser.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexBlockParser_8hh.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__VexDefinitions_8hh" name="MHO_VexDefinitions.hh" local="yes" imported="no">MHO_VexDefinitions.hh</includes>
    <includes id="MHO__VexLine_8hh" name="MHO_VexLine.hh" local="yes" imported="no">MHO_VexLine.hh</includes>
    <includes id="MHO__VexTokenProcessor_8hh" name="MHO_VexTokenProcessor.hh" local="yes" imported="no">MHO_VexTokenProcessor.hh</includes>
    <class kind="class">hops::MHO_VexBlockParser</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexDefinitions.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/src/</path>
    <filename>MHO__VexDefinitions_8cc.html</filename>
    <includes id="MHO__VexDefinitions_8hh" name="MHO_VexDefinitions.hh" local="yes" imported="no">MHO_VexDefinitions.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexDefinitions.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexDefinitions_8hh.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <class kind="class">hops::MHO_VexDefinitions</class>
    <namespace>hops</namespace>
    <member kind="enumeration">
      <type></type>
      <name>vex_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aac51c9baf9c47d4b0c50e8a637e50b7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aaae5cecd7aa53843fed68d063dddd009a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa08be1fcfb93fce0a2ae46b2840788a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aaa8715bf579a77a060c6a0bab3d41d072</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa16a0b25e56cce0a592e0f5314cd288b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_epoch_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aae21aa99e1c7848da862771095c2b99b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_radec_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa219bfc7cfcbae1c196af8771c45b8a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa391ab20c6d67618c22b50be81d8db27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_compound_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa3b2bcab43b04d456a48bd80780f10a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_compound_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa96f8de8c5563756abbe89815ee1ba4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_link_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa5a7a45837ce65df82b78a71f86906ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_keyword_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa4416dda430610d29122c3506b8c7175b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_reference_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa10d263604a9ee4c7051e9fd73f96d070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_unknown_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa2933bbeb5cf31a4727a5196cd342f21a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>string_pattern_replace</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1e71a86ea2ae687c3fd4dbadc275357a</anchor>
      <arglist>(const std::string &amp;value, const std::string &amp;pattern, const std::string &amp;replacement)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MHO_VexElementLineGenerator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/src/</path>
    <filename>MHO__VexElementLineGenerator_8cc.html</filename>
    <includes id="MHO__VexElementLineGenerator_8hh" name="MHO_VexElementLineGenerator.hh" local="yes" imported="no">MHO_VexElementLineGenerator.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexElementLineGenerator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexElementLineGenerator_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__VexDefinitions_8hh" name="MHO_VexDefinitions.hh" local="yes" imported="no">MHO_VexDefinitions.hh</includes>
    <class kind="class">hops::MHO_VexElementLineGenerator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexGenerator.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/src/</path>
    <filename>MHO__VexGenerator_8cc.html</filename>
    <includes id="MHO__VexGenerator_8hh" name="MHO_VexGenerator.hh" local="yes" imported="no">MHO_VexGenerator.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexGenerator.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexGenerator_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__VexDefinitions_8hh" name="MHO_VexDefinitions.hh" local="yes" imported="no">MHO_VexDefinitions.hh</includes>
    <includes id="MHO__VexElementLineGenerator_8hh" name="MHO_VexElementLineGenerator.hh" local="yes" imported="no">MHO_VexElementLineGenerator.hh</includes>
    <class kind="class">hops::MHO_VexGenerator</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexInfoExtractor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/</path>
    <filename>MHO__VexInfoExtractor_8cc.html</filename>
    <includes id="MHO__VexInfoExtractor_8hh" name="MHO_VexInfoExtractor.hh" local="yes" imported="no">MHO_VexInfoExtractor.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexInfoExtractor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/</path>
    <filename>MHO__VexInfoExtractor_8hh.html</filename>
    <includes id="MHO__Clock_8hh" name="MHO_Clock.hh" local="yes" imported="no">MHO_Clock.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <class kind="class">hops::MHO_VexInfoExtractor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexLine.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexLine_8hh.html</filename>
    <class kind="class">hops::MHO_VexLine</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexParameter.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexParameter_8hh.html</filename>
    <class kind="class">hops::MHO_VexParameter</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexParser.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/src/</path>
    <filename>MHO__VexParser_8cc.html</filename>
    <includes id="MHO__VexParser_8hh" name="MHO_VexParser.hh" local="yes" imported="no">MHO_VexParser.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexParser.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexParser_8hh.html</filename>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__VexBlockParser_8hh" name="MHO_VexBlockParser.hh" local="yes" imported="no">MHO_VexBlockParser.hh</includes>
    <includes id="MHO__VexDefinitions_8hh" name="MHO_VexDefinitions.hh" local="yes" imported="no">MHO_VexDefinitions.hh</includes>
    <includes id="MHO__VexLine_8hh" name="MHO_VexLine.hh" local="yes" imported="no">MHO_VexLine.hh</includes>
    <class kind="class">hops::MHO_VexParser</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexTokenProcessor.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/src/</path>
    <filename>MHO__VexTokenProcessor_8cc.html</filename>
    <includes id="MHO__VexTokenProcessor_8hh" name="MHO_VexTokenProcessor.hh" local="yes" imported="no">MHO_VexTokenProcessor.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VexTokenProcessor.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Vex2JSON/include/</path>
    <filename>MHO__VexTokenProcessor_8hh.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Tokenizer_8hh" name="MHO_Tokenizer.hh" local="yes" imported="no">MHO_Tokenizer.hh</includes>
    <includes id="MHO__VexDefinitions_8hh" name="MHO_VexDefinitions.hh" local="yes" imported="no">MHO_VexDefinitions.hh</includes>
    <includes id="MHO__VexLine_8hh" name="MHO_VexLine.hh" local="yes" imported="no">MHO_VexLine.hh</includes>
    <class kind="class">hops::MHO_VexTokenProcessor</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VisibilityChannelizer.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__VisibilityChannelizer_8cc.html</filename>
    <includes id="MHO__VisibilityChannelizer_8hh" name="MHO_VisibilityChannelizer.hh" local="yes" imported="no">MHO_VisibilityChannelizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_VisibilityChannelizer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__VisibilityChannelizer_8hh.html</filename>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TransformingOperator_8hh" name="MHO_TransformingOperator.hh" local="yes" imported="no">MHO_TransformingOperator.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <class kind="class">hops::MHO_VisibilityChannelizer</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_WeightChannelizer.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/</path>
    <filename>MHO__WeightChannelizer_8cc.html</filename>
    <includes id="MHO__WeightChannelizer_8hh" name="MHO_WeightChannelizer.hh" local="yes" imported="no">MHO_WeightChannelizer.hh</includes>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_WeightChannelizer.hh</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/</path>
    <filename>MHO__WeightChannelizer_8hh.html</filename>
    <includes id="MHO__NDArrayWrapper_8hh" name="MHO_NDArrayWrapper.hh" local="yes" imported="no">MHO_NDArrayWrapper.hh</includes>
    <includes id="MHO__TransformingOperator_8hh" name="MHO_TransformingOperator.hh" local="yes" imported="no">MHO_TransformingOperator.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <class kind="class">hops::MHO_WeightChannelizer</class>
    <namespace>hops</namespace>
  </compound>
  <compound kind="file">
    <name>MHO_ZeroComplexArray_kernel.cl</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/OpenCL/Math/cl/</path>
    <filename>MHO__ZeroComplexArray__kernel_8cl.html</filename>
  </compound>
  <compound kind="file">
    <name>minmax.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>minmax_8c.html</filename>
    <member kind="function">
      <type>double</type>
      <name>dmax</name>
      <anchorfile>minmax_8c.html</anchorfile>
      <anchor>a514dfdbcef03a1e70b09a73e4a59b3e9</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dmin</name>
      <anchorfile>minmax_8c.html</anchorfile>
      <anchor>a292b7666a89ec7d758de75bb1ed8b6e4</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dwin</name>
      <anchorfile>minmax_8c.html</anchorfile>
      <anchor>a11c829078e3fc7ce3343971ae644971a</anchor>
      <arglist>(double value, double lower, double upper)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>imax</name>
      <anchorfile>minmax_8c.html</anchorfile>
      <anchor>aedab20bf35d38960a324e26adcc8ace3</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>imin</name>
      <anchorfile>minmax_8c.html</anchorfile>
      <anchor>aef60c7d014a55a02291bb39c6c8b3693</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iwin</name>
      <anchorfile>minmax_8c.html</anchorfile>
      <anchor>a5386994277762a86840addf2e430a62d</anchor>
      <arglist>(int value, int lower, int upper)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>minvert.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/src/</path>
    <filename>minvert_8c.html</filename>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <member kind="function">
      <type>int</type>
      <name>minvert3</name>
      <anchorfile>minvert_8c.html</anchorfile>
      <anchor>a6dbff9042dc004dcd0ad8b6ee871f8b9</anchor>
      <arglist>(double a[3][3], double ainv[3][3])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minvert5</name>
      <anchorfile>minvert_8c.html</anchorfile>
      <anchor>a6c92770ceac7884c03b8b07115f5140d</anchor>
      <arglist>(double a[5][5], double ainv[5][5])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk3_qf.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>mk3__qf_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>char</type>
      <name>mk3_qf</name>
      <anchorfile>mk3__qf_8c.html</anchorfile>
      <anchor>a1b8fadbbc07b2c620ddef0d0b8737d66</anchor>
      <arglist>(fringesum *datum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4_afio.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/include/</path>
    <filename>mk4__afio_8h.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <member kind="function">
      <type>int</type>
      <name>afile_comment</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>aaec2234b8234d5a757da31af768d9c13</anchor>
      <arglist>(char *line)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>afile_header</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>ac1ec4cd83d62f188e807eaf12fdc95d9</anchor>
      <arglist>(int version, int type, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aline_id</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a29c995cda5db9f337450f70947edeae8</anchor>
      <arglist>(char *line, int *version, int *type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_csumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a8207fb01cb4aada77721dd7d646c7f8d</anchor>
      <arglist>(corelsum *dsumm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_fsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a4e66006c1ba68e4f49a7df48e9947c4d</anchor>
      <arglist>(fringesum *dsumm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_rsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a9503bd50023f81ae60fc0cfc5f9f1f1f</anchor>
      <arglist>(rootsum *dsumm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_tsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>aa856152c4d86a6ffc35b501461da43b8</anchor>
      <arglist>(trianglesum *dsumm)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>corelname</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a5f383efe26c5466e196c2cfe636e1bcf</anchor>
      <arglist>(corelsum *csumm)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>fringename</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>adda794c4c9a8c4ded6f2b8a7eb446dd9</anchor>
      <arglist>(fringesum *fsumm)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>get_afile_com_char</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a3deb5a067e905e6eb299732fbc9ac3fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_unique_name</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a935b161ed3c94602913b554a4885c4b1</anchor>
      <arglist>(char *input, char *output)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_csumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>afeda3ada925025b9f2adde5df64e5341</anchor>
      <arglist>(char *line, corelsum *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_fsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>aa647994375af5775afad398cd4632f05</anchor>
      <arglist>(char *line, fringesum *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_rsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a19e89b0ca8c0365631df9f3b0332c981</anchor>
      <arglist>(char *line, rootsum *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_tsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>abe65b75096237c1d1faeead164386c8b</anchor>
      <arglist>(char *line, trianglesum *file)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>rootname</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a38555118841f6b56a5a4da1ad0c7386a</anchor>
      <arglist>(rootsum *rsumm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_afile_com_char</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a850746cf35e20a3ef806dc839cce5c84</anchor>
      <arglist>(int star)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_csumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>ac38c3db277e07b94bb7b5f707a643af7</anchor>
      <arglist>(corelsum *data, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_fsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a47dac66c9fed54155e81917a61872fea</anchor>
      <arglist>(fringesum *data, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_rsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>ab7ec4b03e4e09e2ab9de0f3d35ea60b2</anchor>
      <arglist>(rootsum *data, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_tsumm</name>
      <anchorfile>mk4__afio_8h.html</anchorfile>
      <anchor>a90b21174f0f3cc3058f3306a4b48147e</anchor>
      <arglist>(trianglesum *data, FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4_data.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>mk4__data_8h.html</filename>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="mk4__records_8h" name="mk4_records.h" local="yes" imported="no">mk4_records.h</includes>
    <class kind="struct">index_tag</class>
    <class kind="struct">mk4_corel</class>
    <class kind="struct">mk4_fringe</class>
    <class kind="struct">mk4_log</class>
    <class kind="struct">mk4_sdata</class>
    <class kind="struct">mk4_sdata.model</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_APXLAG</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ae3576ef627303c7951ad7cfec721c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAP</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>adaaa9c507e46294fa69aafd85ae027ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXIND</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>aa3c78539f798a637acb1a40b58452308</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXLAG</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a23719c10dde829abaa7c317534d79e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXMAX</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>adca8487fa073bb03f28836129d14731a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSPLINES</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a591323bb7add08c9004bd130374e3278</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTATIONS</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a5961d051984b9bee9a6e190abb80153d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTATPER</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a5a9b9652ba48bf345dbc7c970348a564</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4_dfio.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>mk4__dfio_8h.html</filename>
    <includes id="type__000_8h" name="type_000.h" local="yes" imported="no">type_000.h</includes>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="type__110_8h" name="type_110.h" local="yes" imported="no">type_110.h</includes>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="type__200_8h" name="type_200.h" local="yes" imported="no">type_200.h</includes>
    <includes id="type__201_8h" name="type_201.h" local="yes" imported="no">type_201.h</includes>
    <includes id="type__202_8h" name="type_202.h" local="yes" imported="no">type_202.h</includes>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="type__204_8h" name="type_204.h" local="yes" imported="no">type_204.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="type__206_8h" name="type_206.h" local="yes" imported="no">type_206.h</includes>
    <includes id="type__207_8h" name="type_207.h" local="yes" imported="no">type_207.h</includes>
    <includes id="type__208_8h" name="type_208.h" local="yes" imported="no">type_208.h</includes>
    <includes id="type__210_8h" name="type_210.h" local="yes" imported="no">type_210.h</includes>
    <includes id="type__212_8h" name="type_212.h" local="yes" imported="no">type_212.h</includes>
    <includes id="type__220_8h" name="type_220.h" local="yes" imported="no">type_220.h</includes>
    <includes id="type__221_8h" name="type_221.h" local="yes" imported="no">type_221.h</includes>
    <includes id="type__222_8h" name="type_222.h" local="yes" imported="no">type_222.h</includes>
    <includes id="type__230_8h" name="type_230.h" local="yes" imported="no">type_230.h</includes>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="type__304_8h" name="type_304.h" local="yes" imported="no">type_304.h</includes>
    <includes id="type__305_8h" name="type_305.h" local="yes" imported="no">type_305.h</includes>
    <includes id="type__306_8h" name="type_306.h" local="yes" imported="no">type_306.h</includes>
    <includes id="type__307_8h" name="type_307.h" local="yes" imported="no">type_307.h</includes>
    <includes id="type__308_8h" name="type_308.h" local="yes" imported="no">type_308.h</includes>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <member kind="function">
      <type>struct type_100 *</type>
      <name>addr_100</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a443c707358271890748cf9fb24d45c8e</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_101 *</type>
      <name>addr_101</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a5ea26f432e5c19c86c7d14e94b2691b3</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_110 *</type>
      <name>addr_110</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a5356608eed349a5b8397fb146acff4ef</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_120 *</type>
      <name>addr_120</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a5ae98b3606ebd3fdac70a039a3efb4b0</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_200 *</type>
      <name>addr_200</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a8b5105536cf906aa6b1b16b4ddc26473</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_201 *</type>
      <name>addr_201</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1d1d3952f94658136b24f6afa945b3fc</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_202 *</type>
      <name>addr_202</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a124b598837974760034643daa9ce5cdd</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_203 *</type>
      <name>addr_203</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>af1b7e9eb44c7b224a3f356fe4dad9b57</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_204 *</type>
      <name>addr_204</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>abe908faed20c8828049375ffab207d7c</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_205 *</type>
      <name>addr_205</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a3ee6df0fb9aef088d260d25b23ccf878</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_206 *</type>
      <name>addr_206</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a3143e694b931bb0266977cf97c07c438</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_207 *</type>
      <name>addr_207</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1002a75bbf0be7eae16ae121ccf5f6a8</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_208 *</type>
      <name>addr_208</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aa844813bc645c258136ff344bc806dbb</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_210 *</type>
      <name>addr_210</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a27963b17c73f3aa40a9025aa1c462c75</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_212 *</type>
      <name>addr_212</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ac819789b2a21dce9b1d91cc147d11f05</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_220 *</type>
      <name>addr_220</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>af4c0126319926fbcf22d31d99c268521</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_221 *</type>
      <name>addr_221</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ae43ce40c10dd7aa0ab7eff54a6394d37</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_221 *</type>
      <name>addr_221_dummy</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>af6758605512b2aef47270553e8bc5ee4</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_221 *</type>
      <name>addr_221_impl</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a4378d50ae89c2541b7030d6d255fd9f8</anchor>
      <arglist>(short, void *, int *, int)</arglist>
    </member>
    <member kind="function">
      <type>struct type_222 *</type>
      <name>addr_222</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>af2e7c9257f2b3e322670fb5c27587e98</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_222 *</type>
      <name>addr_222_dummy</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aac6b6948378479d8d5913f9b77a9c610</anchor>
      <arglist>(short version, void *address, int *size)</arglist>
    </member>
    <member kind="function">
      <type>struct type_230 *</type>
      <name>addr_230</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a935e0ddf38bf2409c047f079bc1133de</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_300 *</type>
      <name>addr_300</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>afaf3d0720774a35f8c4a8b6a2af9c088</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_301 *</type>
      <name>addr_301</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a08b0879d302e1850be730a64085d451b</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_302 *</type>
      <name>addr_302</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a7880bbbf49e9b1a99d973c5efe74a23f</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_303 *</type>
      <name>addr_303</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a9ce8e6752f40ee7f8b87685cbad99d66</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_304 *</type>
      <name>addr_304</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a2d8f952be9e1c3707bb17032ce281cdc</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_305 *</type>
      <name>addr_305</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a6c8be1bcaec7dba27acd84b2c10054d4</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_306 *</type>
      <name>addr_306</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a00fa5a1cb0b013e43cff24107514f500</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_307 *</type>
      <name>addr_307</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a57a4e27713f9fc891bfb8b69ec6b7280</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_308 *</type>
      <name>addr_308</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aec639ff35693e9ddad438c4cb1d4f6dd</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>struct type_309 *</type>
      <name>addr_309</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aa2583836e0209a05f6f1ae44e008900f</anchor>
      <arglist>(short, void *, int *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_100</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a11d0c107b8453895d05de9b83628fbf0</anchor>
      <arglist>(struct type_100 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_101</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>abd75afe9a4d5d5958909d79a082b64d8</anchor>
      <arglist>(struct type_101 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_110</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a3af6e9fa99c223a76ebdce0d9c0b0590</anchor>
      <arglist>(struct type_110 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_120</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ab2e74b67868da407d234c3d2f23da7b1</anchor>
      <arglist>(struct type_120 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_200</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>afae3d058b02f45907a26e72db24cee8a</anchor>
      <arglist>(struct type_200 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_201</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ad121efdd29a89be447629504846a27e3</anchor>
      <arglist>(struct type_201 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_202</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aca8a96099e0879ee854db13eca585126</anchor>
      <arglist>(struct type_202 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_203</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>afb0415601ca6a8466e0f9d72ab91da92</anchor>
      <arglist>(struct type_203 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_204</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ac4818b2ae2d7896d51e11989ab902e5a</anchor>
      <arglist>(struct type_204 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_205</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>abe247ac2dfca21dc0eb478654238ef4f</anchor>
      <arglist>(struct type_205 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_206</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a447d0fb193327cb542834f74f52fab6a</anchor>
      <arglist>(struct type_206 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_207</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ad163a45c8e780bda591fd492d53e326d</anchor>
      <arglist>(struct type_207 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_208</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a30623f9225d74547c42a3fd9d3ec7c9f</anchor>
      <arglist>(struct type_208 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_210</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a9e85a4190c4acb6d0471a094de27768f</anchor>
      <arglist>(struct type_210 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_212</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ab2ed4107da4e92ef994f72febef72961</anchor>
      <arglist>(struct type_212 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_220</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1bc5c2261accc10462c791c193c1bbb6</anchor>
      <arglist>(struct type_220 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_221</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1090a9d1963de50ca2785173b94ff67b</anchor>
      <arglist>(struct type_221 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_222</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a842460d565dbf3f3c0aed9e523bfed0d</anchor>
      <arglist>(struct type_222 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_230</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a0fd8aeeefb41dba155074a81d71b59a6</anchor>
      <arglist>(struct type_230 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_300</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a3e6a162412c68021e8a8378fc4316399</anchor>
      <arglist>(struct type_300 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_301</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a07b746b4cbf3a37047de1392c7b450cc</anchor>
      <arglist>(struct type_301 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_302</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ac756ba94a10fe52f061f103f9a4010b0</anchor>
      <arglist>(struct type_302 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_303</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>adaccd414b4a6e6d1425de6bd2d44c879</anchor>
      <arglist>(struct type_303 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_304</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1c94bf5bea76dc4ae287cfcf4a8b6de1</anchor>
      <arglist>(struct type_304 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_305</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a2d69544c4699f8996a28c68e9d35140f</anchor>
      <arglist>(struct type_305 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_306</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a3e8bb71ad36028a5b2c8a6d46c1bf253</anchor>
      <arglist>(struct type_306 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_307</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ac95bbef4a437dd1b69cc554280ad3055</anchor>
      <arglist>(struct type_307 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_308</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a3b2379e41ebc71ece540519416836198</anchor>
      <arglist>(struct type_308 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_309</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ad12ee5b2e6c0ae53543928645d0ce469</anchor>
      <arglist>(struct type_309 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_coord</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aedc6bc25e58cb351cbeed68928cd1bba</anchor>
      <arglist>(struct sky_coord *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_mk4corel</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a206c15942a93099437be9042b2a76950</anchor>
      <arglist>(struct mk4_corel *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_mk4fringe</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aed57fc15b0298d387a82fe9f40608a15</anchor>
      <arglist>(struct mk4_fringe *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_mk4sdata</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a315a771aec5c39be3ea92d35467092db</anchor>
      <arglist>(struct mk4_sdata *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a701190b6fd4b39e359f636c74a8092b4</anchor>
      <arglist>(U16, U8 *, U8 *, U32, U8 *, U32 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress_compress</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a897786f54a6e59162ae1f9e57ca66666</anchor>
      <arglist>(U8 *, U8 *, U32, U8 *, U32 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress_decompress</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1ff22f049adb558d4ec3da8497a50bae</anchor>
      <arglist>(U8 *, U8 *, U32, U8 *, U32 *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_100</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a5a4679154557ab6d243e1e928bd77ff2</anchor>
      <arglist>(struct type_100 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_101</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>adcff5b4bede6fb83876eab0620aff62d</anchor>
      <arglist>(struct type_101 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_110</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ac686d53f119412f7f132713e6fbe822d</anchor>
      <arglist>(struct type_110 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_120</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a8a5331c060f0d7693cfe83530e0764f1</anchor>
      <arglist>(struct type_120 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_200</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ae1f87469b03ad16325953bbcc4d62552</anchor>
      <arglist>(struct type_200 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_201</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a2569d471f6561128dda43bafa0a25bea</anchor>
      <arglist>(struct type_201 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_202</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a06229919468d04214096eaa578d4fe50</anchor>
      <arglist>(struct type_202 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_203</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a5745dc6759477c4106b4cc43edc0f711</anchor>
      <arglist>(struct type_203 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_204</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a66bddf9396f8d9fe1e0fdc15c03b34d7</anchor>
      <arglist>(struct type_204 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_205</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a09631f36466ebbc8233a34201039b37e</anchor>
      <arglist>(struct type_205 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_206</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a27d3513713d7ac379c5ff8d6232ed5dc</anchor>
      <arglist>(struct type_206 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_207</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>abb712f88920b811a9dd96f7ee72b0281</anchor>
      <arglist>(struct type_207 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_208</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>adbf058c4fd6c83bd0fee18a5b27617ad</anchor>
      <arglist>(struct type_208 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_210</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a8f4a55e0480078f012e3cc71d8f8ca74</anchor>
      <arglist>(struct type_210 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_212</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a41e45a77740ab72bf9c77348c1ec8579</anchor>
      <arglist>(struct type_212 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_220</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>abdc45c4900177b14d18cf0a6ae553344</anchor>
      <arglist>(struct type_220 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_221</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a6ad3b3cf4348da22cfa710de6a9af746</anchor>
      <arglist>(struct type_221 *, char **, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_222</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a5f15f7760433790787b31df1d1bdc8ac</anchor>
      <arglist>(struct type_222 *, char **, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_230</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a7dd13f72b2dcd48ef7a1caeeb46bb347</anchor>
      <arglist>(struct type_230 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_300</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a92f0b93cb151d1b8219efeecda7d8e93</anchor>
      <arglist>(struct type_300 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_301</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ab35dd56f19c0bbd7e4b1801518181ab9</anchor>
      <arglist>(struct type_301 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_302</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a20844ed77cb176fb2cd78aba3dc6dc3e</anchor>
      <arglist>(struct type_302 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_303</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a57766a094fda6f5c3755a2b067f6c00e</anchor>
      <arglist>(struct type_303 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_304</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a16bd468a5e1d68731e5a8114f29b1a10</anchor>
      <arglist>(struct type_304 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_305</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1621386855fd9a9d10b6a787ed7d8e26</anchor>
      <arglist>(struct type_305 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_306</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a695804e44f38163149113b79e07a50ce</anchor>
      <arglist>(struct type_306 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_307</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a33ba7d240797503df2b2f992c3d8ad60</anchor>
      <arglist>(struct type_307 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_308</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a0140741edfdc8044449556f97eb5d9ca</anchor>
      <arglist>(struct type_308 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>copy_309</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a3c2b89fda972a632919c09b4dc861600</anchor>
      <arglist>(struct type_309 *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>corel_alloc</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a6c1b0b08e72f28ba5f758a6ca2a2f03f</anchor>
      <arglist>(struct mk4_corel *, int, int)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>display_221</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ac7c0687c33da159a7698956df91db45d</anchor>
      <arglist>(struct type_221 *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_000</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a9490e22dc78cf949f3e70cf8514c8eb2</anchor>
      <arglist>(struct type_000 *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open_datafile</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aa11d07f94b4fe7e35439cb4d2c47a0f1</anchor>
      <arglist>(char[], int *, FILE **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4corel</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>acddcc424d1909109dbfeab3bc534e45a</anchor>
      <arglist>(char *, struct mk4_corel *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4file</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a75d88efb7aea82c466ac2b26a97ae22b</anchor>
      <arglist>(FILE *, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4fringe</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a469742d13fdece2121b72949eb7eda82</anchor>
      <arglist>(char *, struct mk4_fringe *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4fringe_impl</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a1cd442eeefc87c7f483f48cd86d571c7</anchor>
      <arglist>(char *, struct mk4_fringe *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4fringe_truncated</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ad83cd812f2b01390ee5514a5107a6488</anchor>
      <arglist>(char *, struct mk4_fringe *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4sdata</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a99fe10d1f264d4ef644dfe78e95db08b</anchor>
      <arglist>(char *, struct mk4_sdata *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4sdata_impl</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a6555de7af5c44362deea3209696c8ce5</anchor>
      <arglist>(char *, struct mk4_sdata *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4sdata_truncated</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ae5cf65844c0ea43d14afb06976486d38</anchor>
      <arglist>(char *, struct mk4_sdata *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_err</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>aaf9b6f5db5ff778526ddfefa6608d154</anchor>
      <arglist>(FILE *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_mk4corel</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a25acd55b6b2d3bc30a8400fbcc026f02</anchor>
      <arglist>(struct mk4_corel *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_mk4fringe</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a4483cf18b2ef7baf230c41f1211ecae8</anchor>
      <arglist>(struct mk4_fringe *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_mk4root</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a4eb6c936939c5cdd5bfef6169062f847</anchor>
      <arglist>(char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_mk4sdata</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>ad86c6fcaadcd650f8890dc7d9b5b8880</anchor>
      <arglist>(struct mk4_sdata *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_record</name>
      <anchorfile>mk4__dfio_8h.html</anchorfile>
      <anchor>a34fdcb882b2987a9d2561165bbe923fa</anchor>
      <arglist>(char *, FILE *, int *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4_records.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>mk4__records_8h.html</filename>
    <includes id="type__000_8h" name="type_000.h" local="yes" imported="no">type_000.h</includes>
    <includes id="type__100_8h" name="type_100.h" local="yes" imported="no">type_100.h</includes>
    <includes id="type__101_8h" name="type_101.h" local="yes" imported="no">type_101.h</includes>
    <includes id="type__120_8h" name="type_120.h" local="yes" imported="no">type_120.h</includes>
    <includes id="type__200_8h" name="type_200.h" local="yes" imported="no">type_200.h</includes>
    <includes id="type__201_8h" name="type_201.h" local="yes" imported="no">type_201.h</includes>
    <includes id="type__202_8h" name="type_202.h" local="yes" imported="no">type_202.h</includes>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="type__204_8h" name="type_204.h" local="yes" imported="no">type_204.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="type__206_8h" name="type_206.h" local="yes" imported="no">type_206.h</includes>
    <includes id="type__207_8h" name="type_207.h" local="yes" imported="no">type_207.h</includes>
    <includes id="type__208_8h" name="type_208.h" local="yes" imported="no">type_208.h</includes>
    <includes id="type__210_8h" name="type_210.h" local="yes" imported="no">type_210.h</includes>
    <includes id="type__212_8h" name="type_212.h" local="yes" imported="no">type_212.h</includes>
    <includes id="type__220_8h" name="type_220.h" local="yes" imported="no">type_220.h</includes>
    <includes id="type__221_8h" name="type_221.h" local="yes" imported="no">type_221.h</includes>
    <includes id="type__222_8h" name="type_222.h" local="yes" imported="no">type_222.h</includes>
    <includes id="type__230_8h" name="type_230.h" local="yes" imported="no">type_230.h</includes>
    <includes id="type__300_8h" name="type_300.h" local="yes" imported="no">type_300.h</includes>
    <includes id="type__301_8h" name="type_301.h" local="yes" imported="no">type_301.h</includes>
    <includes id="type__302_8h" name="type_302.h" local="yes" imported="no">type_302.h</includes>
    <includes id="type__303_8h" name="type_303.h" local="yes" imported="no">type_303.h</includes>
    <includes id="type__304_8h" name="type_304.h" local="yes" imported="no">type_304.h</includes>
    <includes id="type__305_8h" name="type_305.h" local="yes" imported="no">type_305.h</includes>
    <includes id="type__306_8h" name="type_306.h" local="yes" imported="no">type_306.h</includes>
    <includes id="type__307_8h" name="type_307.h" local="yes" imported="no">type_307.h</includes>
    <includes id="type__308_8h" name="type_308.h" local="yes" imported="no">type_308.h</includes>
    <includes id="type__309_8h" name="type_309.h" local="yes" imported="no">type_309.h</includes>
    <includes id="T1_8h" name="T1.h" local="yes" imported="no">T1.h</includes>
  </compound>
  <compound kind="file">
    <name>mk4_sizes.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>mk4__sizes_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CHAN</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>a585952389eeb27a7228d9f797ba8a227</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LEN_ERR</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>a949a69af4e23248405b1905a44cc9e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LEN_FILNAM</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>adb90ced1d9ae9827e81e66c163f88652</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LEN_KEY</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>a345c7c9f875b8b4e1dc194585c27bf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NUM_STN</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>a8b6b93e7470b83ce76cc7340a019e2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NUM_SU</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>ad2db97cdd5c4e3aedd6940138ec30ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NUM_TAPES</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>af091984ad6a6c3202b0674fb393fce99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_POLY_CHAN</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>a4e2c7bde6d20ec7bc73c35c79421aafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFREQ</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>af8269d8159f700256b8bd0fb67b5a882</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>mk4__sizes_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4_typedefs.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>mk4__typedefs_8h.html</filename>
    <class kind="struct">date</class>
    <class kind="struct">modpoly</class>
    <class kind="struct">sky_coord</class>
    <member kind="typedef">
      <type>struct date</type>
      <name>date_struct</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a6ac64d6bf9e1a401a2680bc89ca78fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct sky_coord</type>
      <name>sky_coord_struct</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a61b3544b9112b94126009af66c0b7290</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>U16</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>ac4de1ae30664d5bd186fb6b2ae44e725</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>U32</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>ac3df7cf3c8cb172a588adec881447d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>U8</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a3cb25ca6f51f003950f9625ff05536fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4_util.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>mk4__util_8h.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="account_8h" name="account.h" local="yes" imported="no">account.h</includes>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_date</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>af5203aa3f8df327a8983fab719f77acc</anchor>
      <arglist>(date_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>confirm</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a6f806e426fa19981d89a44bc6fd84371</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>datec_to_datef</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a8b32246137be67bc73ec36b334bd82b4</anchor>
      <arglist>(struct datec *, struct datef *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>datef_to_datec</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a131311be82b82952100afe3530a56c49</anchor>
      <arglist>(struct datef *, struct datec *)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>day_of_datef</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a92c5a61816ce25f8fb1ba9d3d36e46dc</anchor>
      <arglist>(struct datef)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dmax</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>ac5e72d197cde6d71017e89db9b986b85</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dmin</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a128779c23a7c6e9cca2374c5e7c91483</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>double_reverse</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a5a0356e7dbe2d6421b57b542900dce96</anchor>
      <arglist>(double *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dwin</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a289735ac8d34a6d392fe42a7a7b5c63f</anchor>
      <arglist>(double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>environment</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a4c1a529fb8f5b33debbadef37777358a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>float_reverse</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a53ed67d6769b4b98f55bc6b80b421f40</anchor>
      <arglist>(float *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_abs_path</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a610f3d7eb0123ef420ff7010b576d4ea</anchor>
      <arglist>(char[], char[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hptoie</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>ad1110e203d97bd111487c527104ab0c4</anchor>
      <arglist>(int *, int *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hptoie4</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>adc9fec2589cf480d5494078ddd9bab54</anchor>
      <arglist>(float *, float *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hptoie8</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>ade9e43d2474dd739f951a83048019784</anchor>
      <arglist>(double *, double *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>imax</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a05ba897ffe0dfe737254a09c91c50d10</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>imin</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>af52841aeeb1b5bf6787e1e2036088644</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>int_reverse</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a330bd39b69a582896d7ba8fc21bf8319</anchor>
      <arglist>(int *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>int_to_time</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a66e57b3de0ef1e7477607aa22ee135a0</anchor>
      <arglist>(int, int *, int *, int *, int *, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ismk4</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>adc5e37730d69ef6f43c83f38b0cb56dc</anchor>
      <arglist>(char *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iwin</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a10c0426e1ebd8fad517021a5d32e3ea1</anchor>
      <arglist>(int, int, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>long_reverse</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a7df79f9872d673a13758bd3c896fb62f</anchor>
      <arglist>(long *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>report_times</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a9e8be192fe980cb94609f64ec9976617</anchor>
      <arglist>(struct time_account *, int, struct tms *, int, double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report_wallclock</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a591542f5546bca7402119492ba809c1d</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>root_belong</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a3314235cd7008342365fca219a3b31db</anchor>
      <arglist>(char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a8a191dd824d0dcce94f1c7825cafb356</anchor>
      <arglist>(int, int, int, int, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sexigesimal2hrdeg</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a337bd06579312c876b9f9da9599cd627</anchor>
      <arglist>(const struct sky_coord *c, float *ra, float *dec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>short_reverse</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a241268357276906d23889569e0e599ae</anchor>
      <arglist>(short *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sort_names</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>ad6f0fa3442d77c1c0e025169c8dfec10</anchor>
      <arglist>(fstruct *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>syntax</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a213c92ac1a07d0a6146165866c99573a</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>time_to_double</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a9a8c75fdf144b114d3d1749aa68bdafe</anchor>
      <arglist>(struct date)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>time_to_int</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>ae77e95eecef564c1a4c31fadca16cb75</anchor>
      <arglist>(int, int, int, int, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uint_reverse</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>adf2622871c55ce621061b7ff8332ff63</anchor>
      <arglist>(unsigned int *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsig_reverse</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a948556f2434b0ca0d4297ebf914f7087</anchor>
      <arglist>(unsigned short *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>version</name>
      <anchorfile>mk4__util_8h.html</anchorfile>
      <anchor>a44d7d2885d9e2676a5e88bf5a0f09398</anchor>
      <arglist>(char *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4_vex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>mk4__vex_8h.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>bitstream</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a9e58a3b953ae9b2d41565b8ddaa8dd53</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>block_params</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>acce4385fb50594dffb41ec6043dea8eb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_intrange</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a78a4f0bc4d4bb7be7071b57483bef06c</anchor>
      <arglist>(int, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_realrange</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>adfe6a1bc86c6bafc2e5b9f70e593ac7c</anchor>
      <arglist>(double, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_stloc</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ac251c5085700df4149ee9db9854bdfa7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_strrange</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ac9f041aa6c59bada5623cec179690cd0</anchor>
      <arglist>(char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_Config *</type>
      <name>cvex_info</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>aa76f400f8e1fb9271c2362db6eccff9f</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>decode_pval</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a6e41143e193f3443dbc54f450382310f</anchor>
      <arglist>(struct param_val *, struct pval_format *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_antenna</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a70790d088cd4967b1ec428fb5dafbc7a</anchor>
      <arglist>(struct def_list *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_bbc</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ac4cb865cd3c24af05a69e9b2801415b6</anchor>
      <arglist>(struct def_list *, int, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_clock</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a7b8fdfe245dad821517a23d77d3bb380</anchor>
      <arglist>(struct def_list *, struct date *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_das</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a171a138b3dbe5220fd6f427b519f3e33</anchor>
      <arglist>(struct def_list *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_eop</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a711441f55c15ba8a9c97cf1dc6d70174</anchor>
      <arglist>(struct def *, struct scan_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_exper</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>add93a52c54f34d4f4fca7d92acb13f45</anchor>
      <arglist>(struct def *, struct scan_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_freq</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a9628e51dccb48f3c5ef1f3bb75be4ab8</anchor>
      <arglist>(struct def_list *, struct station_struct *, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_head_pos</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a0ce76d5ee33f82c102a9a39f76dc9514</anchor>
      <arglist>(struct def_list *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_if</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a135ed3eb1e07e9d7fb86f38eb54d78b7</anchor>
      <arglist>(struct def_list *, int, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_pass_order</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a5ce1dbf3f307f9285402e3a07dc2d2a9</anchor>
      <arglist>(struct def_list *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_phase_cal_detect</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>abb40298bc3ae1b8736470d44e86a3168</anchor>
      <arglist>(struct def_list *, int, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_roll</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a93da8ac5b45149bebd062ee242d97f06</anchor>
      <arglist>(struct def_list *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_site</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a09a02b6dc84ff9faabd681f66e72f4a1</anchor>
      <arglist>(struct def_list *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_source</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ab477690def102f9b7681a8e0ac1df2ab</anchor>
      <arglist>(struct def *, struct source_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_track</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>af6431824d978fc86a8e446ec633fe409</anchor>
      <arglist>(struct def_list *, int, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>struct evex_struct *</type>
      <name>evex_info</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a08ce13abb68c4f9a228e805c552d9cf1</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_deflists</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a011207492eeb1fe585d440ad420d6c68</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_scanlist</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ade2590caee91c12cb72dfc1918bb273e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_station_parms</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a0dc84fa7273f274284501148838e0fdf</anchor>
      <arglist>(struct def_list *, int, struct date *, struct station_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>find_statements</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a0cd708e185d71814641675442e1d52c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_BlockMode *</type>
      <name>get_block_mode</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>af396d0a7b042a3a01a011d89fd5d450e</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_ChipMode *</type>
      <name>get_chip_mode</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ab1c5ac26a7057ad9a7b47cb8b6d9bc7c</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_BoardParms *</type>
      <name>get_corr_bd_parms</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a4b99a0b2b14331f46584d7ef9369881a</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_Mode *</type>
      <name>get_corr_mode</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a9252eb3c4cb49c4461768358aa265d96</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>struct def *</type>
      <name>get_def</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a3759f4059ee01fe66689b41a55d611ae</anchor>
      <arglist>(char *, char *, int *, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_drive_init</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a92adea6fee9294ca214f7798651b7e45</anchor>
      <arglist>(char *, struct drive_init_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_global_deflist</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a284ceaddb5d3f739a86fea5e7ae1a216</anchor>
      <arglist>(struct def_list **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_logscan</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a1337426b52edfad304422f5926e0966c</anchor>
      <arglist>(struct def *, char *, struct station_log *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_mode_deflist</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a7b31d9a5ef120d742574d52bc520045f</anchor>
      <arglist>(struct def *, char *, struct def_list **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pbs_init</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>acea218ae3f8f2afd312462f6a13d7102</anchor>
      <arglist>(char *, struct pbs_init_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pcm_config</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a1855b30c39eb31856a2e4d82f265fb01</anchor>
      <arglist>(char *, struct svex_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pcm_tables</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ad33f9d921e1d891021aadacfc9ec6c70</anchor>
      <arglist>(char *, struct svex_struct *)</arglist>
    </member>
    <member kind="function">
      <type>struct Cvex_SectionMode *</type>
      <name>get_section_mode</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ae9492a631a05b3e7e9ff8e729ea3dc1b</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_statement</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>aa1012bef5e9fb2156d1f9f76607c3775</anchor>
      <arglist>(char *, char **, char **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_station_deflist</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>addcea7f245b240b42a2d8c7fbc274427</anchor>
      <arglist>(char *, struct def_list **)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_su_chan_out</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>af87a78a85e517ad0bf744607bcc2e7f7</anchor>
      <arglist>(char *, struct svex_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_su_connect</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a3c592343205acd7cd167f5effa8d57f7</anchor>
      <arglist>(char *, struct su_connect_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_trm_config</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a28acfc8b51e1b15ee3a6b17df9ddeb38</anchor>
      <arglist>(char *, struct TRM_config_struct *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_val_list</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a9a19256860d43b798eba9eb93ac3cf90</anchor>
      <arglist>(char *, char *[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_version</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ae7891cb42b1b25ced8098b4e8aff52f7</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_vex</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a35edd5b038f9e562e5a4bc8a518b6bd1</anchor>
      <arglist>(char *, int, char *, struct vex *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>in_comment</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a9cd3789ed5e1dd442836c66caa2cd6b5</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>in_quote</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a2a40eefdaa84fbf3c63103819ea7fcfa</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_scan</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a004edc1933b34251239059d7c12762af</anchor>
      <arglist>(struct scan_struct *, int)</arglist>
    </member>
    <member kind="function">
      <type>struct ivex_struct *</type>
      <name>ivex_info</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a4b0ad31178ab57fe67b72becde2e8bdc</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>locate_blocks</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>aa9b462a393638d52ef235a5b2503148a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>locate_cq</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a269a68432aa3882e709abc57ea5baf11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>struct lvex_struct *</type>
      <name>lvex_info</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a04146b2a9d037ee72be9c3c785fa1862</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>nextchar</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a994b4932b406a639b19d37377eb9d761</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>param_formats</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a3f3bbd9edb45b52b0be91cd5f7baec43</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_date</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a06acdd458151b4332a3fee0b84cbb1a5</anchor>
      <arglist>(char *, struct date *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_dec</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a675cfa18fde8de24f8a3210dfe78df6b</anchor>
      <arglist>(char *, struct sky_coord *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_pval</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a002ce9e3e62feb32bc4b4e0908ceb0d4</anchor>
      <arglist>(char *, char *, int, struct param_val *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_ra</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a6c6b54a0673334184f908de4bb0bfaf4</anchor>
      <arglist>(char *, struct sky_coord *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_ref</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>aea78737752242b481b63103ecd19ca68</anchor>
      <arglist>(int, struct ref *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_units</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a8808488567fa87b371de49fec2bb09bf</anchor>
      <arglist>(char *, int, double *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_vexfile</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a0cda4a84983c1c7303a3df1323dc132d</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_location</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ad480312b70a9960922cc2eb7710a0df8</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_qstring</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a9657acffcd11f861c727d4f86d65fa56</anchor>
      <arglist>(char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prt_date</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a0417fb015839dae9c2d5838e5f081cbf</anchor>
      <arglist>(char *, struct date *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_file</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>af7e0e4b3a709bfcaff67d758da784ec5</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>struct scan_struct *</type>
      <name>scan_info</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a57555980b67826e8252d399dbef40281</anchor>
      <arglist>(char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strip_text</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>aa168db59454329435defcf26a464d181</anchor>
      <arglist>(char *, char *, char *)</arglist>
    </member>
    <member kind="function">
      <type>struct svex_struct *</type>
      <name>svex_info</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a2680cf9bfdd06dc4675b98115540f5da</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vex_init</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>ae4b640e4c8b2e89397530e17250ce09a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_vexfile</name>
      <anchorfile>mk4__vex_8h.html</anchorfile>
      <anchor>a3884131c1158db20b2bcd508d9565d79</anchor>
      <arglist>(int *, struct insert *, FILE *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4io.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/mk4_module/mk4io/</path>
    <filename>mk4io_8py.html</filename>
    <class kind="class">mk4io::mk4io::auto_global</class>
    <class kind="class">mk4io::mk4io::auto_per_lag</class>
    <class kind="class">mk4io::mk4io::ch1_tag</class>
    <class kind="class">mk4io::mk4io::ch_struct</class>
    <class kind="class">mk4io::mk4io::ChanCount</class>
    <class kind="class">mk4io::mk4io::complex_struct</class>
    <class kind="class">mk4io::mk4io::counts_global</class>
    <class kind="class">mk4io::mk4io::counts_per_lag</class>
    <class kind="class">mk4io::mk4io::date</class>
    <class kind="class">mk4io::mk4io::ffit_chan_struct</class>
    <class kind="class">mk4io::mk4io::flag_wgt</class>
    <class kind="class">mk4io::mk4io::index_tag</class>
    <class kind="class">mk4io::mk4io::lag_data</class>
    <class kind="class">mk4io::mk4io::lag_tag</class>
    <class kind="class">mk4io::mk4io::mk4_corel</class>
    <class kind="class">mk4io::mk4io::mk4_fringe</class>
    <class kind="class">mk4io::mk4io::mk4_sdata</class>
    <class kind="class">mk4io::mk4io::Mk4StructureBase</class>
    <class kind="class">mk4io::mk4io::model_struct</class>
    <class kind="class">mk4io::mk4io::mutable_length_char_array</class>
    <class kind="class">mk4io::mk4io::newphasor</class>
    <class kind="class">mk4io::mk4io::pcal_struct</class>
    <class kind="class">mk4io::mk4io::phasor</class>
    <class kind="class">mk4io::mk4io::polars</class>
    <class kind="class">mk4io::mk4io::sbandf</class>
    <class kind="class">mk4io::mk4io::sbweights</class>
    <class kind="class">mk4io::mk4io::sidebands</class>
    <class kind="class">mk4io::mk4io::sky_coord</class>
    <class kind="class">mk4io::mk4io::spectral</class>
    <class kind="class">mk4io::mk4io::stcount_struct</class>
    <class kind="class">mk4io::mk4io::trackstat</class>
    <class kind="class">mk4io::mk4io::type_000</class>
    <class kind="class">mk4io::mk4io::type_100</class>
    <class kind="class">mk4io::mk4io::type_101</class>
    <class kind="class">mk4io::mk4io::type_120</class>
    <class kind="class">mk4io::mk4io::type_200</class>
    <class kind="class">mk4io::mk4io::type_201</class>
    <class kind="class">mk4io::mk4io::type_202</class>
    <class kind="class">mk4io::mk4io::type_203</class>
    <class kind="class">mk4io::mk4io::type_204</class>
    <class kind="class">mk4io::mk4io::type_205</class>
    <class kind="class">mk4io::mk4io::type_206</class>
    <class kind="class">mk4io::mk4io::type_207</class>
    <class kind="class">mk4io::mk4io::type_208</class>
    <class kind="class">mk4io::mk4io::type_210</class>
    <class kind="class">mk4io::mk4io::type_212</class>
    <class kind="class">mk4io::mk4io::type_220</class>
    <class kind="class">mk4io::mk4io::type_221</class>
    <class kind="class">mk4io::mk4io::type_222</class>
    <class kind="class">mk4io::mk4io::type_230</class>
    <class kind="class">mk4io::mk4io::type_300</class>
    <class kind="class">mk4io::mk4io::type_301</class>
    <class kind="class">mk4io::mk4io::type_302</class>
    <class kind="class">mk4io::mk4io::type_303</class>
    <class kind="class">mk4io::mk4io::type_304</class>
    <class kind="class">mk4io::mk4io::type_305</class>
    <class kind="class">mk4io::mk4io::type_306</class>
    <class kind="class">mk4io::mk4io::type_307</class>
    <class kind="class">mk4io::mk4io::type_308</class>
    <class kind="class">mk4io::mk4io::type_309</class>
    <namespace>mk4io::mk4io</namespace>
    <member kind="function">
      <type>def</type>
      <name>clear_mk4fringe</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a4b3420022cec7dbcfbb39a3bee68978a</anchor>
      <arglist>(mk4_fringe_obj)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4corel</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a8d4475f82fd107a912087bdd9b56682e</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4fp_approximately_equal</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>aa909ba4245eac7b212a166bb13f216ab</anchor>
      <arglist>(a, b, abs_tol=1e-14, rel_tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4fringe</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a3a2b7d7fc5e9c6918ebc3fcbaeea8184</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4io_load</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a16e4a853325f3bca3c94282a84a2be46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4redefine_array_length</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a3d422fdac3bb5c5df38f252016837fba</anchor>
      <arglist>(array, new_size)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4redefine_char_array_length</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a31d6f9a0b60c5d904428dc9a1801e912</anchor>
      <arglist>(array, new_size)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4sdata</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a07c94174a008f44f284e1f51eed517b1</anchor>
      <arglist>(filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4stub.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/include/</path>
    <filename>mk4stub_8h.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>datadir</name>
      <anchorfile>mk4stub_8h.html</anchorfile>
      <anchor>ac706a7c6c429e7ec17356bd688291deb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>model.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>model_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>model</name>
      <anchorfile>model_8c.html</anchorfile>
      <anchor>aabf9b11853936ad14d904737ad0d6983</anchor>
      <arglist>(double epoch, struct fxparam *fxp, double *bl_phase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>msg.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/msg/src/</path>
    <filename>msg_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>get_progname</name>
      <anchorfile>msg_8c.html</anchorfile>
      <anchor>ae6d2b116b3b724573c3f383d81b21924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>msg</name>
      <anchorfile>msg_8c.html</anchorfile>
      <anchor>a02560f9686da0fc5d8020e1a070b884b</anchor>
      <arglist>(const char *string, int level,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_msglev</name>
      <anchorfile>msg_8c.html</anchorfile>
      <anchor>ae2aa6e8913c5d96af651065245a39ef4</anchor>
      <arglist>(int lev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_progname</name>
      <anchorfile>msg_8c.html</anchorfile>
      <anchor>a41f224f3550cd182f5861fcfd034b734</anchor>
      <arglist>(const char *local_progname)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>msglev</name>
      <anchorfile>msg_8c.html</anchorfile>
      <anchor>ac4693c7c31653d6304e6b816726f4482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>progname</name>
      <anchorfile>msg_8c.html</anchorfile>
      <anchor>a6888d0a6051abf43bfad8085db4a9f82</anchor>
      <arglist>[256]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>msg.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/msg/include/</path>
    <filename>msg_8h.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>get_progname</name>
      <anchorfile>msg_8h.html</anchorfile>
      <anchor>ae6d2b116b3b724573c3f383d81b21924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>msg</name>
      <anchorfile>msg_8h.html</anchorfile>
      <anchor>a02560f9686da0fc5d8020e1a070b884b</anchor>
      <arglist>(const char *string, int level,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_msglev</name>
      <anchorfile>msg_8h.html</anchorfile>
      <anchor>ae2aa6e8913c5d96af651065245a39ef4</anchor>
      <arglist>(int lev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_progname</name>
      <anchorfile>msg_8h.html</anchorfile>
      <anchor>a41f224f3550cd182f5861fcfd034b734</anchor>
      <arglist>(const char *local_progname)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>msglev</name>
      <anchorfile>msg_8h.html</anchorfile>
      <anchor>ac4693c7c31653d6304e6b816726f4482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>progname</name>
      <anchorfile>msg_8h.html</anchorfile>
      <anchor>a6888d0a6051abf43bfad8085db4a9f82</anchor>
      <arglist>[256]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>new_type1.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>new__type1_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCALE</name>
      <anchorfile>new__type1_8c.html</anchorfile>
      <anchor>a0cbea62f1ce2043dd08108e65ed8de1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XS_CONVENTION</name>
      <anchorfile>new__type1_8c.html</anchorfile>
      <anchor>a08ade072f4b11769f7408f7547d789d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>new_type1</name>
      <anchorfile>new__type1_8c.html</anchorfile>
      <anchor>aaf5a6fabce4187d2854fc7af81aa29e6</anchor>
      <arglist>(DifxInput *D, struct fblock_tag *pfb, int nb, int a1, int a2, int blind, int *base_index, double *scale_factor, struct stations *stns, char *blines, struct CommandLineOptions *opts, FILE *fout[NUMFILS], int nvis, char *rootname, char *node, char *rcode, char *corrdate, int baseline, int scanId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_t101</name>
      <anchorfile>new__type1_8c.html</anchorfile>
      <anchor>ab60ace7091a0f589d9c2f6f75984ea77</anchor>
      <arglist>(struct type_101 *t101, FILE *fout, int find, char *ref_chan, char *rem_chan)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nextchar.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>nextchar_8c.html</filename>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>nextchar_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>nextchar_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>nextchar</name>
      <anchorfile>nextchar_8c.html</anchorfile>
      <anchor>aeacc8568e86daede1639cae50cf1b348</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>norm_fx.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>norm__fx_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="adhoc__flag_8h" name="adhoc_flag.h" local="yes" imported="no">adhoc_flag.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CIRC_MODE</name>
      <anchorfile>norm__fx_8c.html</anchorfile>
      <anchor>a7e8db46e590e739db00c75a767de2965</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CIRC_PAREL</name>
      <anchorfile>norm__fx_8c.html</anchorfile>
      <anchor>ac9ec35cf0a0b15bda827cd2c55a9ad5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIN_MODE</name>
      <anchorfile>norm__fx_8c.html</anchorfile>
      <anchor>a66049f3b67e32250007ec4a8ac252683</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIXED_MODE</name>
      <anchorfile>norm__fx_8c.html</anchorfile>
      <anchor>ace49a0ca82b5fe9c2d00ac8deb86de40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>signum</name>
      <anchorfile>norm__fx_8c.html</anchorfile>
      <anchor>a34b0a373ed8bc3a7cd512552f08fa7b8</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATUS_AP_ACCOUNTING</name>
      <anchorfile>norm__fx_8c.html</anchorfile>
      <anchor>a19b66799c9978354aac24387610e4dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm_fx</name>
      <anchorfile>norm__fx_8c.html</anchorfile>
      <anchor>ac1e8c496362a20bfdb88d14fa98f6def</anchor>
      <arglist>(struct type_pass *pass, struct type_param *param, struct type_status *status, int fr, int ap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>norm_xf.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>norm__xf_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="adhoc__flag_8h" name="adhoc_flag.h" local="yes" imported="no">adhoc_flag.h</includes>
    <includes id="apply__funcs_8h" name="apply_funcs.h" local="yes" imported="no">apply_funcs.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SLIVER</name>
      <anchorfile>norm__xf_8c.html</anchorfile>
      <anchor>a3c53ce52244687db0a78b8c843fb8705</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATUS_AP_ACCOUNTING</name>
      <anchorfile>norm__xf_8c.html</anchorfile>
      <anchor>a19b66799c9978354aac24387610e4dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYSCLK_S</name>
      <anchorfile>norm__xf_8c.html</anchorfile>
      <anchor>a2566dc770242714d899a471016ed612b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO_32</name>
      <anchorfile>norm__xf_8c.html</anchorfile>
      <anchor>a22eef62825a1c33e2daef3732304d316</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fb_amp_ratio</name>
      <anchorfile>norm__xf_8c.html</anchorfile>
      <anchor>abb9702a09cea03cee90c130efc4b7a5e</anchor>
      <arglist>(double f, double r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm_xf</name>
      <anchorfile>norm__xf_8c.html</anchorfile>
      <anchor>a7defbb63dd618f1821f0d9b39096a407</anchor>
      <arglist>(struct type_pass *pass, struct type_param *param, struct type_status *status, int fr, int ap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>normalize.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>normalize_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>normalize_8c.html</anchorfile>
      <anchor>ab27e0faceac040fd68ed37e377d4d470</anchor>
      <arglist>(struct CommandLineOptions *opts, vis_record *vrec, int nvrtot, int *nvis, int *vrsize, struct fblock_tag *pfb)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nullify_cblock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>nullify__cblock_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>nullify__cblock_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>nullify__cblock_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nullify_cblock</name>
      <anchorfile>nullify__cblock_8c.html</anchorfile>
      <anchor>a6dc5ac4998488dc0ce4b6881573035d6</anchor>
      <arglist>(struct c_block *cb_ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>open_datafile.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>open__datafile_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>open_datafile</name>
      <anchorfile>open__datafile_8c.html</anchorfile>
      <anchor>a6de881ae39a60206691cfe6b7886b6cf</anchor>
      <arglist>(char filename[], int *type, FILE **fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>open_output.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/alist/src/</path>
    <filename>open__output_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>FILE *</type>
      <name>open_output</name>
      <anchorfile>open__output_8c.html</anchorfile>
      <anchor>a1113a37d421f6006a9eb540d822c6dea</anchor>
      <arglist>(char *outfile)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>organize_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>organize__data_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>organize_data</name>
      <anchorfile>organize__data_8c.html</anchorfile>
      <anchor>ac8dba04edbb3b6308e3d0f94c6f7204d</anchor>
      <arglist>(struct mk4_corel *cdata, struct scan_struct *ovex, struct ivex_struct *ivex, struct mk4_sdata *sdata, struct freq_corel *corel, struct type_param *param, struct type_status *status, struct c_block *cb_head)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>other.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>other_8c.html</filename>
    <includes id="other_8h" name="other.h" local="yes" imported="no">other.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>AD</name>
      <anchorfile>other_8c.html</anchorfile>
      <anchor>aa70747e23d9ebf312299930cf6b3c20d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fix_dhms</name>
      <anchorfile>other_8c.html</anchorfile>
      <anchor>a76355e1579bb2f1686bf1fae186d4a4f</anchor>
      <arglist>(int dorh, int *dorhp, int *minsp, double *secsp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mjd2date</name>
      <anchorfile>other_8c.html</anchorfile>
      <anchor>aa62d7dd7e2a869aad362a3c6ce591a1a</anchor>
      <arglist>(long mjd, int *pYear, int *pMonth, int *pDay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mjd2dayno</name>
      <anchorfile>other_8c.html</anchorfile>
      <anchor>a1889716eaffe5015cfd8d16c251664d2</anchor>
      <arglist>(long mjd, int *pDayNo)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mjd2str</name>
      <anchorfile>other_8c.html</anchorfile>
      <anchor>af9bd6b20f0d5306ee0a01e9f2a687313</anchor>
      <arglist>(long mjd, char *pstring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rad2dms</name>
      <anchorfile>other_8c.html</anchorfile>
      <anchor>a0edae9eaf51f0cfe8d915e7309b9db2c</anchor>
      <arglist>(double r, char *pstring)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rad2hms</name>
      <anchorfile>other_8c.html</anchorfile>
      <anchor>a44d34940320e451a9fb615acf3cf4419</anchor>
      <arglist>(double r, char *pstring)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>other.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/include/</path>
    <filename>other_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>NELEMENTS</name>
      <anchorfile>other_8h.html</anchorfile>
      <anchor>afdd9296176e56fcfd83c07d345a045a7</anchor>
      <arglist>(array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mjd2date</name>
      <anchorfile>other_8h.html</anchorfile>
      <anchor>a4f747b03da9478f477c8196865099ac8</anchor>
      <arglist>(long, int *, int *, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mjd2dayno</name>
      <anchorfile>other_8h.html</anchorfile>
      <anchor>a9bd3fe76d70e3dca16a2667a0aede5a8</anchor>
      <arglist>(long, int *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mjd2str</name>
      <anchorfile>other_8h.html</anchorfile>
      <anchor>a7fcad758504d84e83e82ed6a368ed5c9</anchor>
      <arglist>(long, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rad2dms</name>
      <anchorfile>other_8h.html</anchorfile>
      <anchor>ac897af01072c66366190e7dd46598b87</anchor>
      <arglist>(double, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rad2hms</name>
      <anchorfile>other_8h.html</anchorfile>
      <anchor>afda2810527d7fb1a7ab986cc821ec1f8</anchor>
      <arglist>(double, char *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>output.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>output_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="meta__struct_8h" name="meta_struct.h" local="yes" imported="no">meta_struct.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="ffio_8h" name="ffio.h" local="yes" imported="no">ffio.h</includes>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <includes id="write__lock__mechanism_8h" name="write_lock_mechanism.h" local="yes" imported="no">write_lock_mechanism.h</includes>
    <includes id="plot__data__dir_8h" name="plot_data_dir.h" local="yes" imported="no">plot_data_dir.h</includes>
    <member kind="function">
      <type>int</type>
      <name>output</name>
      <anchorfile>output_8c.html</anchorfile>
      <anchor>af2d4b10d37ace6f45e5b22e96b944c7b</anchor>
      <arglist>(struct vex *root, struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ovex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>ovex_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <class kind="struct">chan_struct</class>
    <class kind="struct">scan_struct</class>
    <class kind="struct">source_struct</class>
    <class kind="struct">station_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>ADAPTIVE</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a464391e568178aa10799bce40d9a7792</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AZEL</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a998fc48cd09e619eddc0b32d2e47a6bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>B1950</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a5a59093d57b7ca8faf8fab89ea52002d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_UNDEFINED</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad77c7731449195f550fdb8d05870a54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONTINUOUS</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>acf80826c205230fbc6a84ab9c46ff9af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DUMMY</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a35beee7b0f2f3e294c4a4a69a5f02df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EARTH_ORBIT</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad7d25af724e34c00cbe439c4768c325d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EQUATORIAL</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a96026bdef6d259e2e165092da5fd18d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_UNDEFINED</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a75f92d171fa8dc6c9ea204a322347e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIXED</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a20207ffc8e6f0bdcefb5c42a5b5c3fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I_UNDEFINED</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a9eaefac61d2cfc8ae6a016745103ea92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J2000</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>afd09200b4253bfff7b9a890591e09292</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>K4</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ab45eb721b96f7dc4898425c6bdc0ae49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MARK3A</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a2f56f9a54361bce030e7e3253c5fbd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MARK4</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>aa5a964fa76068f8e6cd654e6893669c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MARK5A</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a779b7b2250fb6312da40d70d88eb774c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MARK5B</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a5762d284c50671fde16eeadc4c1ae529</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OFF</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a29e413f6725b2ba32d165ffaa35b01e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ON</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad76d1750a6cdeebd506bfcd6752554d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUASAR</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ace15f804f31b1e92f5b701cd4730247b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S2</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad5e70dee3c36d645b0eb1743b8a7d2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SATELLITE</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>aa865fa7c43b4ce8813fc237314424585</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STAR</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a94c3dc9846edbbb70f678768633a4796</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>START_STOP</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a34157d6ad83c919d0a2d581400d88e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VLBA</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>afe0e851cc1360af295f694e8ae8ed022</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VLBAG</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>af1e40cdd67c4d8097e59944c2daae6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X_YEW</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a299bc7e661760cb777284d19adc66a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X_YNS</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a1cd36bff689d9580cad09ec471342c66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/search/src/parabola.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>applications_2search_2src_2parabola_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>parabola</name>
      <anchorfile>applications_2search_2src_2parabola_8c.html</anchorfile>
      <anchor>a616f4fe3d47ca49068ae0e841e741640</anchor>
      <arglist>(double y0, double y1, double y2, double *x_max, double *y_max)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit_libs/ffmath/src/parabola.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffmath/src/</path>
    <filename>fourfit__libs_2ffmath_2src_2parabola_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>parabola</name>
      <anchorfile>fourfit__libs_2ffmath_2src_2parabola_8c.html</anchorfile>
      <anchor>a3fe5bc74fc56400a0aa2ebeeaa12948b</anchor>
      <arglist>(double y[3], double lower, double upper, double *x_max, double *amp_max, double q[3])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>param_formats.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>param__formats_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>param_formats</name>
      <anchorfile>param__formats_8c.html</anchorfile>
      <anchor>a3f3bbd9edb45b52b0be91cd5f7baec43</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nparam</name>
      <anchorfile>param__formats_8c.html</anchorfile>
      <anchor>aeed50b452b56cc987c6d92cdf5075124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct pval_format *</type>
      <name>param_value</name>
      <anchorfile>param__formats_8c.html</anchorfile>
      <anchor>ab0a6e107cabf00ac83e8d8bfa2a0e564</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>param_list.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>param__list_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>param_list</name>
      <anchorfile>param__list_8c.html</anchorfile>
      <anchor>ab7bdc7cf48e499a3d304b2ff2e7a4161</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>param_list.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>param__list_8h.html</filename>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <member kind="variable">
      <type>struct udat</type>
      <name>parameter_list</name>
      <anchorfile>param__list_8h.html</anchorfile>
      <anchor>ade1c5e236e9a80e1f2313ea6622a0333</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>param_struct.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>param__struct_8h.html</filename>
    <includes id="plot__struct_8h" name="plot_struct.h" local="yes" imported="no">plot_struct.h</includes>
    <class kind="struct">type_param</class>
    <class kind="struct">type_status</class>
    <member kind="define">
      <type>#define</type>
      <name>DIFX</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a6a32edcbcd16e69289f950d8c49ef141</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTP_ERR_MBD</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a094d0d8022e1747cf1178783d9ee2201</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTP_ERR_RATE</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a10e2ba54cd1783e72fe4dbc1ea3706b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTP_ERR_SBD</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a788a313acff5f2b0fb1ace1a6af35d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAG</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5f45322b985ea364bf5910bcbe19af8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_ION_PTS</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a447e1e4a790ac02e8865e7742514eb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXINDEX</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9d2e0ba1bb4a3be36b95d34af1a1a4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXNOTCH</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ad7ece38e6d90386017888bdf649d9403</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MK4HDW</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1796387e1772c1ff03cf8ed6874e9736</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SFXC</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a19531f58c6ab83bfc379bf9f94d5cfde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WIN_EDGE_MBD</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>acacb370470985f1a2858b383c399d605</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WIN_EDGE_RATE</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a4a163f7cd2cbcbf2298eb5c4ca766978</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WIN_EDGE_SBD</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>af01b17dc937ba22ff176c62f9fb482f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_alist.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_visualization/</path>
    <filename>parse__alist_8py.html</filename>
    <class kind="class">hops_visualization::parse_alist::AfileData</class>
    <class kind="class">hops_visualization::parse_alist::ParseAlist</class>
    <namespace>hops_visualization::parse_alist</namespace>
    <member kind="variable">
      <type>list</type>
      <name>alist_fields</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>aaf97bfcd7f12a7f3b3428423884a436b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>plot_fields</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>a2253e14ef389f5181dd98859e007fc4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dictionary</type>
      <name>plot_label_convert</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>a6a53c2a194e201f7ff69e108b21ef45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dictionary</type>
      <name>plot_labels</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>a6ff76cafbe36002a95f33411819985eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_bfields.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/src/</path>
    <filename>parse__bfields_8c.html</filename>
    <includes id="adump_8h" name="adump.h" local="yes" imported="no">adump.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_bfields</name>
      <anchorfile>parse__bfields_8c.html</anchorfile>
      <anchor>a68ea3b1ec31d8f8657fdb75e3deb75d5</anchor>
      <arglist>(int argc, char **argv, struct flist fields[])</arglist>
    </member>
    <member kind="variable">
      <type>struct flist</type>
      <name>type2_fields</name>
      <anchorfile>parse__bfields_8c.html</anchorfile>
      <anchor>a463fc0502e8ca0ba3490fa826213e5d6</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/adump/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/src/</path>
    <filename>applications_2adump_2src_2parse__cmdline_8c.html</filename>
    <includes id="adump_8h" name="adump.h" local="yes" imported="no">adump.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>applications_2adump_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a34bb34f52d0a8a82705ccc1731ea62be</anchor>
      <arglist>(int argc, char **argv, FILE **fpin, FILE **fpout, int *header, int *filetype, struct flist fields[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/aedit/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>applications_2aedit_2src_2parse__cmdline_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>applications_2aedit_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a585fefe99aec805a05eeda5fe28ac043</anchor>
      <arglist>(int argc, char **argv, int *xwindow, char *run_fname, char *batch_string, int *filelist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/alist/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/alist/src/</path>
    <filename>applications_2alist_2src_2parse__cmdline_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>applications_2alist_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a0febef575148bb7cf51b07db7b471dcb</anchor>
      <arglist>(int argc, char **argv, fstruct **files, char *outfile)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/average/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>applications_2average_2src_2parse__cmdline_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>applications_2average_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a35fec628d3ce7da22a431ff3ec4084c5</anchor>
      <arglist>(int argc, char **argv, FILE **fpout, struct config *configuration)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/fplot/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fplot/src/</path>
    <filename>applications_2fplot_2src_2parse__cmdline_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="fplot_8h" name="fplot.h" local="yes" imported="no">fplot.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CMP</name>
      <anchorfile>applications_2fplot_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a6521d51d82d885dd020285cbedd2f8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>applications_2fplot_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a7e47156156c54b1d3a9803e81305ff3f</anchor>
      <arglist>(int argc, char **argv, fstruct **files, int *display, char **file_name, int *poln)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/fringex/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>applications_2fringex_2src_2parse__cmdline_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>applications_2fringex_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a1df32ab567ef3abe134a6d24afe59d2f</anchor>
      <arglist>(int argc, char **argv, fstruct **files, struct fxparam *fxp, struct loops *loops)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/search/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>applications_2search_2src_2parse__cmdline_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>applications_2search_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>ae417923bf10bb5744992f460ce1c4a70</anchor>
      <arglist>(int argc, char **argv, FILE **fpout, int *plot, int *sqp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit_libs/ffsearch/src/parse_cmdline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="refringe_8h" name="refringe.h" local="yes" imported="no">refringe.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>ad831fd0be2a54c9d7893f07b05d0642c</anchor>
      <arglist>(int argc, char **argv, fstruct **files, bsgstruct **base_sgrp, struct type_param *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_polar</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a8b17a7618b2deb894cc9e6e350d78825</anchor>
      <arglist>(char *field, short *code)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>afile_name</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a878efd565b4385cf4fc2f9a7668b8ae2</anchor>
      <arglist>[512]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>control_filename</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a9ba7e1abe9f2cfbebcf7c28532dcc762</anchor>
      <arglist>[512]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>control_string</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a47240159f99c1ef59154e84fa66b82fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>display_name</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>a91ed0651f84bbba83adffa0285839c0f</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>displayopt</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2parse__cmdline_8c.html</anchorfile>
      <anchor>afb37274bb003938580bce312331a205c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_commands.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>parse__commands_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_commands</name>
      <anchorfile>parse__commands_8c.html</anchorfile>
      <anchor>a1668b5438cc02b8c69c104bb73de48a1</anchor>
      <arglist>(char *line, struct com *commands, int *n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_control_file.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>parse__control__file_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="parser_8h" name="parser.h" local="yes" imported="no">parser.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IS_CONTROL_FILE</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>ab3d64402c03be9185d20d350d3eb7359</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_SET_STRING</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>a14e54f35c8ebd07072779b90881b6be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_control_file</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>a804eebb12c988144bbacf70dd38d0caf</anchor>
      <arglist>(char *control_file_name, char **control_file_buff, char **set_string_buff)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>char_values</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>a60d5aa5945374d3928ea4852513bbc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>float_values</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>ad6d23835b07f1486d02781beae1fba5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct fsm_table_entry *</type>
      <name>fsm_base</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>a2f20d1bdda76b8e24273c759fd9e1517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>line_end</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>ac1829f44e2c4570d81ec609f3a623111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>token_cat</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>a8f9834ea429d800d7fa9dbc517b4d6a2</anchor>
      <arglist>[MAX_TOKENS]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>token_string</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>a27456e1d601373e0a7c37af8490b5cf5</anchor>
      <arglist>[MAX_TOKENS]</arglist>
    </member>
    <member kind="variable">
      <type>struct token_struct *</type>
      <name>tokens</name>
      <anchorfile>parse__control__file_8c.html</anchorfile>
      <anchor>a5fa05140bf6690c8fea8250127dd3336</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_csumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>parse__csumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_csumm</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>afeda3ada925025b9f2adde5df64e5341</anchor>
      <arglist>(char *line, corelsum *file)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cpformat1</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>adac7b3e96841a546d749717f694b9033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cpformat23</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>adbb6fcb62a933d8aa21c6fddfd4583b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cpformat4</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>ab710ee3a9116d6dcda420ca53f45124d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cpformat5</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>a76bb005b2f190676248f9a9867eb050a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cpformat6</name>
      <anchorfile>parse__csumm_8c.html</anchorfile>
      <anchor>a4b8cabcd46f8a7102a5ce5e5c3928adf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_date.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>parse__date_8c.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__date_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__date_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_date</name>
      <anchorfile>parse__date_8c.html</anchorfile>
      <anchor>ab02d14a51be16311f5ab7e01f1c39e5f</anchor>
      <arglist>(char *datestring, struct date *date)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_dec.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>parse__dec_8c.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__dec_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__dec_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_dec</name>
      <anchorfile>parse__dec_8c.html</anchorfile>
      <anchor>af1ba83f909f3cdda8b8bfe8cb7558bed</anchor>
      <arglist>(char *decstring, struct sky_coord *coord)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_dflag.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>parse__dflag_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_dflag</name>
      <anchorfile>parse__dflag_8c.html</anchorfile>
      <anchor>ab970aa2b5ecff4a7121c7bebe943afc0</anchor>
      <arglist>(char *arg, int *mode, struct loops *loops)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_fsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>parse__fsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_fsumm</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>aa647994375af5775afad398cd4632f05</anchor>
      <arglist>(char *line, fringesum *file)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fpformat1</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>af5a3e46e3c87f8f3bb9d3a4effeaaf6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fpformat2</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>a0788410c79fc742c8b311fcc07968e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fpformat3</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>a5dabcccb761b80e7c46d277b82484843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fpformat4</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>a4cec10f72cc1edfc5e052d9221bf3c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fpformat5</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>a193f6dd9a77a7de0ae99d4c651e4a32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fpformat6</name>
      <anchorfile>parse__fsumm_8c.html</anchorfile>
      <anchor>af39411d103fb0af10af7c270dc1f0f6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_iflag.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>parse__iflag_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_iflag</name>
      <anchorfile>parse__iflag_8c.html</anchorfile>
      <anchor>afcefa1710876ec248ac458e017be0617</anchor>
      <arglist>(char *arg, int *mode, struct loops *loops)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_pdd_file.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_io/</path>
    <filename>parse__pdd__file_8py.html</filename>
    <namespace>hops_io::parse_pdd_file</namespace>
    <member kind="function">
      <type>def</type>
      <name>parse_PDD</name>
      <anchorfile>namespacehops__io_1_1parse__pdd__file.html</anchorfile>
      <anchor>a207479aeeca70c672d6acd62e7ab7417</anchor>
      <arglist>(filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_pval.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>parse__pval_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_pval</name>
      <anchorfile>parse__pval_8c.html</anchorfile>
      <anchor>a7726c57a3de1ca418327a53122343257</anchor>
      <arglist>(char *statement, char *block, int typever, struct param_val *p_val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_ra.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>parse__ra_8c.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__ra_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__ra_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_ra</name>
      <anchorfile>parse__ra_8c.html</anchorfile>
      <anchor>a333153aabb72e71ebcf927e8dec33e9a</anchor>
      <arglist>(char *rastring, struct sky_coord *coord)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_ref.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>parse__ref_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_ref</name>
      <anchorfile>parse__ref_8c.html</anchorfile>
      <anchor>a85c1bd7346f05897b4af4b4872a83bfe</anchor>
      <arglist>(int stno, struct ref *ref)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_rsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>parse__rsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_rsumm</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>a19e89b0ca8c0365631df9f3b0332c981</anchor>
      <arglist>(char *line, rootsum *file)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rpformat1</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>af7070d78018b36337edf58341e2d1b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rpformat23</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>a2b21b4aa114f052c6a93f9494a9ce87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rpformat4</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>a9f4e3511ec54faf1265215e5fb894546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rpformat5</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>aaa484675135b74278b421a1fe2e45598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rpformat6</name>
      <anchorfile>parse__rsumm_8c.html</anchorfile>
      <anchor>aafd4d62899dd55eea452e0f751821cda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_tfields.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/src/</path>
    <filename>parse__tfields_8c.html</filename>
    <includes id="adump_8h" name="adump.h" local="yes" imported="no">adump.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_tfields</name>
      <anchorfile>parse__tfields_8c.html</anchorfile>
      <anchor>a012beb851451f6adf1136c51acd5894e</anchor>
      <arglist>(int argc, char **argv, struct flist fields[])</arglist>
    </member>
    <member kind="variable">
      <type>struct flist</type>
      <name>type3_fields</name>
      <anchorfile>parse__tfields_8c.html</anchorfile>
      <anchor>ae74f9a89b058708f3f798e43e660bf4a</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_tsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>parse__tsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_tsumm</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>abe65b75096237c1d1faeead164386c8b</anchor>
      <arglist>(char *line, trianglesum *file)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>triformat2</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>a11f568ec0d9c6e4d0f1b4edcf26cddb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>triformat3</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>a75f0f90ea6e47410416b850393580d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>triformat4</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>acc751bd46e95c43a021e04291e8c0386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>triformat5</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>a1a795faa12b0ff04a39013df3f3573af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>triformat6</name>
      <anchorfile>parse__tsumm_8c.html</anchorfile>
      <anchor>a50840f5aeefa06c7e32809d3f4e71406</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_units.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>parse__units_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parse__units_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATCH_UNITS</name>
      <anchorfile>parse__units_8c.html</anchorfile>
      <anchor>a50ce2ac109c804349e380c5d147600eb</anchor>
      <arglist>(found, units, table, type, out)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PI</name>
      <anchorfile>parse__units_8c.html</anchorfile>
      <anchor>a598a3330b3c21701223ee0ca14316eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parse__units_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_units</name>
      <anchorfile>parse__units_8c.html</anchorfile>
      <anchor>ae239aa2369a4821ae24ea1efb6fffc0a</anchor>
      <arglist>(char *unitstring, int units, double *factor)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parse_vexfile.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>parse__vexfile_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>parse_vexfile</name>
      <anchorfile>parse__vexfile_8c.html</anchorfile>
      <anchor>a19676f744dabe016154155b7f5330023</anchor>
      <arglist>(char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parser.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>parser_8c.html</filename>
    <includes id="parser_8h" name="parser.h" local="yes" imported="no">parser.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>parser_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LXH</name>
      <anchorfile>parser_8c.html</anchorfile>
      <anchor>a175d6712cc0796abfa13c05c4e3bbe59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RYV</name>
      <anchorfile>parser_8c.html</anchorfile>
      <anchor>a5f606ab7ca368002ef97c13c528637a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>parser_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fcode</name>
      <anchorfile>parser_8c.html</anchorfile>
      <anchor>ad96669c35f3eeca0d0153394f193357f</anchor>
      <arglist>(char c, char *codes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nullify_cblock</name>
      <anchorfile>parser_8c.html</anchorfile>
      <anchor>a6dc5ac4998488dc0ce4b6881573035d6</anchor>
      <arglist>(struct c_block *cb_ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parser</name>
      <anchorfile>parser_8c.html</anchorfile>
      <anchor>a7190520c0d971601304fd6c9dff56bc2</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parser.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/include/</path>
    <filename>parser_8h.html</filename>
    <class kind="struct">fsm_table_entry</class>
    <class kind="struct">token_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_AMP_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>adafe80863bb10de671afaea96570de99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_FILE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7a16fb7ea2b0a933c67fdfd39e3963ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_FILE_CHANS_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6430bdbd67e082df29de0a6217f8e87e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_FLAG_FILE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9f8756c59e0758f2e568954574b6dbbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_PERIOD_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a523867f47b0c678ea38c7bb311d68234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_PHASE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a83316003354c99f278d5dda2e80560f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_POLY_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae63d64754f66d524e7f6b44d516d6f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADHOC_TREF_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a4d3ee3e6df8d7ab9677decfe9007a20f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AND</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>acd1b97556dfbbac61063a63031d2f91d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AND_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a165f1f595a496744f235eb57a241041a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AP_BY_AP_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a5c33e3e56e714f645d669f74c6521d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AVXPLOPT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a1451e40820dc517f13f55688302daf70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AVXPZOOM_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aea241aa145beea33f23c541f4a89470e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASELINE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7f75e0f0b14506d1bb91cdcb6516daed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASELINE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae761facc48559b5247abe6b6a72f0e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLOCK_INTERIOR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8f7b83e05b6d02730ba9742235d5f3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CASSEGRAIN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac3114f4d637dd8b9e95f1ea62aba330b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHAN_IDS_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aba447e4fd71bd56121c5b8f80d32f4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHAN_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af8af12b3ae1fec4053dde0c57e3f50d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLEAR_CONDS</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af48dd0e438759fb58224f4100b93840d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLEAR_FREQS</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a528f6dfd44873fe6ddecca80c35ce7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DC_BLOCK_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae3172d6c9e63979c9f40176cd97112cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEC_OFFSET_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a70da70d21615f89959be5107f6892b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_OFFS_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7208619983617e09602054c8ba43cd7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_OFFS_L_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a0a3915110dbb4d45a22d20f53eb87dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_OFFS_R_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac126fbfea85e7123b3d02046af42af5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_OFFS_X_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aab2a3069502a72c5197570e870fa6675</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_OFFS_Y_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a061a22cb1fb1ee5e156d69588e1c470c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISCARD_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>abec574fe16dbc6529d000b7a8567ce69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DR_WIN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae4d7d8f875a03b9519c2730d8d0ba5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EACH_MINUTE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a276f9e3c0abbc3a9e7ebd546bc31c9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELSE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae1d29e8df17f1071abac1f06212b4f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_STATE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a216a83b1eaf55faee62e569b0a1929e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOF_CLEANUP</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9f9ba87b0033a8c56841200083855559</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EST_PC_MANUAL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9746cabc5aea236e7ccef2db79d22ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_GROUP</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aacbda055c445dacbfd21502f47961937</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_GROUP_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a4facb10599874ef8ca196a8056c3e667</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad4986ecbba005b963f63a85f7c8c281d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a5f32b7deaf0bcd210cf5ce8cabff9cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae8690abbffa85934d64d545920e2b108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af5579e24afdb0a707d14105f1965b7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae6b401e34ffea76e115b32c232b2116c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FMATCH_BW_PCT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a573008ea230363e9cb08e5cbe6d6907b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FREQS_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>acd7ad9396bed5c9359bc6f0548945481</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GATES_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a136370eb4c09ecdd45911741ef84cf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEN_CBLOCKS</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>abe0be4658fb8366c80cdef6b13f474b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEN_CF_RECORD_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ab0531b386c99cbd17bf3d0ebfd3e7ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GREATER_THAN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a4d75bd4207a322aeb9b14557322dad9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GREATER_THAN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>adaf8b9a5f493eced49b78d0ce087a708</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IF</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac138c68a0709c57bc5f7567abc1558eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IF_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6470684dfed4aa735967ed3afee962e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INDEX_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ab94ba984fbddc9524cf95ff34cc697a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INSERT_PAR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a677290e54e115f717b6774b64e246ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INSERT_STRING</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a49456cacde35bae6745466f7ec10b747</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INSERT_V_CHAR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad6583460222fa4569448d8bc2e150bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INSERT_V_PAR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a704229e43d3b4f3f35cfb48e57a6fd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7cd8b2290447e586a3db92af68bef353</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_CONST</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a0b6a52eac1528b5566241dd9ec5ecc98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ab4e5ee3f9b64a9207b83a7be06a6cf16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTEGER</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a91d43eadec33c80149f92e5abf5df58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERPOLATOR_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a94af8ff2fb3d7b14978249a6f1a006c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ION_NPTS_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a87affdaf7fdd5ba71ec1398fadf63468</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ION_SMOOTH_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a4a382bd6026c6ced67f3b5e857facf87</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ION_WIN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a130186d22c9fcbf41f96abc13811e960</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IONOSPHERE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6964a12d91d89a6de19cefd4d63719e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ITERATE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>afab67938ddef7760a0aa3d52259d9645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEEP_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>abc1958b4d4a0acb79d693762d8fa26f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LESS_THAN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a46d8b45dad2bfd8f4d4e876d20e65a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LESS_THAN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aefdff33ba18886142a13bef485f1a3a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LPAREN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a57e1f2f6b65f773a59f6b2cfda005a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LSB_OFFSET_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a937e1a9fd78430489b247984de5767ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MANUAL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9514d739586fa95a57d847c8257ee9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MANY_CHAR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6c14596df6f14e7c55adf22877299f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MANY_CHAR_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6b483562887ec71b2a65c6f5a48eff6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATCH_ALL</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a58b3e6cd80d3e3bff941d7b7f7dfbfbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_STATES</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9568de9296df1e94aeb0b7f24cc678a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_TOKENS</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a09886d6ba96e67553bf3c49ed8ade975</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAY_HAVE_TO</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7f5f0e72155fdfcbf0de56bd9e8d9d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MB_WIN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aa203d7754c2de64254e2a06c4f2dc24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBD_ANCHOR_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9838385814fa80ffe3fdc9535dfe351f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBDRPLOPT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a29c72bce69b64bf85445dd979d1c7783</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN_WEIGHT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>abe321e7966771ae1617c3e0a445ea56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIXED_MODE_ROT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7df3ac8733484d0be7dbe9ebfcb94031</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOD4NUMBERING_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a4bb06eac0ca82c437ac632807e3e3f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MODEL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a55795b90f6c06474e643bb3ff69fbb99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOUNT_TYPE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae61b1c12873c7607b9d3d405c0a56776</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTITONE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a37b1b14857801a33a1521b7434858f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASMYTHLEFT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac4840b32ee0eb9144ecc139a99379797</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASMYTHRIGHT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a95d5faa18875c2bf87692fd7a24fe81e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_2ND_SCAN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a12c1b9778c43988094aeaa1b25eec290</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_BASELINE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aede6c311f162625620f1e6dcfa7bb37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_CODES</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a30a072baa1c21c9fa02c168dff02ce7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_CONDITION</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aa4de6a1af4eea1d3aec58ed61fb12c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_F_GROUP</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aa359ce8002ce5d435cf1662ac454ebfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_FLOAT</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a84c698128521d1d84e73ee351f78d889</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_INT</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a40c813b71b22807bad501567bb223c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_OR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a710ba7cfa206f71496d14fb052c2fe94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_SCAN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a69b0db21b9d06ce704eabe92c2274572</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_SOURCE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aaef41944a9e76d8bf98364e97dea9426</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_STATION</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a446cc6a7a66586213529968a87e1f48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_STRING</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8a1075d05fdcd3d1b48dd35b6626d7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_TWO_FLOAT_1</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a06451f83f5496b021e1d42c690dec61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_TWO_FLOAT_2</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a66c92ddc22255a8b7c3de5469b064259</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_VECTOR_CHAR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7ce4ab900b687359f4fea968085b8d37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_VECTOR_FLOAT</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a1200c74e45a6012175efced73b20bc12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_VECTOR_INT</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aba5ca91f4a8b5e7a8187b91f6f8ce7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_VECTOR_STRING</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac6d1640fe6ae761dbb88c97a6bce76d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEED_VS_NUMBER</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9a049464e8a92abee85f29d2fece838e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEGATE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a10f3b04b9e8311aac01fcf058309a111</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_MOUNT_TYPE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6b6f5df80ba434292839e7e66aa5f658</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_OP</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8623d9a06ad6dbcf3aa30c92d35b5cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOAUTOFRINGES_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad7434751973fa902493be8369a32deea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NORMAL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a02a183c87dbb2daa63dcb1e5cbe1df95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOT</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad3e9fe0ec59d2dbb3982ababa042720c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a507e7f50eea0043459b9ee9c4f858c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOTCHES_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac0f88fbf3c288621a4819654ea0b4dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONE_CHAR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aaaa077d065115b02ae1fc89b0a242833</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONE_CHAR_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae681ee77edffd835292288f35a17d2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OPTIMIZE_CLOSURE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8b3c09a0f065628bb2cfb6a3326ea621</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a3363ca4d6d3cc0230b2804280591c991</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OR_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a219a3aaa869060d9c15eb16e087f179e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAMETER</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a303a3b4b6cb38455acf5b288fbfd622e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PASSBAND_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a54c6f9b769510cd03e05f352abd86751</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_AMP_HCODE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a914d90f7344a6ab837c887f35f2c6f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_DELAY_L_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a769eac1a892a9b1a1758b0cbcf18b290</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_DELAY_R_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac327fe8e4f8eee44a307d7702480f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_DELAY_X_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad042f31b1636fccb412a9c3e8366b813</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_DELAY_Y_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a3d94ac4e929e3883cd898465e7b55bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_FREQ_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a199fc70db22691f865291bca980962aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_MODE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ab2c17e69a9b9c19d3cbd95683393a251</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PERIOD_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a1537997af27e2ccc8d7a6149eb03a723</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a523f027c07ed87ee5dcb8162133d9af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_L_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>afe37b9a91d6917f4c21e503dc15ca293</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_OFFSET_L_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac87f41721bd7f90e70ec081a06640dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_OFFSET_R_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a5b1112ea004e9bfb076e6068eeb89ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_OFFSET_X_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a32832257e20c7200890aa73d4a7192ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_OFFSET_Y_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ab50e66a52d6ba0daade7de68c86ea26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_R_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a94ad6ba56a4caa1fcecf7de226aeb652</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_X_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a5f0586148dab4828d3745cce501886be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_PHASE_Y_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a03b911b098fdb5314de7c7d750229291</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PC_TONEMASK_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a76ead9733b2f395a9275a4faec696466</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PERIOD_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a53f0d11b4cb6af66e839b2664fddd7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLOT_DATA_DIR_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a54a6eda4a82a0cbc5d52970772f57eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLYNOMIAL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a5bafffeed5dceb4a0e04eaa0e3cbcd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POP_TOKEN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aa7e21a148b5df6edb08f52597f987d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RA_OFFSET_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>acf16882a69e36ecef8a76889eaa90833</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_FREQ_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae62331ef3098971ee3a2dcdba77d1d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RPAREN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad764664ed61bc9d4db9aeae1a2ec4e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMPLER_DELAY_L_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a68ee7be1f4daf76543763fa5de9d2303</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMPLER_DELAY_R_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac5a69941ab75e5b462123b609bff5200</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMPLER_DELAY_X_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad466178a6ad5ce74d561b2bbadfd6a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMPLER_DELAY_Y_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9f1b0076fa74df1540bf45295b4f5f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMPLERS_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ab6da1999cd5fad850dff950da0ad0e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_2ND_SCAN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac27c00a556f72169a887a10a157b1bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_BASE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae955964b7eaeeeadff890734d18def52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_CODES</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af313d556af413c34d4da449a34798758</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_CSV_LIST</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad0eb2d970e6b7863d50100e4780194b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_FG</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7a3ee998e9e393cc90e8c4cfb64278a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_SCAN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aa32f2dcf608f96b71084901e3a17c32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_SOURCE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a350624cf5065dfaddf7bb4f41dc519b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_STAT</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a4a9adb8dfcd86ae737937c70ded2c6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAVE_TOKEN_NUM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a5985c522c6a896bb4820c27f1d5c31a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SB_WIN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8bf69fd5a404f9869a856ff8e6271d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SBD_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a84230d633285fc64205a668a7b726e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCAN</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7b114f85cab70531adc738c2e499df6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCAN_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae8a4952855960a57124a1b8f7e6cbb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCAN_START_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af7f8b110b37c14d327782cd7c565444d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIMUL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a99062c1df55741ef8d9741fbfe88dd8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SINEWAVE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ade3c18514b8e5e3673c70b9d7fd173fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SKIP_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>afac6e817249a4427347cbfa1d2a338bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOURCE</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a88cabaa30cba6807a1c75eaa7e4c188e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOURCE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8ef6cd558112f81227e40c11673af78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>START_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af86bf7b058adbae495799463bbbeaada</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATION</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9d84cb76c4d83e1453e40a14897228e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATION_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a347a4c1e1471e676d6a8deab9862785e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATION_DELAY_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a026dfd949289b21b87963d65cef050db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STOP_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a897b222c02a1c2449d0f18c79fb2b910</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a9135c9461c4870f9027c19bc5f7afbb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWITCHED_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af822ca012be213fc5cdc92faa8e3baef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_COHERE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>afcd218b883d9763dc35672293a938a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIME_VAL</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae5edf03c8b04269edf63afc3057c1592</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIME_VAL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aadc25c37d515ad5d304502c44fcf56c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TO</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af75a3636100d46e8e30e2797e2ec7471</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TO_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aa9b4d6ee3a2dd13db0861edd8a2fd290</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aca1e6c3771fa0306e1dad2b11d22a8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO_CHAR</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a04b002e9c00b6ce2d9383f8f5bece2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO_CHAR_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac35697ca5e97c9eb440dd1b9f42dbeb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO_FLOAT_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a95c418bca49044e50f390b9c2955c1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_SAMPLES_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a4719ce7aa138bf824637f5f85a1b312f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VBP_COEFFS_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a1ec9f3a97ca0e7a4389384f0b2c040d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VBP_CORRECT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a863d02332df801f8aaaeb915669cfe2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VBP_FILE_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ad6408bd2a491e90837074f0166f6b1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VBP_FIT_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8c99a09f29cfdea6be338ef00adde076</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR_CHAR_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ac5ea58e43e86c454d1c527866aa99f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR_FLOAT_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a50aa1ba3945ffc698f5cb61db0a0f2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR_INT_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a8089941cc7f4c74af0aad0f82aa78b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR_STRING_PARAM</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a28c366101ee1f52c2186faf995b97551</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WEAK_CHANNEL_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>af76489fd91fd7b40d04939ade4e6cd4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WILDCARD_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7ca157da62414944244f5f151cfdc2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X_CRC_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7d382cbe608406f242e7769fd5b31115</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X_SLIP_SYNC_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a7e1b3ca0a0d9f48f7817157860ddbdbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Y_CRC_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6a971ec23fc140a3578230f7819b23ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Y_SLIP_SYNC_</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>afa7bd545e02d22b52e218c2310837ead</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pass_struct.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>pass__struct_8h.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <class kind="struct">data_corel</class>
    <class kind="struct">freq_corel</class>
    <class kind="struct">interp_sdata</class>
    <class kind="struct">type_pass</class>
    <member kind="define">
      <type>#define</type>
      <name>LSB_FLAG</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aaaf42c02f1ffe1e559b35055092d5096</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PCF</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ab61b5b2430651e459d3d2618a862dca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_ALL</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa95e2f85444e56d7c826b0713ba74c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_IXY</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa3e95a123f5758bd1cc18ea74ecc4119</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_LL</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a0ae1498d31a9eb8ad1f38aa70188136d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_LR</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ae09f2d599dad8f523d1489c2f982abb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RL</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ab9a7453c1deb1ece02aad3953c42d0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POL_RR</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a8933d10561b3a974a83569ee74ad4a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_LL</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a39ec457f686b4335eca0c9e3dcede62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_LR</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>af5c1f702453f08e14ef6091b7292a07f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_RL</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a7317001adabe10724c7b927c33a3a458</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLMASK_RR</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a6bf46f28458c301ec9f0c058ebc1e660</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USB_FLAG</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a29cd98c10290f6484a8d6d59f6c7e1e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcal_interp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>pcal__interp_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>TWO31</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>a42cf1e6775231cf1ca1e873889f58dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO32</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>a9296cb585de000681fc929e5ec247e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USB_LCP</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>ac36f475ca5b446f4fde4c9b90bec77c8a91ba7af94ab5a8dbb2dc50c8acde43a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USB_RCP</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>ac36f475ca5b446f4fde4c9b90bec77c8a894f7f7e4071fb0004f6df287c327cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LSB_LCP</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>ac36f475ca5b446f4fde4c9b90bec77c8a6231d0bbae5bfda8e3df650f80c83868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LSB_RCP</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>ac36f475ca5b446f4fde4c9b90bec77c8a035332b64e2edfc8ff4de73e1bef6c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>ac36f475ca5b446f4fde4c9b90bec77c8ac157bdf0b85a40d2619cbc8bc1ae5fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCP</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>a05589fbab0657f08285ebdfe93f5ec9ea798d72079d6874d52a6225c03115671f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>a05589fbab0657f08285ebdfe93f5ec9ea7718502dc7776a40ebe50ba5ae1d80f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pcal_interp</name>
      <anchorfile>pcal__interp_8c.html</anchorfile>
      <anchor>a5cf0ce7a776a409f6f31692c5de9386b</anchor>
      <arglist>(struct mk4_sdata *sd1, struct mk4_sdata *sd2, struct type_param *param, struct freq_corel *corel, struct mk4_corel *pcdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcalibrate.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>pcalibrate_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FFTSIZE</name>
      <anchorfile>pcalibrate_8c.html</anchorfile>
      <anchor>aeca71592fc318ddc4fadce56d2075872</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>hops_complex</type>
      <name>c_mean</name>
      <anchorfile>pcalibrate_8c.html</anchorfile>
      <anchor>a5450565852e1f97e588ed077c9c38ed7</anchor>
      <arglist>(hops_complex *z, int n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_sampler_delay</name>
      <anchorfile>pcalibrate_8c.html</anchorfile>
      <anchor>aa96076a11ff4fb44c5c3eec26503c873</anchor>
      <arglist>(struct type_pass *pass, int ifr, int stn, int ipol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pcalibrate</name>
      <anchorfile>pcalibrate_8c.html</anchorfile>
      <anchor>a56741320e4df94773dcfee38a6778f9c</anchor>
      <arglist>(struct type_pass *pass, int fr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcc_delay_fitting.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>pcc__delay__fitting_8py.html</filename>
    <class kind="class">vpal::pcc_delay_fitting::BandDelayFitter</class>
    <class kind="class">vpal::pcc_delay_fitting::BasinhoppingStep</class>
    <class kind="class">vpal::pcc_delay_fitting::DelayFitResults</class>
    <class kind="class">vpal::pcc_delay_fitting::PhasorFitData</class>
    <namespace>vpal::pcc_delay_fitting</namespace>
    <member kind="function">
      <type>def</type>
      <name>calc_delay_phasor</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>a78bd17f46cf88b8bc693aa996aeec4a6</anchor>
      <arglist>(delay, phase_offset, reference_frequency, frequency)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EPS</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>a171ca57fa57565f1891cfcd7b3f41834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pcc_fit_logger</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>aebe998ae4b0ec8f6296ce8fe1e92af05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>PICOSECOND</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>af1e1a3fc7e7fb5c3e138cbe3e49649c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcc_plotting_utils.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>pcc__plotting__utils_8py.html</filename>
    <class kind="class">vpal::pcc_plotting_utils::ProxyCableDelayFitPlotter</class>
    <namespace>vpal::pcc_plotting_utils</namespace>
  </compound>
  <compound kind="file">
    <name>phasecal.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>phasecal_8py.html</filename>
    <namespace>vpal::phasecal</namespace>
    <member kind="function">
      <type>def</type>
      <name>mult_corr</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>afd309f5449373301bb1db84aaa930567</anchor>
      <arglist>(Rxx_full, bp_good=None, bad_nans=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>write_numbers</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>af52d271dad0cfa4b6749b94b6fdf9d58</anchor>
      <arglist>(fout, prefix, numbers, bp_good)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>write_title</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>abf7dbc4aa3ee8e009c2a8246ff609d18</anchor>
      <arglist>(fout, title, station, experiment_number, experiment_code, bp_sym, threshold_median)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>write_xcorrmx</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>a980fc0465f23921e78aecc34f128c942</anchor>
      <arglist>(fout, title, Rxx_full, bp_good, station, experiment_number, experiment_code, bp_sym)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>picking_aedit.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_visualization/</path>
    <filename>picking__aedit_8py.html</filename>
    <namespace>hops_visualization::picking_aedit</namespace>
    <member kind="function">
      <type>def</type>
      <name>pick_action</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>ad2d5b7e2d56cef3465cb1f426496eb14</anchor>
      <arglist>(event)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>amp</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a8179ee8684a5bbb2d3e99a166d9b3991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ax</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a79a9006b6a9b0893bd0d181effcbd274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>baseline</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a6e2a6c8b6fe464b07a75ab82b31e1ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fig</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a21b99c0c346fae5fd63eb4ea51844a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fname</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a75a8ac1982f1afadb660b4aa741e4b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>markerfacecolor</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>addfde37af27978b98790b98579a640f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>markersize</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>ad6c850bd71278743f36b1d61c0c789e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>picker</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>ab89caf9afb4b65ec5742586e236483d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a50488c776a6d29c2e11aab0f907f5a04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>picohash.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/</path>
    <filename>picohash_8h.html</filename>
    <class kind="struct">_picohash_md5_ctx_t</class>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_BIG_ENDIAN</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a0e4116628256bcf3f4627f47e499040a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_MD5_F</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a4cad5f58f1f797b8bdd86602ecb0e73f</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_MD5_G</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>af7846a816d22080603fdd203cba0ea92</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_MD5_GET</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>aaca0300a822e6abd95db193e2b7363a7</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_MD5_H</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a6664850bb74b5eee4a87828301465afb</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_MD5_I</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>abcda763fc6eaaacbbc012c45a71833fd</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_MD5_SET</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a9e60af4c606b1eada041e5fded8d8675</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_PICOHASH_MD5_STEP</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>afe3521a3970cfefb0df5c7ae3232e61a</anchor>
      <arglist>(f, a, b, c, d, x, t, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PICOHASH_MD5_BLOCK_LENGTH</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>ae1f11a3b903a97fc806f983d24b88aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PICOHASH_MD5_DIGEST_LENGTH</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>ae1a7700928d7d97f49953a707e691ab5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>plot_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>plot_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>plot_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plot</name>
      <anchorfile>plot_8c.html</anchorfile>
      <anchor>aa7eb77a7764bbfc536852c0a352fe2a9</anchor>
      <arglist>(esum *data, char *y_axis, char *x_axis)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>interactive</name>
      <anchorfile>plot_8c.html</anchorfile>
      <anchor>aeb39d5d8ddd4957f1b01720fa0e37e36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_complex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>plot__complex_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <member kind="function">
      <type>void</type>
      <name>plot_complex</name>
      <anchorfile>plot__complex_8c.html</anchorfile>
      <anchor>aa34160afb122c0f048abe032cf09e824</anchor>
      <arglist>(char **matrix, int x, int y, int width, int height, double scale_x, double scale_y, int winstart, int winstop, hops_complex *points, double *weights, int numpoints, char ch, char altch, int segment, int amp_phase_flag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_data_dir.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>plot__data__dir_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="plot__data__dir_8h" name="plot_data_dir.h" local="yes" imported="no">plot_data_dir.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PDD_ALL</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a6a35347f2d636142e9678d29d448d554</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_DESCRIBE</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a69eb8e9a79b3e1ed2c9f1acfb3a97591</anchor>
      <arglist>(F, X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_DESCRIBe</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a710f901385011ccf943562e8aaeff839</anchor>
      <arglist>(F, X, C)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_DLYRATE</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>ac9da6d09b027d714d3145b9e32bcd20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_FINEPRINT</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a3bafba34140c35209471304689b5cddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_HEADER</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>afb2b6ccc8892a2ed40e1017c9cbbc505</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_LEGEND</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a2c2453dbe253b091405bbf1ae36e6853</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_MBD_AMP</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a775620a77eb595a110de6112e1f8b925</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_MEAN_AP</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a8594af91453e960a50052b0f1119537b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_MODELINFO</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>ab78a2f4603a9112ed333925e6fa77cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_PHASOR</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a30f4f8f8ba4e670a715c84a73d458aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SBD_AMP</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a07a49db62b18cf68b808c9e08d32df9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_AMP</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a01bd8c3727d4048d0a585c16aa142aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_AMP_FILTER</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>aad03a296db4c91c441e34d2207e6dd8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_FRAC_LSB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a00d117fe34aa8ef1109f5e75b28ddfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_FRAC_USB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>aba4185ec3700cc2d1a35154900f370a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_PHS</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a510221071929e9011180e11a3774559d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_PLOT_INFO</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a05a4d7e543d9cc80c61d4026f38e2d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REFBIAS_LSB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a5cd630e100ac34ce2dac678318d6d7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REFBIAS_USB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a6dce0f5bc0567d60d3b9c7e8eab8a1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REFPCAL</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a793206653ac5f32e283e683bca7194f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REFSCNT_LSB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>adbe16eb103860ff8b2a27bad5fa977c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REFSCNT_USB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>aa6374b97a79df3cfd6f59fb60681cbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REMBIAS_LSB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>abe99678f111e7a32b1acbc2fb6eb2882</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REMBIAS_USB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>ae9ab3adcafd37376ff9b46d61b0eff6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REMPCAL</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>afb292b08f8f785d43666bf63a68fc1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REMSCNT_LSB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a7f15869f2b4b0faaed30349f65adeb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_REMSCNT_USB</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a3098347af0491e7d09057a2fccf7467b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_RESERVED1</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a2f229c3212b628143210d52f641c9070</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_RESERVED2</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a73bbfbec16fccddb6cc4990e4489f1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_RESERVED3</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a078eaaca8f54aac2d1d38c8860789ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_RESERVED4</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>ae548ac57d2d71553146d6244c296aab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SEG_RESERVED5</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a8cf9cf27d2804133c262ec45937af6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_SOME</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a0d04c0e3dc3dd9df2ec47fe69fef1e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_WEIGHTS</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a57e665b80e8ed5a4825ab3f0c1fde467</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDD_XPSPEC</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a2f785f121d1142fe78d84280e08eda63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDDCOLS</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a9b1d6903fbd81cb7f2b98817199a8764</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLOT_DATA_DIR_IMPLEMENTATION</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>afd08460dd84a7bd0cf629bc59c3f5467</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R2D</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a2a9d9975b74210006a1125d566d9bf38</anchor>
      <arglist>(RAD)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump_plot_data2dir</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>a58f86c5260080a2808de260544599e14</anchor>
      <arglist>(struct type_dump *dump)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>control_filename</name>
      <anchorfile>plot__data__dir_8c.html</anchorfile>
      <anchor>aa4047829f56e080306d3873df9de4c7b</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_data_dir.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/include/</path>
    <filename>plot__data__dir_8h.html</filename>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="meta__struct_8h" name="meta_struct.h" local="yes" imported="no">meta_struct.h</includes>
    <class kind="struct">type_dump</class>
    <member kind="define">
      <type>#define</type>
      <name>DUMP_PLOT_DATA2DIR</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>a74ec9c5cb4cbc11ff9112b578de72347</anchor>
      <arglist>(ROOT, PASS, PP, ST, PM, PL, PF)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_PLOT_DATA_DIR</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>aa3f933bfb8336d686bc5b6ee3c1cdb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump_plot_data2dir</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>a58f86c5260080a2808de260544599e14</anchor>
      <arglist>(struct type_dump *dump)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_fqex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>plot__fqex_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NOSPLIT</name>
      <anchorfile>plot__fqex_8c.html</anchorfile>
      <anchor>a8d0c21a85089e5ad877d98c5627d7a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPLIT</name>
      <anchorfile>plot__fqex_8c.html</anchorfile>
      <anchor>ab9b059654b97e4d2d1ec92692e49dace</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plot_fqex</name>
      <anchorfile>plot__fqex_8c.html</anchorfile>
      <anchor>ac97207eca189ce0672eacbc42bb416c7</anchor>
      <arglist>(esum *data, struct frqexp fqex)</arglist>
    </member>
    <member kind="variable">
      <type>struct plot_info</type>
      <name>pdata</name>
      <anchorfile>plot__fqex_8c.html</anchorfile>
      <anchor>aa6c845d5827aec8afb44e681b174ab45</anchor>
      <arglist>[30]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>symlist</name>
      <anchorfile>plot__fqex_8c.html</anchorfile>
      <anchor>ac36cf71699e4c3248ea7c8a944bed15d</anchor>
      <arglist>[NSYMBOL]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_graph.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>plot__graph_8c.html</filename>
    <member kind="function">
      <type>void</type>
      <name>plot_graph</name>
      <anchorfile>plot__graph_8c.html</anchorfile>
      <anchor>a6ea4b2ae942a7a5d87db9a2dc92f82ef</anchor>
      <arglist>(char **matrix, int x, int y, int width, int height, double scale_x, double scale_y, int winstart, int winstop, double *points, int numpoints, char ch, char altch, int segment_flag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_header.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>plot__header_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>plot_header</name>
      <anchorfile>plot__header_8c.html</anchorfile>
      <anchor>ac8330845f1092175c146eba90f817d57</anchor>
      <arglist>(struct frqexp fqex, srcsum *sptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_points.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>plot__points_8c.html</filename>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>plot_points</name>
      <anchorfile>plot__points_8c.html</anchorfile>
      <anchor>a07a36351b0c2ae55c4296a619d8b7b96</anchor>
      <arglist>(struct plot_info *pd, struct plot_points *pp, int symbol[3])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_quality.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>plot__quality_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="close__flags_8h" name="close_flags.h" local="yes" imported="no">close_flags.h</includes>
    <member kind="function">
      <type>int</type>
      <name>plot_quality</name>
      <anchorfile>plot__quality_8c.html</anchorfile>
      <anchor>a8aa1e38f7a91fb17a7bb6d4021df70fe</anchor>
      <arglist>(fringesum *fdatum, trianglesum *tdatum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_srchdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>plot__srchdata_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>void</type>
      <name>plot_srchdata</name>
      <anchorfile>plot__srchdata_8c.html</anchorfile>
      <anchor>ab3aad1430b7aebe8d9210a67d5aa3f78</anchor>
      <arglist>(struct srchsummary srchdata[], int square)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plot_struct.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>plot__struct_8h.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <class kind="struct">type_plot</class>
    <member kind="define">
      <type>#define</type>
      <name>MBDMXPTS</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a46aa5fab39be89119d8f4621bdae717f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_allsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__allsumm_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_allsumm</name>
      <anchorfile>pr__allsumm_8c.html</anchorfile>
      <anchor>ae35ccc84f9a03684d67224d135e2d400</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_csumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__csumm_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_csumm</name>
      <anchorfile>pr__csumm_8c.html</anchorfile>
      <anchor>af847aea1fedb6d10eb2ca6382ff081be</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_fsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__fsumm_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_fsumm</name>
      <anchorfile>pr__fsumm_8c.html</anchorfile>
      <anchor>a46c30bdcfc57a21d6e7acb4cab3b18e9</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_inputs.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__inputs_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ALL</name>
      <anchorfile>pr__inputs_8c.html</anchorfile>
      <anchor>a1edd1ea8bddaf4d9c5eb3eae1ee1726a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILTER</name>
      <anchorfile>pr__inputs_8c.html</anchorfile>
      <anchor>a3a9cb517ac5b9aeae4caa398a0ed07cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLOT</name>
      <anchorfile>pr__inputs_8c.html</anchorfile>
      <anchor>a01f35f97023c14fed4f94378f827d8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pr_inputs</name>
      <anchorfile>pr__inputs_8c.html</anchorfile>
      <anchor>a2632aed3c3ca1e85c31161c83a7803c4</anchor>
      <arglist>(char *string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_rsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__rsumm_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_rsumm</name>
      <anchorfile>pr__rsumm_8c.html</anchorfile>
      <anchor>ad3d161fe5876a5e43741b00ed33e6e2a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_source.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__source_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_source</name>
      <anchorfile>pr__source_8c.html</anchorfile>
      <anchor>a13eaf52d0ccfbdadbc747ae1ba0b32af</anchor>
      <arglist>(srcsum *src)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_ssumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__ssumm_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_ssumm</name>
      <anchorfile>pr__ssumm_8c.html</anchorfile>
      <anchor>a9334372e9b6cc922836245a9fc1b0e70</anchor>
      <arglist>(char *arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_summary.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__summary_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_summary</name>
      <anchorfile>pr__summary_8c.html</anchorfile>
      <anchor>ac77afb90c379faa3b453da46d0e04950</anchor>
      <arglist>(esum *data, char *arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pr_tsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pr__tsumm_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pr_tsumm</name>
      <anchorfile>pr__tsumm_8c.html</anchorfile>
      <anchor>a86575c789d1fceb885dccf875c397bb7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>precorrect.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>precorrect_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="ovex_8h" name="ovex.h" local="yes" imported="no">ovex.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <member kind="function">
      <type>int</type>
      <name>precorrect</name>
      <anchorfile>precorrect_8c.html</anchorfile>
      <anchor>a419fc8102e9f7e6a6466c4a54abae620</anchor>
      <arglist>(struct scan_struct *ovex, struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>print_cdata_cmp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourmer/src/</path>
    <filename>print__cdata__cmp_8c.html</filename>
    <includes id="fourmer_8h" name="fourmer.h" local="yes" imported="no">fourmer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>print_cdata_cmp</name>
      <anchorfile>print__cdata__cmp_8c.html</anchorfile>
      <anchor>aef4d2eff4948281f154876250dd2c5c4</anchor>
      <arglist>(char *AName, char *BName, struct mk4_corel *cdataAp, struct mk4_corel *cdataBp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>print_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>print__data_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>print_data</name>
      <anchorfile>print__data_8c.html</anchorfile>
      <anchor>a3aba72ddf9556122743a1667d18be876</anchor>
      <arglist>(fringearray *fdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>print_location.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>print__location_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>print_location</name>
      <anchorfile>print__location_8c.html</anchorfile>
      <anchor>ad4174d2eb98ee727d07119a2b3853199</anchor>
      <arglist>(int st)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>process_qstring.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>process__qstring_8c.html</filename>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>hextoint</name>
      <anchorfile>process__qstring_8c.html</anchorfile>
      <anchor>adc6e67cb07e54c471f7b25b0bf3cef7e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>isodigit</name>
      <anchorfile>process__qstring_8c.html</anchorfile>
      <anchor>ab0f825ea4cbdbfaabc78925b328bbe73</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_qstring</name>
      <anchorfile>process__qstring_8c.html</anchorfile>
      <anchor>a257ef644ce72c8e2079f4d741ad3a737</anchor>
      <arglist>(char *qstring, char *string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>processing.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>processing_8py.html</filename>
    <namespace>vpal::processing</namespace>
    <member kind="function">
      <type>def</type>
      <name>apply_fringe_file_cuts</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a392b4bae4c5b82d214e6acf131260fbc</anchor>
      <arglist>(ff_list, control_file_hash, min_snr=0.0, max_snr=1e30, valid_quality_code_list=None, start_scan_limit=&quot;000-0000&quot;, stop_scan_limit=&quot;999-9999&quot;)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_valid_baseline_list</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a4c5105e04b3d2344ce0061688122fc96</anchor>
      <arglist>(directory, network_reference_station, remote_stations, network_reference_baselines_only=False, include_autos=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_valid_mixedmode_baseline_polproduct_dict</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a2e24e42ab9cf7f8f3b24c8ae194b4b9c</anchor>
      <arglist>(directory, legacy_stations, vgos_stations)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>gather_fringe_files</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>aed018211a8141a2d69dc904a5d6a7236</anchor>
      <arglist>(base_directory, control_file, blines, pol_products=[&apos;I&apos;], include_autos=False, exclude_list=None, max_depth=2)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_max_nblines_in_all_collections</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>af3ee367e959258d81a27400186996182</anchor>
      <arglist>(bl_collection_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>group_baseline_collections_by_scan</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>afc2188703b82af1f2ab7716f8192fa1f</anchor>
      <arglist>(bl_collection_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>join_fringes_into_baseline_collection</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a026e42cd5498617ea286acac3b4667d4</anchor>
      <arglist>(exp_directory, fringe_object_list, station_list, include_autos=False, required_polprod_list=None, only_complete=True)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>launch_fourfit_processes_in_parallel</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ab006df80d00443606bbaf56014e7c432</anchor>
      <arglist>(full_arg_list, max_num_processes=1, use_progress_ticker=True, log_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_and_batch_fourfit</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ad4787708eb1a49aa4f4e39391bc7a531</anchor>
      <arglist>(exp_directory, network_reference_station, remote_stations, control_file_path, set_commands, network_reference_baselines_only=True, num_processes=1, start_scan_limit=None, stop_scan_limit=None, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False, use_ionex_file=None, force_run=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_and_batch_fourfit_mixedmode</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ab413db94171adce7b59f6122cc52f7b7</anchor>
      <arglist>(exp_directory, legacy_stations, vgos_stations, control_file_path, set_commands, num_processes=1, start_scan_limit=&quot;000-0000&quot;, stop_scan_limit=&quot;999-9999&quot;, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_batch_cut_and_sort</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ac90ecfbc5461b2108a7b263b94b96e34</anchor>
      <arglist>(exp_directory, network_reference_station, remote_stations, control_file_path, set_commands, min_snr=0, max_snr=1e5, valid_quality_code_list=None, network_reference_baselines_only=True, num_processes=1, start_scan_limit=None, stop_scan_limit=None, only_complete=True, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_batch_cut_and_sort_mixedmode</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ac145c2376fde309d522e19b9f63a0584</anchor>
      <arglist>(exp_directory, network_reference_station, remote_stations, control_file_path, set_commands, min_snr=30, max_snr=500, valid_quality_code_list=None, network_reference_baselines_only=True, num_processes=1, start_scan_limit=&quot;000-0000&quot;, stop_scan_limit=&quot;999-9999&quot;, only_complete=True, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_directory_fringe_files</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a46e57b1c711b9a94d6fb684b663cee48</anchor>
      <arglist>(dir_name, baselines_list, frequency_group=None, include_autos=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>sort_collections_by_baseline</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ade2902f76a40f5028132a3d3a6ed8f62</anchor>
      <arglist>(baseline_collection_list)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>processing_logger</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a57ac38c776fbc387b74e7c4aaa47b4bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>proxy_cable_cal.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>proxy__cable__cal_8py.html</filename>
    <class kind="class">vpal::proxy_cable_cal::ChannelToBandMap</class>
    <class kind="class">vpal::proxy_cable_cal::ComplexReImCovarianceMatrix</class>
    <class kind="class">vpal::proxy_cable_cal::ExperimentMultibandDelayAverager</class>
    <class kind="class">vpal::proxy_cable_cal::ExperimentPccBandDelay</class>
    <class kind="class">vpal::proxy_cable_cal::NumericalInterval</class>
    <class kind="class">vpal::proxy_cable_cal::PccConfiguration</class>
    <class kind="class">vpal::proxy_cable_cal::PccDate</class>
    <class kind="class">vpal::proxy_cable_cal::ScanPccBandDelay</class>
    <class kind="class">vpal::proxy_cable_cal::SingleChannelPhasorCollection</class>
    <class kind="class">vpal::proxy_cable_cal::StationExperimentPhasorCollection</class>
    <class kind="class">vpal::proxy_cable_cal::StationScanPhaseCalibrationData</class>
    <namespace>vpal::proxy_cable_cal</namespace>
    <member kind="function">
      <type>def</type>
      <name>process_experiment</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a598602a871aee2e4b6b72e5c5296d8f6</anchor>
      <arglist>(pcc_config)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DISCARD_OFFSET</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>aad959a2e063ee7be4e5afa796695f13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAX_CHAN</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a0ffc78af07cfc61e6501f656be0f947c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pcc_logger</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a3a91e83cb84dc4af00213b5829714cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>T309_NACC</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a3fd0247f3b76973b9f4cadbc9a9919f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>T309_NCHAN</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a7774b24b31310a6d92c79aab00e967da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>TWO31</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>acbaa906280b1cb8011e7f7de0fa5d836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>TWO32</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>adaa729b301cee4b10a259ea6945980e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_baselabel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__baselabel_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_baselabel</name>
      <anchorfile>ps__baselabel_8c.html</anchorfile>
      <anchor>aad7e74305768c39c21261b1b04884d43</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_fplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__fplot_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>ps_fplot</name>
      <anchorfile>ps__fplot_8c.html</anchorfile>
      <anchor>a910bb224d6a29cdb28d8f519bd2b8ff8</anchor>
      <arglist>(struct ps_array *psarray, fringesum *fdatum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_free.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__free_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_free</name>
      <anchorfile>ps__free_8c.html</anchorfile>
      <anchor>a76617a79afc5b07b75daeb15121b50ce</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_inside.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__inside_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>ps__inside_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>ps__inside_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_inside</name>
      <anchorfile>ps__inside_8c.html</anchorfile>
      <anchor>a9821eb58e9de79cabe656cef32a1054f</anchor>
      <arglist>(float x, float y, float xmin, float xmax, float ymin, float ymax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_proc_datum.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__proc__datum_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_proc_datum</name>
      <anchorfile>ps__proc__datum_8c.html</anchorfile>
      <anchor>a2ed6d662a6f4470644e51f6b1a31ce72</anchor>
      <arglist>(esum *data, struct ps_array *psarray, float x, float y, struct psplot_cell *cell, char key, int do_fplot)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_scanlabel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__scanlabel_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_scanlabel</name>
      <anchorfile>ps__scanlabel_8c.html</anchorfile>
      <anchor>a4f335e412cf1d394243169778c1e1c3a</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_selbase.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__selbase_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_selbase</name>
      <anchorfile>ps__selbase_8c.html</anchorfile>
      <anchor>a65afd6daf85f6c505320d51f619bce71</anchor>
      <arglist>(int baseline, struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_selqual.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__selqual_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_selqual</name>
      <anchorfile>ps__selqual_8c.html</anchorfile>
      <anchor>a8b36e3f4385b4a8137b31074f0c2e33d</anchor>
      <arglist>(int colour, struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_selscan.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>ps__selscan_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_selscan</name>
      <anchorfile>ps__selscan_8c.html</anchorfile>
      <anchor>ae5232d000e0330a80428ef188664c4c1</anchor>
      <arglist>(int scan, struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psfile4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>psfile4_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>psfile4</name>
      <anchorfile>psfile4_8c.html</anchorfile>
      <anchor>a7d61695148252df10574986ba392af9b</anchor>
      <arglist>(esum *data, char *fname, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>psplot_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>psplot</name>
      <anchorfile>psplot_8c.html</anchorfile>
      <anchor>ab8ae163077b9d624169fdb0367211c9a</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psplot.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>psplot_8h.html</filename>
    <includes id="sizelimits_8h" name="sizelimits.h" local="yes" imported="no">sizelimits.h</includes>
    <class kind="struct">ps_array</class>
    <class kind="struct">ps_count</class>
    <class kind="struct">psplot_baseline</class>
    <class kind="struct">psplot_cell</class>
    <class kind="struct">psplot_fgroup</class>
    <class kind="struct">psplot_plotparam</class>
    <class kind="struct">psplot_scantime</class>
    <class kind="struct">psplot_station</class>
    <member kind="define">
      <type>#define</type>
      <name>ACTIVE</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a3a6d3cd70078e6046471ec528a09cd19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAND</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ab57e5c97e5d788f048284f1175c757b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAND_SIZE</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a8ff6e7e0ebce5b85b64dbad8831de33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAND_XORIGIN</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a9a39f2404ed0bf7dda0ae7942e75b447</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAND_YORIGIN</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a1a0970be429f9a8f98e4b9519c26a269</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASELABEL</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a2d027b1e81209f3f5c6a16da924697a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAB</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a1119d9c4aa12dadd9998c8d0a2e6ffb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DATA_PT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ab6855aa141ce3b39860691f8c8237b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPLOT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a2e4e1c984f1836fc52542d108542d414</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPLOT_BUTTON</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a278c1f14ffe456bcf28bcab2c1383331</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GUARD_BAND</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a824d31ba37dadfdaf6fe2fd41d2c576c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INACTIVE</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a0326727285db27a444321f9d3b0895fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INFO</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ae1103fea1e1b3c41ca3322d5389f7162</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INFO_X</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a741dafa1bd1ea79378f402bb15fbeeca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INFO_Y</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a89904cb639d01dbee42b37befc20650c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a8ae9d53f33f46cfcfcb9736e6351452a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_XMIN</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a10025f6b58388b7401159d4d343db2ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_YMIN</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>addcc3b8b7fdb3cbe13892a128774b775</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEYINC</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ad7f31bd614ca3e19c8ecf137223b62e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BASE_PLOT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ad48179411c0f820e3788e4e719009ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SCAN_PLOT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a63110255fcd7aa5f86f50fcc7dea7e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN_BASE_PLOT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a744aadae7089710f8b61facba705edee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN_SCAN_PLOT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a77e812a78fbdc25fd828dec5b93692bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINUS</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a5381a445a1e4bdc36460151d82eed95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEXT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a2be29dbf95b4a2c822f307a5b8141184</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEXT_BUTTON</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a308561aa19bd6948329c38117ca0ec48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODATA</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a6a2e6b3670a920656095b739efe77613</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOTHING</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>aad4a7ebff687dc5228cc3fd4d25067f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLOT_XMAX</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a0d76a29df9e6722c4f2f735a7187e492</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLOT_XMIN</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a71b9c64aec15b4b3f123c81cbdb5b6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLOT_YMAX</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a9325766972926ed36cf47e920046b18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLOT_YMIN</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a5582b2d86c96e0939c4833d4860a3ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PREV</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a55659d6bca0e8c599a48d27e570317dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PREV_BUTTON</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a335cc28eec516b9ddc01a524ae202d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUALITIES</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a9fb2047e59518ac128be297d02389308</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUIT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ad24e2b54375e12474e65ebf7175988fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUIT_BUTTON</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a6553cabe98eefb448d144504b361dffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETAIN</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>afec4e5146fc774fff2bc0690a7e4b5e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETAIN_BUTTON</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a19519ebc018ccd8b49737b671ee393c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCANLABEL</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>af5acf6745da187919b58e809d4d23848</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SELECT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a53dc4af00adc7b3b4d12eafb71596dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SELECT_BUTTON</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>addb92861d7c344086af68ef1f56c04a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLAB</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a8ee6a0c31ad6842df9a24677e5b523e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAG_COLOUR</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a66da09828542cd6787aa9641e21dcb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEXT</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a52e3db5a1724beab41ebbabe72460f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNPROC</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a51a6513ba09926c650aa2b536694af07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psplot4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>psplot4_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>psplot4</name>
      <anchorfile>psplot4_8c.html</anchorfile>
      <anchor>af6d7311638f538c7d9a9765b31f51702</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psplot_defaults4.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>psplot__defaults4_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>psplot_defaults4</name>
      <anchorfile>psplot__defaults4_8c.html</anchorfile>
      <anchor>adbf1b39079912b9bb6010065423a45ea</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pstag_process.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>pstag__process_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ANSIFY_THIS</name>
      <anchorfile>pstag__process_8c.html</anchorfile>
      <anchor>afe485ded845c1e84184afbd068e12c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pstag_process</name>
      <anchorfile>pstag__process_8c.html</anchorfile>
      <anchor>a0f728533c0201e279df78250c68e7fd1</anchor>
      <arglist>(struct ps_array *psarray, esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pstruct.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>pstruct_8h.html</filename>
    <class kind="struct">plot_info</class>
    <class kind="struct">plot_points</class>
    <class kind="struct">plot_ptqual</class>
    <member kind="define">
      <type>#define</type>
      <name>ALL_PLOT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ae577083c340e3eeb8e470db7e9a26b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ANY_PLOT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ab2454f0476e6bba17385e4f70dc805f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_AMPLITUDE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a5914319d5b1088581e873c3bf970b354</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_AZIMUTH</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ab9af8dcf6e47f32ef66f500207c5ba27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CAMP</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ae3f32089ab1e014f37be638131127944</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CMBDELAY</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ae6c8c1c55abb7ca0172b4f2a5c227ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CPHASE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a67cac0a02b8a8bdaddd347a0fec6731b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CRATE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a0317630cea3feebe19b610c8877d234e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CSBDELAY</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a742efff2115484d984c8806954244a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_DRATE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>aebc89bbf430a8a33931aa81adfa53e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_ELEVATION</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ae93d710b31d8a241a42b3e8bc63d2754</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_ERRORATE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a8897e6c8c6460afe22c035f1bf85bf1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_MBDELAY</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a9458971f1ca0cbaabe7d5912e27b84e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_NCOTIME</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a6c7e12a1c358567b9032f51df5c31a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PARAMETER</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a0b72a00a7a8fcd0170f38461247d45b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PCAL_AMP</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a138f55b57a40083403e72238e031ba9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PCAL_DIFF</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a75fbf6b3eb80adfd581f55ea6120fc2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PCAL_PHASE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ac00e70455c50a4fc8009e8511610294a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PHASE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a1edb9b223382998ac999f5d56238b84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_SBDELAY</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a5d96defa5a2a49ecee3a0325f079c1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_SCOTIME</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ac4b932d49910b743dbf2e6e77dcdbcb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_SNR</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a43da4ecc269084a8cc0738629769197f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_TIMETAG</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a663ea2cbce93fa99b869b8013b8c0ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_U</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ac25dea6eb1474eb2784775fffe8f470d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_UVDIST</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a643d170d72607566330164dffb5bf209</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_V</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a247ee22facef524aa232c7b79eec55ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASELINE_PLOT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ab8ed3b316b65f7283ecee60f92c97cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ad4e81dc193f022145921478b20fee1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_AXIS</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>ad1dbe0c5d83ed18469c1362d4efdf88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NSYMBOL</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a3bf9baefaee67b0b441d0524a5fcba4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PQ_BAD</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>aba428f09d48079e50fa27ef70ef7be2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PQ_GOOD</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>aa601bd24419a49e82aefff66697b97e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PQ_SUSPECT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a204632786b6b92c3fa630c46fed7b123</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUAD_PLOT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>addd3200f648cbefaab99bfe55a3f0615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REFERENCE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a62a0f8a0b822f31ff84bc8252b33e7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REMOTE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a62ca51b78468397b2ef98ee55a5e6e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOURCE_NOSPLIT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a06799ae81acde5dcd898c3717f2eea86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOURCE_SPLIT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>adfdad1a86f7ab215a8173be4ba4d634e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATION_PLOT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>adb2b4ddf9bdb685de66db8178552f875</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRIANGLE_PLOT</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>afc1b383eb87887d8c5de0fe4ecb9104c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Y_MULTIPLE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a275506c6ee8302d1e81f963e96d77ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Y_SINGLE</name>
      <anchorfile>pstruct_8h.html</anchorfile>
      <anchor>a13fbc120586392dfebf6c1944dfcc24a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>put_char_at.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>put__char__at_8c.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDS_ERROR</name>
      <anchorfile>put__char__at_8c.html</anchorfile>
      <anchor>a146b50076b81346c906fa7aebbfa6a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_char_at</name>
      <anchorfile>put__char__at_8c.html</anchorfile>
      <anchor>a36438ee06342db443a7288464989b78a</anchor>
      <arglist>(char **matrix, int x, int y, char c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qarray_index.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>qarray__index_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>qarray_index</name>
      <anchorfile>qarray__index_8c.html</anchorfile>
      <anchor>ab1e712cd6e0e8bb9c70696873bdc9fc2</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qfilter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>qfilter_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>qfilter_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>qfilter_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>qfilter</name>
      <anchorfile>qfilter_8c.html</anchorfile>
      <anchor>af530a7bc74cd3ea2743af05b4ff7f250</anchor>
      <arglist>(quadarray *qdatum, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_afile.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>read__afile_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="afile__structure_8h" name="afile_structure.h" local="yes" imported="no">afile_structure.h</includes>
    <member kind="function">
      <type>void</type>
      <name>clear_afile_structure</name>
      <anchorfile>read__afile_8c.html</anchorfile>
      <anchor>a1cfe6bc6cc541cf9c6609da3774f3740</anchor>
      <arglist>(afile_structure *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_afile</name>
      <anchorfile>read__afile_8c.html</anchorfile>
      <anchor>ac51b0274f874dcf3ab320663ae027e35</anchor>
      <arglist>(char *filename, afile_structure *adata_element)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_alist.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/hops_visualization/</path>
    <filename>read__alist_8py.html</filename>
    <namespace>hops_visualization::read_alist</namespace>
    <member kind="function">
      <type>def</type>
      <name>get_amp_time</name>
      <anchorfile>namespacehops__visualization_1_1read__alist.html</anchorfile>
      <anchor>a85c74ac2bc9d582cbce213c1653435ed</anchor>
      <arglist>(filename, baseline)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_binaries.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>read__binaries_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_binaries</name>
      <anchorfile>read__binaries_8c.html</anchorfile>
      <anchor>ab525a9b40b14207cc8ebb9bf6c7bcb26</anchor>
      <arglist>(fstruct *file, struct fxparam *fxp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_control_file.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>read__control__file_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>append</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>a6e8445bf8d20289805dd74cc8c79c246</anchor>
      <arglist>(cc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>comment</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>a43be22b7a1b528eaf759e034ec581543</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>goodstuff</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>ae9350572f2d4491c697c9cb45712d152</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_CONTROL_FILE</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>ab3d64402c03be9185d20d350d3eb7359</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_SET_STRING</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>a14e54f35c8ebd07072779b90881b6be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>isparen</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>a76af933acc4e04a6a6314d0e03878c77</anchor>
      <arglist>(cc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>white</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>a85bd03e30e523319b5e069e7a8a0f81d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_control_file</name>
      <anchorfile>read__control__file_8c.html</anchorfile>
      <anchor>a1ed7b0d1282a3f66d11968aaeceb92aa</anchor>
      <arglist>(char *control_file_name, char **input_string, int *flag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_cursor.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>read__cursor_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_cursor</name>
      <anchorfile>read__cursor_8c.html</anchorfile>
      <anchor>a2ad3bfcee4c84a894b121826ef876d90</anchor>
      <arglist>(float *x, float *y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aedit/src/read_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aedit_2src_2read__data_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>aedit_2src_2read__data_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>aedit_2src_2read__data_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_data</name>
      <anchorfile>aedit_2src_2read__data_8c.html</anchorfile>
      <anchor>a691eb7fef9566555cf896a7ad07dadcf</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>average/src/read_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>average_2src_2read__data_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_data</name>
      <anchorfile>average_2src_2read__data_8c.html</anchorfile>
      <anchor>a40521d2d1f7bb084448e2e0d674e508c</anchor>
      <arglist>(seg_data **data, FILE *fp, struct config configuration, int *nseg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search/src/read_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>search_2src_2read__data_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_data</name>
      <anchorfile>search_2src_2read__data_8c.html</anchorfile>
      <anchor>a849a222be3f7600d7da962158415d022</anchor>
      <arglist>(avg_data **data, char *filename, int *navg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_file.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>read__file_8c.html</filename>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_file</name>
      <anchorfile>read__file_8c.html</anchorfile>
      <anchor>ac1dbc583929c3bc6a2155ec2c2434b84</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_mk4corel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>read__mk4corel_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>REQUIRE_POWER_TWO</name>
      <anchorfile>read__mk4corel_8c.html</anchorfile>
      <anchor>a59a9bbe29bdad051ab1a39c2b2869abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4corel</name>
      <anchorfile>read__mk4corel_8c.html</anchorfile>
      <anchor>aae7e7d69320057ce00687afb9b089a7f</anchor>
      <arglist>(char *filename, struct mk4_corel *corel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_mk4file.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>read__mk4file_8c.html</filename>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_mk4file</name>
      <anchorfile>read__mk4file_8c.html</anchorfile>
      <anchor>aac112b739364019328093bcb802bbdf5</anchor>
      <arglist>(FILE *fp, char **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_mk4fringe.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>read__mk4fringe_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_mk4fringe</name>
      <anchorfile>read__mk4fringe_8c.html</anchorfile>
      <anchor>a072bc781b59b9396a9f3fb8607886b54</anchor>
      <arglist>(char *filename, struct mk4_fringe *fringe)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4fringe_impl</name>
      <anchorfile>read__mk4fringe_8c.html</anchorfile>
      <anchor>a584690229cf7383e657d74196b860b22</anchor>
      <arglist>(char *filename, struct mk4_fringe *fringe, int truncate_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4fringe_truncated</name>
      <anchorfile>read__mk4fringe_8c.html</anchorfile>
      <anchor>a35005944dc702d30e076cfc052f09c79</anchor>
      <arglist>(char *filename, struct mk4_fringe *fringe)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_mk4sdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>read__mk4sdata_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_mk4sdata</name>
      <anchorfile>read__mk4sdata_8c.html</anchorfile>
      <anchor>a4408cdc9f13780769511d986a2ae3188</anchor>
      <arglist>(char *filename, struct mk4_sdata *sdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4sdata_impl</name>
      <anchorfile>read__mk4sdata_8c.html</anchorfile>
      <anchor>a1f962e44f7ce27110300ba39a3e08518</anchor>
      <arglist>(char *filename, struct mk4_sdata *sdata, int truncate_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_mk4sdata_truncated</name>
      <anchorfile>read__mk4sdata_8c.html</anchorfile>
      <anchor>a1a76d058dc91012b9bbb2210e6d42c91</anchor>
      <arglist>(char *filename, struct mk4_sdata *sdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_sdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>read__sdata_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>read_sdata</name>
      <anchorfile>read__sdata_8c.html</anchorfile>
      <anchor>ae5a7b5833c5851f0eb88b728aaee206e</anchor>
      <arglist>(struct fileset *fset, struct mk4_sdata *sdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>realloc_segs.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>realloc__segs_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>realloc_segs</name>
      <anchorfile>realloc__segs_8c.html</anchorfile>
      <anchor>ab59abd1862646507c1325639392f6ebd</anchor>
      <arglist>(struct fxparam *fxp, int nsegs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>refringe.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>refringe_8h.html</filename>
    <class kind="struct">bsgstruct</class>
    <member kind="define">
      <type>#define</type>
      <name>ALREADY_USED</name>
      <anchorfile>refringe_8h.html</anchorfile>
      <anchor>a9b4af92f60911374e82bb841e897f8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_OF_LIST</name>
      <anchorfile>refringe_8h.html</anchorfile>
      <anchor>adcb067dd333473689d7bf49009b1d928</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>refringe_list.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>refringe__list_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="refringe_8h" name="refringe.h" local="yes" imported="no">refringe.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NB_ALLOC</name>
      <anchorfile>refringe__list_8c.html</anchorfile>
      <anchor>a783d859b52c55c995c130141f5519284</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NF_ALLOC</name>
      <anchorfile>refringe__list_8c.html</anchorfile>
      <anchor>aa87ed235177efb60157598087a896e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>refringe_list</name>
      <anchorfile>refringe__list_8c.html</anchorfile>
      <anchor>a516aff2aaf200b6320c4d565052fa8c9</anchor>
      <arglist>(char *afile_name, fstruct **files, bsgstruct **base_sgrp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>report_actions.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>report__actions_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>report_actions</name>
      <anchorfile>report__actions_8c.html</anchorfile>
      <anchor>aa366c4b1cd4ab4d50fed625ef94c6d2b</anchor>
      <arglist>(int roots_specified, int roots_read, int checked, int tried, int successes, int failures)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>report_lib.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>report__lib_8py.html</filename>
    <class kind="class">vpal::report_lib::JsonSerializableObject</class>
    <namespace>vpal::report_lib</namespace>
    <member kind="function">
      <type>def</type>
      <name>NestedObjectEncoder</name>
      <anchorfile>namespacevpal_1_1report__lib.html</anchorfile>
      <anchor>acf532a2bf19e44cb42b6fae9a873adaf</anchor>
      <arglist>(an_object)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>report_times.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>report__times_8c.html</filename>
    <includes id="account_8h" name="account.h" local="yes" imported="no">account.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>report_times</name>
      <anchorfile>report__times_8c.html</anchorfile>
      <anchor>a63d3de16377a59e86e22ba593b3ed693</anchor>
      <arglist>(struct time_account *t_acc, int nseg, struct tms *buf, int real, double time_unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report_wallclock</name>
      <anchorfile>report__times_8c.html</anchorfile>
      <anchor>ab84b098c8181f6c8a8cedb85bb699198</anchor>
      <arglist>(int npass, int totpass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rfilter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>rfilter_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>rfilter_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>rfilter_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rfilter</name>
      <anchorfile>rfilter_8c.html</anchorfile>
      <anchor>a86a989b264a81c82c26ed1b09f571695</anchor>
      <arglist>(rootarray *rdatum, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>root_belong.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>root__belong_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>root_belong</name>
      <anchorfile>root__belong_8c.html</anchorfile>
      <anchor>af10d3abdbfbf75bbef489ab71eee5429</anchor>
      <arglist>(char *rootname, char *dataname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/difx2mark4/src/root_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>applications_2difx2mark4_2src_2root__id_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ROOT_BREAK</name>
      <anchorfile>applications_2difx2mark4_2src_2root__id_8c.html</anchorfile>
      <anchor>ae8eb92a660cc13d39c42d3787a5528fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id</name>
      <anchorfile>applications_2difx2mark4_2src_2root__id_8c.html</anchorfile>
      <anchor>a2650eeb9c31ded3b85b02b679f0d70bb</anchor>
      <arglist>(int year, int day, int hour, int min, int sec)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id_break</name>
      <anchorfile>applications_2difx2mark4_2src_2root__id_8c.html</anchorfile>
      <anchor>af4ce6b8af9fe53d80efab5ada4cec785</anchor>
      <arglist>(time_t now, int year, int day, int hour, int min, int sec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>root_id_delta</name>
      <anchorfile>applications_2difx2mark4_2src_2root__id_8c.html</anchorfile>
      <anchor>aaa6306abd38e36aa4eaefc37231e20f2</anchor>
      <arglist>(time_t now)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id_later</name>
      <anchorfile>applications_2difx2mark4_2src_2root__id_8c.html</anchorfile>
      <anchor>a376c0889452864da6a7ffdb5b060c321</anchor>
      <arglist>(time_t now)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mk4util/src/root_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>mk4util_2src_2root__id_8c.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>HOPS_ROOT_BREAK</name>
      <anchorfile>mk4util_2src_2root__id_8c.html</anchorfile>
      <anchor>ae8eb92a660cc13d39c42d3787a5528fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id</name>
      <anchorfile>mk4util_2src_2root__id_8c.html</anchorfile>
      <anchor>a2650eeb9c31ded3b85b02b679f0d70bb</anchor>
      <arglist>(int year, int day, int hour, int min, int sec)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id_break</name>
      <anchorfile>mk4util_2src_2root__id_8c.html</anchorfile>
      <anchor>af4ce6b8af9fe53d80efab5ada4cec785</anchor>
      <arglist>(time_t now, int year, int day, int hour, int min, int sec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>root_id_delta</name>
      <anchorfile>mk4util_2src_2root__id_8c.html</anchorfile>
      <anchor>aaa6306abd38e36aa4eaefc37231e20f2</anchor>
      <arglist>(time_t now)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>root_id_later</name>
      <anchorfile>mk4util_2src_2root__id_8c.html</anchorfile>
      <anchor>a376c0889452864da6a7ffdb5b060c321</anchor>
      <arglist>(time_t now)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rootname.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>rootname_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="general_8h" name="general.h" local="yes" imported="no">general.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>rootname</name>
      <anchorfile>rootname_8c.html</anchorfile>
      <anchor>a38555118841f6b56a5a4da1ad0c7386a</anchor>
      <arglist>(rootsum *rsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rotate_pcal.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>rotate__pcal_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>rotate_pcal</name>
      <anchorfile>rotate__pcal_8c.html</anchorfile>
      <anchor>ac9311348ec893c33a1d661a20f5a15f9</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rtype.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>rtype_8c.html</filename>
    <includes id="htime_8h" name="htime.h" local="yes" imported="no">htime.h</includes>
    <member kind="function">
      <type>void</type>
      <name>Ht_format_help</name>
      <anchorfile>rtype_8c.html</anchorfile>
      <anchor>a35fcf10f3b592df9f9a88a1151a047de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_qtype_to_style</name>
      <anchorfile>rtype_8c.html</anchorfile>
      <anchor>a0a6a270f4dc915044b9892e920550c91</anchor>
      <arglist>(char *qtype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Ht_rtype_to_style</name>
      <anchorfile>rtype_8c.html</anchorfile>
      <anchor>ad957cb526bf9cc7ea69b0b295cd5f57b</anchor>
      <arglist>(char *rtype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>run_com_file.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>run__com__file_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>run_com_file</name>
      <anchorfile>run__com__file_8c.html</anchorfile>
      <anchor>a13390d42b9bdd4aed9189ca11571a6e4</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>run_pscursor.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>run__pscursor_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>run_pscursor</name>
      <anchorfile>run__pscursor_8c.html</anchorfile>
      <anchor>a7fc44a8c7f75ad73352c1f0fe07be30f</anchor>
      <arglist>(struct ps_array *psarray, esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sampler_delays.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>sampler__delays_8c.html</filename>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sampler_delays</name>
      <anchorfile>sampler__delays_8c.html</anchorfile>
      <anchor>ae2757197ab253fbfd6cfd6dd575fcf3f</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>save.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>save_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>save_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>save_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>save</name>
      <anchorfile>save_8c.html</anchorfile>
      <anchor>a5c8b51f4c7b6a5ccb09bfadcdd88ce0a</anchor>
      <arglist>(esum *data, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sc_time.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>sc__time_8c.html</filename>
    <includes id="hetetimecode_8h" name="hetetimecode.h" local="yes" imported="no">hetetimecode.h</includes>
    <includes id="time__float__type_8h" name="time_float_type.h" local="yes" imported="no">time_float_type.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>TVP2USEC</name>
      <anchorfile>sc__time_8c.html</anchorfile>
      <anchor>a49df2e89da89d1807980c9f2c9c38cc3</anchor>
      <arglist>(t)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_sc_time</name>
      <anchorfile>sc__time_8c.html</anchorfile>
      <anchor>a740ccc0d1c04b3030b112a7cf79c0f85</anchor>
      <arglist>(time_code *tc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_sc_time_array</name>
      <anchorfile>sc__time_8c.html</anchorfile>
      <anchor>ae912e71ab7308b1b564dbfc8d20a3e00</anchor>
      <arglist>(IPP_word time[4])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>has_this_time_passed</name>
      <anchorfile>sc__time_8c.html</anchorfile>
      <anchor>a9c4800357e50c28301d3ea8970624e42</anchor>
      <arglist>(time_code *time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>time_cmp</name>
      <anchorfile>sc__time_8c.html</anchorfile>
      <anchor>a8b8259b2285c5b6e5aaa5d55a5443f2d</anchor>
      <arglist>(time_code *time1, time_code *time2)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>Ht_hete_epoch</name>
      <anchorfile>sc__time_8c.html</anchorfile>
      <anchor>a711eb2b97e862da7815d98880f3698da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scan_info.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>scan__info_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>scan__info_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>scan__info_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>struct scan_struct *</type>
      <name>scan_info</name>
      <anchorfile>scan__info_8c.html</anchorfile>
      <anchor>ac240b398ebdf461ff73aaa00666fafa4</anchor>
      <arglist>(char *scanname, char *stations)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>defspace</name>
      <anchorfile>scan__info_8c.html</anchorfile>
      <anchor>af9f29b3fc68418d7a12547aa8b708bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndefs</name>
      <anchorfile>scan__info_8c.html</anchorfile>
      <anchor>a3d93c6aec3d347a78e5235d85cbbcc21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scan_name_edit.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fourmer/src/</path>
    <filename>scan__name__edit_8c.html</filename>
    <includes id="fourmer_8h" name="fourmer.h" local="yes" imported="no">fourmer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>scan_name_edit</name>
      <anchorfile>scan__name__edit_8c.html</anchorfile>
      <anchor>a4693af66b1a62332b200da9671c8895d</anchor>
      <arglist>(char lA[][MAX_CHARS], int nA, char lB[][MAX_CHARS], int nB)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applications/search/search.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/</path>
    <filename>applications_2search_2search_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>applications_2search_2search_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>datatype</name>
      <anchorfile>applications_2search_2search_8c.html</anchorfile>
      <anchor>a5d1502fc2354f6dafba8668cc79b19f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>space</name>
      <anchorfile>applications_2search_2search_8c.html</anchorfile>
      <anchor>ab05991ed532329184893692211b355fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fourfit_libs/ffsearch/src/search.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>fourfit__libs_2ffsearch_2src_2search_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffsearch_8h" name="ffsearch.h" local="yes" imported="no">ffsearch.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MBD_GRID_MAX</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2search_8c.html</anchorfile>
      <anchor>af28031aba087c9516673c29d038f2f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>search</name>
      <anchorfile>fourfit__libs_2ffsearch_2src_2search_8c.html</anchorfile>
      <anchor>a99c5d1ab4680bcfdf7c0a0d6d6ab5475</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/include/</path>
    <filename>search_8h.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <class kind="struct">avg_data</class>
    <class kind="struct">srchsummary</class>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BNO</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a7a13b3753030b4cb66afe362fb37d847</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NDELAY</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>ab298232e165ac57138d4266f1ddee759</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NRATE</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a18279ec0c5f0616352bcfaab2269d526</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_grids</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>abfa1c94eed1fd16c440ced6fee4c69f1</anchor>
      <arglist>(struct srchsummary *srchdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fill_grids_orig</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a09e0643b77b12ac11ad80219225902b1</anchor>
      <arglist>(struct srchsummary *srchdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_cmdline</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a3ba0a80e29bff4f0ac4ef22a44998509</anchor>
      <arglist>(int, char **, FILE **, int *, int *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plot_srchdata</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>ab3aad1430b7aebe8d9210a67d5aa3f78</anchor>
      <arglist>(struct srchsummary srchdata[], int square)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>msglev</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>ac4693c7c31653d6304e6b816726f4482</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search_windows.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>search__windows_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>search_windows</name>
      <anchorfile>search__windows_8c.html</anchorfile>
      <anchor>a3048d2e3430d5ac0991aa56e7a7fcfda</anchor>
      <arglist>(struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_baselines.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__baselines_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_baselines</name>
      <anchorfile>set__baselines_8c.html</anchorfile>
      <anchor>afeb724d4a0919e21b48d2c789618a911</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_defaults.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>set__defaults_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_defaults</name>
      <anchorfile>set__defaults_8c.html</anchorfile>
      <anchor>aaf8e4eef76ea83a51b16168f43702f41</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_device.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__device_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_device</name>
      <anchorfile>set__device_8c.html</anchorfile>
      <anchor>a9d5890a6ab02478fd740cba830395079</anchor>
      <arglist>(char *string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_fraction.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__fraction_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_fraction</name>
      <anchorfile>set__fraction_8c.html</anchorfile>
      <anchor>a4b3594eb4a10afbec42bf1f41ab7aef2</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_frequencies.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__frequencies_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_frequencies</name>
      <anchorfile>set__frequencies_8c.html</anchorfile>
      <anchor>adf1b1d990eee294f50cfccf7dddcf43e</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_loops.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>set__loops_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_loops</name>
      <anchorfile>set__loops_8c.html</anchorfile>
      <anchor>ae7114832cab7f483a3cf1762923133be</anchor>
      <arglist>(struct fxparam *fxp, struct loops *loops)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_mode.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__mode_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_mode</name>
      <anchorfile>set__mode_8c.html</anchorfile>
      <anchor>a0fc368c006c1e54ae71d297863b085d0</anchor>
      <arglist>(char *arg1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_nfreq.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__nfreq_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_nfreq</name>
      <anchorfile>set__nfreq_8c.html</anchorfile>
      <anchor>a11aedaf60e00f49e1685e3454ea1104e</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_pointers.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>set__pointers_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="freqlist_8h" name="freqlist.h" local="yes" imported="no">freqlist.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_pointers</name>
      <anchorfile>set__pointers_8c.html</anchorfile>
      <anchor>aa4b6b7ec3849009ed1bbc3666c732301</anchor>
      <arglist>(struct station_struct *stn1, struct station_struct *stn2, struct mk4_corel *cdata, struct type_param *param, struct freq_corel *corel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_pols.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__pols_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_pols</name>
      <anchorfile>set__pols_8c.html</anchorfile>
      <anchor>a7330a1b0289d69e6b351b12d58f1c85a</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_prange.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__prange_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_prange</name>
      <anchorfile>set__prange_8c.html</anchorfile>
      <anchor>a6e1452ddc48d40c8bfe6dbf5f4edddbd</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_procrange.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__procrange_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_procrange</name>
      <anchorfile>set__procrange_8c.html</anchorfile>
      <anchor>a81bcb6e1652fd77c9e59acb0446f494c</anchor>
      <arglist>(char *arg1, char *arg2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_pscodes.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__pscodes_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_pscodes</name>
      <anchorfile>set__pscodes_8c.html</anchorfile>
      <anchor>a8ce8618cdd9c422e96a65c7b717710ba</anchor>
      <arglist>(esum *data, struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_psparam.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__psparam_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_psparam</name>
      <anchorfile>set__psparam_8c.html</anchorfile>
      <anchor>a13d8645ef9675837e67cda492cf654b6</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_qcodes.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__qcodes_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_qcodes</name>
      <anchorfile>set__qcodes_8c.html</anchorfile>
      <anchor>a57743ee971e02fb7ed28e826875cd13a</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_quads.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__quads_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_quads</name>
      <anchorfile>set__quads_8c.html</anchorfile>
      <anchor>a2b96dbfb97f7cc4158a5ae8148c96f42</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_reffreq.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fringex/src/</path>
    <filename>set__reffreq_8c.html</filename>
    <includes id="fringex_8h" name="fringex.h" local="yes" imported="no">fringex.h</includes>
    <member kind="function">
      <type>double</type>
      <name>set_reffreq</name>
      <anchorfile>set__reffreq_8c.html</anchorfile>
      <anchor>a26ddea9ac7da00b375d3edb2f301efe6</anchor>
      <arglist>(struct fxparam *fxp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_sources.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__sources_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_sources</name>
      <anchorfile>set__sources_8c.html</anchorfile>
      <anchor>ab21859712e3e83e59e00e83eb4bc381b</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_stations.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__stations_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_stations</name>
      <anchorfile>set__stations_8c.html</anchorfile>
      <anchor>a44f3103192dfbb6e899431d75acb0991</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_timerange.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__timerange_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_timerange</name>
      <anchorfile>set__timerange_8c.html</anchorfile>
      <anchor>ace273f70e5ddf5d41a4e7df4ed5421d6</anchor>
      <arglist>(char *arg1, char *arg2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_triangles.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__triangles_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_triangles</name>
      <anchorfile>set__triangles_8c.html</anchorfile>
      <anchor>a06477663b22d4046370eb74bcae18f71</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_type.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__type_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>set_type</name>
      <anchorfile>set__type_8c.html</anchorfile>
      <anchor>a5e428b935a0155bf4fe34407fa123496</anchor>
      <arglist>(char *arg1, char *arg2, char *remarg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>set_year.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>set__year_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>set__year_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>set__year_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_year</name>
      <anchorfile>set__year_8c.html</anchorfile>
      <anchor>a4d79e654e3edadaa18c9ae9fd032dd73</anchor>
      <arglist>(fringearray *fdata, char *arg1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>setup_plot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>setup__plot_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="function">
      <type>int</type>
      <name>setup_plot</name>
      <anchorfile>setup__plot_8c.html</anchorfile>
      <anchor>afad7febecee3a238287ef65539ccd2ea</anchor>
      <arglist>(struct plot_info *pd, int nplot, struct frqexp fqex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>setup_psplot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>setup__psplot_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>setup_psplot</name>
      <anchorfile>setup__psplot_8c.html</anchorfile>
      <anchor>a2b25b027ff0ea67bf59db69751fff02a</anchor>
      <arglist>(struct ps_array *psarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sexigesimal2hrdeg.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>sexigesimal2hrdeg_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sexigesimal2hrdeg</name>
      <anchorfile>sexigesimal2hrdeg_8c.html</anchorfile>
      <anchor>a337bd06579312c876b9f9da9599cd627</anchor>
      <arglist>(const struct sky_coord *c, float *ra, float *dec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>single_code.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>single__code_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>char</type>
      <name>single_code</name>
      <anchorfile>single__code_8c.html</anchorfile>
      <anchor>aa1df9bff29f5010b20e089231cae5ef9</anchor>
      <arglist>(char *station, char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sizelimits.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>sizelimits_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAXBANDS</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>af9a5faf5719d8575f4be804b9bb654c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXBASE</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>a54157299faf715fbe733adb852d9e541</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXCLOSE</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>ae897caf804bcbe20cd5450fc6392e91c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXEXPTS</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>ae4466d456a81d0c9153ef273ebc50b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFREQ</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>af8269d8159f700256b8bd0fb67b5a882</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXGROUPS</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>a54e764f51810649efbac536750413513</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSRC</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>a934682caeedb813cc7c92ca84ed6eb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTBAND</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>aa7a82cae031678233c8bda38e3139fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTEXP</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>ab53a3a69362594134bd21ab397ed6916</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTTOT</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>a74b6d62963291b4cd234fb87d92d00d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXVERSION</name>
      <anchorfile>sizelimits_8h.html</anchorfile>
      <anchor>a778846eee24e886038ac5e52b9062947</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>skip_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>skip__data_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>skip__data_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>skip__data_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skip_data</name>
      <anchorfile>skip__data_8c.html</anchorfile>
      <anchor>a3777b750fde85a11033720bd55366bf2</anchor>
      <arglist>(int scantime, char *baseline, char *source, char group)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>skip_index.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcontrol/src/</path>
    <filename>skip__index_8c.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <includes id="ffcontrol_8h" name="ffcontrol.h" local="yes" imported="no">ffcontrol.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>skip__index_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>skip__index_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skip_index</name>
      <anchorfile>skip__index_8c.html</anchorfile>
      <anchor>a053407e30227121ef5aa4d1f15f52746</anchor>
      <arglist>(int ind, struct c_block *cblock)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>skip_poln.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/fplot/src/</path>
    <filename>skip__poln_8c.html</filename>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="type__203_8h" name="type_203.h" local="yes" imported="no">type_203.h</includes>
    <includes id="type__205_8h" name="type_205.h" local="yes" imported="no">type_205.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>skip_poln</name>
      <anchorfile>skip__poln_8c.html</anchorfile>
      <anchor>acf5d0c2883f6f1a3d1f857d87752eb7e</anchor>
      <arglist>(char *name, struct type_203 *t203, struct type_205 *t205, int poln)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>smatch.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>smatch_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>smatch_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>smatch_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>smatch</name>
      <anchorfile>smatch_8c.html</anchorfile>
      <anchor>a6132f7cd069bfc8c1f25880ff78767b1</anchor>
      <arglist>(char *s1, char *s2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>snratio.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/snratio/</path>
    <filename>snratio_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAXBL</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>ac37493a5af7caac25a7a04db60b54e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXLINLEN</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a5485937e9b13fdc33a3856f1a8e774a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSC</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a93ef11a45763a7c4065b1afe87d3c4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSOR</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a157c98f8589795d100eeed1d84ac7d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OUTFILE</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a32cc9d976eaa3b33e3cdbc87e47c72a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNRMAX</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a30c17515fe7e1a453b19b9d31f0d0ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNRWARN</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a45bb446f1715a0f05e69ee2a81ed45ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addsec</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a08e8df1c3ff1fcd3fc31ad77726e69c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addsec</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a3499e96e778b17f461a1ba98eba36121</anchor>
      <arglist>(char ydt[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_station_name</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>a01d465ab0a67ab3193db1afc24cc44dc</anchor>
      <arglist>(char *in_line, int nbl, char *ref, char *rem)</arglist>
    </member>
    <member kind="variable">
      <type>struct @4</type>
      <name>scbl</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>ad0801ebcae00b1a99197d2e199f553c4</anchor>
      <arglist>[MAXSC]</arglist>
    </member>
    <member kind="variable">
      <type>struct @5</type>
      <name>sors</name>
      <anchorfile>snratio_8c.html</anchorfile>
      <anchor>acd2fccb039e3a8fd095bf180edd4c8b9</anchor>
      <arglist>[MAXSOR]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sort.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>sort_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>S_BASELINE</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>a2b1036af087fe7e5b6cd0e87d19c10e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_EXPERIMENT</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>adcd9807dded0cd3e27a564bc41dc806a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_FAMILY</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>abd1364073663a5a8faa6af9c763e974e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_FREQUENCY</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>aa86105518af00b3e036577248d70c5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_LENGTH</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>a5bdda3fd4f5c43abe66936772c1a33dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_PROCDATE</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>a1cdc8ca4e39b1a82a7405fa479e8bcc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_QCODE</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>a5edbe36bc368201ca5cf95f076b71de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_QUAD</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>a62a39f5c35554bcb63d653c7d7642ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_ROOTCODE</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>a3b111eebe80b60015b40dadd95057f32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_SNR</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>aea685c244f834a80b964f37f9616390e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_SOURCENAME</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>ac3725bef3e7230d37369a2e379b7415f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_TIMETAG</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>a2aea687d0ac2b023cc3206efceb33c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S_TRIANGLE</name>
      <anchorfile>sort_8h.html</anchorfile>
      <anchor>aeaebe54abbe3ce22c39a46feb3f91c43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>average/src/sort_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>average_2src_2sort__data_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sort_data</name>
      <anchorfile>average_2src_2sort__data_8c.html</anchorfile>
      <anchor>ad5d5817b6735045373a8b1bd10ecff2c</anchor>
      <arglist>(seg_data *data, int nseg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search/src/sort_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>search_2src_2sort__data_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sort_data</name>
      <anchorfile>search_2src_2sort__data_8c.html</anchorfile>
      <anchor>ae2bb3e37917eeb034b79409205ab1dd6</anchor>
      <arglist>(avg_data *data, int navg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sort_names.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>sort__names_8c.html</filename>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sort_names</name>
      <anchorfile>sort__names_8c.html</anchorfile>
      <anchor>a411cd1d8dd3e98ede40a58e92c03c327</anchor>
      <arglist>(fstruct *files, int nfiles)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aedit/src/sorter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>aedit_2src_2sorter_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="sort_8h" name="sort.h" local="yes" imported="no">sort.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>aedit_2src_2sorter_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>aedit_2src_2sorter_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sorter</name>
      <anchorfile>aedit_2src_2sorter_8c.html</anchorfile>
      <anchor>af577d241de4f112129251eaaf38be35a</anchor>
      <arglist>(void *dptr, char *arg1, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>average/src/sorter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>average_2src_2sorter_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sorter</name>
      <anchorfile>average_2src_2sorter_8c.html</anchorfile>
      <anchor>afd199803a9eed6bb5aab70eb2873f056</anchor>
      <arglist>(seg_data *data, int nseg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search/src/sorter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>search_2src_2sorter_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sorter</name>
      <anchorfile>search_2src_2sorter_8c.html</anchorfile>
      <anchor>aa77abfea5f1a9141f650a7a08229b0d0</anchor>
      <arglist>(avg_data *data, int navg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sprint_char_arr.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffplot/src/</path>
    <filename>sprint__char__arr_8c.html</filename>
    <member kind="function">
      <type>char *</type>
      <name>sprint_char_arr</name>
      <anchorfile>sprint__char__arr_8c.html</anchorfile>
      <anchor>acb1a3e9e0423c333ef89e33650974933</anchor>
      <arglist>(char *array, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>station_reduce.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>station__reduce_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>station_reduce</name>
      <anchorfile>station__reduce_8c.html</anchorfile>
      <anchor>aa4b77dba1a2f232aecda09f19ef7fd74</anchor>
      <arglist>(fringearray *fdata, char station, char *source, int expt, char freq)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>statistics.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>statistics_8h.html</filename>
    <class kind="struct">type_statistics</class>
  </compound>
  <compound kind="file">
    <name>stcount_interp.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>stcount__interp_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="ffmath_8h" name="ffmath.h" local="yes" imported="no">ffmath.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EPSILON</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a002b2f4894492820fe708b1b7e7c5e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USB_LCP</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a16af7b253440dadd46a80a4b9fddba4da91ba7af94ab5a8dbb2dc50c8acde43a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LSB_LCP</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a16af7b253440dadd46a80a4b9fddba4da6231d0bbae5bfda8e3df650f80c83868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USB_RCP</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a16af7b253440dadd46a80a4b9fddba4da894f7f7e4071fb0004f6df287c327cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LSB_RCP</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a16af7b253440dadd46a80a4b9fddba4da035332b64e2edfc8ff4de73e1bef6c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a16af7b253440dadd46a80a4b9fddba4dac157bdf0b85a40d2619cbc8bc1ae5fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCP</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>aba01db17f4a2bfbc3db60dc172972a25a798d72079d6874d52a6225c03115671f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>aba01db17f4a2bfbc3db60dc172972a25a7718502dc7776a40ebe50ba5ae1d80f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_time</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a77dcc1b9d66a0e54734515085d9a4915</anchor>
      <arglist>(double *, double *, double *, double *, double *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stcount_interp</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a44f2b9ffc84f95cae40897b2afb19f29</anchor>
      <arglist>(struct mk4_sdata *sd1, struct mk4_sdata *sd2, struct type_param *param, struct freq_corel *corel, struct type_status *status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap_doubles</name>
      <anchorfile>stcount__interp_8c.html</anchorfile>
      <anchor>a9dea56e8cdafe22302f10360d18b6b51</anchor>
      <arglist>(double *a, double *b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strip_bline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/src/</path>
    <filename>strip__bline_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="adump_8h" name="adump.h" local="yes" imported="no">adump.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>strip_bline</name>
      <anchorfile>strip__bline_8c.html</anchorfile>
      <anchor>af8b0584d5c4ae6733001046c9e9b1e66</anchor>
      <arglist>(char *line, struct flist fields[], char *outline)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strip_text.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>strip__text_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>strip_text</name>
      <anchorfile>strip__text_8c.html</anchorfile>
      <anchor>a4f6b251bb7711a67d53a94c5da1c8ff3</anchor>
      <arglist>(char *first, char *last, char *str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strip_tline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/src/</path>
    <filename>strip__tline_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="adump_8h" name="adump.h" local="yes" imported="no">adump.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>strip_tline</name>
      <anchorfile>strip__tline_8c.html</anchorfile>
      <anchor>a37bff81ce640f560028f0820aabaea97</anchor>
      <arglist>(char *line, struct flist fields[], char *outline)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sub-util-root_id.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>sub-util-root__id_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>char *</type>
      <name>root_id</name>
      <anchorfile>sub-util-root__id_8c.html</anchorfile>
      <anchor>a2650eeb9c31ded3b85b02b679f0d70bb</anchor>
      <arglist>(int year, int day, int hour, int min, int sec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summ_corel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>summ__corel_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>summ_corel</name>
      <anchorfile>summ__corel_8c.html</anchorfile>
      <anchor>a2899b43c2aaceaae4bbe0cc7bc1b75f7</anchor>
      <arglist>(corelarray *cdata, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summ_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>summ__data_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>summ_data</name>
      <anchorfile>summ__data_8c.html</anchorfile>
      <anchor>a3a95935dfbcd267a3b43b565347135b3</anchor>
      <arglist>(esum *data, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summ_fringe.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>summ__fringe_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>summ_fringe</name>
      <anchorfile>summ__fringe_8c.html</anchorfile>
      <anchor>a84d15683e448b49f60309f9f4b8c0584</anchor>
      <arglist>(esum *data, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summ_quad.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>summ__quad_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>summ_quad</name>
      <anchorfile>summ__quad_8c.html</anchorfile>
      <anchor>a809a6807fd01083b43088eeb5c8c3de8</anchor>
      <arglist>(quadarray *qdata, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summ_root.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>summ__root_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>summ_root</name>
      <anchorfile>summ__root_8c.html</anchorfile>
      <anchor>a7f412408b9957f81e3f4bd19fa946abb</anchor>
      <arglist>(rootarray *rdata, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summ_triangle.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>summ__triangle_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>summ_triangle</name>
      <anchorfile>summ__triangle_8c.html</anchorfile>
      <anchor>a78f8c486bfd6d77837d24cdbf6e704c1</anchor>
      <arglist>(trianglearray *tdata, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summarize_mk4fringe.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/alist/src/</path>
    <filename>summarize__mk4fringe_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>summarize_mk4fringe</name>
      <anchorfile>summarize__mk4fringe_8c.html</anchorfile>
      <anchor>aa4be0122d6bbe5d2da220016a21c7622</anchor>
      <arglist>(struct mk4_fringe *fr, fringesum *fsumm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>summary.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>summary_8h.html</filename>
    <includes id="sizelimits_8h" name="sizelimits.h" local="yes" imported="no">sizelimits.h</includes>
    <class kind="struct">datasumm</class>
    <class kind="struct">frqexp</class>
    <class kind="struct">source_info</class>
    <class kind="struct">srcsum</class>
    <member kind="define">
      <type>#define</type>
      <name>BASELINE</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a7f75e0f0b14506d1bb91cdcb6516daed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLOSURE</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>adcf0fd0fef3bbcb053ef7d2481dd5ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NONE</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a655c84af1b0034986ff56e12e84f983d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUAD</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>ac7252422b84a98d876dbc47ed5c0b5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STANDARD</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a0b8ca8ad62b88c01b639bad62eafcbf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRIANGLE</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>af97853127c8cc9ad9180c05295c809b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a1c6d5de492ac61ad29aec7aa9a436bbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>svex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>svex_8h.html</filename>
    <class kind="struct">pcm_cfg_struct</class>
    <class kind="struct">pcm_tab_struct</class>
    <class kind="struct">SU_chan_out_struct</class>
    <class kind="struct">svex_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>PCAL_COS</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a9f225beae8bb7339f08b51563565e7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PCAL_SIN</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>ae448ab2496e6c525a444daecb216048d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>svex_info.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>svex__info_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>struct svex_struct *</type>
      <name>svex_info</name>
      <anchorfile>svex__info_8c.html</anchorfile>
      <anchor>a160bed87080fbac0e2928f77df04a75a</anchor>
      <arglist>(char *key)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>svex_del_list</name>
      <anchorfile>svex__info_8c.html</anchorfile>
      <anchor>a0da4bc103cfc38b0d78578f53977abd7</anchor>
      <arglist>[2048]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>swabr.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>swabr_8c.html</filename>
    <member kind="function">
      <type>double</type>
      <name>double_reverse</name>
      <anchorfile>swabr_8c.html</anchorfile>
      <anchor>acc5f36aa72d0ef387e159b6268742899</anchor>
      <arglist>(double j)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>float_reverse</name>
      <anchorfile>swabr_8c.html</anchorfile>
      <anchor>a474773db45a3dd93f68c264eab55dfd5</anchor>
      <arglist>(float j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>int_reverse</name>
      <anchorfile>swabr_8c.html</anchorfile>
      <anchor>ac9dc922d0fa1fc0f0cf90b26df5887de</anchor>
      <arglist>(int j)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>long_reverse</name>
      <anchorfile>swabr_8c.html</anchorfile>
      <anchor>a6b31b1910b856ac0aa1a9a713a2edc96</anchor>
      <arglist>(long j)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>short_reverse</name>
      <anchorfile>swabr_8c.html</anchorfile>
      <anchor>a7d6165690824de4b46077b36a6d58ed0</anchor>
      <arglist>(short i)</arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>unsig_reverse</name>
      <anchorfile>swabr_8c.html</anchorfile>
      <anchor>a5d6fa489f9bec0f4b19d3af37a2d3fb8</anchor>
      <arglist>(unsigned short i)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>swap.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>swap_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>void</type>
      <name>double_reverse</name>
      <anchorfile>swap_8c.html</anchorfile>
      <anchor>ab9ff8d1a08aed7c522ab837dea98ddce</anchor>
      <arglist>(double *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>float_reverse</name>
      <anchorfile>swap_8c.html</anchorfile>
      <anchor>acbec8b77482df566de99a90d31e85cca</anchor>
      <arglist>(float *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>int_reverse</name>
      <anchorfile>swap_8c.html</anchorfile>
      <anchor>aa30104742ce771c2aa0228565ef3834b</anchor>
      <arglist>(int *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>long_reverse</name>
      <anchorfile>swap_8c.html</anchorfile>
      <anchor>aa5d6e39d27e781d51659cd842c3ba67b</anchor>
      <arglist>(long *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>short_reverse</name>
      <anchorfile>swap_8c.html</anchorfile>
      <anchor>a23ebb1f39d59b46af65d5a401d886ab7</anchor>
      <arglist>(short *i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uint_reverse</name>
      <anchorfile>swap_8c.html</anchorfile>
      <anchor>ac126ddc6a1f9940b5d4e207dd0ee7ae5</anchor>
      <arglist>(unsigned int *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsig_reverse</name>
      <anchorfile>swap_8c.html</anchorfile>
      <anchor>aca6b5a9fbf7dff0cb36632c815a0d531</anchor>
      <arglist>(unsigned short *i)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>symbol_key.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>symbol__key_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>symbol_key</name>
      <anchorfile>symbol__key_8c.html</anchorfile>
      <anchor>a911d6cf5f9b262c57ac208fd24cc61a8</anchor>
      <arglist>(struct frqexp *fqex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>syntax.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>syntax_8c.html</filename>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>copyright1</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>ad632ada9b7bfee18cb06d939142dcaf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>copyright2</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>abd7fb66fa3941f673b58a8f7a22b9a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>copyright3</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>af7a8c9d6e66e5ff6f508eaaf094039a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>copyright4</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>a8f012aff4204f569b8a83e491fa669e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>copyright5</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>a8c2203df646810eae73a778c323d47fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>syntax</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>ae8a372677b7b359afe55578641d560f8</anchor>
      <arglist>(char *headurl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>version</name>
      <anchorfile>syntax_8c.html</anchorfile>
      <anchor>a307424ac70f8c1d32a2e307c5040e445</anchor>
      <arglist>(char *headurl)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>T1.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>T1_8h.html</filename>
    <class kind="struct">T1_R130</class>
    <class kind="struct">T1_R131</class>
    <class kind="struct">T1_R141</class>
    <class kind="struct">T1_R142</class>
    <class kind="struct">T1_R143</class>
    <class kind="struct">T1_R144</class>
    <class kind="struct">T1_R150</class>
    <class kind="struct">T1_RecHdr</class>
    <member kind="define">
      <type>#define</type>
      <name>T1_HEAD</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ae009c5f7a088139c0f7072d3e68deaae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T1_REF_CHN</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aeb24e1ce84c9a92831f7c9e3345804b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T1_REM_CHN</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>af82281722c263f7ca54fe58cf960eb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T1_TAIL</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a222b7ed91aab94e69005e4e2a7b8cb0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T1_UNDEF</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a93c146d756cc995057b9451c68c32162</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_R130</type>
      <name>T1_R130</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a4fc8bb172da124cd557509cbaa94be9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_R131</type>
      <name>T1_R131</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a4e7b42d06ffd96ed0046eb022f4dfa53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_R141</type>
      <name>T1_R141</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a3366777beebdecfe01dc3be52df2c76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_R142</type>
      <name>T1_R142</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a9c85e542f6585c0146a28863097b0685</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_R143</type>
      <name>T1_R143</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a8b3154ba4b6e0a2020d3838283755f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_R144</type>
      <name>T1_R144</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a478a844cd5f150200ea572fe5e6dd337</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_R150</type>
      <name>T1_R150</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a5217b7d3a8c4f995c378265d41fc9e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct T1_RecHdr</type>
      <name>T1_RecHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a19e7461ccbca43cacf54068129ca6558</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tapeDB.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/legacy/CorAsc2/include/</path>
    <filename>tapeDB_8h.html</filename>
    <class kind="struct">head_pos</class>
    <class kind="struct">tapeDB</class>
    <member kind="define">
      <type>#define</type>
      <name>ABS</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>ae2f08dc603ae93c402abd918ba4e23e1</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_INDEX</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>aded4012e77ec37914723bec40a225e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NAMESIZE</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a2381a4931877d06910d2880b163221a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PASS</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>aedf6faca00e1d03c4ff920ccd5f5440c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_TAPE_LENGTH</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>ab87d93dd7c87916582c154f7d0b5217b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POSITION_TOLERENCE</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a8e081233a9c419bdb72194ab4530762b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAPEDB_VERSION</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a74e1aebb8dddadc1b2b9f06ee4cc654c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAPEINFO</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a0d5f78037835fdbb5d223ee585300be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tapehead</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a6f8601e3bac1c36e540db08753811c13</anchor>
      <arglist>(int thisSU, short Ondx, struct head_pos **ptape_footage, struct head_pos **pphintsFootage)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tarray_index.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>tarray__index_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>tarray_index</name>
      <anchorfile>tarray__index_8c.html</anchorfile>
      <anchor>a7a5513a490a11aa3a712ee45bc055480</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tempo.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>tempo_8h.html</filename>
    <class kind="struct">plot_info</class>
    <class kind="struct">plot_points</class>
    <class kind="struct">plot_ptqual</class>
    <member kind="define">
      <type>#define</type>
      <name>ALL_PLOT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ae577083c340e3eeb8e470db7e9a26b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ANY_PLOT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ab2454f0476e6bba17385e4f70dc805f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_AMPLITUDE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a5914319d5b1088581e873c3bf970b354</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_AZIMUTH</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ab9af8dcf6e47f32ef66f500207c5ba27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CAMP</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ae3f32089ab1e014f37be638131127944</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CMBDELAY</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ae6c8c1c55abb7ca0172b4f2a5c227ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CPHASE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a67cac0a02b8a8bdaddd347a0fec6731b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CRATE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a0317630cea3feebe19b610c8877d234e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_CSBDELAY</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a742efff2115484d984c8806954244a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_DRATE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>aebc89bbf430a8a33931aa81adfa53e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_ELEVATION</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ae93d710b31d8a241a42b3e8bc63d2754</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_ERRORATE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a8897e6c8c6460afe22c035f1bf85bf1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_MBDELAY</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a9458971f1ca0cbaabe7d5912e27b84e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_NCOTIME</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a6c7e12a1c358567b9032f51df5c31a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PARAMETER</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a0b72a00a7a8fcd0170f38461247d45b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PCAL_AMP</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a138f55b57a40083403e72238e031ba9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PCAL_DIFF</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a75fbf6b3eb80adfd581f55ea6120fc2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PCAL_PHASE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ac00e70455c50a4fc8009e8511610294a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_PHASE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a1edb9b223382998ac999f5d56238b84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_SBDELAY</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a5d96defa5a2a49ecee3a0325f079c1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_SCOTIME</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ac4b932d49910b743dbf2e6e77dcdbcb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_SNR</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a43da4ecc269084a8cc0738629769197f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_TIMETAG</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a663ea2cbce93fa99b869b8013b8c0ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_U</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ac25dea6eb1474eb2784775fffe8f470d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_UVDIST</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a643d170d72607566330164dffb5bf209</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AX_V</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a247ee22facef524aa232c7b79eec55ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASELINE_PLOT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ab8ed3b316b65f7283ecee60f92c97cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ad4e81dc193f022145921478b20fee1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_AXIS</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ad1dbe0c5d83ed18469c1362d4efdf88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NSYMBOL</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a3bf9baefaee67b0b441d0524a5fcba4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PQ_BAD</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>aba428f09d48079e50fa27ef70ef7be2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PQ_GOOD</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>aa601bd24419a49e82aefff66697b97e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PQ_SUSPECT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a204632786b6b92c3fa630c46fed7b123</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUAD_PLOT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>addd3200f648cbefaab99bfe55a3f0615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REFERENCE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a62a0f8a0b822f31ff84bc8252b33e7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REMOTE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a62ca51b78468397b2ef98ee55a5e6e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOURCE_NOSPLIT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a06799ae81acde5dcd898c3717f2eea86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOURCE_SPLIT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>adfdad1a86f7ab215a8173be4ba4d634e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATION_PLOT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>adb2b4ddf9bdb685de66db8178552f875</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRIANGLE_PLOT</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>afc1b383eb87887d8c5de0fe4ecb9104c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Y_MULTIPLE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a275506c6ee8302d1e81f963e96d77ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Y_SINGLE</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a13fbc120586392dfebf6c1944dfcc24a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestMultiObjectStreaming.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>TestMultiObjectStreaming_8cc.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__ScalarContainer_8hh" name="MHO_ScalarContainer.hh" local="yes" imported="no">MHO_ScalarContainer.hh</includes>
    <includes id="MHO__TableContainer_8hh" name="MHO_TableContainer.hh" local="yes" imported="no">MHO_TableContainer.hh</includes>
    <includes id="MHO__VectorContainer_8hh" name="MHO_VectorContainer.hh" local="yes" imported="no">MHO_VectorContainer.hh</includes>
    <includes id="MHO__BinaryFileInterface_8hh" name="MHO_BinaryFileInterface.hh" local="yes" imported="no">MHO_BinaryFileInterface.hh</includes>
    <includes id="MHO__BinaryFileStreamer_8hh" name="MHO_BinaryFileStreamer.hh" local="yes" imported="no">MHO_BinaryFileStreamer.hh</includes>
    <includes id="MHO__ClassIdentityMap_8hh" name="MHO_ClassIdentityMap.hh" local="yes" imported="no">MHO_ClassIdentityMap.hh</includes>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>NDIM</name>
      <anchorfile>TestMultiObjectStreaming_8cc.html</anchorfile>
      <anchor>a2b1fd2d28c6a7d4a3f7027cc1b6466f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XDIM</name>
      <anchorfile>TestMultiObjectStreaming_8cc.html</anchorfile>
      <anchor>a9b5f0dd7de3d5e0b8c92d1fc8a93e9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YDIM</name>
      <anchorfile>TestMultiObjectStreaming_8cc.html</anchorfile>
      <anchor>a4421248f1ebb5b043a88a19be05a94a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZDIM</name>
      <anchorfile>TestMultiObjectStreaming_8cc.html</anchorfile>
      <anchor>a861a60a1343e7160913250f81b1b7ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; MHO_Axis&lt; double &gt;, MHO_Axis&lt; double &gt;, MHO_Axis&lt; std::string &gt; &gt;</type>
      <name>axis_pack_test</name>
      <anchorfile>TestMultiObjectStreaming_8cc.html</anchorfile>
      <anchor>a4558cb5559c7d4d5855e319600faf171</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>TestMultiObjectStreaming_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestPCalExtraction.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>TestPCalExtraction_8cc.html</filename>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__Snapshot_8hh" name="MHO_Snapshot.hh" local="yes" imported="no">MHO_Snapshot.hh</includes>
    <includes id="MHO__ContainerStore_8hh" name="MHO_ContainerStore.hh" local="yes" imported="no">MHO_ContainerStore.hh</includes>
    <includes id="MHO__JSONHeaderWrapper_8hh" name="MHO_JSONHeaderWrapper.hh" local="yes" imported="no">MHO_JSONHeaderWrapper.hh</includes>
    <includes id="MHO__OperatorToolbox_8hh" name="MHO_OperatorToolbox.hh" local="yes" imported="no">MHO_OperatorToolbox.hh</includes>
    <includes id="MHO__ParameterStore_8hh" name="MHO_ParameterStore.hh" local="yes" imported="no">MHO_ParameterStore.hh</includes>
    <includes id="MHO__ScanDataStore_8hh" name="MHO_ScanDataStore.hh" local="yes" imported="no">MHO_ScanDataStore.hh</includes>
    <includes id="MHO__OperatorBuilderManager_8hh" name="MHO_OperatorBuilderManager.hh" local="yes" imported="no">MHO_OperatorBuilderManager.hh</includes>
    <includes id="MHO__ParameterConfigurator_8hh" name="MHO_ParameterConfigurator.hh" local="yes" imported="no">MHO_ParameterConfigurator.hh</includes>
    <includes id="MHO__ParameterManager_8hh" name="MHO_ParameterManager.hh" local="yes" imported="no">MHO_ParameterManager.hh</includes>
    <includes id="MHO__MathUtilities_8hh" name="MHO_MathUtilities.hh" local="yes" imported="no">MHO_MathUtilities.hh</includes>
    <includes id="MHO__VexInfoExtractor_8hh" name="MHO_VexInfoExtractor.hh" local="yes" imported="no">MHO_VexInfoExtractor.hh</includes>
    <includes id="MHO__BasicFringeDataConfiguration_8hh" name="MHO_BasicFringeDataConfiguration.hh" local="yes" imported="no">MHO_BasicFringeDataConfiguration.hh</includes>
    <includes id="MHO__MultitonePhaseCorrection_8hh" name="MHO_MultitonePhaseCorrection.hh" local="yes" imported="no">MHO_MultitonePhaseCorrection.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>TestPCalExtraction_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestSignalFFT.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Applications/</path>
    <filename>TestSignalFFT_8cc.html</filename>
    <includes id="MHO__ContainerDefinitions_8hh" name="MHO_ContainerDefinitions.hh" local="yes" imported="no">MHO_ContainerDefinitions.hh</includes>
    <includes id="MHO__GaussianWhiteNoiseSignal_8hh" name="MHO_GaussianWhiteNoiseSignal.hh" local="yes" imported="no">MHO_GaussianWhiteNoiseSignal.hh</includes>
    <includes id="MHO__SingleToneSignal_8hh" name="MHO_SingleToneSignal.hh" local="yes" imported="no">MHO_SingleToneSignal.hh</includes>
    <includes id="MHO__FastFourierTransform_8hh" name="MHO_FastFourierTransform.hh" local="yes" imported="no">MHO_FastFourierTransform.hh</includes>
    <includes id="MHO__MultidimensionalFastFourierTransform_8hh" name="MHO_MultidimensionalFastFourierTransform.hh" local="yes" imported="no">MHO_MultidimensionalFastFourierTransform.hh</includes>
    <includes id="MHO__CyclicRotator_8hh" name="MHO_CyclicRotator.hh" local="yes" imported="no">MHO_CyclicRotator.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>FFT_TYPE</name>
      <anchorfile>TestSignalFFT_8cc.html</anchorfile>
      <anchor>a1fd3227cb2eeb8b3668d0012823a0d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; ax_type &gt;</type>
      <name>ax_pack</name>
      <anchorfile>TestSignalFFT_8cc.html</anchorfile>
      <anchor>abfe95c9781d2af9b8feeab33f0becb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>ax_type</name>
      <anchorfile>TestSignalFFT_8cc.html</anchorfile>
      <anchor>a77977fba87aed2a264f4640ea2c78992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; elem_type, ax_pack &gt;</type>
      <name>data_type</name>
      <anchorfile>TestSignalFFT_8cc.html</anchorfile>
      <anchor>ac653022bbe259a24e5a412a3ffff0e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>elem_type</name>
      <anchorfile>TestSignalFFT_8cc.html</anchorfile>
      <anchor>a265ac87de0ece225a208ced3007f6f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>TestSignalFFT_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestVexStripper.cc</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/DiFXInterface/applications/</path>
    <filename>TestVexStripper_8cc.html</filename>
    <includes id="MHO__DirectoryInterface_8hh" name="MHO_DirectoryInterface.hh" local="yes" imported="no">MHO_DirectoryInterface.hh</includes>
    <includes id="MHO__Message_8hh" name="MHO_Message.hh" local="yes" imported="no">MHO_Message.hh</includes>
    <includes id="MHO__DiFXInterface_8hh" name="MHO_DiFXInterface.hh" local="yes" imported="no">MHO_DiFXInterface.hh</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>TestVexStripper_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tfilter.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>tfilter_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>QUICK</name>
      <anchorfile>tfilter_8c.html</anchorfile>
      <anchor>afdef56a4fa5a5d34969eb30aa2bfef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLOW</name>
      <anchorfile>tfilter_8c.html</anchorfile>
      <anchor>a5da43425fff36347c69fc3c090e42c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tfilter</name>
      <anchorfile>tfilter_8c.html</anchorfile>
      <anchor>a23dced85a80da3fab5576d2a3f57125d</anchor>
      <arglist>(trianglearray *tdatum, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>time_axis.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>time__axis_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="function">
      <type>void</type>
      <name>time_axis</name>
      <anchorfile>time__axis_8c.html</anchorfile>
      <anchor>a15f4ce0e764247234316ed3eacb55e1b</anchor>
      <arglist>(struct plot_info *pd, struct frqexp fqex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>time_float_type.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/misc/time/</path>
    <filename>time__float__type_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>HLDL</name>
      <anchorfile>time__float__type_8h.html</anchorfile>
      <anchor>add6b4ba57f16197f64d1212d4fec2f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>HTLdbl</name>
      <anchorfile>time__float__type_8h.html</anchorfile>
      <anchor>af21c891154c6537609687b864f8e9949</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>time_range.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>time__range_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>time_range</name>
      <anchorfile>time__range_8c.html</anchorfile>
      <anchor>a0adc6eb02493f3754a6ed34a1e395a0d</anchor>
      <arglist>(struct scan_struct *ovex, struct station_struct *stn1, struct station_struct *stn2, struct mk4_corel *cdata, struct type_param *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>time_to_double.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>time__to__double_8c.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>double</type>
      <name>time_to_double</name>
      <anchorfile>time__to__double_8c.html</anchorfile>
      <anchor>a0a65a6f3ae1fd8358252d1e53bcfa0de</anchor>
      <arglist>(struct date mk4_date)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>time_to_int.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/</path>
    <filename>time__to__int_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>time_to_int</name>
      <anchorfile>time__to__int_8c.html</anchorfile>
      <anchor>a8218926d614ebc075091f2a82a2c4a02</anchor>
      <arglist>(int year, int day, int hour, int min, int sec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>triangle_avg.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/average/src/</path>
    <filename>triangle__avg_8c.html</filename>
    <includes id="average_8h" name="average.h" local="yes" imported="no">average.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>triangle_avg</name>
      <anchorfile>triangle__avg_8c.html</anchorfile>
      <anchor>a6ed18ac19b89ee85c581465f727e13d1</anchor>
      <arglist>(seg_data *data, tbsumm *tbsum, struct config conf, FILE *fpout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>triangle_value.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>triangle__value_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>triangle_value</name>
      <anchorfile>triangle__value_8c.html</anchorfile>
      <anchor>a5078d4e0f175e7756a5b78507b52599d</anchor>
      <arglist>(int index, trianglearray *ta, int toffset, float *value, float *errh, float *errl)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tricheck.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>tricheck_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>tricheck</name>
      <anchorfile>tricheck_8c.html</anchorfile>
      <anchor>add7b3306235b39bdf6f1211aed6e3a50</anchor>
      <arglist>(trianglesum *datum, char *triangle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>trngl_present.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>trngl__present_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>trngl__present_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>trngl__present_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>trngl_present</name>
      <anchorfile>trngl__present_8c.html</anchorfile>
      <anchor>a57973ea7d6050b35abc7acaa5157f038</anchor>
      <arglist>(char triangle[4], struct ibaselist *blist, int n, int indices[3])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_000.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__000_8h.html</filename>
    <class kind="struct">type_000</class>
    <member kind="define">
      <type>#define</type>
      <name>T000_VERSION</name>
      <anchorfile>type__000_8h.html</anchorfile>
      <anchor>ad05bf966d722ac2d6f67569e2b428090</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_100.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__100_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_100</class>
    <member kind="define">
      <type>#define</type>
      <name>T100_VERSION</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a48d3ee8f5e38e770e051c19c1e1d49ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_100_v0</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a3046471519bfa0eeca1c8454641b3e14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_101.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__101_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_101</class>
    <member kind="define">
      <type>#define</type>
      <name>T101_VERSION</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>ad74adfb170743cc848deac63d9b421ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_101_v0</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a19ebfd81ccd82626e04184e7f3386512</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_110.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__110_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">raw_data</class>
    <class kind="struct">type_110</class>
    <member kind="define">
      <type>#define</type>
      <name>T110_VERSION</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>ae6ac35985427bd4af0138fc3cf12acab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_110_v0</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>adc5220ffc89b2965b443e6ffaea935d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_120.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__120_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">auto_global</class>
    <class kind="struct">auto_per_lag</class>
    <class kind="struct">counts_global</class>
    <class kind="struct">counts_per_lag</class>
    <class kind="union">flag_wgt</class>
    <class kind="union">lag_data</class>
    <class kind="struct">lag_tag</class>
    <class kind="struct">spectral</class>
    <class kind="struct">type_120</class>
    <member kind="define">
      <type>#define</type>
      <name>AUTO_GLOBAL</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a9eb2f0cc8e24318e5f7f81338c587b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AUTO_PER_LAG</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ad084604b1516ce47e4ad9df3b3457954</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COUNTS_GLOBAL</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ac6ba3d669c6132773b1d0b5116d8baf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COUNTS_PER_LAG</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ab2e1072a1d686c0ce48a93208bb0355b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_DLY_3_CARRY</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a27f8dc8355a25fe386ccfe220755eb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_MISSED_AP_MIDS</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a74f77b8ad8a83314b57fdb26f7128d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_MISSED_CF_SERV</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a59c2fffb36d474761cbea7421680a844</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_BADD</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a56d0fa9b5e44589a37ecbb9ba76b760b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_CFNUM</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a70061248d3ecbf436eab2d76c0c32cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_CHKSUM</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>afbccc7fddc174ea73c614ea06e2df80f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_CHN_ID</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ac8d9f8885a330ab22a7245b863eea234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_LINK</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>acd6ec471e980b958d7ca7b35603b51c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_SU_ID</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a5d95619292011a0d42086b849ec493d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_SYNC</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a6f2e58e3cbee5ba4d6b184a72a3c317d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REF_ZERO</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ae76c0fb65a2b6ca842c4c6e43f42687d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_BADD</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>aaf8a39078db2b182a4d5b23572fca0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_CFNUM</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>adeaf6ba3ac125c23f310dbbe31148ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_CHKSUM</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>aca1b0d142b43efbe1d1e60a951fc99bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_CHN_ID</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>aaef5a6f66851c2b7f96d6a189f33b6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_LINK</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a87611eabd18ee86cb7c35ed9bb04add7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_SU_ID</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a225a47471febf4c7b4ec996a59d1a903</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_SYNC</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a98da084c2b1b20629799ba8ddfe174ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_REM_ZERO</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a315d19552ffa0f747edf4adb6bb7b4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>E_TAP_OVERRUN</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ab19395364601154d8bddb36bbec6d006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPECTRAL</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a00f2a5ffecf52ba2845d20eea76f12e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T120_VERSION</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>afe67932a2db01a75e4bc5d0d0a984639</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_120_v0</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>af29afc30b555fc57a78b0be72b0f878a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_200.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__200_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_200</class>
    <member kind="define">
      <type>#define</type>
      <name>T200_VERSION</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a9e21d7c88db35d3e48438f915c3b396e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_200_v0</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a787cc9f381bfd3fcf88194ae8517c7e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_201.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__201_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_201</class>
    <member kind="define">
      <type>#define</type>
      <name>T201_VERSION</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a73974adbef7f6a3fd1e4f47c33d6c494</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_201_v0</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>ab219ea8cd55bc162b4fded9d15cfdf02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_202.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__202_8h.html</filename>
    <class kind="struct">type_202</class>
    <member kind="define">
      <type>#define</type>
      <name>T202_VERSION</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a23cd241cb87b855916d60217da3f5f1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_202_v0</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>af3f2422f1ceaaa769eba9127d8fe7e5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_203.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__203_8h.html</filename>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <class kind="struct">ch_struct</class>
    <class kind="struct">type_203</class>
    <class kind="struct">type_203_v0</class>
    <member kind="define">
      <type>#define</type>
      <name>type_203_v1</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>ae132ae5909b3279fef10a7f658b8b683</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_204.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__204_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_204</class>
    <member kind="define">
      <type>#define</type>
      <name>T204_VERSION</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>a22ea02ca46484f02c5e964c68c0fd328</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_204_v0</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>a1ab1eaab7c7047c01a396b35479562d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_205.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__205_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_205</class>
    <class kind="struct">type_205.ffit_chan</class>
    <class kind="struct">type_205_v0</class>
    <class kind="struct">type_205_v0.ffit_chan</class>
    <member kind="define">
      <type>#define</type>
      <name>type_205_v1</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>af3cdd1d28e3f48ed2962d4cfb81b0763</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_206.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__206_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">sbweights</class>
    <class kind="struct">sidebands</class>
    <class kind="struct">type_206</class>
    <class kind="struct">type_206_v0</class>
    <class kind="struct">type_206_v1</class>
    <member kind="define">
      <type>#define</type>
      <name>T206_VERSION</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a4b9d5316cfa9ad607082c1c080c65219</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_206_v2</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a12a4a7bc2bc67c14b44c0dc762e63966</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_207.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__207_8h.html</filename>
    <class kind="struct">sbandf</class>
    <class kind="struct">type_207</class>
    <class kind="struct">type_207_v0</class>
    <class kind="struct">type_207_v1</class>
    <member kind="define">
      <type>#define</type>
      <name>T207_VERSION</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ae79ee900630544e27cd24f0f2b538d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_207_v2</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a6def5a2e51170ea4367c7330e3396da1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_208.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__208_8h.html</filename>
    <class kind="struct">type_208</class>
    <class kind="struct">type_208_v0</class>
    <member kind="define">
      <type>#define</type>
      <name>type_208_v1</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>acc9c56d34da7be01b4d7b206567d3573</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_210.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__210_8h.html</filename>
    <class kind="struct">polars</class>
    <class kind="struct">type_210</class>
    <class kind="struct">type_210_v0</class>
    <member kind="define">
      <type>#define</type>
      <name>type_210_v1</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>af5ac93a0376337e1304ecac0bbf4369d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_212.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__212_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">newphasor</class>
    <class kind="struct">phasor</class>
    <class kind="struct">type_212</class>
    <class kind="struct">type_212_v0</class>
    <member kind="define">
      <type>#define</type>
      <name>type_212_v1</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a7a9d2505a70ad55d9f899db5682e750e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_220.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__220_8h.html</filename>
    <class kind="struct">type_220</class>
    <member kind="define">
      <type>#define</type>
      <name>T220_VERSION</name>
      <anchorfile>type__220_8h.html</anchorfile>
      <anchor>a76c38b8c81ba5e7262c4eb4ff9d5bfa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_221.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__221_8h.html</filename>
    <class kind="struct">type_221</class>
    <member kind="define">
      <type>#define</type>
      <name>T221_VERSION</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>af48556c29ae22d87c2ef2ae1fcbc9170</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_221_v0</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>a096b5638f4ce52bce1a405143acb8480</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_222.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__222_8h.html</filename>
    <class kind="struct">type_222</class>
    <member kind="define">
      <type>#define</type>
      <name>T222_VERSION</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>acdb8dd7b6713b9b4168befacf2089bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_222_v0</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>a83a741ddff84d8bf94a6cf2cc4831e03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_230.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__230_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <class kind="struct">type_230</class>
    <member kind="define">
      <type>#define</type>
      <name>T230_VERSION</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>a1b9216714bf132aeb6bb2e127968dd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_230_v0</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>a5397c5f53d015f1fc17aa1b531a50c86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_300.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__300_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_300</class>
    <member kind="define">
      <type>#define</type>
      <name>T300_VERSION</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>adafc03d84dd79817617e076d123e35ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_300_v0</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>a19ec5319f10fdf18ee424d83d77dbd79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_301.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__301_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_301</class>
    <member kind="define">
      <type>#define</type>
      <name>T301_VERSION</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>ab1e4d0d93fc08401780eb54a0be107be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_301_v0</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>a395cd128e7e8f1c6a22b3c5cff768c1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_302.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__302_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_302</class>
    <member kind="define">
      <type>#define</type>
      <name>T302_VERSION</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>ad5f6580738e574fb3c390d39cd4da047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_302_v0</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>a36f1770b2e8f91bb6a99114f026aa467</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_303.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__303_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_303</class>
    <member kind="define">
      <type>#define</type>
      <name>T303_VERSION</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>adaae6872f8644b88fb6c2ba28a7ef862</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_303_v0</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a769a350f1dede3ff601406db3699ec1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_304.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__304_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_304</class>
    <class kind="struct">type_304.trackstats</class>
    <member kind="define">
      <type>#define</type>
      <name>T304_VERSION</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a744f909c68405484170fc88d69109a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_304_v0</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a90a16a8c516d1253c630a9c8af2ae168</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_305.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__305_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_305</class>
    <member kind="define">
      <type>#define</type>
      <name>T305_VERSION</name>
      <anchorfile>type__305_8h.html</anchorfile>
      <anchor>a2d900a9db8dba165839846eb3b162096</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_305_v0</name>
      <anchorfile>type__305_8h.html</anchorfile>
      <anchor>a6c5f2488dc075b46bb301737f657c815</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_306.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__306_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_306</class>
    <class kind="struct">type_306.stcount</class>
    <member kind="define">
      <type>#define</type>
      <name>T306_VERSION</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>ac0fc9a2a00f472b0ebffcc56a32d4962</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_306_v0</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a8ed18f32a1ad2239a771207cced79a88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_307.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__307_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">ChanCount</class>
    <class kind="struct">type_307</class>
    <member kind="define">
      <type>#define</type>
      <name>T307_VERSION</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>afad28cc8c3fdc6f9e8b209edf7ac71d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_307_v0</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a9368b30aceb9e6e53a16ea92f7d9b75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ChanCount</type>
      <name>ChanCount</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a0d5e2a414bbcb6a751124711cb85e603</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_308.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__308_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_308</class>
    <class kind="struct">type_308.pcal</class>
    <member kind="define">
      <type>#define</type>
      <name>T308_VERSION</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a208018ac2439b38170cffe3eaccbb021</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>type_308_v0</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a79e5e15b6ddec03773a554a2058aee18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_309.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/include/</path>
    <filename>type__309_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <class kind="struct">type_309::ch1_tag</class>
    <class kind="struct">type_309_v0::ch_tag</class>
    <class kind="struct">type_309</class>
    <class kind="struct">type_309_v0</class>
    <member kind="define">
      <type>#define</type>
      <name>type_309_v1</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a5efd246d4929dd45900cb58ee57d1e88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_writes.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/include/</path>
    <filename>type__writes_8h.html</filename>
    <member kind="function">
      <type>void</type>
      <name>write_t100</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>aa1588e7b27e9f7a4efe73caecdd7dc6c</anchor>
      <arglist>(struct type_100 *pt100, FILE *fout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_t101</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>a0c831f54166d5d101d7c545c2010ea14</anchor>
      <arglist>(struct type_101 *pt101, FILE *fout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_t120</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>a0d1e65f0cd55cdc5bf1d1c2199ff93ba</anchor>
      <arglist>(struct type_120 *pt120, FILE *fout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_t300</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>abd40046947986cd039d1c7b9384dee75</anchor>
      <arglist>(struct type_300 *pt300, FILE *fout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_t301</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>aba77ae4f419868c50b6460f3abe02263</anchor>
      <arglist>(struct type_301 *pt301, FILE *fout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_t302</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>ae65818a3668903437cc407b1743007a1</anchor>
      <arglist>(struct type_302 *pt302, FILE *fout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_t303</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>a68e39868d3e00dece4b987b0033944d1</anchor>
      <arglist>(struct type_303 *pt303, FILE *fout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_t309</name>
      <anchorfile>type__writes_8h.html</anchorfile>
      <anchor>ae6dab99b615ee70abe07c3bae5dbaaef</anchor>
      <arglist>(struct type_309 *pt309, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>unflag.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>unflag_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="flags_8h" name="flags.h" local="yes" imported="no">flags.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>unflag_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>unflag_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unflag</name>
      <anchorfile>unflag_8c.html</anchorfile>
      <anchor>a92026e53de54312a3fca6a69185c5b30</anchor>
      <arglist>(esum *data, char *arg1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffcore/src/update.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>ffcore_2src_2update_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>ffcore_2src_2update_8c.html</anchorfile>
      <anchor>ac3a9e43abb588194a9c8e04d8a1c5b30</anchor>
      <arglist>(struct type_pass *pass, int mbd_cell, double max_val, int lag, int drate_cell, int flag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ffsearch/src/update.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/</path>
    <filename>ffsearch_2src_2update_8c.html</filename>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>ffsearch_2src_2update_8c.html</anchorfile>
      <anchor>ac3a9e43abb588194a9c8e04d8a1c5b30</anchor>
      <arglist>(struct type_pass *pass, int mbd_cell, double max_val, int lag, int drate_cell, int flag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>update_fqex.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>update__fqex_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>update_fqex</name>
      <anchorfile>update__fqex_8c.html</anchorfile>
      <anchor>aecf01ba1a28cbcbd681b7c2718cfce7d</anchor>
      <arglist>(void *datum, struct datasumm *summ, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>update_sinfo.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>update__sinfo_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>update_sinfo</name>
      <anchorfile>update__sinfo_8c.html</anchorfile>
      <anchor>a61625cb4e5b87315eb0a0bc310b5e347</anchor>
      <arglist>(struct source_info *sinfo, char *source, int nsrc)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>usearray.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/include/</path>
    <filename>usearray_8h.html</filename>
    <class kind="struct">udat</class>
    <class kind="struct">usearray</class>
    <member kind="define">
      <type>#define</type>
      <name>AMBIGUITY</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a275bf953bafebbee9d51f1e994c891d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMPLITUDE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ae2d3a48fb01bbc0fe795724379434d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADSYNC</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a5faf12014e4124f9b15d8276ae0db8fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLOCK_DELAY</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ac6c3071c9b7028c66dbdae2bcc45d5b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COREL_AMP</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a8d783b5430237483e09b17b6d4247950</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COREL_PHASE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a371dcf89108869ab3aa98b2878ada210</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERRATE_REF_LSB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>adb92653eec656d776f854cad13d23877</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERRATE_REF_USB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a8f2c8faa1c74aa275e9e2eb4db73e4e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERRATE_REM_LSB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a5f30b878957d4fe72faa7672577b6fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERRATE_REM_USB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>adcc127827899a05d46fe2027644ac6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IN_ALINE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a720adcb1ca91672af5ceca9d0b3204fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INCOH_AMP_FREQ</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>abe3d7322af23c9c695e4d6027f0af87d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INCOH_AMP_SEG</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a1064c4beba84a1bcf23f4b5b5d38dda5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LENGTH</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a30362161c93e3f1a4ee4c673f535b5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LO_FREQUENCY</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a253b303262412a9c0a5a9b9151e40e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PARMS</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>abc112140dccf35b37370da1791c3d8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MBDELAY_ERROR</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a39403409a6c55380d0b365f1297b1b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MHZ_ARCSEC_EW</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a1225acaf3311bf9c99bf34013f9c0521</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MHZ_ARCSEC_NS</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a7c822c9a4802136f338c1cadcf5cd50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN_MAX_RATIO</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a03c8f6cab2486c159df207ce7b355f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NAP_LSB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>abbaba238eeab12d3de693be044017c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NAP_USB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>acf866a7dc9bb286edf2bcc35ac388f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PCNT_DISCARD</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a9830be11d3a1f1763d8e4693fca368f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PHASE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a8d6360b29483bf26b8fad7441892fb78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PPUPDATE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a50110d9b9e3ce7ca2fd606742193a8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROB_FALSE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a77568134abc263ac2218ae2459469d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROCDATE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>af496bd8f81924a1be8c967aea07382cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QCODE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a10b0a2b7baf0c792b8b6b9828dcf3073</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RATE_ERROR</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a31491cfbb4c2b77e8556ce7d3be98bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_AZIMUTH</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a76258475ea1ee19c26a8ec49680c634f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_DRIVE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ab9d23e5cdfcf6bc72e9c2ce6ad7b59b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_ELEVATION</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a6d6303343626ad4387bf93c0806495a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_FREQUENCY</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ace085f9cf5b86141f41b434f7ffe5567</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_PCAL_AMP</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a0dea9dc58a982e71e52a627c3b2a0088</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_PCAL_DIFF</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>aae3b43a2a6bdbfca8b18d97cf10518ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_PCAL_FREQ</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a7c2b7e69c193c6a3bf6d503fd5ce8814</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_PCAL_PHASE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ac5946dd5b23b917fa8d94e1003dd58de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REF_PCAL_RATE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a8aba3a8d66273c411fe5f7032868edd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_AZIMUTH</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a12ac751d7171b197246f3a58a6476468</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_DRIVE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a3216168458e6a10a9bcb67abba5b3e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_ELEVATION</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a4ee8a7894bd9bcca0a764acc8d15b228</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_PCAL_AMP</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a77c2f1998fc550bb3dba521257a1f0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_PCAL_DIFF</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a4e38178c940771de87f44b15b9f4604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_PCAL_FREQ</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>afc820990f3c5b1dafc14b6728982b2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_PCAL_PHASE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a460aae6509c8179a3c6491cdefec44af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REM_PCAL_RATE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ad162bf6d63b494596e050c6a89d71b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESID_MBD</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ae6e3543fe20f670086297eeac8e5b92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESID_RATE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a7b9bb6d3865e0a59212eadca2865834d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESID_SBD</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>af07f478ea83f5ed73138fbd215588b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SBDELAY_ERROR</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a58596037eb9011816261cf1eaee17622</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNR</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>aef2f5c7bce117abced23a19c721843b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUPPRESS</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>afe7aa227b351b74112d638ac09ced71a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIMETAG</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a556876278437f4f010004077baf96695</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOT_PHASE_MID</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a3a6ef89c8dd4b9f29d3ba5d41f003a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOTAL_EC_PHASE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>aa150696e7740fa0f58e3da8dd8dfe0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOTAL_MBD</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a6c0a2f0b8146a11f8d0e8fd6f6a5c689</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOTAL_PHASE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a5f011be61afcf665f83e46db8eb64fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOTAL_RATE</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a8109e9a71205b4149e5a2a50a39570ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOTAL_SBD_MBD</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a30b6e3599595cad79bd7ab8d034b8df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRKNO_REF_LSB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a0bda96f000e0cd286030afee89cab3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRKNO_REF_USB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a35b046203a0ee9f652b7e54d295531be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRKNO_REM_LSB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a2b3ded0fec31044a361739b47d7e32b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRKNO_REM_USB</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a1e1587aa9612ea22bf69d9de7e28da2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>U</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>affc9cbf86b78292bdb405361761c47f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UTC_CENTRAL</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ac91783f94ff27609bf759bb4eeea4709</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UTC_EPOCH</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>ad11b525ea85f08975aec3b86da870bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>af40a326b23c68a27cebe60f16634a2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPERROR</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>abc4126e3e78510e629a09623a85e1745</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XSLIP</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a71b51370e7b58b33ee39d2d979fc5402</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YPERROR</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a4c3d75c78a526666b31fb53b3aa5d4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YSLIP</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>aa6bad7b88650e0f8f4d8ff0e9079bf56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utility.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/</path>
    <filename>utility_8py.html</filename>
    <class kind="class">vpal::utility::Bar</class>
    <class kind="class">vpal::utility::ContinuousQuantityFilter</class>
    <class kind="class">vpal::utility::DiscreteQuantityFilter</class>
    <namespace>vpal::utility</namespace>
    <member kind="function">
      <type>def</type>
      <name>collect_object_value_pairs</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a1921ca6fab6ed3fbdfa70bef123fbae1</anchor>
      <arglist>(obj_list, value_name1, value_name2, sort_items=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>collect_object_values</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a6afb7feafef0ca9683af2d71566629e4</anchor>
      <arglist>(obj_list, value_name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>combined_filter</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a208c5d5b5ce5c061fd01aa86f31fdda3</anchor>
      <arglist>(object_list, filter_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_2d_pareto_front</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a86249ba53c4b8a4ddb0d447ddbaceada</anchor>
      <arglist>(obj_list, par1, par2, maximize1=True, maximize2=True)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_weighted_mean</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a5b68bc9d46993bb3ca373ed1aa16455a</anchor>
      <arglist>(value_list, weight_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>int_to_time</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a6b9ab8ef7435ed16f682f19d841910ac</anchor>
      <arglist>(t)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>limit_periodic_quantity_to_range</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>ab0471e7d0171966218109dc498039040</anchor>
      <arglist>(value_to_limit, low_value=-180.0, high_value=180.0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mad</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a94cfe0afe8214e533e9b16d3c6e29b4f</anchor>
      <arglist>(value_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>minimum_angular_difference</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a6e3fe15a7b56e13bc0b65dbcc4f8d331</anchor>
      <arglist>(angle1, angle2, low_value=-180.0, high_value=180.0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_table</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a461b1355980cff62196be7bc0fb434d1</anchor>
      <arglist>(table, n_digits=9)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>sort_objects_by_quantity</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a1faccc291e9c42a667920401d0361e87</anchor>
      <arglist>(object_list, quantity_name, reverse_boolean=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>tabulate</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a35a5bb65b84806282e90a45a2007140d</anchor>
      <arglist>(table, headers=None, n_digits=9, padding=3)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>time_to_int</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a03d3cf190b7f5aaad87113ee5281eeb3</anchor>
      <arglist>(year, day, hour, minute, sec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector_mbp_reduce.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/CUDA/CUDAModules/include/</path>
    <filename>vector__mbp__reduce_8h.html</filename>
    <member kind="function">
      <type>__global__ void</type>
      <name>cuda_vector_mbp_reduce</name>
      <anchorfile>vector__mbp__reduce_8h.html</anchorfile>
      <anchor>aafc8451f0fa578e2bfa10d0157857ff1</anchor>
      <arglist>(const float *a, float *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_mbp_reduce</name>
      <anchorfile>vector__mbp__reduce_8h.html</anchorfile>
      <anchor>ab93ab1aaede5d9bf20a1202d49613e98</anchor>
      <arglist>(float *a, float *b, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector_sbp_reduce.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/CUDA/CUDAModules/include/</path>
    <filename>vector__sbp__reduce_8h.html</filename>
    <member kind="function">
      <type>__global__ void</type>
      <name>cuda_vector_sbp_reduce</name>
      <anchorfile>vector__sbp__reduce_8h.html</anchorfile>
      <anchor>a3f2eb84336cc80ff8b9e9c48a1f56d82</anchor>
      <arglist>(const float *a, float *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sbp_reduce</name>
      <anchorfile>vector__sbp__reduce_8h.html</anchorfile>
      <anchor>ae6001327da3398a8cabf5d7c43d51b00</anchor>
      <arglist>(float *a, float *b, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector_sum.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/cpp_src/Plugins/CUDA/CUDAModules/include/</path>
    <filename>vector__sum_8h.html</filename>
    <member kind="function">
      <type>__global__ void</type>
      <name>cuda_vector_add</name>
      <anchorfile>vector__sum_8h.html</anchorfile>
      <anchor>a589f368134d3df6606acf5edc6d51c6a</anchor>
      <arglist>(float *a, float *b, float *c, int length)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>cuda_vector_reduce</name>
      <anchorfile>vector__sum_8h.html</anchorfile>
      <anchor>a568ab8f00b4de8110b7e8b713a469eb7</anchor>
      <arglist>(float *a, float *b, int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reduce</name>
      <anchorfile>vector__sum_8h.html</anchorfile>
      <anchor>a1d1d1417b131d349717a2a6e04ff681f</anchor>
      <arglist>(float *a, float *b, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sum</name>
      <anchorfile>vector__sum_8h.html</anchorfile>
      <anchor>a20730fda85099a23a8d52ae5483e2ff0</anchor>
      <arglist>(float *a, float *b, float *c, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vex.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/include/</path>
    <filename>vex_8h.html</filename>
    <includes id="mk4__typedefs_8h" name="mk4_typedefs.h" local="yes" imported="no">mk4_typedefs.h</includes>
    <includes id="ovex_8h" name="ovex.h" local="yes" imported="no">ovex.h</includes>
    <includes id="cvex_8h" name="cvex.h" local="yes" imported="no">cvex.h</includes>
    <includes id="evex_8h" name="evex.h" local="yes" imported="no">evex.h</includes>
    <includes id="ivex_8h" name="ivex.h" local="yes" imported="no">ivex.h</includes>
    <includes id="svex_8h" name="svex.h" local="yes" imported="no">svex.h</includes>
    <includes id="lvex_8h" name="lvex.h" local="yes" imported="no">lvex.h</includes>
    <class kind="struct">blk_stmt</class>
    <class kind="struct">block</class>
    <class kind="struct">comment</class>
    <class kind="struct">data_value</class>
    <class kind="union">data_value.data</class>
    <class kind="struct">dec</class>
    <class kind="struct">def</class>
    <class kind="struct">def_list</class>
    <class kind="struct">insert</class>
    <class kind="struct">param_val</class>
    <class kind="struct">pval_format</class>
    <class kind="struct">quote</class>
    <class kind="struct">ra</class>
    <class kind="struct">ref</class>
    <class kind="struct">scan</class>
    <class kind="struct">statement</class>
    <class kind="struct">value</class>
    <class kind="struct">vex</class>
    <member kind="define">
      <type>#define</type>
      <name>CVEX</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ab28eba1212cc45676aed3c5d0df9c708</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVEX</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a14a6e242474a6e11e68547a71be18f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IVEX</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a321c4899ba6db96b092195f50e960b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LVEX</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a6b68ff739b6f1ba0e8f1508bd3b89751</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAN</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>accc898f427bcfab8f8554d0683a736de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NAMESIZE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2381a4931877d06910d2880b163221a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PVALSIZE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ad4dd202f83c8cbd5beb1e0cb13534964</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXBLKSTMT</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>af124cf4ecfb7864023c56af0352ad06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXBLOCKS</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a02723c1cf9784c591e45af7bf584f97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXCOMMENTS</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a57b3298118adeb05aa50645eca061e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDEFS</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ade1495fae328049a2bdc3964fb68194b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXNVAL</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a85b9d7fd54434e491a5be68f80409da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXQUOTES</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a991a878975e973b60ba17e0aaaa666de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXREFS</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a3d2e617ac05339a49577d357264e6a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSCANS</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a1887087ae66c3b0782b1465d4725c4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTMT</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a0b17d8fb5405519bf87d0dd208289067</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OPT</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2a551e00af0b8fdb9e65cfe7ef36cde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OVEX</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a8b9f6f52c901b4709442568b2accb0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATEMENT_SIZE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a72491dbbbdb14743d80424248672785c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SVEX</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2fad6bba8b2422a8fac9075ecf183f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_ANGLE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a388fc64ccb8803ab593e87f4944115e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_ANGLE_TIME</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a54556e6ddf8309f80785172456ccebbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_BITDENSITY</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a5d17637f7615cb47dae4b4b4ce04826a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_FLUX</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a71a57be19f24e51a14c9fa88119172f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_FREQ</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a86fa5d8b51230c6c105d58e0b5f5eea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_LENGTH</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a1b2dfce30d2dd62f2c1a7b3782d50d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_LENGTH_TIME</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a3374f318a2b52c4f1a462e1491463a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_NONE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a4066feaf28f2e26b93a1e77589dc77d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_OPTIONAL</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a5740ffb61dc860571cf2b22d7c7e7cb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_SAMPLERATE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a1a71c23ac2762688a5cebfa99f595e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TIME</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a703954deace186f4a0ec8ab725563736</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V_1_0</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a4a91cf67d5a6a5c08ce4dba485d86fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V_1_5</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>addc0318cacc2d2a84fc75a6f42d0dbee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V_ALL</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2ae666fc6c2b4e6752b80b78b93e8b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V_BAD</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a9b0925bbee8c7a93d663fa80b636a14c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_CHAR</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a0a00ab06f8dcecc4f85f74cfbfe9804e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_DEC</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a436d1ca0e3cbbc0cc509f07357571d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_EPOCH</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aab341ab6d3efd0e73f0ebb44303a20d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_INT</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ad26a1ba3500168a26e3d9a1928955912</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_LINK</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a160ee92658504c9b76b1bb2c761594bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_NONE</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a149db70eae9b93a9fd5e5c7a18237e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_RA</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ace1ce06cc3dc46c2bdd48cc7acce877f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VAL_REAL</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a97b727a1b51747dfd03072a2230e48d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WANT_OUTPUT</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a4fcf1c616794a5e7f087fcb4dce04469</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_vex</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a5c70930e7c0869e7a98ad6de05d33744</anchor>
      <arglist>(char *filename, int vextype, char *key, struct vex *vex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vex_init.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>vex__init_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>vex_init</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>ae4b640e4c8b2e89397530e17250ce09a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>struct block</type>
      <name>blist</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a0aae416d17212c7987ebc23ec82d4287</anchor>
      <arglist>[MAXBLOCKS]</arglist>
    </member>
    <member kind="variable">
      <type>struct blk_stmt</type>
      <name>blk_stmts</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>aaae7221a7bbc1d5dd0d034070d852a6d</anchor>
      <arglist>[MAXBLKSTMT]</arglist>
    </member>
    <member kind="variable">
      <type>struct comment</type>
      <name>clist</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a8594490a91b72c26d8d908e12535a8d8</anchor>
      <arglist>[MAXCOMMENTS]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>cvex_src</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a7379568ddddc5b42a316b59dae0ea1b2</anchor>
      <arglist>[32768]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cvex_ver</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a617c300f9f0043938cfaa20af364b2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>defspace</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>af9f29b3fc68418d7a12547aa8b708bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct def</type>
      <name>dlist</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a4c907d8e2e08a38a2e5bbc7ce0f9458c</anchor>
      <arglist>[10][MAXDEFS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>do_output</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a31bc412b76eff2ac8233dd64d98d426b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>evex_src</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a9fcfc96aabdc65f1ea02e128b19b80b0</anchor>
      <arglist>[4096]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>evex_ver</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a3ef96cc4e211c4f62b13f6cb09df8eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ivex_src</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a4ef73fb9b749735d014ae1d089408969</anchor>
      <arglist>[32768]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ivex_ver</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>ab9a98e071229351b1a7c42695f7eb3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lvex_src</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a25f312a01d8a8cb3dab2dff038c7d7db</anchor>
      <arglist>[32768]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lvex_ver</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a41a56a6561c027069b40188684f5a07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nblk_stmt</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>ab600b08de34f0ec8a612f2bbc9e0339d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nblock</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>ab38cbe8ea35cdf17d5e468606462623e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncom</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a30236c67e1f0e59ef05fe357a8bbf6f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndef</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a6c968947235bd23214403bd5836f9ca2</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndefs</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a3d93c6aec3d347a78e5235d85cbbcc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nqot</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a744823d6ac0944dadae51f65e56db230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nref</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>afcd40d59236440801a7c0ca6a607da40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nscan</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>ab78faf2b875525adeecad7dcd9698b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nstmt</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a956b53f277f8fec31a35d5e41d00558a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ovex_src</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a94d469164c87125edf639bdead163923</anchor>
      <arglist>[262144]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ovex_ver</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a1bf3117dad22fb84f5751cf4c130c95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct quote</type>
      <name>qlist</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>af9fa95c2b1c563cd3566aa873667420e</anchor>
      <arglist>[MAXQUOTES]</arglist>
    </member>
    <member kind="variable">
      <type>struct ref</type>
      <name>rlist</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a61dd78d4a52e483fb924389ea1456cea</anchor>
      <arglist>[MAXREFS]</arglist>
    </member>
    <member kind="variable">
      <type>struct scan</type>
      <name>slist</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a7fdacfa7802685f4f97b17a5b1bc0b6c</anchor>
      <arglist>[MAXSCANS]</arglist>
    </member>
    <member kind="variable">
      <type>struct statement *</type>
      <name>stlist</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a676675e7bedf39418220ef667a5fb728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>svex_src</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>ae5ed864aac0679bf25df6cff54c73317</anchor>
      <arglist>[32768]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>svex_ver</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a1b055f1466311b40e13551b3e8b82e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>vexend</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>ae05c735e58d7a521b1a96a6d3aed0cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>vexstart</name>
      <anchorfile>vex__init_8c.html</anchorfile>
      <anchor>a66b36fc17c7b70979f1c225059beded9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vexpy.py</name>
    <path>/home/barrettj/work/projects/hops-git/source/python_src/mk4_module/vexpy/</path>
    <filename>vexpy_8py.html</filename>
    <class kind="class">vexpy::vexpy::chan_struct</class>
    <class kind="class">vexpy::vexpy::scan_struct</class>
    <class kind="class">vexpy::vexpy::source_struct</class>
    <class kind="class">vexpy::vexpy::station_struct</class>
    <class kind="class">vexpy::vexpy::vex</class>
    <class kind="class">vexpy::vexpy::VexStructureBase</class>
    <namespace>vexpy::vexpy</namespace>
    <member kind="function">
      <type>def</type>
      <name>get_file_station_polarizations</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a38010bfd85ff86f2e7a2afc0620847bf</anchor>
      <arglist>(ovex_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_ovex</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ad7b494f37264544407a3b859bd33c496</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_vexpy_library</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a0ee6e3af2a74d4d8a7c59932b4c9412f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ADAPTIVE</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ae6d16f4adc4bf6a658b9bf7ac1e38a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>AZEL</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>aa08b4a29ee18d80c16c74e30f3719efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>B1950</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>af6ca945aee00447d9100998be62c74dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>C_UNDEFINED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ace064cf43a90853fb2011c03cbf621bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>CONTINUOUS</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>af95754fb018057336611488b6c56c689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DUMMY</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ab93ed004bc1343a61c04c70d20fbd94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EARTH_ORBIT</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a75f275632e2b148d15c26481fbf60d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EQUATORIAL</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a4921c30aaf6c4598ed6f5a3694e9600e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>F_UNDEFINED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a620ea5fee8fc6907ac30ee7470fe05ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>FIXED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a8f6627f9a9ace600d1c1e9ba3ac21134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>I_UNDEFINED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ad7942efc8b8803d0d3de0ba54f3231ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>J2000</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ae3cde02edf64c0bd9d527a09f7b2af6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>K4</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a903d6f8273be3f696022b8823de8530d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK3A</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a0e20ae5108503453b43e8d7be3fff66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK4</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>afc83ffb8cf34bb7d7e7fa1ec51032949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK5A</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a02755f7ad1f5fdd1154a453641750b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK5B</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ade130ae34870c2cdac3f61fd1c759843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAX_CHAN</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a39b3bdcff58f5ce76a63bc333bd3a159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OFF</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a3a0552e2ef5c41cf4bedb5b9581af729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ON</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a0eaaa7c814f1dec900a4e7ef5acdfbe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OVEX</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a8cc799d63c865b901adbcd117b71ce95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>QUASAR</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ab1ebb40125c9bb7a08c6b6c5ec454090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>S2</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>adc0eaad0b6494761195a1f2c2a6f5821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SATELLITE</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a61ff517db311b1fd99d465c76ac39d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>STAR</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ad3ea39acaa7c8488a86c09393579dd31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>START_STOP</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>acf7e3cfcc84eed5509b591cda07b8034</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>VLBA</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a79993afd8ea5ac8ee2c11b310420d802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>VLBAG</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>af5c6db44720d3efa3d37a50c7ee4be80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>X_YEW</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>acb07f2fbb9533259873c39738992981c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>X_YNS</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a475237a6d639f8cdc80109b1467f2319</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vrot.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>vrot_8c.html</filename>
    <includes id="hops__complex_8h" name="hops_complex.h" local="yes" imported="no">hops_complex.h</includes>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="param__struct_8h" name="param_struct.h" local="yes" imported="no">param_struct.h</includes>
    <includes id="pass__struct_8h" name="pass_struct.h" local="yes" imported="no">pass_struct.h</includes>
    <member kind="function">
      <type>hops_complex</type>
      <name>vrot</name>
      <anchorfile>vrot_8c.html</anchorfile>
      <anchor>ab90c5aa4be6dc5f7c2fa3ed39dafe65d</anchor>
      <arglist>(int ap, double dr, double mbd, int fr, int sb, struct type_pass *pass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wait_for_write_lock.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/</path>
    <filename>wait__for__write__lock_8c.html</filename>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <includes id="msg_8h" name="msg.h" local="yes" imported="no">msg.h</includes>
    <includes id="write__lock__mechanism_8h" name="write_lock_mechanism.h" local="yes" imported="no">write_lock_mechanism.h</includes>
    <member kind="function">
      <type>int</type>
      <name>at_front</name>
      <anchorfile>wait__for__write__lock_8c.html</anchorfile>
      <anchor>a5e97e849e97d40bc156ee97d71c60e53</anchor>
      <arglist>(char *rootname, char *lockfile_name, int cand_seq_no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_write_lock</name>
      <anchorfile>wait__for__write__lock_8c.html</anchorfile>
      <anchor>ab340d44e85ff71dfe3a984c9b687b6bb</anchor>
      <arglist>(char *rootname, char *lockfile_name, struct fileset *fset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_csumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>write__csumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_csumm</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>ac38c3db277e07b94bb7b5f707a643af7</anchor>
      <arglist>(corelsum *data, FILE *fp)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cformat</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>a3e8cf2d63a06968666aea0338fa90a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cformat_v2</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>ae109fbd6e94646b2aeedb707693bdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cformat_v3</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>ab631435aa2a35fe57c68fafff7c3a017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cformat_v4</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>a0c9ed19983a89bf07a65d60db0667a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cformat_v5</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>a8afe2d26a8dd5edb3e77c23692ba2867</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cformat_v6</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>a04e60ddcc978fd1b64f8a298d836f2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>extras</name>
      <anchorfile>write__csumm_8c.html</anchorfile>
      <anchor>a3adfe2df247f0ca7d4d7d781c3b13929</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_data.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__data_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="sort_8h" name="sort.h" local="yes" imported="no">sort.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_data</name>
      <anchorfile>write__data_8c.html</anchorfile>
      <anchor>ac398eecf661cfe81fabc266bf7e3c847</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_err.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>write__err_8c.html</filename>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_err</name>
      <anchorfile>write__err_8c.html</anchorfile>
      <anchor>a080c03483e97ae5c31f014a0a0d9a88d</anchor>
      <arglist>(FILE *fp, char *message)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_families.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__families_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="sort_8h" name="sort.h" local="yes" imported="no">sort.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_families</name>
      <anchorfile>write__families_8c.html</anchorfile>
      <anchor>ae21da162dad0a197b2805a40eb668728</anchor>
      <arglist>(esum *data, FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_fsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>write__fsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_fsumm</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>a47dac66c9fed54155e81917a61872fea</anchor>
      <arglist>(fringesum *data, FILE *fp)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat2a</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>a9219c63e40671943ac31c8923d2f1846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat2b</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>ac7a611179eb34f70f0c3dffcaf825621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat2c</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>a8d42514c164b99f89e72909b31acb9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat2d</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>a83d57ad8fab8eb19555970f9226121b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat2e</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>ab6e137f363fc1ea5a287ca8ad3ef9e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat_v2</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>a4c9a79228a22417eba79862823e3daa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat_v3</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>a1c6df2aaf9ddec812164ecd9ac038a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat_v4</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>ad536a81704d472d7e86c468528f0b57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat_v5</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>a6a987893815d1255a1ad4df5518c783c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fformat_v6</name>
      <anchorfile>write__fsumm_8c.html</anchorfile>
      <anchor>ae3cadfd184bf6c79c4e851fcb24d517a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_header.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/adump/src/</path>
    <filename>write__header_8c.html</filename>
    <includes id="adump_8h" name="adump.h" local="yes" imported="no">adump.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_header</name>
      <anchorfile>write__header_8c.html</anchorfile>
      <anchor>abbf5bc94f0e25d288d9d629a2a5e014e</anchor>
      <arglist>(FILE *fpout, struct flist fields[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_lock_mechanism.h</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/include/</path>
    <filename>write__lock__mechanism_8h.html</filename>
    <includes id="fileset_8h" name="fileset.h" local="yes" imported="no">fileset.h</includes>
    <class kind="struct">lockfile_data</class>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_FILE_ERROR</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a042fbeabf6dd83e6d1e4d6261ba32f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_FILESET_FAIL</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a984c7b1bc202cc0954403d5ff12f24af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_INVALID</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a5c3ac8668fcdddd83b604873aaba1dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_PARSE_ERROR</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a20736cc5374941215563417e654e708f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_PROCESS_HAS_PRIORITY</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>ada14ed221c6fca414927b85f40752bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_PROCESS_NO_PRIORITY</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a634af58707c7580779b4cfcf72b90e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_STALE_ERROR</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a8d804dc8f5cc64826a455c0b93ecaded</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_STALE_SEC</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>af3f2d252bde2e9f543830eac049aed9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_STATUS_OK</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a680d6306c359d72e483fad9ebc01e605</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_TIMEOUT</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>ab51d0a82c92884eb8dd5d058a91449af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_TIMEOUT_ERROR</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a64ba1a8d0182143f221401dc14e8fc06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_VALID</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a999e0b3a2cc8690bbdfc539561737bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LOCKNAME_LEN</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a841777a085183b78e955e43d25a258a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct lockfile_data</type>
      <name>lockfile_data_struct</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a71a17fa48cfef646ad6f76bd9634a633</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>at_front</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a5e97e849e97d40bc156ee97d71c60e53</anchor>
      <arglist>(char *rootname, char *lockfile_name, int cand_seq_no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_stale</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>abd3f1eedc1ff860d01665e9e030275d5</anchor>
      <arglist>(lockfile_data_struct *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_global_lockfile_data</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a91ba44b06a88ad9f1efcb854109a752d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_lockfile</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>aa338e9ae9df8e566bf4978dbc109756d</anchor>
      <arglist>(char *rootname, char *lockfile_name, int cand_seq_no)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_lockfile_data</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a127b213cfc2bfd2f7461ca87a2744eca</anchor>
      <arglist>(lockfile_data_struct *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock_has_priority</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>aff60e9816856dc7bb893978fbae4df59</anchor>
      <arglist>(lockfile_data_struct *other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_lockfile_name</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a4aba52ddf04f16afcea8617400dff628</anchor>
      <arglist>(char *lockfile_name_base, lockfile_data_struct *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_lockfile</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a3318d5dac17b795ee7747945044f4d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_write_lock</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>ab340d44e85ff71dfe3a984c9b687b6bb</anchor>
      <arglist>(char *rootname, char *lockfile_name, struct fileset *fset)</arglist>
    </member>
    <member kind="variable">
      <type>lockfile_data_struct</type>
      <name>global_lockfile_data</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a34d4e709285c07a8d5846f152e0400d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_mk4corel.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>write__mk4corel_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>quit</name>
      <anchorfile>write__mk4corel_8c.html</anchorfile>
      <anchor>ab4641dcf43505c4c6a94477f097638f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_mk4corel</name>
      <anchorfile>write__mk4corel_8c.html</anchorfile>
      <anchor>adb8603000c20a2dc09ed1f0c7b055b3b</anchor>
      <arglist>(struct mk4_corel *corel, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_mk4fringe.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>write__mk4fringe_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>quit</name>
      <anchorfile>write__mk4fringe_8c.html</anchorfile>
      <anchor>ab4641dcf43505c4c6a94477f097638f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_mk4fringe</name>
      <anchorfile>write__mk4fringe_8c.html</anchorfile>
      <anchor>a643f8b957d0f9ea358d9f91e48f5f06f</anchor>
      <arglist>(struct mk4_fringe *fringe, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_mk4sdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>write__mk4sdata_8c.html</filename>
    <includes id="mk4__data_8h" name="mk4_data.h" local="yes" imported="no">mk4_data.h</includes>
    <includes id="fstruct_8h" name="fstruct.h" local="yes" imported="no">fstruct.h</includes>
    <includes id="mk4__sizes_8h" name="mk4_sizes.h" local="yes" imported="no">mk4_sizes.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>quit</name>
      <anchorfile>write__mk4sdata_8c.html</anchorfile>
      <anchor>ab4641dcf43505c4c6a94477f097638f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_mk4sdata</name>
      <anchorfile>write__mk4sdata_8c.html</anchorfile>
      <anchor>ac93b2ce95c016d26e238e886b04f559b</anchor>
      <arglist>(struct mk4_sdata *sdata, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_param.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__param_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_param</name>
      <anchorfile>write__param_8c.html</anchorfile>
      <anchor>abd719b4c4118786c4ed00f0f5bae58d9</anchor>
      <arglist>(esum *data, char *filename, char *precision)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_prmline.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__prmline_8c.html</filename>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="usearray_8h" name="usearray.h" local="yes" imported="no">usearray.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_prmline</name>
      <anchorfile>write__prmline_8c.html</anchorfile>
      <anchor>a3f7779c69913712fa65e8ce30bd0d457</anchor>
      <arglist>(fringearray *fdata, int ndigits, FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_psfile.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__psfile_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_psfile</name>
      <anchorfile>write__psfile_8c.html</anchorfile>
      <anchor>aec67d55ef51c36172400ed43c44a36ef</anchor>
      <arglist>(struct ps_array *psarray, char *filename, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_pshdr.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__pshdr_8c.html</filename>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_pshdr</name>
      <anchorfile>write__pshdr_8c.html</anchorfile>
      <anchor>adeede931101a98ca3f09a4a942efcd63</anchor>
      <arglist>(FILE *fp, struct ps_array *psarray, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_record.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/dfio/src/</path>
    <filename>write__record_8c.html</filename>
    <includes id="mk4__records_8h" name="mk4_records.h" local="yes" imported="no">mk4_records.h</includes>
    <includes id="mk4__dfio_8h" name="mk4_dfio.h" local="yes" imported="no">mk4_dfio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>write__record_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>write__record_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_record</name>
      <anchorfile>write__record_8c.html</anchorfile>
      <anchor>aeef2a67a6fdf5f4edb662d418750a6e3</anchor>
      <arglist>(char *record, FILE *fp, int *bytes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_reproc.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__reproc_8c.html</filename>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="psplot_8h" name="psplot.h" local="yes" imported="no">psplot.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_reproc</name>
      <anchorfile>write__reproc_8c.html</anchorfile>
      <anchor>a865bc27f0a974512b56d700e7b1ed81d</anchor>
      <arglist>(struct ps_array *psarray, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_rsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>write__rsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_rsumm</name>
      <anchorfile>write__rsumm_8c.html</anchorfile>
      <anchor>ab7ec4b03e4e09e2ab9de0f3d35ea60b2</anchor>
      <arglist>(rootsum *data, FILE *fp)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rformat</name>
      <anchorfile>write__rsumm_8c.html</anchorfile>
      <anchor>aa378f2afc622fac710bd5a9de4365404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rformat_v2</name>
      <anchorfile>write__rsumm_8c.html</anchorfile>
      <anchor>a1d08eb66d34fe32674df83834812b3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rformat_v3</name>
      <anchorfile>write__rsumm_8c.html</anchorfile>
      <anchor>a62eadf097879b5d75d0711b8197d2ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rformat_v4</name>
      <anchorfile>write__rsumm_8c.html</anchorfile>
      <anchor>ad33363b37975006de654cdcf5d485e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rformat_v5</name>
      <anchorfile>write__rsumm_8c.html</anchorfile>
      <anchor>ac2906efa1a9f0f8cd15cad6a8b58db67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rformat_v6</name>
      <anchorfile>write__rsumm_8c.html</anchorfile>
      <anchor>a3a142f832befa83d8800240dce745a29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_srchdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/</path>
    <filename>write__srchdata_8c.html</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_srchdata</name>
      <anchorfile>write__srchdata_8c.html</anchorfile>
      <anchor>a3c4198e97c4bb0e8bcd6865391176ea4</anchor>
      <arglist>(struct srchsummary *srchdata, FILE *fpout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t100.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t100_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t100</name>
      <anchorfile>write__t100_8c.html</anchorfile>
      <anchor>aa1588e7b27e9f7a4efe73caecdd7dc6c</anchor>
      <arglist>(struct type_100 *pt100, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t101.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t101_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t101</name>
      <anchorfile>write__t101_8c.html</anchorfile>
      <anchor>a0c831f54166d5d101d7c545c2010ea14</anchor>
      <arglist>(struct type_101 *pt101, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t120.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t120_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t120</name>
      <anchorfile>write__t120_8c.html</anchorfile>
      <anchor>a0d1e65f0cd55cdc5bf1d1c2199ff93ba</anchor>
      <arglist>(struct type_120 *pt120, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t300.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t300_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t300</name>
      <anchorfile>write__t300_8c.html</anchorfile>
      <anchor>abd40046947986cd039d1c7b9384dee75</anchor>
      <arglist>(struct type_300 *pt300, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t301.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t301_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t301</name>
      <anchorfile>write__t301_8c.html</anchorfile>
      <anchor>aba77ae4f419868c50b6460f3abe02263</anchor>
      <arglist>(struct type_301 *pt301, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t302.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t302_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t302</name>
      <anchorfile>write__t302_8c.html</anchorfile>
      <anchor>ae65818a3668903437cc407b1743007a1</anchor>
      <arglist>(struct type_302 *pt302, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t303.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t303_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t303</name>
      <anchorfile>write__t303_8c.html</anchorfile>
      <anchor>a68e39868d3e00dece4b987b0033944d1</anchor>
      <arglist>(struct type_303 *pt303, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_t309.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/difx2mark4/src/</path>
    <filename>write__t309_8c.html</filename>
    <includes id="difx2mark4_8h" name="difx2mark4.h" local="yes" imported="no">difx2mark4.h</includes>
    <member kind="function">
      <type>void</type>
      <name>write_t309</name>
      <anchorfile>write__t309_8c.html</anchorfile>
      <anchor>ae6dab99b615ee70abe07c3bae5dbaaef</anchor>
      <arglist>(struct type_309 *pt309, FILE *fout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_tdata.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>write__tdata_8c.html</filename>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="summary_8h" name="summary.h" local="yes" imported="no">summary.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_tdata</name>
      <anchorfile>write__tdata_8c.html</anchorfile>
      <anchor>a76bf185b7431756ef42057cd3b910f24</anchor>
      <arglist>(esum *data, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_tsumm.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/afio/src/</path>
    <filename>write__tsumm_8c.html</filename>
    <includes id="adata_8h" name="adata.h" local="yes" imported="no">adata.h</includes>
    <includes id="mk4__afio_8h" name="mk4_afio.h" local="yes" imported="no">mk4_afio.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_tsumm</name>
      <anchorfile>write__tsumm_8c.html</anchorfile>
      <anchor>a90b21174f0f3cc3058f3306a4b48147e</anchor>
      <arglist>(trianglesum *data, FILE *fp)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tformat_v2</name>
      <anchorfile>write__tsumm_8c.html</anchorfile>
      <anchor>a82e83fe25b1afb0ff8a6e6821c4ed526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tformat_v3</name>
      <anchorfile>write__tsumm_8c.html</anchorfile>
      <anchor>aee772f75836add07b8cb227aecb94a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tformat_v4</name>
      <anchorfile>write__tsumm_8c.html</anchorfile>
      <anchor>a3e6b567694e63e723b99f3ecf07794a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tformat_v5</name>
      <anchorfile>write__tsumm_8c.html</anchorfile>
      <anchor>a68501cf703845f5fb5bf01f22d3d71db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tformat_v6</name>
      <anchorfile>write__tsumm_8c.html</anchorfile>
      <anchor>a95357ed9ca3603c51fbd94434010f65e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_vexfile.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/vex/src/</path>
    <filename>write__vexfile_8c.html</filename>
    <includes id="vex_8h" name="vex.h" local="yes" imported="no">vex.h</includes>
    <includes id="mk4__vex_8h" name="mk4_vex.h" local="yes" imported="no">mk4_vex.h</includes>
    <includes id="mk4__util_8h" name="mk4_util.h" local="yes" imported="no">mk4_util.h</includes>
    <member kind="function">
      <type>int</type>
      <name>write_vexfile</name>
      <anchorfile>write__vexfile_8c.html</anchorfile>
      <anchor>abfd6d5cc7a2298e01918c5f3f5692911</anchor>
      <arglist>(int *del_list, struct insert *ins_list, FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>zoom.c</name>
    <path>/home/barrettj/work/projects/hops-git/source/c_src/applications/aedit/src/</path>
    <filename>zoom_8c.html</filename>
    <includes id="aedit_8h" name="aedit.h" local="yes" imported="no">aedit.h</includes>
    <includes id="aedata_8h" name="aedata.h" local="yes" imported="no">aedata.h</includes>
    <includes id="pstruct_8h" name="pstruct.h" local="yes" imported="no">pstruct.h</includes>
    <member kind="function">
      <type>int</type>
      <name>zoom</name>
      <anchorfile>zoom_8c.html</anchorfile>
      <anchor>ae4775653f5dbec8abc3cb8fe77c4809f</anchor>
      <arglist>(esum *data)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_picohash_md5_ctx_t</name>
    <filename>picohash_8h.html</filename>
    <anchor>struct__picohash__md5__ctx__t</anchor>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>a</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a71cdae87346a67f8bff35620e4b5b140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>b</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a64c6e38799131d533c0e10559b751fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>block</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a085a213a587fd9e7c67b8d671f74510a</anchor>
      <arglist>[PICOHASH_MD5_DIGEST_LENGTH]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>buffer</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>af504759026cb003438cf87815dc510aa</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>c</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>ae08b80455a94b837d188501559137fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>d</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a8b5e492fc682ea34789fd83a3eea34a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>hi</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>a505e90c0fe425bc74e2c28bc863859cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>lo</name>
      <anchorfile>picohash_8h.html</anchorfile>
      <anchor>aed86f188cfff9dbcd71630a617a725a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>afile_structure</name>
    <filename>afile__structure_8h.html</filename>
    <anchor>structafile__structure</anchor>
    <member kind="variable">
      <type>corelsum *</type>
      <name>coreldata</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>ae43eff3a26b2b1d0fe9cea245c5b39ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fringesum *</type>
      <name>fringedata</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>a5e7cd7ab428982091f9d7113e58a929d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncorel</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>ab03ff812cff43837cf3c7bf84e2ec602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nfringe</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>ac195c230ce919ae10bbec73ef34253e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nquad</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>a26b7f9005953d6455e29567b925491ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nroot</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>ab5eab3f134e084bdcab4ed04d45e819c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntriangle</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>ac3f96ab609fd42988f06e7d7433f1327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quadsum *</type>
      <name>quaddata</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>af9e8a1474b927aad4dc84f088c25151b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rootsum *</type>
      <name>rootdata</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>a6564ebf83bbbfff3cca82a92c719f27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>trianglesum *</type>
      <name>triangledata</name>
      <anchorfile>afile__structure_8h.html</anchorfile>
      <anchor>a8d12ba66cef927585f029cd78e03b25e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>afio::afio::afile_structure</name>
    <filename>classafio_1_1afio_1_1afile__structure.html</filename>
    <base>afio::afio::AFIOStructureBase</base>
  </compound>
  <compound kind="class">
    <name>hops_visualization::parse_alist::AfileData</name>
    <filename>classhops__visualization_1_1parse__alist_1_1AfileData.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1AfileData.html</anchorfile>
      <anchor>af8a44c733be5b4b25aa204761ce9794d</anchor>
      <arglist>(self, afile)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>d1</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1AfileData.html</anchorfile>
      <anchor>a4253bde5aa2fdec3c768a136b1294ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>labels</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1AfileData.html</anchorfile>
      <anchor>ad406925bca9db0e5cbf5a95a3d8f7ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lines</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1AfileData.html</anchorfile>
      <anchor>a28d6766270e5ac058b3d22b88ec33df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>units</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1AfileData.html</anchorfile>
      <anchor>a42ba078ee462d4e14df72281042b4e5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>afio::afio::AFIOStructureBase</name>
    <filename>classafio_1_1afio_1_1AFIOStructureBase.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__eq__</name>
      <anchorfile>classafio_1_1afio_1_1AFIOStructureBase.html</anchorfile>
      <anchor>aa479315f4e51d0c54b117e940431f009</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__ne__</name>
      <anchorfile>classafio_1_1afio_1_1AFIOStructureBase.html</anchorfile>
      <anchor>ac1ba246b542db0792a0544259954adc8</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>approximately_equal</name>
      <anchorfile>classafio_1_1afio_1_1AFIOStructureBase.html</anchorfile>
      <anchor>a2a2bb32f44156b3dcd6b7ad2dfa85503</anchor>
      <arglist>(self, other, pedantic=False, verbose=True, abs_tol=1e-14, rel_tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>approximately_equal_field</name>
      <anchorfile>classafio_1_1afio_1_1AFIOStructureBase.html</anchorfile>
      <anchor>a21ec9262c919b90a67a039ca50a5a17c</anchor>
      <arglist>(self, other, field_name, pedantic=False, verbose=True, abs_tol=1e-14, rel_tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>contains_floats</name>
      <anchorfile>classafio_1_1afio_1_1AFIOStructureBase.html</anchorfile>
      <anchor>a86d37a5619ae22284788a803815f2d04</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>printsummary</name>
      <anchorfile>classafio_1_1afio_1_1AFIOStructureBase.html</anchorfile>
      <anchor>a4c0a78ec964fc11651add113384134aa</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::apply_to_tuple</name>
    <filename>structhops_1_1apply__to__tuple.html</filename>
    <templarg>NTypes</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>apply</name>
      <anchorfile>structhops_1_1apply__to__tuple.html</anchorfile>
      <anchor>a70da42e30f492f411dd1bbbff28619bd</anchor>
      <arglist>(XTupleType &amp;tup, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::apply_to_tuple2</name>
    <filename>structhops_1_1apply__to__tuple2.html</filename>
    <templarg>NTypes</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>apply</name>
      <anchorfile>structhops_1_1apply__to__tuple2.html</anchorfile>
      <anchor>a206edef0697fa8d26d668216a002ad0c</anchor>
      <arglist>(XTupleType &amp;tup1, XTupleType2 &amp;tup2, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::apply_to_tuple2&lt; 0 &gt;</name>
    <filename>structhops_1_1apply__to__tuple2_3_010_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>apply</name>
      <anchorfile>structhops_1_1apply__to__tuple2_3_010_01_4.html</anchorfile>
      <anchor>a0f311edf2ed8bcfa4ff5b175c95e3fdd</anchor>
      <arglist>(XTupleType &amp;tup1, XTupleType2 &amp;tup2, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::apply_to_tuple&lt; 0 &gt;</name>
    <filename>structhops_1_1apply__to__tuple_3_010_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>apply</name>
      <anchorfile>structhops_1_1apply__to__tuple_3_010_01_4.html</anchorfile>
      <anchor>a255e17377865c974e4afd0923a10f7c3</anchor>
      <arglist>(XTupleType &amp;tup, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>auto_global</name>
    <filename>type__120_8h.html</filename>
    <anchor>structauto__global</anchor>
    <member kind="variable">
      <type>int</type>
      <name>cosbits</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>aa496ed1f9849c47ff8d2c24e58db0758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>coscor</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a0960f7509b6a14d905d54cf69c35c1f3</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>af0cb1cb153873250c6f3a273cf6bde90</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::auto_global</name>
    <filename>classmk4io_1_1mk4io_1_1auto__global.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>auto_per_lag</name>
    <filename>type__120_8h.html</filename>
    <anchor>structauto__per__lag</anchor>
    <member kind="variable">
      <type>int</type>
      <name>cosbits</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a64832aea8028f4e0acf61b356f85fb2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>coscor</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>af2461478bc141c039832c18f1db49656</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::auto_per_lag</name>
    <filename>classmk4io_1_1mk4io_1_1auto__per__lag.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>avg_data</name>
    <filename>search_8h.html</filename>
    <anchor>structavg__data</anchor>
    <member kind="variable">
      <type>fringesum</type>
      <name>fdata</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>acc6e7bf5bde7cb953b841d83569cc71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyval</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>aefb5ad9d55d5f93ba93c67d91e947cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastorder</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a32d03e2f05016c4183173e4f1813d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a37ef408e9328d197e31bcb0937da410d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerHDF5Converter::AxisDumper</name>
    <filename>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</filename>
    <member kind="function">
      <type></type>
      <name>AxisDumper</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</anchorfile>
      <anchor>aa3085e48a6caaa23ea98fd9d7d130582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AxisDumper</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</anchorfile>
      <anchor>a6b6e5a5f5616ee0c0a477858446c9fdd</anchor>
      <arglist>(hid_t file_id, hid_t ds_id, const std::string &amp;parent, const mho_json &amp;pmetadata)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AxisDumper</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</anchorfile>
      <anchor>a630f14a8b95724198a9cd18b8b8bed7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</anchorfile>
      <anchor>a8a6cdd50a88b43f13212ae55e97c2584</anchor>
      <arglist>(const XAxisType &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDataSetID</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</anchorfile>
      <anchor>ae022d116724e7d677f68aecdee540b9d</anchor>
      <arglist>(hid_t ds_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileID</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</anchorfile>
      <anchor>a07ebf573785be5f08165e71f6e034832</anchor>
      <arglist>(hid_t file_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndex</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_1_1AxisDumper.html</anchorfile>
      <anchor>aa555cca183be27266c779bfd3fa68a1f</anchor>
      <arglist>(std::size_t idx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerJSONConverter::AxisDumper</name>
    <filename>classhops_1_1MHO__ContainerJSONConverter_1_1AxisDumper.html</filename>
    <member kind="function">
      <type></type>
      <name>AxisDumper</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_1_1AxisDumper.html</anchorfile>
      <anchor>aeaeaa9898e291e658c69a898f0b89e4c</anchor>
      <arglist>(mho_json *json_ptr, int level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AxisDumper</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_1_1AxisDumper.html</anchorfile>
      <anchor>a4565dad02bd25253de22d8d219b89615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_1_1AxisDumper.html</anchorfile>
      <anchor>ac108a96b7fcbefaee2378157b499ea54</anchor>
      <arglist>(const XAxisType &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndex</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_1_1AxisDumper.html</anchorfile>
      <anchor>ab9c37ff0aa643e79fdec9270c2a175aa</anchor>
      <arglist>(std::size_t idx)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>bad_frame_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structbad__frame__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>CRC_error</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a970eab86885e5ad1d6f222a3b816591a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>lost_sync</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a86a44cc418e41afff97ba21f1cdff153</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>PE_limit_exceeded</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ae928b8e7e4705c7433afe5ae8728b135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>unexpected_sync</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ae3237bf194e66278a0be42a34c0067d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::pcc_delay_fitting::BandDelayFitter</name>
    <filename>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>af44d5ef820f0b371ea47bd661977e220</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fit_band_delay</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>a24205adaa2e5fef1a4d0582e7c2ed2fe</anchor>
      <arglist>(self, tone_phasors, ref_frequency, cut_threshold=0.0, verbosity=0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fit_function1</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>a8dac4ad213fe13e8c5dd9bf0858ae764</anchor>
      <arglist>(self, par, fit_data)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fit_function2</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>aa2b4880144fac8d8b8068cf6e979103e</anchor>
      <arglist>(self, par, fit_data)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fit_function3</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>a0889f80f81ed2b95eb6d62ae33b8d765</anchor>
      <arglist>(self, par, fit_data)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_initial_band_delay</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>a7617960ce6f4c668be7bb399fa5cff78</anchor>
      <arglist>(self, phasor_freq_pairs, reference_frequency)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_phase_residuals</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>a97d6bd9169adb5fc6f1b5dde0870c39b</anchor>
      <arglist>(self, fit_data, delay, phase_offset)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>basinhopping_niter</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>a0dedb8a0b4dd21f3b94bd20bb65af65f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_bandwidth</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BandDelayFitter.html</anchorfile>
      <anchor>ac37060d31ac54e6091ff6a50b1a33404</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::utility::Bar</name>
    <filename>classvpal_1_1utility_1_1Bar.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>a3bcaf28cc27998bbb9d4a42450af7b51</anchor>
      <arglist>(self, status, max)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>finish</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>a5e5c3c24b267792e82391aec8c324da4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>next</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>a2f7a36260f267af33f6b5956d48bec5a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>start</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>ae5deac53f9668642c6dfbda297c9040c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cursor_chars</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>a128ca3f3eb353d7b091ca788ac632d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>status</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>a509e1c4b134d2cc63fdaa2c5ed838147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tick_count</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>adaa7defed64aafaef37b378e4244274e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>total_n_ticks</name>
      <anchorfile>classvpal_1_1utility_1_1Bar.html</anchorfile>
      <anchor>a15c2c329474c8a347dd8b0921ff09b57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::pcc_delay_fitting::BasinhoppingStep</name>
    <filename>classvpal_1_1pcc__delay__fitting_1_1BasinhoppingStep.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BasinhoppingStep.html</anchorfile>
      <anchor>a3d4b3042206a7a82ff544ad0130ff363</anchor>
      <arglist>(self, stepsize_delay=PICOSECOND, stepsize_phase=3.0 *(math.pi/180.0))</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BasinhoppingStep.html</anchorfile>
      <anchor>a23367ac5f30a09bd746cd6f557d1776b</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>delay_step</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BasinhoppingStep.html</anchorfile>
      <anchor>a887d69c6677a261605d7af8f11b64b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_step</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1BasinhoppingStep.html</anchorfile>
      <anchor>ad5e43e3ee7b883cab71242e52fe6ec78</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>blk_stmt</name>
    <filename>vex_8h.html</filename>
    <anchor>structblk__stmt</anchor>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a28e02341894bbcdd861ee4f998c7f4ab</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nstmt</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a890cdff67110fb0395ed4d82c3abe125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stmt</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a1f48681b69ac00a11b7e22f3fc1b1c60</anchor>
      <arglist>[MAXSTMT][32]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>block</name>
    <filename>vex_8h.html</filename>
    <anchor>structblock</anchor>
    <member kind="variable">
      <type>struct def</type>
      <name>deflist</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a0fcb24cda84fe9e590dbedd2be4ecd74</anchor>
      <arglist>[MAXDEFS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a8307331db39a378a93d31dbde7daeb93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a544960988e5c91115f591f2e62d63deb</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndef</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a9a176230cc9d13442a40f8a8d715bad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stno</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a5f23fcf594a6ef22d35964c9eab06b9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>bsgstruct</name>
    <filename>refringe_8h.html</filename>
    <anchor>structbsgstruct</anchor>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>refringe_8h.html</anchorfile>
      <anchor>aa98bb5f1681fcaa58b8bfb6c297ef4a7</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>files_index</name>
      <anchorfile>refringe_8h.html</anchorfile>
      <anchor>ac72edcf94d3d3b536734e4f3283ccc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>subgroup</name>
      <anchorfile>refringe_8h.html</anchorfile>
      <anchor>ab348c563767dc7b610af403b88e22ee6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>hops::MHO_UUID::byte2ints</name>
    <filename>classhops_1_1MHO__UUID.html</filename>
    <anchor>unionhops_1_1MHO__UUID_1_1byte2ints</anchor>
    <member kind="variable">
      <type>uint8_t</type>
      <name>byte_values</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a34e2c79ed25ca00ccbdd0c2de014552e</anchor>
      <arglist>[MHO_UUID_LENGTH]</arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>uint_values</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a1d5f86a5d2fbd76ed89dac9a55fa50c6</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>c_block</name>
    <filename>control_8h.html</filename>
    <anchor>structc__block</anchor>
    <member kind="variable">
      <type>int</type>
      <name>accept_sbs</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aee6b5d4ebabd12f0933dd6813f3808a4</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>adhoc_amp</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af2c4ab8df819cbf751c796c0031fde7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>adhoc_file</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a9f22f4d2161369cde07d309781a06276</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>adhoc_file_chans</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>afcb49d714671f1129722cbf4d78408bf</anchor>
      <arglist>[2][128]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>adhoc_flag_files</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a60888ec3971c6e49bd96bda5ca7d9fa0</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>adhoc_period</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aefcb8c582c5cd62e7d6fe76bf15abd26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>adhoc_phase</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a34acf33412797087d554e0a6b58af8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>adhoc_poly</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aea8b4884b443a10d4549de084ee49dd9</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>adhoc_tref</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a3a11f780ca7ae83a57da841bafef3614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>avxplopt</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a7032747ad2b374a1811d18e820182bfb</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>avxpzoom</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>acb13bf40f45f3b31507604692d3e6086</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>acf2bffda72c897b2955a3ec3d5fa9288</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct c_block *</type>
      <name>cb_chain</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>afa7aec728aad53f339dc6ccd57a75317</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chid</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a0110ef1e2eae572bd64fb774ba385168</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>chid_rf</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>adf17d126984b5c9401587b135511aa89</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>dc_block</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aac01ec0b94b64d2c34ed04cd4a1f00a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dec_offset</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a41462db6cc8b61600345d612bde9af4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>delay_offs</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af9f56633bde3053c35ad64b546b94d71</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>delay_offs_pol</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a22575c2489b5de8da2432a09f0f9a8a8</anchor>
      <arglist>[MAXFREQ][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dr_window</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a0ba396197f1e475ea2299984b0766a83</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>est_pc_manual</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aa3b849f48f0d30939623684568fe85c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>f_group</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a3edd51c2270cdd8033eceeb1a832b69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fmatch_bw_pct</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a9166b78a6e0ead14dfb5206f74e06c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct gat_struct</type>
      <name>gates</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aefd3f62d073ea97a0080ef12701e8572</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gen_cf_record</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a383a082add7fc5badcdbe83042dcfb67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>index</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af29b1a4eefb0a9426bcb98845a3937f8</anchor>
      <arglist>[2 *MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>interpolator</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a1373fc2cf778d3ac1a5516a52ed1f83f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ion_npts</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ac160d04a6e887807169c9392bbafb8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ion_smooth</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ac675ca5bab6a82e45421968530df41ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ion_window</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a7b1b010891f3e7fac8de77ca3d9629a2</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>ionosphere</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a0db8b039cd82c161227254f44de0a7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>knot</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a96ac09561a63e47ab116603edced26d9</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>lsb_offset</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a1f12c0546cea88e32f19dd3855927fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mb_window</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ac5ca554cab981630c4a702178d9a789a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mbd_anchor</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a03ed01ffabf4f7a1d35a1f0e920e8002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mbdrplopt</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a662e3ec1304ff6098cc211c6c1e9003d</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min_weight</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a50de18918ce4a0c09b37ef07689abf1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mixed_mode_rot</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a13c2c00c255b973a5cc279c34c3f2182</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mod4numbering</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a90e930a9ecebe098965ea32fd8819615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mount_type</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a6cbf9ecf2f44528342d2e3080263a237</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnotches</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aa13b64c175225c55e349e973836f5ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>noautofringes</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a20a6410dfc3e35c90b9818769349fa98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>notches</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aa062c6d0fdd281e803a76d5cdb563935</anchor>
      <arglist>[MAXNOTCH][2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsamplers</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a08cca6177dd98a079309f3ffa13cd986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>optimize_closure</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a73addde4cbcbd377d1f22ca2f733680e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>passband</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aa35555ce63668639e5a62a2942969b93</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_amp_hcode</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>acebe7155fc5d3c243fb70f91c7a9da6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>pc_delay_l</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a56f805b864bed2ba864e21cd001b1dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>pc_delay_r</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a0ce6860363af42f10ee4392c23519a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>pc_freq</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a0b01950c509fd30f6fb87cbaa756e888</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>struct istats</type>
      <name>pc_mode</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a7921106a8bdcc58991e483296d981bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct istats</type>
      <name>pc_period</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a8c7917c34b1a809c1412fce84e039e34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>pc_phase</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a3360e10a8a5ff1e1c29ba30a3f2cfccc</anchor>
      <arglist>[MAXFREQ][2]</arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>pc_phase_offset</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a4d41351adc06f5d2f31fde98aaacc461</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct istats</type>
      <name>pc_tonemask</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a5d7c990ae136886d5ce1412820d25c49</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>plot_data_dir</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a2d5d02667c61abde863e80dffeda13a0</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>psamplers</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af3d3a2a36b00854cf26d7b02f366e8c4</anchor>
      <arglist>[MAX_SAMP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ra_offset</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af606985e9ef67d9d372132de6640129c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ab1531f4dbd9642bc858cbff2f73e2351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>sampler_codes</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a770ca4840da62327710454694b3b888d</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>sampler_delay</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a6011a7af5ec3da8fcb66c027d20f269d</anchor>
      <arglist>[MAX_SAMP][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sb_window</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a9768dfaed4bae878370d872b2f0d01c5</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scan</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>abd22adaf8407d0129c6d9abd9f57b728</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>skip</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ad7572e7b87010ec11e499c961c4f5d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a7b9ac952c48e90fb0026a0f3f1891740</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>station_delay</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a7b7050b9c6534170ae26678249333543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>switched_mode</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a37976e62191a9cade3e4b0a690a89796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>switched_period</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a204130c9a7cff6f7961a3b0ae1e46060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>t_cohere</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a6313374a22f707f51db3ac16511f4109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time_span</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a9f4e841c60a3ba375292269a6d0442ad</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>use_samples</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a24a9d7c918eb439cd19f2fb9bbe44c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct dstats</type>
      <name>vbp_coeffs</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>acec71fe3c19fc4297561ee47cd73d963</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vbp_correct</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a972025f18a0e611fd859d25cfa2464e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>vbp_file</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a04c1c22ef63905d30f73dd44a13a40e0</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vbp_fit</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a682498537b5396f1b2ed3890be64b29f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weak_channel</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ad7d8a611b1fd9ddd4cf4c4729b0a4cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>x_crc</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a4261b6058cca532809519c5fcffce1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>x_slip_sync</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>a653fbac03f0a3d6fdb9c397aedf2f5f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>y_crc</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aa8fa310b754316d588dc7fefda27bcdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>y_slip_sync</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>ad43e027d8dbbdfb562057bc6ce0e3671</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ffcontrol::ffcontrol::c_block</name>
    <filename>classffcontrol_1_1ffcontrol_1_1c__block.html</filename>
    <base>ffcontrol::ffcontrol::FFControlStructureBase</base>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::ch1_tag</name>
    <filename>classmk4io_1_1mk4io_1_1ch1__tag.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_309::ch1_tag</name>
    <filename>type__309_8h.html</filename>
    <anchor>structtype__309_1_1ch1__tag</anchor>
    <member kind="variable">
      <type>U32</type>
      <name>acc</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a3d22662727ba7041a71c379f86ca60f9</anchor>
      <arglist>[64][2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chan_name</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>ac11836f6b396dd7decdf00cf55101a75</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>freq</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a8c8c62721e35f2068b061b862d2c1c6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ch_struct</name>
    <filename>type__203_8h.html</filename>
    <anchor>structch__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>index</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a4ed66ce856962d95f1cb54de49a6a2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ref_chan_id</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a01be7041f446352a067ff51e0bd83ea5</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>aefecc53a89ce89536394db2871c8a96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>refpol</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a2de9171ed335e1666970e61c6f10d73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>refsb</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a8acfd48b58aad534dadaf9a4a1f21124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rem_chan_id</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>ac019b8b1e436743aeb96890c5273b1e0</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rem_freq</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a3a750ce61588229b7ea585127a6a80fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rempol</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>aa5d51e6ce00cc20d7454e98f52940594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>remsb</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>ae5f1d302837ecc19762f7a56595ad5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short int</type>
      <name>sample_rate</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a6d2d2468466989afe99f3fb4c1627589</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::ch_struct</name>
    <filename>classmk4io_1_1mk4io_1_1ch__struct.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_309_v0::ch_tag</name>
    <filename>type__309_8h.html</filename>
    <anchor>structtype__309__v0_1_1ch__tag</anchor>
    <member kind="variable">
      <type>U32</type>
      <name>acc</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a5ba1bbc8328a5f8b653a295439e56037</anchor>
      <arglist>[16][2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chan_name</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a69a92e68450d583454094f8d4190a919</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>freq</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>addad84bf2079e9060629844da76aeb2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>chan_struct</name>
    <filename>ovex_8h.html</filename>
    <anchor>structchan__struct</anchor>
    <member kind="variable">
      <type>char</type>
      <name>band_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>abd44e27247d40002c8d4b69c463bb4dc</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bandwidth</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>aaf6877105412bc1d0e04fa9d54711461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>bbc_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>af22a41a9e8d403579d72331583637c3a</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>bbc_no</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a832af496c4591d9514d4ef5d50efefe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>aa9a3203cb2c33b5a24257d1d8d719cbc</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chan_name</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a6c77f60ba569f1efb65777352ffb9cd0</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>if_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>adf646ac59fdda3e03a645eb133506483</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>if_name</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a85f23795a149f13b2251c0b74558edfe</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>if_sideband</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a32053a195b68fb6fc80281be98cfd5b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>if_total_lo</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>abc73fc8503f2e5ad2154d9910e14488e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mag_headstack</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a63df25c8178747ec4fb5134e5b419e89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mag_tracks</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a31f25ee3d18ffcabb858a6feeaaf057f</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>net_sideband</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a05ed789db01fe497c1e3e33d8334145d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pcal_base_freq</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a75f2d414e08dfa103427e56131ff985f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>pcal_detect</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a634bcbc81f56119dc9eaa58cbea509ea</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pcal_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a78d9d5ab0369089d9059504ca9516898</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pcal_spacing</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a656c8c37280a1ede7371e38aef8f5255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>polarization</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a151d5d452c24ec490a59799f3da6f404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sign_headstack</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a94a399109bd65a0236b6213391b5f861</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sign_tracks</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a130f805b58a561102efba8a976e8d46c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sky_frequency</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a198a87ce0e2dd69100642afff49398dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vexpy::vexpy::chan_struct</name>
    <filename>classvexpy_1_1vexpy_1_1chan__struct.html</filename>
    <base>vexpy::vexpy::VexStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>ChanCount</name>
    <filename>type__307_8h.html</filename>
    <anchor>structChanCount</anchor>
    <member kind="variable">
      <type>U32</type>
      <name>count</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a111a5def7865c38a13c8d3bb1e3318c7</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>U32</type>
      <name>val_count</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a1d1266df0151945f4ee40eda9a16df77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::ChanCount</name>
    <filename>classmk4io_1_1mk4io_1_1ChanCount.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::ChannelToBandMap</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>ad7dd6942995d171fcf8acb1520d7c1cf</anchor>
      <arglist>(self, map_type, filename=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_band_pol_keys</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>aca19568e12df25de8f177d794afc8234</anchor>
      <arglist>(self, bands_to_use, pols_to_use)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>does_ovex_contain_current_channel_setup</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a228da59a22fb217c9b16c8f396bcfb41</anchor>
      <arglist>(self, ovex_filename, mk4_site_id)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_band_pol_from_channel_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a5e89b0c55f86871059cc472be048bcf6</anchor>
      <arglist>(self, channel_name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_channels_from_band_pol</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>ab14a0ef4620d1f9a1eab650f15bc9266</anchor>
      <arglist>(self, band, pol)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>intersecting_band_subset</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a392ea96bd8678d73abb14f9bdef937d7</anchor>
      <arglist>(self, bands_to_use)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>intersecting_pol_subset</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a6bc1226553f90fb09a7bd91e0fb575f2</anchor>
      <arglist>(self, pols_to_use)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>list_types</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a8381107a8e401e793a5809711ad10c85</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>band_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a0f7c196a507f8d8a51031e7b6997e4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>band_pol_to_channel</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a7f7f35d7e4ab91e955641eb7a4554178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_to_band_pol</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a619f48682bad742c83d181b6460adb1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>map_type</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>a914d867bcec4e2d72d37ecae377a5c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pol_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ChannelToBandMap.html</anchorfile>
      <anchor>aa5d743f0574f9bd29c76c07eaedef893</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>com</name>
    <filename>aedit_8h.html</filename>
    <anchor>structcom</anchor>
    <member kind="variable">
      <type>char</type>
      <name>arg1</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a702a1ad03e4f75f47503299b9b4f139c</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>arg2</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ab26a9e067fc1a364792cef1187e867ab</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>cmnd</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ae4c9b7ae795b24e0f4e52218722a6dd4</anchor>
      <arglist>[50]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>narg</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a202f9eb7c03638d4e3112712c4a6f6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>remarg</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a8fb15ff2b0794a7c96c13cff2c1a33e3</anchor>
      <arglist>[512]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CommandLineOptions</name>
    <filename>difx2mark4_8h.html</filename>
    <anchor>structCommandLineOptions</anchor>
    <member kind="variable">
      <type>char</type>
      <name>bandwidth</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ae4f69f4497cbab4e62f492ceb24cda58</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>baseFile</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ab965da9de6c882c191ae37eeb0168251</anchor>
      <arglist>[MAX_INPUT_FILES]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>doalldifx</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a7677454eed8503853417813ac36755fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dontCombine</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aed2467726661c84c74158cf526f74189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>exp_no</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a52dc5d39ed55f9fadf25435791ba834f</anchor>
      <arglist>[EXP_CODE_LEN+1]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fgroups</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ae436237798fd83e246a2f3aae655a9b3</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>FILE **</type>
      <name>in</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a6aa23bd1c4fca750d55760465b48aee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>jobMatrixDeltaT</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a11d89338b4a9cba688448b0161f30b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keepOrder</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ad19a0fb3d4ec2ffac3f369589ccdf59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>localdir</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a817adfd73036aabbdb55515422c94715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nBaseFile</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a6638a1298e4ea1f6938f9248ebdab7d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>nOutChan</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a4fc378dbba7c7f7c22932b80e3fa72da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>overrideVersion</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a4441bc420de4397137b320939694f45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>phaseCentre</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a732612a66efb7707edaee67221076917</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pretend</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a400c1e7dd70b796b1ae00aeebd3a1111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pulsarBin</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>adbe453c8db3fd367da5c18e34648f775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>raw</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aecd2c4078e75cdb4f7af6bfc8edd7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>scale</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ad49cd2ece892b70916d3e0adec65015b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scan</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aa0db92674a9be68e6d52713c4e0cb6fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scodeFile</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a5541796d34c1cd8b1ea78b00c189a876</anchor>
      <arglist>[PATH_MAX]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sniffTime</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>add10c269a150ab3f78a0ca88602219ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>specAvg</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a6ba959aea464982324215377f751c150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>startChan</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a2096c4ac216df07be3c8cea48364d605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aecfaabcd631e34f9b362351db25d34eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>writemodel</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a734312c99830b58d879c0289392cd097</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>comment</name>
    <filename>vex_8h.html</filename>
    <anchor>structcomment</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>end</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ae6908903cf3f3a8badf764cab4461deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>start</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a4c7082256ad8c9f00d3766e821d01af8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::complex_struct</name>
    <filename>classmk4io_1_1mk4io_1_1complex__struct.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::ComplexReImCovarianceMatrix</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>ac3ae06fa67e502a7684e81418429fc64</anchor>
      <arglist>(self, complex_data_vector=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_mx</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a0713e7898fd29c39820b9c6291e39b47</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_IQ_representation</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a19e6bda1186352e476bab4d8d989da7e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_magnitude_variance</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>ab68024270a342d1789b7ff979550dd58</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_phase_variance</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>aebc2c197d123d3d6a8878b01529e2338</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_RI_representation</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a46dd784dbc1fd9e08f444732cc8e6537</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>multiply_data_by_complex_scalar</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a3f4d19130629b498c4db19afb0886915</anchor>
      <arglist>(self, complex_scalar)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_data_vector</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>ae673eb0a1d5e361cb7d4c524f8b01184</anchor>
      <arglist>(self, complex_data_vector)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>complex_mean</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>adf9cd0489fa53c03e2bc0979d388ef6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>data</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a304784eabf0fe478161ac4340232a21c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>imag_mean</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a335ea82c8cba3c061470fa84eed60b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>iq_mx</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>af322b5f9effda73cf2e462e66113e122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>is_valid</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a2b4f7e77b8a8b3c8e0f072e0335eccb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_magnitude</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>aeb1e47bc1540c946972a9d9fef3503bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_phase</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>ac8c39c6b26afde60087dbe568b8f8a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mx</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a34cc018ae0a4e2cdc12ab7a8ee11e3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>real_mean</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ComplexReImCovarianceMatrix.html</anchorfile>
      <anchor>a52b479caf27f926396cd1e84d8885388</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vis_record::components</name>
    <filename>difx2mark4_8h.html</filename>
    <anchor>structvis__record_1_1components</anchor>
    <member kind="variable">
      <type>float</type>
      <name>imag</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aa6571447b7a9caac1634d03ca2112aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>real</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a4246119ff16957291d74d5ad98bbd0b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>config</name>
    <filename>average_8h.html</filename>
    <anchor>structconfig</anchor>
    <member kind="variable">
      <type>int</type>
      <name>account</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>add785599cb162476ee1d825afb60dffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>binary_input</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a8fbc73f31b683d3faeb4b7a393ea8ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cofit_output</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aaaad45b7a2fedccaf2101f187dfe7b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>coherent</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a876b3abfe84dbeb619443128f8aeee76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>header</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a5465f49ec366561c7c7c9226db07e4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>int_time</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ae5afdbb49c66129c9a62d9c75cb56a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>multiscan</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a5f48c683af53425dd91ff901e9f8b829</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snrfact</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>af9c609e683995e6f19b42985315aa8d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::ffres2pcp_lib::Configuration</name>
    <filename>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</filename>
    <base>vpal::report_lib::JsonSerializableObject</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a3a53efe787af21814fa0a6bf2c2905e4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a3db22e453afa71581fcdb3253b5a5de5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_discard_tolerance</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a5f647608f74142f970456e7ed8f20a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_file</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a3de3654f327ed94e3c74c728d2ca2ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_nominal_error</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a106ec73dbc74c1df920e1a00346c06da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_tolerance</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a870263ce7894f54bcc90a8922e3167b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_directory</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a4d1ebf19785b5f08e08bf9af4f47c902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>frequency_group</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a2d03bd8784775531c1f8f946bf6bf31b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_number_to_select</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>ac4af9436d366d3754fb927160960af57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_snr</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>ae5f9d9dd6a3c6948aaf1d59f91cad7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_qcode</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a98b0eeedca7f36f08fc9f012cde938c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_snr</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a8c158ba4715ca5d7fe93a369ceb5837e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mode</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a32720c0daf5e1018e88203dd938877f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nchannel_discard_threshold</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a4d3505c2aa201ae968cdedc77d208a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>network_reference_station</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>ab45d9d1c8687e754383cf816c50cb710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>network_reference_station_pol</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>ade9774827dc162fa63fe42eb65daf01f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_proc</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>aedef5f89963216c72a70b4e34ff67af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sigma_cut_factor</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a2eb4cdf3a604e31bc57c9f1d994a5b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start_scan_limit</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a6788744ab7eab93cad667964e1bb2cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_scan_limit</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a2d2308e90d5ecd956aa3ecb1622cf323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>target_stations</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a0469884ba4524c33178629fa99ca1a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use_progress_ticker</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>aeeb67b04960ceec76f2498c7a75147d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>verbosity</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1Configuration.html</anchorfile>
      <anchor>a58116f5a7e55709bc5dc290803c6de37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fourphase_lib::Configuration</name>
    <filename>classvpal_1_1fourphase__lib_1_1Configuration.html</filename>
    <base>vpal::report_lib::JsonSerializableObject</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>ade925c3d7d072f606e1991070e785ec6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>aba26d44f328ac32c49a8619a65c19a8b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_file</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a2a9719b64ef701c0343e988dc9c0ecfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_nominal_error</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a3b4a158a7a4cad80c8732bda04f0204b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_tolerance</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a17e82eee032576fdc87bb5ae98a2f939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_directory</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>ac8e268ede485242d84f6c0a9a7c21953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>frequency_group</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a48f177101726a2b6f3a584a29a1a83c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_number_to_select</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>aace9bf04acba065c77f3eed42e918f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_snr</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a8749f5d67a1678bc3759664aaff69344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_qcode</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>abf79db98f2d106ecc81db3d93dfdb04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_snr</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>aad6962d592e7ec1318b7b09aa5f90c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mode</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a75990413c1c098db9f35569d77597a34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>network_reference_station</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>ab63f3467b60cf489ef0fa7b8420ccd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_proc</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>ac7f3d0b3242952249530451c622183c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sigma_cut_factor</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a3ab9a202ca0eb0233379fed50ec9f1ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start_scan_limit</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a4aa6c0f2d5dbb3158bc8b147e1374f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_scan_limit</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a416f984edf217a4cb8ce9502f99ccbf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>target_stations</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a67a6a76df9354d65ea3d93959ac1c10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use_progress_ticker</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a80475ebd24dfca1f25a91651e0e0cbe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>verbosity</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1Configuration.html</anchorfile>
      <anchor>a556df04a333048e629167d91f4ac7899</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::utility::ContinuousQuantityFilter</name>
    <filename>classvpal_1_1utility_1_1ContinuousQuantityFilter.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1utility_1_1ContinuousQuantityFilter.html</anchorfile>
      <anchor>acbdb812d7c2e763df55a090153fa7669</anchor>
      <arglist>(self, quantity_name, lower_limit, upper_limit, invert_selection=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>does_object_pass_filter</name>
      <anchorfile>classvpal_1_1utility_1_1ContinuousQuantityFilter.html</anchorfile>
      <anchor>a8eaaaf5832df994e84f474fd3df2432f</anchor>
      <arglist>(self, obj)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>invert</name>
      <anchorfile>classvpal_1_1utility_1_1ContinuousQuantityFilter.html</anchorfile>
      <anchor>a5a4aafe20efe2649e1c2a50fa5175141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lower_limit</name>
      <anchorfile>classvpal_1_1utility_1_1ContinuousQuantityFilter.html</anchorfile>
      <anchor>a4761e592822b034514d8ad0ed7cb5354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>quantity_name</name>
      <anchorfile>classvpal_1_1utility_1_1ContinuousQuantityFilter.html</anchorfile>
      <anchor>a6770be3fdfa7b2b23f11f8811037363f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>upper_limit</name>
      <anchorfile>classvpal_1_1utility_1_1ContinuousQuantityFilter.html</anchorfile>
      <anchor>aff8dca875ec5061580ae9cc4ea05d1c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>corelarray</name>
    <filename>aedata_8h.html</filename>
    <anchor>structcorelarray</anchor>
    <member kind="variable">
      <type>corelsum</type>
      <name>data</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a2a460d751e69f1efafe46a1a1230ce32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ab5703bc97a367633c1648eccc36baa55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyval</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ad7c2baf0ac415613e99a7837bffe9358</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastorder</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a1cf07395ae03ada7998ba5f04d7027ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>abfa021a38ee487108b5f21aa54fdb156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>parent_root</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a07731515e479e3f00e7660a59ed5a85c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>afio::afio::corelsum</name>
    <filename>classafio_1_1afio_1_1corelsum.html</filename>
    <base>afio::afio::AFIOStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>corelsum</name>
    <filename>adata_8h.html</filename>
    <anchor>structcorelsum</anchor>
    <member kind="variable">
      <type>short</type>
      <name>archiv</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a477f5be8b05f27dbc65a0dc001d942dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a4a5e5da325969cc04fcf59776b893791</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>clock_diff</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a42543465ea1525b29964b25c75c88e22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>corel_vers</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abbcc6c43f0ed220348b1cb5a3e5e65b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>corstart</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a16493e142d9d202123a44dd033bacccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>corstop</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>afd649bfb3714b75107f6da37ec2beb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>eqts</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a7c302b3be1048ddafde8f2742ab31f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>expt_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a8a33e59115eb429a9a462cacd4bf5692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>extent_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aabea85727a084a251dec20a4f7b1e9e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fname</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>acd01a65f080dfd54e3f48d1cff496520</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freqs</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a07b0984b928da542db3f7758878f475b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lags</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abc00638a5ecb07591afdcfb6bbdb5df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>procdate</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a21eb484600599503c7e0d25ae0d3810d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>quality</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0b1aad4ccd55b889282356119c7a1cc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>refclock_err</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a177f37a3d8a4d0d550daea85a859afdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>refdrive</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a2782118a1c8e5495c92906b7bf8afbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>remdrive</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ad0006ec6b253b8bd0184642a3800f283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>root_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a90423c4c61824003ca833fb58a43cc2a</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a6a71e51e232bdfc8b73ddff7cdc23ed5</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sduration</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ab304f6e9b2ea4ffe7ffccf1a1883995e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>size</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a608f1e81172fb759ef6a520afcc330e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a5db920a0f4c7fec48e7480467366b576</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ssec</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a05f7a6270a759bbe0a2f5f6ccec447f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>startsec</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ae16d69ca4d465952a0fff82365bfe4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a39d2f854c37b33243d21c9c7ed7e1838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time_tag</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a4b8b4945476cc79038b9db92726b35fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>version</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a7f5481583aa2496c77500714ed7c5718</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::count_instances_of_type</name>
    <filename>structhops_1_1count__instances__of__type.html</filename>
    <templarg></templarg>
    <templarg>N</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>typename std::tuple_element&lt; N, std::tuple&lt; T... &gt; &gt;::type</type>
      <name>current_type</name>
      <anchorfile>structhops_1_1count__instances__of__type.html</anchorfile>
      <anchor>a1f2de359ab2f272fb81d8032e6622190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static std::size_t</type>
      <name>value</name>
      <anchorfile>structhops_1_1count__instances__of__type.html</anchorfile>
      <anchor>afe10845fc7d5ad3f9be5febfd2832433</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::count_instances_of_type&lt; XCheckType, 0, T... &gt;</name>
    <filename>structhops_1_1count__instances__of__type_3_01XCheckType_00_010_00_01T_8_8_8_01_4.html</filename>
    <templarg></templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>typename std::tuple_element&lt; 0, std::tuple&lt; T... &gt; &gt;::type</type>
      <name>current_type</name>
      <anchorfile>structhops_1_1count__instances__of__type_3_01XCheckType_00_010_00_01T_8_8_8_01_4.html</anchorfile>
      <anchor>adbce08cb91f91463f71b3609e7ec883c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static std::size_t</type>
      <name>value</name>
      <anchorfile>structhops_1_1count__instances__of__type_3_01XCheckType_00_010_00_01T_8_8_8_01_4.html</anchorfile>
      <anchor>a6b5985df1385f4c2996eb708f564c389</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>counts_global</name>
    <filename>type__120_8h.html</filename>
    <anchor>structcounts__global</anchor>
    <member kind="variable">
      <type>int</type>
      <name>cosbits</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a6ebcccb480de9117b9a4bf46167cd9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct lag_tag</type>
      <name>lags</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a3b95527c904536be4c1d30777b710164</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sinbits</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a0d39850ceb9aec6d716d5d53db43441f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::counts_global</name>
    <filename>classmk4io_1_1mk4io_1_1counts__global.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>counts_per_lag</name>
    <filename>type__120_8h.html</filename>
    <anchor>structcounts__per__lag</anchor>
    <member kind="variable">
      <type>int</type>
      <name>cosbits</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a47baa7edd7a47f24285488c04daa6d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>coscor</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a9514b6533474622ba60d998186379555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sinbits</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a50c0ce850000df3e8d68e3dd73b6e01f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sincor</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a43989047afce461dae7b4dedd8eb79bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::counts_per_lag</name>
    <filename>classmk4io_1_1mk4io_1_1counts__per__lag.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>CUCC_port_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structCUCC__port__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>crate_number</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a03b736c5519fe39dcc4cd1717b51bf40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>port_A_number</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a35548ce3bc4c7dd4946de4bf2af858fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>port_B_number</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ae804e7b93cf5664d6985117568194e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>server_envname</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a9d9b4e21049872fc45f17214dd9f0b32</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_Block</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__Block</anchor>
    <member kind="variable">
      <type>char</type>
      <name>blockId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a2ce4ab9380ee677c0ad2012609935edf</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>struct Cvex_BlockMode *</type>
      <name>mode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a49ba36fe0d38c45757892eed7c36f2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mux</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a1969c2ccae165c129a895e02ea018807</anchor>
      <arglist>[MAX_MUXS_P_BLK]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_BlockMode</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__BlockMode</anchor>
    <member kind="variable">
      <type>char</type>
      <name>defId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ae3b6ed15f8d0ed03d7600d74910a5b99</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>enableTap</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>adcd23921eaf9888e6c7ca82e3ba8be49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>headerMode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>af9efa6023cab3901b1d9e1959ab2d636</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>invalidateOnTapMove</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>aa4996ee674209e444ac953ab28c46176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>lCellRotrMode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a83cd4a11133630e7d03b901b651f0e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>lCellXDly</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ae00e8b1faec179923c29693aa7d8aee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>lCellYDly</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a2e91ddb62b8ea43b079f92e184cc0bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rCellRotrMode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>abf5c496d5f925da474749a1ee02fbf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rCellXDly</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a4079120c934b556e30c38c07d90c9913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rCellYDly</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a2c23bfde0643f6c95e10ef086a91440a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_Board</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__Board</anchor>
    <member kind="variable">
      <type>struct Cvex_BoardParms *</type>
      <name>mode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a1a956806154f849445a9e5dff2073d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>numOfSections</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>aed967c158ad7feca1c0a954319c404ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cvex_Section</type>
      <name>section</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a0c5c6ad8d4f2491ff338e5867971e98b</anchor>
      <arglist>[MAX_SECTS_P_BRD]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>segId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a153b07bdda95ce359bc7c9c0d721d1ee</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>sliceId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ad6a47b19c4d292b6bd4696937e035957</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_BoardParms</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__BoardParms</anchor>
    <member kind="variable">
      <type>short</type>
      <name>accumRatio</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>acfa2d2a0b318d33882ea5591df8d03fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>bocfShsmpRatio</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a9d45cb227998935b81c2fb508721a957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>dataShsmpRatio</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a533702c5efe420b9bd51190d779645c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>defId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a46ee9fc5cbcff862513687ff8c5704d7</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sampleCntPerLagEnable</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ae457697219d9a9d2f71c6499818ca474</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_Chip</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__Chip</anchor>
    <member kind="variable">
      <type>char</type>
      <name>input</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>abc0add38b664f55d348636095c7357f1</anchor>
      <arglist>[MAX_CHIP_INS_P_CHIP][MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>struct Cvex_ChipMode *</type>
      <name>mode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ab72ccd75313ce5fad463ced09dfdd284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>relChipNum</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ac9aafcb1ce98c7c894dccf5b4d101a20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_ChipMode</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__ChipMode</anchor>
    <member kind="variable">
      <type>Cvex_Block</type>
      <name>block</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a41912021f4da87aecfce85eb039e6340</anchor>
      <arglist>[MAX_BLKS_P_CHIP]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>defId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>aef7e9e5d8848ef6cf45fadd52616213e</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>numOfBlocks</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a19cd9c67c94be5b2bab0105ed86f4699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>numOfSnakes</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a801b51a6161a4ce5fb11a17129c4c184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cvex_Snake</type>
      <name>snake</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a9d7417ab2ad2b20789ec6b6a9fa82f6d</anchor>
      <arglist>[MAX_SNAKES_P_CHIP]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_Config</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__Config</anchor>
    <member kind="variable">
      <type>short</type>
      <name>auto_corr</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a654db0e252136318a125096fc6bfda54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>defId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a5d943b671af15dd4ef22d6a2370d369a</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ignoreChanNames</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a4a28b419b2b6459cc1cffdfa11a1769c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Cvex_Mode *</type>
      <name>mode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ab616cab02421e93566da4a49d502685b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rev</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a68183cc37ce6fcf3702e334d7ea1c006</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_Mode</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__Mode</anchor>
    <member kind="variable">
      <type>Cvex_Board</type>
      <name>board</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>af281c68c52b3a9dfbad73146377d7cd4</anchor>
      <arglist>[MAX_BRDS_P_CORR]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>defId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a2d3cf87d9fe470072131cc989f79ba9a</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>numOfBoards</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a6f8442d3b7afeaa5df255a14ee38d0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>numOfXPolPairs</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ab516d4ae90e06e6f41b699dcbf9e7dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cvex_XPolPair</type>
      <name>xPolPair</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a2bb5fe3a8a9c3653fcef7f3730f01745</anchor>
      <arglist>[MAX_XPOL_P_BRD]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_Section</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__Section</anchor>
    <member kind="variable">
      <type>struct Cvex_SectionMode *</type>
      <name>mode</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a6b3498cc80fd905095bce539345a9184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>phyChipNum</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a1f2a1dad7ad8fc00a66b4c49c5469518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>refId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ae37a0e3b9a774d375ed6fcd8b2e5640d</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>remId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a81d6ae6554cd230199229d529222d0f5</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_SectionMode</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__SectionMode</anchor>
    <member kind="variable">
      <type>Cvex_Chip</type>
      <name>chip</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a6bdbd8cb94d43b1b96f9ac175efdaae7</anchor>
      <arglist>[MAX_CHIPS_P_BRD]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>defId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>ace1c2d67cc5aae4243f25c84d2c5d2d4</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>numOfChips</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a7acd37104fcbe8c3d4db11803dd855eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_Snake</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__Snake</anchor>
    <member kind="variable">
      <type>short</type>
      <name>lenOfSnakePath</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a2eb52f6d04f224a32c068f8902af9084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>path</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a8917ff327a6e8c813d9a89c963a807fb</anchor>
      <arglist>[MAX_BLKS_P_SNAKE_P_CHIP][MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>refId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a1b2c6b40e7e91f475dce0addc951a4df</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>remId</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a3410ec0cde3dba66a1292316d179ecc8</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>type</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a3a677b843f0975ca46396fcd5f1c0e30</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cvex_XPolPair</name>
    <filename>cvex_8h.html</filename>
    <anchor>structCvex__XPolPair</anchor>
    <member kind="variable">
      <type>char</type>
      <name>chn1Id</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a42c8a4f729338f965dfd34a66e4a542f</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chn2Id</name>
      <anchorfile>cvex_8h.html</anchorfile>
      <anchor>a684c801b7a5568dcc87f516f53ea5ce7</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>d2m4_pcal_list_node</name>
    <filename>d2m4__pcal__record_8h.html</filename>
    <anchor>structd2m4__pcal__list__node</anchor>
    <member kind="variable">
      <type>struct d2m4_pcal_list_node *</type>
      <name>next</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a1e00fadd59f815760e35791784918e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct d2m4_pcal_record *</type>
      <name>pcal_record</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>aac377d3067e35c0e694ab21b581d5dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct d2m4_pcal_list_node *</type>
      <name>previous</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>acd0458ef349bc5573acd37ce21dc93e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>d2m4_pcal_phasor</name>
    <filename>d2m4__pcal__record_8h.html</filename>
    <anchor>structd2m4__pcal__phasor</anchor>
    <member kind="variable">
      <type>int</type>
      <name>dstr</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a597deaf1ee6331986bd0c489e8446b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frequency</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a711d5d07dd4ff2a1f7a471013d0af175</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>imag</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a4455089629cd842677895e9f7b442820</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>polarization</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a58282a3b3a9e45a5861ef094afb7ad21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>real</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a9243878cc722bcf3e2d04c4410151262</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>d2m4_pcal_record</name>
    <filename>d2m4__pcal__record_8h.html</filename>
    <anchor>structd2m4__pcal__record</anchor>
    <member kind="variable">
      <type>char</type>
      <name>antenna</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a43a4b1cea5ef3694a5ff8b4ac9418000</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mjd</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a6a757977bcff1e05c84d13793339cc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nchannels</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a8c762a6b362025637a5a36363bfc1ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntones</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a502d44473b5e7b8575cab451bc919b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct d2m4_pcal_phasor *</type>
      <name>phasors</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>a2a3a607d265815e20c879f128ee88fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tint</name>
      <anchorfile>d2m4__pcal__record_8h.html</anchorfile>
      <anchor>ae35254c72136098a769cc454d5733b36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>data_corel</name>
    <filename>pass__struct_8h.html</filename>
    <anchor>structdata__corel</anchor>
    <member kind="variable">
      <type>struct type_120 *</type>
      <name>apdata_ll</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a0ea1ecb45ddc690cda4d67b9885dd38c</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_120 *</type>
      <name>apdata_lr</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a3e5f4ea7c89e2c1b194e48511b1aa527</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_120 *</type>
      <name>apdata_rl</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ad2fe12e4d77ebc9c89d82728829caeb1</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_120 *</type>
      <name>apdata_rr</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ac425e93fbea763e70bbfe3d9ab345d0d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a0db826588b23fc354f43114c30f7b016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>lsbfrac</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a5c8c06ec16faeab995567df3d5e11f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hops_complex</type>
      <name>pc_phasor</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a36aef802b929a5f654985d2cff0ae279</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>struct interp_sdata</type>
      <name>ref_sdata</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a305778d1a5fe13dfdf41eeaf470a9649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct interp_sdata</type>
      <name>rem_sdata</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa8efa5b4a9a12212701f862d3da6a822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sband</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa6c41a7149d8c66fbfcad73e7f0e98c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hops_complex *</type>
      <name>sbdelay</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aded93176213e9173b6f5322966bfa270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>usbfrac</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a9671e24455fd24e9195cf3e680592c84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>data_value</name>
    <filename>vex_8h.html</filename>
    <anchor>structdata__value</anchor>
    <member kind="variable">
      <type>union data_value::@22</type>
      <name>data</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a598076cec51d6a543a4948a11a34b345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>af89dd34e7e8a56cfc5269467d112acf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>units</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a474f52ad20e9ec210d41a279e08d3aa1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>data_value.data</name>
    <filename>vex_8h.html</filename>
    <anchor>uniondata__value_8data</anchor>
    <member kind="variable">
      <type>struct sky_coord</type>
      <name>decval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2cf8ace003af4f6902da5302bfb79ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>epochval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>afa797b149abe7b4c34043a66cb531d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>afb42920bc738a35518e3109fc5b51dc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>linkval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a253ee7c7c54ff5d05f776814cffdb758</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>struct sky_coord</type>
      <name>raval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a204220a897800bd7b09e0df020f4c74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>realval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ac9d6895a7f8c549bf3a8364dfaba3b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>strval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aa4c46c3cd946b1ac6a21982b20b287cc</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>datasumm</name>
    <filename>summary_8h.html</filename>
    <anchor>structdatasumm</anchor>
    <member kind="variable">
      <type>int</type>
      <name>begin</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a694b94703852784cf2b620b4d6df2985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>btq</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>ad32e85cbc3fe21faf380ee31307c8854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>btq_allocated</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>af219dc00f9e7adbfc4ed6bf664eeccf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a17d0dc1bb90580ef4632c1101ce7a889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>experiments</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>ae26a90e25caa2e39487ddedc96ed91f3</anchor>
      <arglist>[MAXEXPTS]</arglist>
    </member>
    <member kind="variable">
      <type>struct frqexp</type>
      <name>fqex</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a27966294bd4014b9519524e43a327fdf</anchor>
      <arglist>[MAXBANDS *MAXEXPTS]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>frequencies</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a85d68b44ae6f63e72a1ec1cbee53ab86</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbtq</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>acdfc78c029a58e2f0e6c21f016822756</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nexp</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>ad82318211213abb54841cdf25e659975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nfqex</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>abdc054e9d4f949a379453c74ff87788f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsource</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>abcccc66f200bd6aa29490f38f778294d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>polarizations</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a3232950ae92dae76a4cdf16c0a881c1c</anchor>
      <arglist>[49]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>proc_begin</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a1e350728b92be8fb4b034d34785aa3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>proc_end</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a7f428c321c94903720714ecfc1240d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qcodes</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>afb68ecf9daf6380782a2086527f87bca</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snrmax</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a9bc675bd7c3c88ea5b2854af25b58d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snrmin</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a23eab18eac4870baea8e867ea5238785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct source_info</type>
      <name>source</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>aec53ea1c528f7ac8aea64db14e0c5fe2</anchor>
      <arglist>[MAXSRC]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stations</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a632941fd96c4d0ab6d7ad646303bdeec</anchor>
      <arglist>[MAXSTTOT]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>version</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a15e3d97dc246088899ef1ec239dcceb6</anchor>
      <arglist>[MAXVERSION+1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>date</name>
    <filename>mk4__typedefs_8h.html</filename>
    <anchor>structdate</anchor>
    <member kind="variable">
      <type>short</type>
      <name>day</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>aad570045b0c46ad2ec1333516b19d826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>hour</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a86616c8f14820a1b884493b3f70d6790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>minute</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a0a89d97324551f72b471a80cad3b7b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>second</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>afda99d94a7ee7ff3dda1dbce576ba524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>year</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>aef68a8508dda64a80f5fe08202e0da4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::date</name>
    <filename>classmk4io_1_1mk4io_1_1date.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>datec</name>
    <filename>general_8h.html</filename>
    <anchor>structdatec</anchor>
    <member kind="variable">
      <type>short</type>
      <name>day_of_month</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a2ac9b56b75283431003a8fa3da81c9fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>day_of_year</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a5bc092d6333a585b32e06c2d22c54db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>hour</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a57653ce03889c7d739f683041edcbf7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>minute</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a721999380aa1216d53f095fb6c597b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>month</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a89ef9a5cd3cef768306f48e3adfec19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>second</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a6374567a4f8a49f0d4790ecb9b9631bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>year</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>ad9125ede3e840921470399b04f318cba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>datef</name>
    <filename>general_8h.html</filename>
    <anchor>structdatef</anchor>
    <member kind="variable">
      <type>short</type>
      <name>day</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>ab0d32daf92ab312d1277176460af701e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>hour</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>ae599b78e2c960ade86704f2737b90da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>minute</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>ac44340af84d321d5966a06110c32538c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>month</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a519c8b6aab0bd50b7d8cf879f63ad725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>second</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a9fa47b9ba5549d0c224ffe447a14b814</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>year</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>ae73fad0c941d3769a672373f36ce2d44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dec</name>
    <filename>vex_8h.html</filename>
    <anchor>structdec</anchor>
    <member kind="variable">
      <type>short</type>
      <name>dec_degs</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a750c5b637d11af4825b264431bcdd94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>dec_mins</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a25d2d9056220cbe898de87f94e5f7a2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dec_secs</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ae1009c11505be19ca1abc18a3d24240e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>def</name>
    <filename>vex_8h.html</filename>
    <anchor>structdef</anchor>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a246c488fe0fd38511a035ecca9fe7d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a5da2b89fd96a74c974be51e48ece59e1</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a5c0cf53be931ee8dc5b6d87785311bb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>def_list</name>
    <filename>vex_8h.html</filename>
    <anchor>structdef__list</anchor>
    <member kind="variable">
      <type>int</type>
      <name>blockno</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2f937c624fab6b60643eeaf4c6515b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>defno</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>acd880820aeeec32936702c689587bbfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::ffres2pcp_lib::DefaultChannelDefines</name>
    <filename>classvpal_1_1ffres2pcp__lib_1_1DefaultChannelDefines.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1DefaultChannelDefines.html</anchorfile>
      <anchor>ae1d29e35915bf5d85b1e165257af88bc</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>all</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1DefaultChannelDefines.html</anchorfile>
      <anchor>a1924620b2eab2b97c408eed70134dbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>legacy_s</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1DefaultChannelDefines.html</anchorfile>
      <anchor>ab6c67ce0d0c1ef0a770a010aa46a7c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>legacy_x</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1DefaultChannelDefines.html</anchorfile>
      <anchor>a0e0cedfde8feb7e82c7969ae2ca429b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>vgos</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1DefaultChannelDefines.html</anchorfile>
      <anchor>a703eb99581d0b5ba6143eb2d23c0a766</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::pcc_delay_fitting::DelayFitResults</name>
    <filename>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>a8ab0b48bcc2c301129cf81acbad5cfa8</anchor>
      <arglist>(self, fit_data)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>delay</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>a6d59c2920f9eaef9c623911f6d427f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit_data</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>af4d4b682a69787f40887e656b79a328f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>model_dc_phase</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>a32dd00864fde4038348801dd840e2487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_offset</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>aaec1d0da419bae6ffc0eb8e4ec062054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_rmse</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>af7f395750f370391f6345e3c53651d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>residuals</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>a2147e3605b25ec20808a4444c7510171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>valid</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1DelayFitResults.html</anchorfile>
      <anchor>a907965aa23fe92d1af5af543b31f4c01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>discinfo</name>
    <filename>lvex_8h.html</filename>
    <anchor>structdiscinfo</anchor>
    <member kind="variable">
      <type>char</type>
      <name>disc_model_num</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a801c214788f8314f376d7b68d7b3f713</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>disc_serial_num</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>ab7bbb8df61f63e37a888d9ab1f407e48</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>disc_size</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>ae2dff67de444f60a0a7a1cebd8cd43ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::utility::DiscreteQuantityFilter</name>
    <filename>classvpal_1_1utility_1_1DiscreteQuantityFilter.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1utility_1_1DiscreteQuantityFilter.html</anchorfile>
      <anchor>a325cc48d10ef84bdd29bf453c1356bff</anchor>
      <arglist>(self, quantity_name, quantity_value_list, invert_selection=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>does_object_pass_filter</name>
      <anchorfile>classvpal_1_1utility_1_1DiscreteQuantityFilter.html</anchorfile>
      <anchor>a8c2351839f58edf581a6d7715c017bba</anchor>
      <arglist>(self, obj)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>invert</name>
      <anchorfile>classvpal_1_1utility_1_1DiscreteQuantityFilter.html</anchorfile>
      <anchor>a87c94415a2b9f4db672e11afcb393062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>quantity_name</name>
      <anchorfile>classvpal_1_1utility_1_1DiscreteQuantityFilter.html</anchorfile>
      <anchor>af02313be67ce44e9cb8057e5c9d1e9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>quantity_value_list</name>
      <anchorfile>classvpal_1_1utility_1_1DiscreteQuantityFilter.html</anchorfile>
      <anchor>abbfabdf82af0c295b8829426d154737c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_NDArrayMath::Divide</name>
    <filename>structhops_1_1MHO__NDArrayMath_1_1Divide.html</filename>
    <templarg>numerator</templarg>
    <templarg>denominator</templarg>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1Divide.html</anchorfile>
      <anchor>a8cafe10c0ed228bfd249b002af0ceb93ae38ca17a2c8763c22e6ec79846af2346</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1Divide.html</anchorfile>
      <anchor>a8cafe10c0ed228bfd249b002af0ceb93ae38ca17a2c8763c22e6ec79846af2346</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_NDArrayMath::Divide&lt; numerator, 1 &gt;</name>
    <filename>structhops_1_1MHO__NDArrayMath_1_1Divide_3_01numerator_00_011_01_4.html</filename>
    <templarg>numerator</templarg>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1Divide_3_01numerator_00_011_01_4.html</anchorfile>
      <anchor>a8572c2790f45cd65abf28551538eff94a885eb1c58cb4fbf609e62be4703df161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1Divide_3_01numerator_00_011_01_4.html</anchorfile>
      <anchor>a8572c2790f45cd65abf28551538eff94a885eb1c58cb4fbf609e62be4703df161</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>drive_init_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structdrive__init__struct</anchor>
    <member kind="variable">
      <type>float</type>
      <name>capstan_relative_diameter</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a7d92c5f336bcae60c67dd4008ffc3536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>computer_name</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>abb5ba196de35e774c41cc52f1bb5f3ae</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>struct headstack_DIM_connect_struct</type>
      <name>DIM_connect</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ac373ce924d3bd2e84b80f7b658fdf7d2</anchor>
      <arglist>[MAX_HSC]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>drive_type</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a5dc4a44af45ea5046f01cc8de1ef2d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct headstack_parms_struct</type>
      <name>headstack</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a3f856248a95c80b1733adbb633c79056</anchor>
      <arglist>[MAXHEADS+1]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mcb_addr_id</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a1a32761c3acca4dac79dbc21dce8b816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mcb_addr_start</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a0d7a1e84bc20854a03987ccb31c465c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct moni_read_struct</type>
      <name>monitor_module</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a8efbde66f95731c4d9c0f4c4a7859f68</anchor>
      <arglist>[MAXHEADS+1]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nheads</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a1b3911ab6c4cbde088434224f08703b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>tape_acceleration</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a374893f5476453bc2fccb93786f9527f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct vacuum_struct</type>
      <name>vacuum</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ab086e06d971a5ab485a4cb566e1328f0</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dstats</name>
    <filename>general_8h.html</filename>
    <anchor>structdstats</anchor>
    <member kind="variable">
      <type>double</type>
      <name>ref</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>aeba583bfbeea8309a140d8bc199c8e2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rem</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>aa7f6241b845f04285059195bd97cdd1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ffcontrol::ffcontrol::dstats</name>
    <filename>classffcontrol_1_1ffcontrol_1_1dstats.html</filename>
    <base>ffcontrol::ffcontrol::FFControlStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>esum</name>
    <filename>aedata_8h.html</filename>
    <anchor>structesum</anchor>
    <member kind="variable">
      <type>corelarray *</type>
      <name>cdata</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>aeb5a85acd1f5ff2203c2cad8d20341b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fringearray *</type>
      <name>fdata</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a0e1ae1d1e795229afaf5eba45f2f07a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quadarray *</type>
      <name>qdata</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a5f86a9569e39d8c8821d584565f3124e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rootarray *</type>
      <name>rdata</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ada63a2c76257e87fa4bfecfb067d3e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>trianglearray *</type>
      <name>tdata</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a5b7351638813f38c179e463262d66615</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>evex_struct</name>
    <filename>evex_8h.html</filename>
    <anchor>structevex__struct</anchor>
    <member kind="variable">
      <type>float</type>
      <name>ap_length</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a394146683005e139e7b60fe1d6695da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>corr_config_key</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a3cc92ad82afef3b8a3814c5482226576</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>cvex_name</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a4bc496bd057198f656e4ab3e3d4f9d57</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>exper_num</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>ab5f3f3b6c2fe304f285c8c0e80761441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lvex_name</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a16923db2cd10fa9cc30ee8818cf26fdd</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mirror</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a66d1a7035e9364dd5ad24273403de4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nst</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a5d05cf005d458703cd8755c36f4d1a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ovex_name</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>aa28588296c2a24d2a10fa0e467251258</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>realtime_latency</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>ac8b06f9e045f72e399b4089c39746ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>speedup_factor</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>aa974c38f16cea9973ff7881661a0042b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct evex_struct::@17</type>
      <name>su_config</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>ac1c1ed6ddc32436a0f2d2a74a34f068b</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>svex_name</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a07ba7e92ed442653626298d4442d68a1</anchor>
      <arglist>[MAX_PVALSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tape_mode</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>a6e5b99bfa73128a735b9fba1ef5e7cc9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>evex_struct.su_config</name>
    <filename>evex_8h.html</filename>
    <anchor>structevex__struct_8su__config</anchor>
    <member kind="variable">
      <type>char</type>
      <name>station</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>ae8ed3f2846110837f3adb8015ccad5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>su_config_key</name>
      <anchorfile>evex_8h.html</anchorfile>
      <anchor>ac8f9150aaf49e6779b21b91e0da34db4</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::ExperimentMultibandDelayAverager</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a00cb16635acea06f7927eb552bbed880</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_band_data</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a4849951873cbcdd846a34cedb86aabfa</anchor>
      <arglist>(self, exp_pcc_band_delay_dat)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>average_band_delays</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a4be083aa134462d8c04316725897eadf</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>band_data_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a7d76cd77d178884b86a7597b69a0916b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>band_diff</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>afb4b456d8d3cfcb0cb116ef5349e080e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bands</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a0effe1eaef01a0bee07dc919dbe4501f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dual_pol_mean_delay</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a29d5f21913c98e733a6d73a65f5d5ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>experiment_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>aa2585f45e8fd13101d76fb87fa56e70b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>file_lines</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a8f2289bb3ecad27b771c61177d534003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_delay</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a9d6e837274f96d3b88c0d9f7affa5543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_scan_delay</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a942eb380ab9d370bc9f6c2e85200154c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pols</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>af94cca6342d89276ca0d2e0af62db8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_abs_time</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a9c96243da199f880464faee30f8efe47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_az</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a4219c481f5699355bb7bf195efb84877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_doy</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a2e9087576c26f2cc40fe5a2d97e73bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_el</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a175b1c5cfc7f2ec929ceed4379a7cd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_hour</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>afd52749fa1e7de8206686785f391a219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_id</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a1080253a78677f629254bacbd547ff8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_min</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a4740153123d3c71a0bf820c1e5920a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a1457055c0ca6d0f0221bc1d68b840d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_rel_time</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a8945bec46c0810239fb7d981430e832f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_sec</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a5601af57eb4d8cf0c466d8e0b4c1c88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_year</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a27e2988a12a7d13d4dd55446565a3919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>src_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a5610e7ca8f390a95c3a66d23f10a5d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_code</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentMultibandDelayAverager.html</anchorfile>
      <anchor>a6d19dc3eca5215ac8eb8445a39f842f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::ExperimentPccBandDelay</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>ad72ef4945729e3264ac3d8a422d64120</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>read_file</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>aa5a1991f8f98136d0edb0520612ad78c</anchor>
      <arglist>(self, filename)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>band_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>a40d3d2bd2fe86922d2f11d3b3449c409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>experiment_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>a169f6c730fa0f1332175655a096b0097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format_flag</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>a643bc9b8d00428a498b27b58a5e402bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pol_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>a5fac1ba5484b1f8a462298d5758cd38f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_pcc_line_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>af02e97b1dc4894c543159cf1e417c59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_id</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ExperimentPccBandDelay.html</anchorfile>
      <anchor>ac57d5e3ec6054ed7dcb6e85bf606352e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::ffres2pcp_lib::ExperimentReportData</name>
    <filename>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</filename>
    <base>vpal::report_lib::JsonSerializableObject</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a12752c1d1b5375749553365c71349ec4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>create_report</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a4011972a1afb05934bb504d2790ac08e</anchor>
      <arglist>(self, report_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a0955eba7c07c328aae4fa1805f21c831</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>import_json</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a1eecf5e9dc903538a53fecd6dc557a1a</anchor>
      <arglist>(self, json_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_report</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a2e2d10ec283b4d03bc681164f78c2e6b</anchor>
      <arglist>(self, report_filename)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>all_blc</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a0c3e7b4115e75e15288964df81fc5534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>apriori_sspcp</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a4ac3d25cb476aa26b56d2ddfdeb0f028</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_freqs</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a2dff28065215164acf39a679f72c71ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>config_obj</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a4bb2fd7b9dbcb60ea4a7756fe195ed36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>generated_sspcp</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a3b6ee6caa70add9f345e5bbaa9439c40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fourphase_lib::ExperimentReportData</name>
    <filename>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</filename>
    <base>vpal::report_lib::JsonSerializableObject</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a4f316e1c2664899b225d30d5edd78157</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>create_report</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a0bd27df5304a68bd744f17656eb4a607</anchor>
      <arglist>(self, report_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>abe5181702672b6c2d8f49400e67e18db</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>import_json</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a58af7cd8ca1228231ac00ca0e512ec2f</anchor>
      <arglist>(self, json_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_report</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>ab7778a4e37f37386e766f81bbc6205ba</anchor>
      <arglist>(self, report_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>update_config</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>afe1a627b2588e73449631557a2657ee1</anchor>
      <arglist>(self, configuration_obj)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>config_obj</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a67c43b9ed02e956b7efe30cff31f1cb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>generated_station_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1ExperimentReportData.html</anchorfile>
      <anchor>a95362e0283b51b22d28582e96051227b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ExtendedElement::ExtendedVisitor</name>
    <filename>classhops_1_1MHO__ExtendedElement_1_1ExtendedVisitor.html</filename>
    <base>hops::MHO_Visitor</base>
    <member kind="function">
      <type></type>
      <name>ExtendedVisitor</name>
      <anchorfile>classhops_1_1MHO__ExtendedElement_1_1ExtendedVisitor.html</anchorfile>
      <anchor>a8ac0502f01cc0ed926c54517021e14ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedVisitor</name>
      <anchorfile>classhops_1_1MHO__ExtendedElement_1_1ExtendedVisitor.html</anchorfile>
      <anchor>a3f1b2b9961e585b92bc57e66fcede0ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>VisitExtendedElement</name>
      <anchorfile>classhops_1_1MHO__ExtendedElement_1_1ExtendedVisitor.html</anchorfile>
      <anchor>a9114b6b133878c008fe1cfe249ad8631</anchor>
      <arglist>(MHO_ExtendedElement&lt; XExtensionType &gt; *anElement)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fbands</name>
    <filename>difx2mark4_8h.html</filename>
    <anchor>structfbands</anchor>
    <member kind="variable">
      <type>char</type>
      <name>code</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aa31ea9f4cc994074fd7db0fdabf9bc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fhi</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a4bf757a8d92287f82904b9f15f5e0d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>flo</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>af2b6ebdf22219d2adfd2dd1d258befba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fblock_tag</name>
    <filename>difx2mark4_8h.html</filename>
    <anchor>structfblock__tag</anchor>
    <member kind="variable">
      <type>struct fblock_tag::@3</type>
      <name>stn</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a6ffbdc0fa99513a8f9acb2dc725045c8</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fblock_tag.stn</name>
    <filename>difx2mark4_8h.html</filename>
    <anchor>structfblock__tag_8stn</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ant</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a63b07e828bf016e976ff95d6ee07a105</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bs</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a7c9df801238abe28cae2675fd3166a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bw</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a823355b63ab3af0a0e4d1367e89abd1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a85844fef98218528192cc597d7617c83</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>find</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aea170e2cafb1337755c8b3d5ae4437f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>first_time</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>add2aaba7d0b77e16ff6195b175448f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>freq</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ab0038f6cab2d16ebdcf2e36d1779d8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_spec_chan</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a59de8da6bc17d65d9d7c76975477cba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pcal_int</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a4b9aa6d42ac6ef014cc4ca25ddb09cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pol</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a627a1f8f3e1f8a2a0cbb9aedc33ade8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>sideband</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a27d2b11e97368676947e0a486532e527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zoom</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a15913c103a5238e5a80ac2f498ee090d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ffcontrol::ffcontrol::FFControlStructureBase</name>
    <filename>classffcontrol_1_1ffcontrol_1_1FFControlStructureBase.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__eq__</name>
      <anchorfile>classffcontrol_1_1ffcontrol_1_1FFControlStructureBase.html</anchorfile>
      <anchor>a9d3a5f745142bd364e7c909484b2359c</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__ne__</name>
      <anchorfile>classffcontrol_1_1ffcontrol_1_1FFControlStructureBase.html</anchorfile>
      <anchor>a2b7631256b24502a34f8f3b4172d57ba</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>printarray</name>
      <anchorfile>classffcontrol_1_1ffcontrol_1_1FFControlStructureBase.html</anchorfile>
      <anchor>a87c532352fb382ab60a98077b2c32b3a</anchor>
      <arglist>(self, a)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>printsummary</name>
      <anchorfile>classffcontrol_1_1ffcontrol_1_1FFControlStructureBase.html</anchorfile>
      <anchor>a097479c422d8dacc00399c7c91a44e51</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::ffit_chan_struct</name>
    <filename>classmk4io_1_1mk4io_1_1ffit__chan__struct.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>fileset</name>
    <filename>fileset_8h.html</filename>
    <anchor>structfileset</anchor>
    <member kind="variable">
      <type>short</type>
      <name>expno</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>aa97284d05e1496152eebec876ee4f5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fstruct</type>
      <name>file</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>a2db7ed0d980f7ea6c3927289884c01d7</anchor>
      <arglist>[MAXFSET]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>maxfile</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>a14d23479117564d5fabb31a1890c678d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rootname</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>aaeb98c6594107d61ed7ea3bbd6aa17bd</anchor>
      <arglist>[40]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scandir</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>af21ae88cc0cf2bfd27de3e12d9c48d85</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scanname</name>
      <anchorfile>fileset_8h.html</anchorfile>
      <anchor>a4062ead97675b88a97ebe180b272d1ee</anchor>
      <arglist>[32]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>flag_wgt</name>
    <filename>type__120_8h.html</filename>
    <anchor>unionflag__wgt</anchor>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a45ca170b7ffd6ddcecca3ff4b1f0fe9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>weight</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a5fb3486bd6cf3fb0c88923a27e91cc88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::flag_wgt</name>
    <filename>classmk4io_1_1mk4io_1_1flag__wgt.html</filename>
  </compound>
  <compound kind="struct">
    <name>flist</name>
    <filename>adump_8h.html</filename>
    <anchor>structflist</anchor>
    <member kind="variable">
      <type>char</type>
      <name>format</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a380a5f29cfcf156df7366e0c5de75d85</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a1f57d5a256158d4fe5d69d2022dfb864</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>adump_8h.html</anchorfile>
      <anchor>a4ff9ce8ecf1ed83a70c86cb85a34e084</anchor>
      <arglist>[20]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>freq_corel</name>
    <filename>pass__struct_8h.html</filename>
    <anchor>structfreq__corel</anchor>
    <member kind="variable">
      <type>short</type>
      <name>bbc_lcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a174b255993c1be28f03cd7ab963b157f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>bbc_rcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ac0a46c8b4dee612155ac0342aaad2818</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ch_idx</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a9ffdd893c103335cd2078dd2c67dfab8</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ch_lsb_lcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a5ae40929b57bf953b3dbd1679bd9b4f8</anchor>
      <arglist>[2][8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ch_lsb_rcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a304d528feabdfeddf680e47a08b87687</anchor>
      <arglist>[2][8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ch_usb_lcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa847baec0da3ff20062ed8d995835f32</anchor>
      <arglist>[2][8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ch_usb_rcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a803f6e8f545fac9b0bc9f2cfb2704fb6</anchor>
      <arglist>[2][8]</arglist>
    </member>
    <member kind="variable">
      <type>struct data_corel *</type>
      <name>data</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ae186bfc3e79080695500fa54eb08bcf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data_alloc</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa6a8ed5f7e7e1a82934efe39a90b051e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fgroup</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a932d416dc5899efbbc8b700f17de162d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freq_code</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a99a5c15e2518b197ef3408ae2a65e793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>frequency</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa3a89400497ddcd5df56ce62c067dfa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a5c470da35f1cfd104f929340d42ec029</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mean_lcp_trk_err</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a59f3e60d818c76137c153a93c43de49c</anchor>
      <arglist>[2][16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mean_rcp_trk_err</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a0803ab8df440d569e994460c1396b828</anchor>
      <arglist>[2][16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pc_freqs</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a7fac770145f3c395b4b98eb7268e5a29</anchor>
      <arglist>[2][MAX_PCF]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>trk_lcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a2d9e821497cbbf1fab67da0df9fa7188</anchor>
      <arglist>[2][16]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>trk_rcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a74f00236cf118f51d51df195d871e076</anchor>
      <arglist>[2][16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>freqlist</name>
    <filename>freqlist_8h.html</filename>
    <anchor>structfreqlist</anchor>
    <member kind="variable">
      <type>short</type>
      <name>ref_chnos</name>
      <anchorfile>freqlist_8h.html</anchorfile>
      <anchor>ae4a3c581c7df98eceaa6664dcd428ce8</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rem_chnos</name>
      <anchorfile>freqlist_8h.html</anchorfile>
      <anchor>a6236497ae8565c8848e0f904e11c5471</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sky_frequency</name>
      <anchorfile>freqlist_8h.html</anchorfile>
      <anchor>ad22d8652276f2d16b6d5d24a93ce9c14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fringearray</name>
    <filename>aedata_8h.html</filename>
    <anchor>structfringearray</anchor>
    <member kind="variable">
      <type>fringesum</type>
      <name>data</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ab8773d84a1ebdbea00bb4411cfaffe97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>acc4decf94aed84a73a7402b53ba0aa3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyval</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a43f333fda0bc80de02887b5491a3042c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastorder</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ab7cfda43b23792da869f61f1326b2c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>accec7960e51c77a6f61aa7b23a3da239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>param_ptr</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ada0b8ccff97ca426a5047d52975ae362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>parent_corel</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>aa1601a85f8fe4a50816f7ac8089bb44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>parent_root</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a8e78f844992f7795804fa32dc4f3cfc9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fringe_file_manipulation::FringeFileHandle</name>
    <filename>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a66e277b657a7a7c2cf70bdf21413748b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_channel_frequency_tuples</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a15b38ca079ec5b0c270122772c730580</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_summary</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>aa68e232a262f1604004d4ee8ba719db4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>init_data_members</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>af50ece98e8bcc4f7133ec07addf531a4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>abd888fadd13704e70d6225926f11448b</anchor>
      <arglist>(self, filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_file_data</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a305668a2b02d857074b16039795e3ccf</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>relase_file_data</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a98a05da5e47c49baed09f120beae938d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>aaccel</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a75564255f3ee1ade38e0dd43ee5da553</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>adelay</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a1f88ea1114643da8fff9c227517c3780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ambiguity</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a728dcf893f62df1bdb633abefaf1e2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>amp</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a9ce2152652635497ce1514781cde73ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>arate</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>adb130c1ce6c9efbbfc010a2afecc1d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>archiv</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>aa22e839463ed341e6664f5ae6a9d5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>associated_root_file</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>aec74b06880ab332fcb2df635207a23fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>baseline</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a40e028a76af429fb7615f2f7bf9d6e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_file_hash</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a5736598b4c1d8e01e74da1826130fb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_filename</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a52ab9622c0478e9d57bdce83e2e699ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>corel_vers</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a59aac7f6790df80c4db4f7dc9da1c23d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>delay_rate</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a53135fa83063a59799beb324b3c78a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a8dd9acdab0c4ed4ed2469748518c6ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>duration</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>abf60d8b2ec5f3ce52b66e87208420835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>errcode</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ab2072beb5678c5ecb0d8cf04ccd55e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_name</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a7bbe4f3bd96d9fe2d832d21b44ec9f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>expt_no</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a684591e5eeda8f45446a6067ad5bf805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>extent_no</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>af1b5a5574e5d0f317c277dc74842eebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>filename</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a1f5f4a5b48d7c5c8f4af36cecdd326d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fname</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a22373ffc0df0324e970922ca9695c89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fringe_data</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>afd08fa650a7a96f8b6d49e7f5989dbf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>is_valid</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a57de1ade7c1ddf8260d629792e14f6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lags</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ab3f9d4015c80234a1de022952b0b9d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>length</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a3c41316e885feeb3a9bb80197e646cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mbd_error</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a73306da3bb875b89da7210c8c9d40bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mbdelay</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ab2f3af92c0b8ae83a62e9de840d00bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mode</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a3c6f0ceb9190345aa0f62d9c97ef69d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nchans</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a924f94ab7b9a4cf2783481ec9202f83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>no_freq</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>afa5a29f0e305629829d53e7ed20bc707</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>noloss_cotime</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a35cbc148e8fadf824e99c7c411bd4207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>parents</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>adf25e97a81d40cfd29d6a7e006b346f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pcals</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ad41f4805e00c86087052892040513aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a177375745a4e5eab9313fffd4b6f543e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a7e156666ef50cc0530e130d869d8c25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pol_product</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>aa7a8f8b14b6136f0c53249775a5200f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>polarization</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a7b620c33ec83645546e312fefdc8a64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>procdate</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a9e33a1dba9500b3e04a815209fb455a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>quality</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a43e1fed2f035634e7345c4e2c4ed8d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ref_az</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a44b367f33f902841f46f6a9d428a281a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ref_elev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a067bc572c62b557331c00b64970dae64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ref_freq</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a7e0d50b4eb9969b7eb4fc079e7035a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>reftape</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a2389d851ceddaf8d7d4c55bf04a19257</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rem_az</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>aa35290ea9d24b5f2a61c553689262c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rem_elev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a44e2382a3765c38190966b7c665ef05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>remtape</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a679bd0018949257f017858e0ecac4073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resid_delay</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a7956cdfc1ae65700ee2af7719cdb3f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resid_phas</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ad2c765a5b00e303a029f51d6a6624e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>root_id</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a0a1e0a22c7012305dd9b2a290d85a601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sbdelay</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ad6c8f6e1c681b5d468ba44c4ad0d6cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_id</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a1a7962989de4c5428d56f3e570eaa083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ad3a17b4edd6d68ac395565628f06851c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_offset</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a48771b2b43a36bf7cba5bad7165ed746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>set_string_hash</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>aed4e19892e53eea414a7184bb4a627dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a6aaf624bf742581b313a74eb39e32073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>source</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>adb4703def0cbe357c9137bf0fe7fa121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>srch_cotime</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ad934e8758f2046e19b596d72ccc13d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ssec</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>af5ab709650905a053871ab478cdc7e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>time_tag</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a5deafa4cd9f947e1e28a1d91de5e6bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>total_mbdelay</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a3517f2d15d6ffb7a0e9a9095c2129a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>total_phas</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a50f0e6c4193ff584da0cf0ae98a2dda2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>total_rate</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a7449036bb1b936e58dc4486625af700f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>total_sbresid</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>af8d3b252ecf955256d0f71a812228c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>u</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a0f833196c63258070cb832f5beb619c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>v</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>a285d89b0bd41b2073154df6a1f9cf759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>version</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1FringeFileHandle.html</anchorfile>
      <anchor>ab8bc0a47321afc8cd9edce6673abe521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>afio::afio::fringesum</name>
    <filename>classafio_1_1afio_1_1fringesum.html</filename>
    <base>afio::afio::AFIOStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>fringesum</name>
    <filename>adata_8h.html</filename>
    <anchor>structfringesum</anchor>
    <member kind="variable">
      <type>float</type>
      <name>ambiguity</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a210f8ecbfd5c93ee1df8d3403f4e737a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>amp</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa75afe8febdc6c1a980db01b813da436</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>archiv</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abf4e8224ff6e0b4774bc0542bce4dc97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a6c663909d1c1c840a7ae58812f77863e</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>corel_vers</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ab320a3053c04345deaf5e2639da2b343</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>datatype</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ac80fc1a5d46d517c510c4b8adc64ccb3</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dec_deg</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a2467ca759b7a5eca952a0c8312ad4ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>delay_rate</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa503a9350fb4e10ed59a4b2c210fd8eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>duration</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a21f8cc248d1df34db8adee230d38398c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>epoch</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a4ca3fd8f3993c631366816a3b11e804d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>errcode</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a7c4f93bfb8b905d96cd25e0042433da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>esdesp</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ade9ec00f8c7102506e736a646a4753d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>expt_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa2625e32469e1f53df7df0559110208b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>extent_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a243d2affaed78a0b03511a7bdf1a53b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fname</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ae879051096e3336e2bfb954de2585e57</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freq_code</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>acdc1fe42315e722d8f16a491ac0b7419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lags</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abf493a6f1e9a18d66d9d5bce7ad024a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>length</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a384b231bc0174991e3a2fa1cfb1cde07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mbdelay</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a905741ddb2d293073177724326442ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mode</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a754b10276f0efbbc1a579a007420a538</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>no_freq</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa1b18a3482b6449f55a031c5b05efc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>noloss_cotime</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a9ea0173f92a374bf4b315519b3ee538e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>offset</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0aa1e1e0bcdb2896197bdae3f26836bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>parents</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a34af03df4097ce11c779fc2fce9859db</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>pcals</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a9af25fffe483cc0e38b29b5a3015c51e</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phase_snr</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a8c14becfee5beda9d8806bb7e45bbd3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>polarization</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a8214b543be3788b7b6229b9c8dbfd557</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>procdate</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a9dc35c64db7047320393b43deb6f652b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>quality</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a5eac8acc3977c0e2e9716b43d323c660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ra_hrs</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aac6c38bf4f4b8b5ae4ca7f311c19fff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_az</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a2ddd80a43c511d4c31a0ba4400cd427e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_elev</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>afe565ce73da2ce08f9785151c666c08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aaacb646f0988747174e24988f554e9cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>reftape</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a787035bef1e2904f41bf9290187aacde</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_az</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a373f3bd4cc40fed66b7fab3055025d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_elev</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a4a326cd2841d9431ef43b00bfd67b71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>remtape</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0f488b4acc6a86dd88561f042ce1e822</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_delay</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aeee3f89157c7d058941c0470b4812e61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_phas</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a335edacd85dbb104c4f9d12f9de548dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>root_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0cc1eef89a195b5bcb25d9a9a15f2c1b</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sbdelay</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a48da2adb11462aa7301e1984707d88b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a975ac069261d7ef37616357778528df7</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>scan_offset</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa3196e21b89833e4974d6c1098f21cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snr</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a770a4bc89d6fce07c812e9e3eac5813a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a2befa10cc96391eb577eaab0e748d6d1</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>srch_cotime</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a2a3f8feecadc0a4e091a7d01a41f3693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ssec</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a66ad664ff5f6253ad089e8b5c660f1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time_tag</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ae06c83980a42602ea0a7fb1bd9476f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>total_mbdelay</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>afafe958af73c7ce939045683b5c5e2cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>total_phas</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a20bebb0db3978d9d52f6cf4f2998820b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>total_rate</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0ed509c02acd6b7db88e21c0c11e8acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>total_sbresid</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a23211b7b606e4e01f8b7823224eb1805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>u</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0cb78d085d2955c82aac38188e5b2349</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>v</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ad20569ab7832995195909018e3daa8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>version</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>acded43a27ddc1956515aa381cb1a06bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>frqexp</name>
    <filename>summary_8h.html</filename>
    <anchor>structfrqexp</anchor>
    <member kind="variable">
      <type>int</type>
      <name>begin</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>acb84f5579584f6a7b75a67ae2e62c615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>btq</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>ae9fce39557381a5319dd314b82a3ab99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>btq_allocated</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a85d888065a0099f0ef07dd3f12be6ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a27ca1db1f4c9e0fbed668e51186ffc08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>expt_no</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a8abb9514570bbd93a4d9e4a0f5f599a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freq_code</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>af5acfa85620499882bec17b40f89b9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbtq</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>aa4958c3030705e113a92113ac1499070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsource</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a7b7f975321e2721b429b34aadc7ee094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>srcsum *</type>
      <name>slist</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>ae8ed407b2d502767c84b7f6b999a9e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>slist_allocated</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a391e4d5e75d06a61fcd7e9f7179d1ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stations</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a2fc318002b2a506e8263f798efd37dda</anchor>
      <arglist>[MAXSTEXP+1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fsm_table_entry</name>
    <filename>parser_8h.html</filename>
    <anchor>structfsm__table__entry</anchor>
    <member kind="variable">
      <type>short</type>
      <name>action</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ab40cfb8f9c36ca9662041e1edd59359d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>current_state</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>aa0a0d18251a6f977f2dfa3f6c616113b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>next_state</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a66522e0f1e102023774718e5929d8c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>token_type</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a6b371d4fab38b4950ab9524c3668b46a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fstats</name>
    <filename>general_8h.html</filename>
    <anchor>structfstats</anchor>
    <member kind="variable">
      <type>float</type>
      <name>ref</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a6ca057c19a3486717dcd923eff81b193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>af695103fc44a6bb73e4ba542da88a4a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fstruct</name>
    <filename>fstruct_8h.html</filename>
    <anchor>structfstruct</anchor>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a2ae6b80a4e75cef9a75b9e97b4c693ea</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>done</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>ade6688f9ae19fdfefb8dbfc77e1a38bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>filenum</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a6e498795f80d849b30e80dc6aeaf4ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>floatparm</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a87f87ca61b5722c2a68521aa28e5e7ec</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freq_code</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a27d07fcae29e21849c15ada683cc92d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intparm</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a6f47a027420f4bd19233431a81a9d497</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nalloc</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a1230848eb75bd9545ee895dad319a45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a629e521213a65490fe769b29f2e6b014</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a7342dea4c48ad1856c47eb4d4a2d8575</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>poln</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a394281bfe5461adbe46c03ca2f47cc72</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rootcode</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a00739bd3f7047d7fdb826ebd2fdd03d7</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a8050fc381b6c60be77768a066406519f</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>station</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a10e4b86ba2cbe25ccac56eed8d08d8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>type</name>
      <anchorfile>fstruct_8h.html</anchorfile>
      <anchor>a032d53f22cc38019cd75fbe6e0cef1e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fxparam</name>
    <filename>fringex_8h.html</filename>
    <anchor>structfxparam</anchor>
    <member kind="variable">
      <type>double</type>
      <name>acc_period</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a651d690741ec2a38f1e34c1058e122c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>account</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a2467e0d71a74dc466901900056479e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fringesum</type>
      <name>adata</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a1825cec20ed17e6738ba93593cc867ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>amp_corr_fact</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a899dfde836287a50827a39915c9758c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bandwidth</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aa898eb277fce87bdbeeeca56ee3b4008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>decoff</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a03e717d2984ba5eadd224b147887617e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delay</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>acfc1fa14fec28b2bf948cfb18e479fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delayoff</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a2c4e27437948d9ce74deeef926b7f9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dprate</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aa54d20a385e70c20b731350d1bde92f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fchan</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a7679bbdda2613b359f6c0583a394aca3</anchor>
      <arglist>[NFX_FCHAN]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ffit_reffreq</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a1b6cb2bb297a8c047fd44894b4d48a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_fringe *</type>
      <name>fringe</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a542758539725c262c41e3e8619ad510e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>isum</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ace030dafc566c6ab0d70e3339cc7fb88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mode</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ab2fa3bb34c770d50f55399d396f72069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>no_amp_corr</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a07c20e4784806b19dffa495ed86ff44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>noloss_cotime</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>abc3717a931ce9567ed2d6d82e71a1620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nsecs</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a7fb509048d5234fd9baac61fa1b1948d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsegs</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a8ac9fad488d48c8841725e0b3314b5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsegs_allocd</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a4d96ec293d2ac131a1c55f0d446e25cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>numaccp</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aa183aa5a6e5dbf0cb7e8e8b4527b0700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>raoff</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>af0e612fc82361133245b59813dd3421a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rate</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>add66fe8b5ce205b7b2cf2578290385b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rateoff</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a788c4470f42a0eb5b1028d50b00d61cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>reffreq</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ab1f6954e85a6d883749b000947015408</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>reftime</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a4546cf1ada97c2192c29f57b7cabb47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>rsum</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>abae20489372c46f5ff311d784ea50f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_sdata *</type>
      <name>sdata</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a51fb32c40df9ad4e0838298bb3c69b4d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>segcount</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a136142a5934d6ff7d6430f24ae856633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>seglen</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a3995c6579cd81a1f56c96b1a65cc0a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>segsec</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a85861550a2858d626ff7e9f02e582f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>segstart</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a6d170774d2d5dcaa82cab465464e4d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>srch_cotime</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ad1e161a69ef50096ccecd1422fe4308d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tstart</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a637eeeb3e0bff6a47d972a28764df4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>userfreq</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aa9fb28638f3d6095220a666babb2fa63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>version</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a73c0a773c6ae451b401a02b5a665950c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ffcontrol::ffcontrol::gat_struct</name>
    <filename>classffcontrol_1_1ffcontrol_1_1gat__struct.html</filename>
    <base>ffcontrol::ffcontrol::FFControlStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>gat_struct</name>
    <filename>control_8h.html</filename>
    <anchor>structgat__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>duration</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>aa1624583b24edc87950544cb4fd52090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>on_delay</name>
      <anchorfile>control_8h.html</anchorfile>
      <anchor>af1e19e51acda04b421049e11e4e26678</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::h5helper_complex_double</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1h5helper__complex__double</anchor>
    <member kind="variable">
      <type>double</type>
      <name>imag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acef40dca4882e0851467056b8a243f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>real</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a550dc10b5ace1c29e05a727ecccb84aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::h5helper_complex_float</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1h5helper__complex__float</anchor>
    <member kind="variable">
      <type>float</type>
      <name>imag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a69b200e99f346adfb00c44af7ef92a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>real</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abc64f0e2013092873533f7bd110e7e16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>head_pos</name>
    <filename>tapeDB_8h.html</filename>
    <anchor>structhead__pos</anchor>
    <member kind="variable">
      <type>int</type>
      <name>head_pos_offset</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>ac19af6ad7424643ad8f00134b2f562a6</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>headstack_DIM_connect_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structheadstack__DIM__connect__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>eqlzr</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>aaf850ddb73d9cd6c9222bd42c12b88ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>headstack</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a28ca2d6b0c47c95b7c75789362cdfb1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>parity</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a3eac7355505fd27a4330991dd6bf741c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>headstack_parms_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structheadstack__parms__struct</anchor>
    <member kind="variable">
      <type>double</type>
      <name>param</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a5d26b9f8289606d31ba630473cf0ac12</anchor>
      <arglist>[10]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_FastFourierTransform::hh</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__FastFourierTransform_1_1hh</anchor>
  </compound>
  <compound kind="class">
    <name>MHO_Unit::hh</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__Unit_1_1hh</anchor>
  </compound>
  <compound kind="class">
    <name>hops::hops_clock</name>
    <filename>classhops_1_1hops__clock.html</filename>
    <member kind="typedef">
      <type>std::chrono::nanoseconds</type>
      <name>duration</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a6910f1e3ed23e39ad22b260945e90e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>duration::period</type>
      <name>period</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a130ea45ecf5b5b8d0aa13fb8760e78c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>duration::rep</type>
      <name>rep</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a7fab44e6a4ae0468fb33d7e5c2599e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::chrono::time_point&lt; hops_clock, std::chrono::nanoseconds &gt;</type>
      <name>time_point</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a21a513378bd0cfabf00044b8546c0e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_gps</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a4566c9a8390dd4e90de11353e5ccc714</anchor>
      <arglist>(const date::gps_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_local</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a05f3ce0943c260a61b40fd1eef9c62e9</anchor>
      <arglist>(const date::local_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_sys</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a5a41602506a33f32326f963641b38a44</anchor>
      <arglist>(const date::sys_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_tai</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>aa6b72ca4a25a69d6e0956948751902cd</anchor>
      <arglist>(const date::tai_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_utc</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a2040f47f90bcdae7cf62e693ff070fbc</anchor>
      <arglist>(const date::utc_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>date::gps_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_gps</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a410fba4e0a92fdf868f7b0b385d26e15</anchor>
      <arglist>(const hops_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>date::local_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_local</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ad5f1bb94b821435bc44fadd65d7d63d4</anchor>
      <arglist>(const hops_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>date::sys_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_sys</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a1ae1bb7a156bef8cc2e0f9487a6e3e59</anchor>
      <arglist>(const hops_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>date::tai_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_tai</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>abf07beb7b22ce74b8d59e422c5f86f38</anchor>
      <arglist>(const hops_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>date::utc_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_utc</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a3b9b84231d51090aa18783cc2421e802</anchor>
      <arglist>(const hops_time&lt; Duration &gt; &amp;t) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; hops_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_gps</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ab56fbf51ad88787fd61da0d1d69fa8e1</anchor>
      <arglist>(const std::chrono::time_point&lt; date::gps_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>from_hops_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a6c07ae1c8f2fc5268c71ba5029db4105</anchor>
      <arglist>(const std::string &amp;timestamp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>from_iso8601_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a713e5a0c6a1d5a2534424d01bedcf883</anchor>
      <arglist>(const std::string &amp;timestamp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>from_legacy_hops_date</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>adadc58ccd2e7d3e64898eac85e343a1c</anchor>
      <arglist>(legacy_hops_date &amp;ldate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; hops_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_local</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>af4156d76ad2604f15601f412b483ec87</anchor>
      <arglist>(const std::chrono::time_point&lt; date::local_t, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>from_mjd</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>afc9abdc870bc2ce4847a03e36ef9da90</anchor>
      <arglist>(const time_point &amp;mjd_epoch, const double &amp;epoch_offset, const double &amp;mjd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; hops_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_sys</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a6b0b72452a92ea3b0c552f1957100200</anchor>
      <arglist>(const std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; hops_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_tai</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a660089f4448b21e1270195fd4bd352ad</anchor>
      <arglist>(const std::chrono::time_point&lt; date::tai_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; hops_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>from_utc</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>aef12074d911d5a1cf770ded3041ec3b0</anchor>
      <arglist>(const std::chrono::time_point&lt; date::utc_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>from_vdif_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a8cb494b245492cc9eb66902058037bc2</anchor>
      <arglist>(int &amp;vdif_epoch, int &amp;vdif_seconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>from_vex_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ab45cd57f0e69c03f868d18626a1f56c1</anchor>
      <arglist>(const std::string &amp;timestamp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>from_year_fpday</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a553fe032b7143b3588bb83baf7bf7297</anchor>
      <arglist>(int year, double floating_point_days)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>get_hops_epoch</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a0f0b8bd39563c97fe52d1c8e9d92026c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static date::utc_time&lt; std::chrono::nanoseconds &gt;</type>
      <name>get_hops_epoch_utc</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a0a72be8009d445abb703aeb8caf94700</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::seconds</type>
      <name>get_leap_seconds_between</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ab8aa1400707003acbe5282b5363dd88c</anchor>
      <arglist>(const time_point &amp;t_start, const time_point &amp;t_end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_point</type>
      <name>now</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a1c8305ede090e065acbcf4b21dd0fd9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; date::gps_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_gps</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ac10933a1767b795b7c749aecf96b7a31</anchor>
      <arglist>(const std::chrono::time_point&lt; hops_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>to_hops_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ab1e911b8376b44297585d1167b6cb6ef</anchor>
      <arglist>(const time_point &amp;tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>to_iso8601_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a49c203d7999ba785360e966637aa696c</anchor>
      <arglist>(const time_point &amp;tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static legacy_hops_date</type>
      <name>to_legacy_hops_date</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ad60c4477d2396644e37b5242ed9314a3</anchor>
      <arglist>(const time_point &amp;tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; date::local_t, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_local</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a45083bcb173dfe30f47800f130674abb</anchor>
      <arglist>(const std::chrono::time_point&lt; hops_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>to_mjd</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a46a24fc77d218a7e0a7aca3a218ff043</anchor>
      <arglist>(const time_point &amp;mjd_epoch, const double &amp;epoch_offset, const time_point &amp;tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; std::chrono::system_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_sys</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a40255bc15b164e9a8b42335a87d0842d</anchor>
      <arglist>(const std::chrono::time_point&lt; hops_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; date::tai_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_tai</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a1400f337099cdc1e4cdff0dcdbe01fdc</anchor>
      <arglist>(const std::chrono::time_point&lt; hops_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::chrono::time_point&lt; date::utc_clock, typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type &gt;</type>
      <name>to_utc</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>afe5644e179f0992dce54a0048f18c14f</anchor>
      <arglist>(const std::chrono::time_point&lt; hops_clock, Duration &gt; &amp;) NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_vdif_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a13fc6e7eed8278fa613acfb713708945</anchor>
      <arglist>(const time_point &amp;tp, int &amp;vdif_epoch, int &amp;vdif_second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>to_vex_format</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>a8cc7394b4281c10218a3080e34161a40</anchor>
      <arglist>(const time_point &amp;tp, bool truncate_to_nearest_second=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_year_fpday</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>ad846689ae12098cea77e44de47132c09</anchor>
      <arglist>(const time_point &amp;tp, int &amp;year, double &amp;floating_point_days)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>is_steady</name>
      <anchorfile>classhops_1_1hops__clock.html</anchorfile>
      <anchor>acf18fe6adcf80a2161ff05bcd02c2c68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops_complex_tag</name>
    <filename>hops__complex_8h.html</filename>
    <anchor>structhops__complex__tag</anchor>
    <member kind="variable">
      <type>double</type>
      <name>imag</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>a86f81f668c6ea55af06a808a1ba2f7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>real</name>
      <anchorfile>hops__complex_8h.html</anchorfile>
      <anchor>a949b6b28b93c40ce862ffc02a2e64863</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ibaselist</name>
    <filename>aedit_8h.html</filename>
    <anchor>structibaselist</anchor>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a403cebb16bea5497ed89a2f6b2644850</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a053bfd5bff408abe0143a8b6a3a6d38c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>index_tag</name>
    <filename>mk4__data_8h.html</filename>
    <anchor>structindex__tag</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ap_space</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ad74a3cca04baf96834ebfcfb1a8ffb42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_101 *</type>
      <name>t101</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ab500d9600f3f3579838a9a6e74e000ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_120 **</type>
      <name>t120</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>adf28e2b95ba2ae54fc89eca361588c1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::index_tag</name>
    <filename>classmk4io_1_1mk4io_1_1index__tag.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>hops::indexed_tuple_visit</name>
    <filename>structhops_1_1indexed__tuple__visit.html</filename>
    <templarg>NTypes</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>visit</name>
      <anchorfile>structhops_1_1indexed__tuple__visit.html</anchorfile>
      <anchor>ae453a92329ed96d5225a618d322f5532</anchor>
      <arglist>(XTupleType &amp;tup, XFunctorType &amp;functor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::indexed_tuple_visit&lt; 0 &gt;</name>
    <filename>structhops_1_1indexed__tuple__visit_3_010_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>visit</name>
      <anchorfile>structhops_1_1indexed__tuple__visit_3_010_01_4.html</anchorfile>
      <anchor>a14069ef77f5b0566ec41d4448eabcc5a</anchor>
      <arglist>(XTupleType &amp;tup, XFunctorType &amp;functor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>inputs</name>
    <filename>aedit_8h.html</filename>
    <anchor>structinputs</anchor>
    <member kind="variable">
      <type>char</type>
      <name>baselines</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a1596a8e951afb4533046fb390d0dcfa0</anchor>
      <arglist>[3 *MAXBASE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>begin</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>af39fb0fd1d27c38f8d2e0608338c3ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>bsnr</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a5af10686360f601c6d94c0a412c1d2ff</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dev_auto</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>af4f73a1ec657879715b1523a6880d259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>device</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>af017276b710191e2c34cac70580aad4a</anchor>
      <arglist>[30]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a0ea3ea585afe3b24b3c540e79a079daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>experiment</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a9752e37f50ed7f0023aa8ca5adf84da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fraction</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ab2b456ba9660e030eaa3ab56f91bfc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>frequencies</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a3aa0c71953d4791eb91a641631894a42</anchor>
      <arglist>[2 *MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>grid</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a2bba76f78884e2a2b39d4a104c226d97</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a45e2df41e3a472a5cbad6108f6080097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mode</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>aefd4f8dca9b884c4169eb827d49292b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nfreq</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a0c5c3c12e446d90bddcb5ad09e175d64</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>parameter</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a746a000d3d60f76345c238195ff30351</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>plotby</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ac8df9cd21a0c9afcad428e87bd8bacb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>polarizations</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a1bf349829f153f2d20f487c8779ab179</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>proc_begin</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ad4f9cd6e9d3bde9e9b02c2900ef7e353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>proc_end</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a40a85ea91711bb67f127b413a0037c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>qcodes</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ae8cd1431884b9dee43b658ae09d85da2</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>quads</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a40254295103fa8bc5edd32c06e25bd63</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>refrem</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a25b1885b3d6a79e63c70af68f1d13b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snr</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a065347200f6a210c818c8ae26ec59da2</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>sources</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a7c900b7838080325c354d3b55e944802</anchor>
      <arglist>[200]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stations</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ae6877562292350363487759db34ee98b</anchor>
      <arglist>[2 *MAXSTEXP]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>triangles</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a1313fb406144a41e59183796f376b678</anchor>
      <arglist>[4 *MAXCLOSE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>type</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a74973aff1a5b35b55a6c5fa1bd80a660</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x_aux</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a3903af4a99b8ab145c90c6d76a873265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>x_axis</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ab0b194ce7b3a5ebd59cb74a4e04cebf5</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>x_units</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a08a26a2dd9005b9ab72ffc788995e0a4</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xaind</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a807741285291a2158202b49824e86b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>xscale</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ad3acbb53adf723aa0c71300bb085b251</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y_aux</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a8a35b962c223ce7e634ef917305edf86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>y_axis</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a768b199fcdf84cb0721ba52ba52f65a4</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>y_units</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ae783b38de1e925ecdfd77dea6e16e62b</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yaind</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>afe81735c749a3b1391b78bdde5fd9105</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>yscale</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>ae7596a70556e2e8e298d8405ce4c0427</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>insert</name>
    <filename>vex_8h.html</filename>
    <anchor>structinsert</anchor>
    <member kind="variable">
      <type>int</type>
      <name>after</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2c4e707d5f34d7e8739d155055ffec38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>str</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a01bde264648ba3ceb660f196a3100ef9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>interp_sdata</name>
    <filename>pass__struct_8h.html</filename>
    <anchor>structinterp__sdata</anchor>
    <member kind="variable">
      <type>float</type>
      <name>bigneg</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a2bbc6600ebe431f1086f5179e21199bf</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>bigpos</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ae7cfa88662b82959fe22d75507289863</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mt_delay</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a238bc89bf134e65bf374f594066f4f0d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>hops_complex</type>
      <name>mt_pcal</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>acbb9f906a82a00e487e019344e4687f2</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>neg</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a02476fb559935001ac14d7632739e23c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pcweight_lcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>adece659c46d52b977373307d190a0031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pcweight_rcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aa6ff14d007f4690ca355c09911d60c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hops_complex</type>
      <name>phasecal_lcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a1bf91cef22961c04fd31694b6a737d94</anchor>
      <arglist>[MAX_PCF]</arglist>
    </member>
    <member kind="variable">
      <type>hops_complex</type>
      <name>phasecal_rcp</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a621f2d7737fcfe3ba5a672e7c3b4c5e1</anchor>
      <arglist>[MAX_PCF]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pos</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a4ccf099ca731d2fc75950668b0c9bda0</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::is_complex</name>
    <filename>structhops_1_1is__complex.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>hops::is_complex&lt; std::complex&lt; double &gt; &gt;</name>
    <filename>structhops_1_1is__complex_3_01std_1_1complex_3_01double_01_4_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>hops::is_complex&lt; std::complex&lt; float &gt; &gt;</name>
    <filename>structhops_1_1is__complex_3_01std_1_1complex_3_01float_01_4_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>hops::is_complex&lt; std::complex&lt; long double &gt; &gt;</name>
    <filename>structhops_1_1is__complex_3_01std_1_1complex_3_01long_01double_01_4_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>hops::is_same_count</name>
    <filename>structhops_1_1is__same__count.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>constexpr static size_t</type>
      <name>value</name>
      <anchorfile>structhops_1_1is__same__count.html</anchorfile>
      <anchor>a4db0cf939f6fd786cf307012786a199f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::is_same_count&lt; T, T &gt;</name>
    <filename>structhops_1_1is__same__count_3_01T_00_01T_01_4.html</filename>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>constexpr static size_t</type>
      <name>value</name>
      <anchorfile>structhops_1_1is__same__count_3_01T_00_01T_01_4.html</anchorfile>
      <anchor>a92bdea14f5c3e57ee30c628f615f2035</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ffcontrol::ffcontrol::istats</name>
    <filename>classffcontrol_1_1ffcontrol_1_1istats.html</filename>
    <base>ffcontrol::ffcontrol::FFControlStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>istats</name>
    <filename>general_8h.html</filename>
    <anchor>structistats</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ref</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>ab7a9fff99deb3da66d49ba5a778921cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rem</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a9185f12cd020c5dac58e5ac6fee946d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ivex_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structivex__struct</anchor>
    <member kind="variable">
      <type>unsigned long</type>
      <name>bocf_period</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6ca1235fe053ceaedaea6a28661e4cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cf_edit_mask</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a35473c1ebc2ff2e84cb12a2d50815fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>counter_envname</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a3907dcddc2f8fd9e2ace491fbb73da89</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>counter_port</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ab14a499f1a9de0d413756deffa53327e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct CUCC_port_struct</type>
      <name>cucc_ports</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>afc8bcc64ae37b1e056bcd04555ac5e2c</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>header_duration</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a412bfd99e3534c6a3e520bb78bc67250</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nmonitor</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ab594622fc52a7c087f79507585fdc8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nplayback_systems</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ac0fca252a113d036e95b50af2f6cc3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct pbs_init_struct</type>
      <name>pbs_init</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a9ef75e3105a4b4b739a8e2d787c316f2</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>switch_envname</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>aab10ba8be2802783f3dc3c2e96faf647</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>switch_port</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a863c57eedee153da42a52a08d014b1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>system_tempo</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a18ba9462814297883925391230fef092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct tim_mon_struct</type>
      <name>timing_monitor</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a64c10a1537e2670b53a0064656501110</anchor>
      <arglist>[10]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::report_lib::JsonSerializableObject</name>
    <filename>classvpal_1_1report__lib_1_1JsonSerializableObject.html</filename>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1report__lib_1_1JsonSerializableObject.html</anchorfile>
      <anchor>a5c3ae4ed6d06099f454ead9b988b691c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>import_json</name>
      <anchorfile>classvpal_1_1report__lib_1_1JsonSerializableObject.html</anchorfile>
      <anchor>aa016c5f55c3299e6e7525fb4b31a3377</anchor>
      <arglist>(self, json_dict)</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>lag_data</name>
    <filename>type__120_8h.html</filename>
    <anchor>unionlag__data</anchor>
    <member kind="variable">
      <type>struct auto_global</type>
      <name>ag</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a8e92e99a2121cdc3fe5157cd05d84346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct auto_per_lag</type>
      <name>apl</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a0cc96383be25341cd32164f389bf18e3</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>struct counts_global</type>
      <name>cg</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ad6577e9c3b548c897e9d0f9113e4c057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct counts_per_lag</type>
      <name>cpl</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a302f83ed4175a95c4d2721d31f7681f5</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>struct spectral</type>
      <name>spec</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a4c1d9d22f083b322e7df1e185a48038b</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::lag_data</name>
    <filename>classmk4io_1_1mk4io_1_1lag__data.html</filename>
  </compound>
  <compound kind="struct">
    <name>lag_tag</name>
    <filename>type__120_8h.html</filename>
    <anchor>structlag__tag</anchor>
    <member kind="variable">
      <type>int</type>
      <name>coscor</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>af04a67c0ba22924b919637551d7a7d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sincor</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>ad79a13b205ea0b2da08cfa1bb2d9feb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::lag_tag</name>
    <filename>classmk4io_1_1mk4io_1_1lag__tag.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="class">
    <name>hops::legacy_hops_date</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1legacy__hops__date</anchor>
    <member kind="variable">
      <type>short</type>
      <name>day</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad6060d245f487b3018ab0c6f10f9667b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>hour</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a196b8358e57bb4c420b2c7934f3c2de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>minute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aafdb5961700ec866f7fdfe924f79ff3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>second</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af302fe04f95994e28a1f909fc35df889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>year</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af8ea39baf3e849a9672f0b0efdfe6a41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::lockfile_data</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1lockfile__data</anchor>
    <member kind="variable">
      <type>char</type>
      <name>active_directory</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6aa9fff6b17ada52629baa6766ef08e8</anchor>
      <arglist>[MAX_LOCKNAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>hostname</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a53b8808c9a468a7f4b5e7df60471220a</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lockfile_name</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aebf2684f179af5e6d8652248b8327424</anchor>
      <arglist>[MAX_LOCKNAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pid</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7eb724704f2182d7b4f3dbcbf035d939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>seq_number</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3210a72fdbf90ff197027dee1f509458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long int</type>
      <name>time_sec</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a999b1b73a45188519705a25c83e0515b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long int</type>
      <name>time_usec</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8914b7f80cfebbab8f6b203765b4f226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validity</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac3d9e99caf6c89e136dbd5e674dff30c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>lockfile_data</name>
    <filename>write__lock__mechanism_8h.html</filename>
    <anchor>structlockfile__data</anchor>
    <member kind="variable">
      <type>char</type>
      <name>hostname</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>ac866f53f8bdf07fae1c39f4a37c3b785</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lockfile_name</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>ac02b05887401049ab5129eea751cc3a1</anchor>
      <arglist>[MAX_LOCKNAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pid</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>ae1dce722987cda229202f916f29f509d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>seq_number</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>ae3d2825ce5a3bf0bdbe8a79ac424e916</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long int</type>
      <name>time_sec</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a79c77343d7eac775fd309ef29d50532c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long int</type>
      <name>time_usec</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>a5b2bad9be1205b74a0fb52b3dffe1177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validity</name>
      <anchorfile>write__lock__mechanism_8h.html</anchorfile>
      <anchor>aa9376b46493bd6bd63a8a60f17910357</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>loops</name>
    <filename>fringex_8h.html</filename>
    <anchor>structloops</anchor>
    <member kind="variable">
      <type>double</type>
      <name>delays</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a7811283963cc10ad16dcecb607aa7c45</anchor>
      <arglist>[MAXDELAYS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndelays</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a9592074c3a20fb2c95b0fb7c2ea88a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnsec</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>ae3bcdd45e4b484eb7fcd13161f663f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrates</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>adda459bcbfe6c5341692b3011873fee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nsecs</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>aeaa25aae1d53cc39d8ae3943b6e4a96d</anchor>
      <arglist>[MAXNSECS]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rates</name>
      <anchorfile>fringex_8h.html</anchorfile>
      <anchor>a50490c20444a9bb0e04431c174324d2e</anchor>
      <arglist>[MAXRATES]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>lvex_struct</name>
    <filename>lvex_8h.html</filename>
    <anchor>structlvex__struct</anchor>
    <member kind="variable">
      <type>int</type>
      <name>nstation</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a7971f83ecd7a826ce01ff78803d337ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct station_log</type>
      <name>stn</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a23aa4b713f9193311da2f7a41156fe76</anchor>
      <arglist>[MAXSTATIONS]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>lvpair</name>
    <filename>general_8h.html</filename>
    <anchor>structlvpair</anchor>
    <member kind="variable">
      <type>char</type>
      <name>label</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a8346756d7d23a103a82c7865ff4f90f9</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>value</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a62cd008188cb6b59e2e66bc1c8114288</anchor>
      <arglist>[25]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_AbsoluteValue</name>
    <filename>classhops_1_1MHO__AbsoluteValue.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryFunctor</base>
    <member kind="typedef">
      <type>typename MHO_UnaryFunctor&lt; XArrayType &gt;::citerator_type</type>
      <name>citerator_type</name>
      <anchorfile>classhops_1_1MHO__AbsoluteValue.html</anchorfile>
      <anchor>a602d1572500ca925dfa715ea2db64dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename MHO_UnaryFunctor&lt; XArrayType &gt;::iterator_type</type>
      <name>iterator_type</name>
      <anchorfile>classhops_1_1MHO__AbsoluteValue.html</anchorfile>
      <anchor>a33624893e7d687563705525d207c988a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_AbsoluteValue</name>
      <anchorfile>classhops_1_1MHO__AbsoluteValue.html</anchorfile>
      <anchor>a350e9c60579c6bcd72d5b81122b8930c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_AbsoluteValue</name>
      <anchorfile>classhops_1_1MHO__AbsoluteValue.html</anchorfile>
      <anchor>ae5cb181c8908e3dd89c62e8e5b87ff9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__AbsoluteValue.html</anchorfile>
      <anchor>aee7130142a6b107851e14de0ddfad069</anchor>
      <arglist>(citerator_type &amp;input, iterator_type &amp;output) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__AbsoluteValue.html</anchorfile>
      <anchor>ac4f2857e68bf279a69df57706f970259</anchor>
      <arglist>(iterator_type &amp;input) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_AFileDefinitions</name>
    <filename>classhops_1_1MHO__AFileDefinitions.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_AFileDefinitions</name>
      <anchorfile>classhops_1_1MHO__AFileDefinitions.html</anchorfile>
      <anchor>a546fc30087c0126ac4abae5cddc7c1e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_AFileDefinitions</name>
      <anchorfile>classhops_1_1MHO__AFileDefinitions.html</anchorfile>
      <anchor>af2f1f64f0e1bedc0dc74d0708e2e6b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static mho_json</type>
      <name>GetAFileFormat</name>
      <anchorfile>classhops_1_1MHO__AFileDefinitions.html</anchorfile>
      <anchor>a041ab355e422dbe1bf9d0f0ecc51ea8c</anchor>
      <arglist>(const std::string &amp;file_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetFormatDirectory</name>
      <anchorfile>classhops_1_1MHO__AFileDefinitions.html</anchorfile>
      <anchor>ac06b647ed7b13ba0e85cdba85d9e3fa0</anchor>
      <arglist>(const std::string &amp;file_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>GetKeywordNames</name>
      <anchorfile>classhops_1_1MHO__AFileDefinitions.html</anchorfile>
      <anchor>abc1c9397630203d81e7230cc5e717547</anchor>
      <arglist>(const std::string &amp;file_type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_AFileInfoExtractor</name>
    <filename>classhops_1_1MHO__AFileInfoExtractor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_AFileInfoExtractor</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>a6a7ea98a1cf5f09cc3cdd365ec03445a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_AFileInfoExtractor</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>ae4d87dd80358905a3877402ad60cf894</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ConvertToAlistRow</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>a0b446b872ebb15f9fb711ab6a9d6e267</anchor>
      <arglist>(const mho_json &amp;data, int version)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetAlistHeader</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>ada0d648ec4939f05711e9f82839a9c0f</anchor>
      <arglist>(int version, int type, char comment_char)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SummarizeFringeFile</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>a869a3384c26d97aec38674eede21f90e</anchor>
      <arglist>(std::string filename, mho_json &amp;fsum)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>ConvertToString</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>a4dde3a054bd0a3417c9910cfe2a2676f</anchor>
      <arglist>(XValueType value, const std::string &amp;pformat)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>par_type</type>
      <name>DetermineParameterType</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>a0a45a985157b73deb6585017d171bfb9</anchor>
      <arglist>(std::string etype)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RetrieveParameter</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>a7f398fefe8b31940f76371266fbcab1d</anchor>
      <arglist>(mho_json &amp;obj, const std::string &amp;name, const MHO_ParameterStore &amp;paramStore, const std::string &amp;path, const std::string &amp;type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>RetrieveParameterAsString</name>
      <anchorfile>classhops_1_1MHO__AFileInfoExtractor.html</anchorfile>
      <anchor>a94db7b1215859c17a1e7cf6215c0b419</anchor>
      <arglist>(const mho_json &amp;obj, const std::string &amp;name, const std::string &amp;type, const std::string &amp;pformat)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Axis</name>
    <filename>classhops_1_1MHO__Axis.html</filename>
    <templarg></templarg>
    <base>hops::MHO_AxisBase</base>
    <base>hops::MHO_VectorContainer</base>
    <base>hops::MHO_IndexLabelInterface</base>
    <base>hops::MHO_IntervalLabelInterface</base>
    <member kind="function">
      <type></type>
      <name>MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a9279e126d69af07a7c587bc28371a2b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>af08172aab274af674693630740a0cd16</anchor>
      <arglist>(const MHO_Axis &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a7657a7eb582e269eeb4d94e3c263bc8c</anchor>
      <arglist>(std::size_t dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a04c57d54e78c352fa26eb0df84baec60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3502ccbb5502803b7d999975134e8624</anchor>
      <arglist>(const MHO_Axis &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CopyTags</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>ae3e79153ea4ca78a2fceb07ce9b8e1a1</anchor>
      <arglist>(const MHO_Axis &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a237c1dd1ee6515b4745979ddccdadefe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SelectFirstMatchingIndex</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a27fefaeccf48453cabba1d31f83c96cc</anchor>
      <arglist>(const XValueType &amp;label_value, std::size_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>SelectMatchingIndexes</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3a05a41a54184143e499f0a089732d91</anchor>
      <arglist>(const std::set&lt; XValueType &gt; label_values)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>SelectMatchingIndexes</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3cf33a06ac4b7fd1327e69d20099b174</anchor>
      <arglist>(const XValueType &amp;label_value)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3cab57ea1076afacc39e5320d2b3f7fa</anchor>
      <arglist>(XStream &amp;s, const MHO_Axis &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a5256d0d65456df9619eccfbc2594de55</anchor>
      <arglist>(XStream &amp;s, MHO_Axis &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_Axis&lt; double &gt;</name>
    <filename>classhops_1_1MHO__Axis.html</filename>
    <base>hops::MHO_AxisBase</base>
    <base>hops::MHO_VectorContainer</base>
    <base>hops::MHO_IndexLabelInterface</base>
    <base>hops::MHO_IntervalLabelInterface</base>
    <member kind="function">
      <type></type>
      <name>MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a9279e126d69af07a7c587bc28371a2b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>af08172aab274af674693630740a0cd16</anchor>
      <arglist>(const MHO_Axis &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a7657a7eb582e269eeb4d94e3c263bc8c</anchor>
      <arglist>(std::size_t dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Axis</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a04c57d54e78c352fa26eb0df84baec60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3502ccbb5502803b7d999975134e8624</anchor>
      <arglist>(const MHO_Axis &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CopyTags</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>ae3e79153ea4ca78a2fceb07ce9b8e1a1</anchor>
      <arglist>(const MHO_Axis &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a237c1dd1ee6515b4745979ddccdadefe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SelectFirstMatchingIndex</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a27fefaeccf48453cabba1d31f83c96cc</anchor>
      <arglist>(const double &amp;label_value, std::size_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>SelectMatchingIndexes</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3cf33a06ac4b7fd1327e69d20099b174</anchor>
      <arglist>(const double &amp;label_value)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>SelectMatchingIndexes</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3a05a41a54184143e499f0a089732d91</anchor>
      <arglist>(const std::set&lt; double &gt; label_values)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a3cab57ea1076afacc39e5320d2b3f7fa</anchor>
      <arglist>(XStream &amp;s, const MHO_Axis &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__Axis.html</anchorfile>
      <anchor>a5256d0d65456df9619eccfbc2594de55</anchor>
      <arglist>(XStream &amp;s, MHO_Axis &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_AxisBase</name>
    <filename>classhops_1_1MHO__AxisBase.html</filename>
  </compound>
  <compound kind="class">
    <name>hops::MHO_AxisPack</name>
    <filename>classhops_1_1MHO__AxisPack.html</filename>
    <templarg>XAxisTypeS</templarg>
    <base virtualness="virtual">hops::MHO_Serializable</base>
    <member kind="typedef">
      <type>std::tuple&lt; XAxisTypeS... &gt;</type>
      <name>axis_pack_tuple_type</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a762c26c2a3aa75bf3b7310911602025d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; std::size_t, sizeof...(XAxisTypeS) &gt;</type>
      <name>NAXES</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a19fdf49503f75f200cdf845946b9387f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_AxisPack</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a97d3191f9d78587a59463c964f1741f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_AxisPack</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a11075da44e02fa84077451969e96e160</anchor>
      <arglist>(const MHO_AxisPack &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_AxisPack</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a7af5ff29cd6491992c7a55affcbbdfb7</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_AxisPack</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a772204f02d5f364068244a0171fd136a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a149fb3951e131da85a7620f954de71cc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_AxisPack &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a1b21532f4cf15fb98d251078cf490f25</anchor>
      <arglist>(const MHO_AxisPack &amp;rhs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(N==sizeof...(XAxisTypeS)), void &gt;::type</type>
      <name>compute_total_size</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a12fca3fc077761f690e3b6107616d4dc</anchor>
      <arglist>(uint64_t &amp;) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(N&lt; sizeof...(XAxisTypeS)), void &gt;::type</type>
      <name>compute_total_size</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>ad96e3b8b8631f0f09bd8d316ae608b7a</anchor>
      <arglist>(uint64_t &amp;total_size) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(N==sizeof...(XAxisTypeS)), void &gt;::type</type>
      <name>copy</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a09f74e81fb7a5006f1b081d20152533a</anchor>
      <arglist>(const MHO_AxisPack &amp;) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(N&lt; sizeof...(XAxisTypeS)), void &gt;::type</type>
      <name>copy</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>ad8294143b2252cfe83df77ffc10f8b42</anchor>
      <arglist>(const MHO_AxisPack &amp;rhs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(N==sizeof...(XAxisTypeS)), void &gt;::type</type>
      <name>resize_axis_pack</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a6427a57d65bd292a8ed22ac5493b1120</anchor>
      <arglist>(const std::size_t *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(N&lt; sizeof...(XAxisTypeS)), void &gt;::type</type>
      <name>resize_axis_pack</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a9fa7ca7a8a187f132bbbd0926fa8fecd</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>a4a6f38e71ec46f2144f0dc3fcf83f3d0</anchor>
      <arglist>(XStream &amp;s, const MHO_AxisPack &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__AxisPack.html</anchorfile>
      <anchor>ad5e1ce3ea28ef19cba6d3bd5232a56c9</anchor>
      <arglist>(XStream &amp;s, MHO_AxisPack &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BasicFringeDataConfiguration</name>
    <filename>classhops_1_1MHO__BasicFringeDataConfiguration.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_BasicFringeDataConfiguration</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>af73ab5d46df3d77f11963f37f41da595</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BasicFringeDataConfiguration</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>ad087086626dd5c3fc7069b26a7ec5e53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>configure_station_data</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a8a0e638c489057db7c00b9157450c50e</anchor>
      <arglist>(MHO_ScanDataStore *scanStore, MHO_ContainerStore *containerStore, std::string ref_station_mk4id, std::string rem_station_mk4id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>configure_visibility_data</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a069f7973e8f457727f6ba9961769f4c3</anchor>
      <arglist>(MHO_ContainerStore *store)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static mho_json</type>
      <name>ConvertProfileEvents</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a29a7ce0af55bb6e624a36cdd9289b879</anchor>
      <arglist>(std::vector&lt; MHO_ProfileEvent &gt; &amp;events)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>determine_baselines</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>acef564ce4e2e0b76178b84fbd75e880e</anchor>
      <arglist>(const std::string &amp;dir, const std::string &amp;baseline, std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; &amp;baseline_files)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>determine_fgroups_polproducts</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a3b97c899e8d2b4940b2c896a9da76820</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;cmd_fgroup, const std::string &amp;cmd_pprod, std::vector&lt; std::string &gt; &amp;fgroups, std::vector&lt; std::string &gt; &amp;pprods)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>determine_passes</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a3c23298d9c079544ba1be7189b478fd0</anchor>
      <arglist>(MHO_ParameterStore *cmdline_params, std::string &amp;cscans, std::string &amp;croots, std::string &amp;cbaselines, std::string &amp;cfgroups, std::string &amp;cpolprods)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>determine_required_pol_products</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a162ec288cc24429b8786cc8a585750f2</anchor>
      <arglist>(std::string polprod)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>determine_scans</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>aabce6f6bcc338478bd911d2ec6068910</anchor>
      <arglist>(const std::string &amp;initial_dir, std::vector&lt; std::string &gt; &amp;scans, std::vector&lt; std::string &gt; &amp;roots)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>find_associated_root_file</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>ad6bfe875bb75b86859a1e7187cb346c1</anchor>
      <arglist>(std::string dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init_and_exec_operators</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>adfac94257ac8a09ab1a2120f71d08e20</anchor>
      <arglist>(MHO_OperatorBuilderManager *build_manager, MHO_OperatorToolbox *opToolbox, const char *category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>initialize_scan_data</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a455d4175b3705e85cb7edcfd62e27df4</anchor>
      <arglist>(MHO_ParameterStore *, MHO_ScanDataStore *scanStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>parse_baseline_freqgrp</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a877d5ddb2ce86a3df5b6c13be9973204</anchor>
      <arglist>(std::string baseline_freqgrp, std::string &amp;baseline, std::string &amp;freqgrp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>parse_fourfit_command_line</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a7680c13cc942969a7a40237f7e78ef99</anchor>
      <arglist>(int argc, char **argv, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>parse_set_string</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a8455dfbafaaa106b9f723d2f030d05a0</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;arglist, int &amp;set_arg_index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>populate_initial_parameters</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a25cd631a86cce599405f94b317d331d4</anchor>
      <arglist>(MHO_ParameterStore *paramStore, MHO_ScanDataStore *scanStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>sanitize_directory</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a6debd0db6b9257812e06b9268b10fd8f</anchor>
      <arglist>(std::string dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>sanity_check</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a2c9b07adb99355212aa89db43335919a</anchor>
      <arglist>(MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>split_passes</name>
      <anchorfile>classhops_1_1MHO__BasicFringeDataConfiguration.html</anchorfile>
      <anchor>a74cf09a928618eb8f5c8251b21b6231a</anchor>
      <arglist>(std::vector&lt; mho_json &gt; &amp;pass_vector, const std::string &amp;cscans, const std::string &amp;croots, const std::string &amp;cbaselines, const std::string &amp;cfgroups, const std::string &amp;cpolprods)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BasicFringeFitter</name>
    <filename>classhops_1_1MHO__BasicFringeFitter.html</filename>
    <base>hops::MHO_FringeFitter</base>
    <member kind="function">
      <type></type>
      <name>MHO_BasicFringeFitter</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>ad546a616dbb75a88eb3ab2d4a9dc080c</anchor>
      <arglist>(MHO_FringeData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BasicFringeFitter</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a935459887a073a73247e8538e7c73528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Accept</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a84228aca6f75086b00d69fd463034298</anchor>
      <arglist>(MHO_FringeFitterVisitor *visitor) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Configure</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>ab8d798db7e4134eef77c973b4819e886</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Finalize</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>abde2794af1aa53cd2eb1950c39f10b5b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>ac06e3fe38f5d31359afc74815a2380b0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsFinished</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a4ae3b0c06ea2288aa72486b0ed092f5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PostRun</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a0796e9ac42b8c2371648f30a10d943db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreRun</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>ac9a9fb03262d63caef1c47af1a2bee8a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>ac9000cc4ccbde299b9255ac5de8b54d4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>coarse_fringe_search</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a98689ee536ea0b8bbace549370406160</anchor>
      <arglist>(bool set_windows=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>ContainsMixedSideband</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>aafa89e0f84923867a37587657f758eab</anchor>
      <arglist>(visibility_type *vis)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>interpolate_peak</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a9508e0ae3528dc203cf49d30260d8c23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_MBDelaySearch *</type>
      <name>fMBDSearch</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>af144357ab7f675dd33db4d4fe56639a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_MixedSidebandNormFX</type>
      <name>fMSBNormFXOp</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>ad26add6d5a71141d21fbf788ee35a183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_NormFX *</type>
      <name>fNormFXOp</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>abae171c2eb5e6126f4cfc7d3f3e5e2a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_InterpolateFringePeak</type>
      <name>fPeakInterpolator</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a999f27d3dbb9b942ffd2a4321525e743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_SingleSidebandNormFX</type>
      <name>fSSBNormFXOp</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a56199bd6e208d520905da430ec734536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fVexInfo</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>aff50cce38b630b338bec8e72398b0174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>visibility_type *</type>
      <name>sbd_data</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a1962234920eff8d92d0d2405d9ed7f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>visibility_type *</type>
      <name>vis_data</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a3b2bd519bfdd35cd9c4415f75d88dd80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>weight_type *</type>
      <name>wt_data</name>
      <anchorfile>classhops_1_1MHO__BasicFringeFitter.html</anchorfile>
      <anchor>a1db86be59b250b2e93ed8bbb3eaeafbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BasicFringeInfo</name>
    <filename>classhops_1_1MHO__BasicFringeInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_BasicFringeInfo</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a8dfa0326eecd2b67d1bc61709213ec35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BasicFringeInfo</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>aef3e20583692761799cc7f44db2021f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_drate_error_v1</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a2e9b4128bc20dbb0d03282b41a6db9e7</anchor>
      <arglist>(double snr, double ref_freq, double total_nap, double ap_delta)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_drate_error_v2</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a26b3151dc82f3a342a00c1d4da0923d7</anchor>
      <arglist>(double snr, double ref_freq, double integration_time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_mbd_no_ion_error</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a0e3d591d0132dfadf69de8dc00f37fad</anchor>
      <arglist>(double freq_spread, double snr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_pfd</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a48d0c580d46b76e81da5c6eb96e9709c</anchor>
      <arglist>(double snr, double pts_searched)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_phase_delay_error</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>ac99a5d8674d6feaaca658825d95df619</anchor>
      <arglist>(double sbavg, double snr, double ref_freq)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_phase_error</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>ae8873e1f955d42097967d9547cc36445</anchor>
      <arglist>(double sbavg, double snr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_sbd_error</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a23273aa2433bf09f1fc988f1b2b0236a</anchor>
      <arglist>(double sbd_sep, double snr, double sbavg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_snr</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a8e1390e85a62818b713e71df5ccf6c91</anchor>
      <arglist>(double effective_npol, double ap_period, double samp_period, double total_ap_frac, double amp, double bw_corr_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_theory_freqrms_amp</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a5638ac4b70f64e1fc03401110f20b7d3</anchor>
      <arglist>(double nchan, double snr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_theory_freqrms_phase</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>aa20fbab7c4f6c6530074c3935b4ff20c</anchor>
      <arglist>(double nchan, double snr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_theory_timerms_amp</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>ae67f7128c1983afaf2f7ba6aeb4f85ff</anchor>
      <arglist>(double nseg, double snr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_theory_timerms_phase</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a2dfa46c0b2b9bf12aff1d9c801158362</anchor>
      <arglist>(double nseg, double snr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>correct_phases_mbd_anchor_sbd</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>aa4e7b6fc8eeb15fe085a2f778f3dd64b</anchor>
      <arglist>(double ref_freq, double freq0, double frequency_spacing, double delta_mbd, double &amp;totphase_deg, double &amp;resphase_deg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ion_covariance</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>aa57287a0dda8eaec7932f00ee6e5e9bd</anchor>
      <arglist>(int nfreq, double famp, double snr, double ref_freq, const std::vector&lt; double &gt; &amp;chan_freqs, const std::vector&lt; std::complex&lt; double &gt; &gt; &amp;chan_phasors, std::vector&lt; double &gt; &amp;ion_sigmas)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>leftpadzeros_integer</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>af844b5b496b20d12e3f963d68927565f</anchor>
      <arglist>(unsigned int n_places, int value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>make_legacy_datetime_format</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>a865ebf04855ea9b5801d66c04d855dc2</anchor>
      <arglist>(legacy_hops_date ldate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>make_legacy_datetime_format_v2</name>
      <anchorfile>classhops_1_1MHO__BasicFringeInfo.html</anchorfile>
      <anchor>aa6b0b87bd859381afe560fb4c7f17872</anchor>
      <arglist>(legacy_hops_date ldate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BasicFringeUtilities</name>
    <filename>classhops_1_1MHO__BasicFringeUtilities.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_BasicFringeUtilities</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>ae24718fba8ac0fddfa25ab0815524cf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BasicFringeUtilities</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>af1ff1b17469cf6ac906415f7ddea1dc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>calculate_fringe_solution_info</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>a285cd768b6a4fe954df263d728f64770</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore, const mho_json &amp;vexInfo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>calculate_ion_covariance</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>afebfaa8ea19a5bee035cd350a3a7ff0a</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_residual_phase</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>a96d0bc417096df343fc3c7081a57a985</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_sbavg</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>aefd3a6e4e421ccaa98ccf51d6a901276</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_snr_correction_factor</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>aba76965556ae8460be96ef48e121ca95</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>determine_sample_rate</name>
      <anchorfile>classhops_1_1MHO__BasicFringeUtilities.html</anchorfile>
      <anchor>a0100684374f5b6f63b4233cb47644b48</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BidirectionalConstIterator</name>
    <filename>classhops_1_1MHO__BidirectionalConstIterator.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>aa78d5d5c3f5c23c4ef05901c840fcf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a146b5d23b750a913b8ab27764421e982</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const XValueType *</type>
      <name>pointer</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a8d26828f5069ad5440f773ba46ae3383</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const XValueType &amp;</type>
      <name>reference</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a7e0076eb399ad7401c2acc9e0b8e31b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalConstIterator</type>
      <name>self_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a7c1e4a6bfd864cc05bfd3633aa4dd951</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a3c02532009537732d8bde0a624426f32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalConstIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a318a639f5763f7032197c00bf3b11901</anchor>
      <arglist>(const self_type &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalConstIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>ace7a627b10b76dc05a1e59aaa11ed957</anchor>
      <arglist>(pointer begin_ptr, pointer ptr, std::size_t length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BidirectionalConstIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a93723d2a201204fd4a8f904d2ec4f002</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a441adba556687c578c05f3ffb419fcbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a74c06aa42f3e38e293d10a2071cf0f57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a27c1b99baf8a8ab378f8e7d9717097f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a89a1258a0e870113461f7ccf23d76fa8</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>ae11426b851e0845a6d0771b0a81429a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a9b328fdf969668a7880c2952d127446d</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a72747fcdc6ead47706efdf76bc97a392</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a577c3ba5da3da4280461ca5269bfe960</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>acafc5b7e5da93d81a5ee865704bf18cc</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>difference_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>ac37d108b9dedf47a17e11eae9291429d</anchor>
      <arglist>(const self_type &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>ae5d752a67ff52d77ec9d2740ec29574a</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a969c1776b9fcdb24dfa68bf12e6d5819</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>ad337ced10bda7cd2c81128427a883d8d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>ab6c7d980ef8bcb21d5b02ab07deb7789</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a43a294b439ecfd4cb667cc045fb7c4b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a20dd14c7629bd1039a99008190d329cd</anchor>
      <arglist>(const self_type &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a0a268b18eefe14c0eb4739f64203d455</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const pointer</type>
      <name>fBegin</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a8234234129a7ec99573e6774c965db09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fLength</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>a9e3e56fb2828d5558a89553c4479c43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pointer</type>
      <name>fPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstIterator.html</anchorfile>
      <anchor>abb4f8402bb7371fb5fd13834120f8c59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BidirectionalConstStrideIterator</name>
    <filename>classhops_1_1MHO__BidirectionalConstStrideIterator.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>acf786ed1a0939d0d2b7922c79ff9006e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a5d701707c212c4a991c02813ff515fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const XValueType *</type>
      <name>pointer</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a139d4342a90fd8d9b97f1821c5b4554f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const XValueType &amp;</type>
      <name>reference</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a74d9b9bceab384d90d6ede07a2069d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalConstStrideIterator</type>
      <name>self_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a7a0b82a1b2e8f5f45ae152a0fe199fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a3196af9e532ba89e37526ca13fe96fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalConstStrideIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a500f949cbb7a91191f5137be0bf9603a</anchor>
      <arglist>(const self_type &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalConstStrideIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a00c6e96c8df3433a7e9c85774cddee38</anchor>
      <arglist>(pointer begin_ptr, pointer ptr, std::size_t length, std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a22dc4e5b97fe34d41a1c94e3d4da9f8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a95bd72ccafef8d352f9e5d3d8bd90ce6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a26b13fa68fa57d2f1bf40dc8c7d69329</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>ad100ded6a9568b332968a6ec7e8bda60</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a90c4705536bc70144f984f5d67a126d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>acec93f6abd7ad585aae7faa6a823333b</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a62579d8fd8e41e08422461f56c4f92bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a2966808e25bfb240ec526119d640b4c5</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>ac7aff59b2d7353042b919233e9943ec3</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>std::ptrdiff_t</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>ae17f1d0546b3fc84f317ad6f43f0cf11</anchor>
      <arglist>(const self_type &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>aa4a5606e972337b41dd8ecec3a188f40</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a48000cd587b4a830b80142e234ac9f10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>ae67cb44c6ea2f59505bb6bf69da04a7a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a74f5f884e9a97a995d3a52d25b3e59ff</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a12c1ad7c80fd868aedc284cd8e6f606f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>aa4c8d1fe36ea62e5ac6870173b3cdd9b</anchor>
      <arglist>(const self_type &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__BidirectionalConstStrideIterator.html</anchorfile>
      <anchor>a6fad66d3f337f58509dce742b07d9800</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BidirectionalIndexedIterator</name>
    <filename>classhops_1_1MHO__BidirectionalIndexedIterator.html</filename>
    <templarg></templarg>
    <templarg>RANK</templarg>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ac706751563a347f9ea4f75005f3a53d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; std::size_t, RANK &gt;</type>
      <name>index_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>adef3ea859730968e1e6757c71e59d270</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ab8123ac647d8f8caf6f2c70d2cdaef2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType *</type>
      <name>pointer</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ae5f13b24ffd17d8287e2535d8dd2f788</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType &amp;</type>
      <name>reference</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a6f4322c7a7dbb142fce1e51ab0b8646f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalIndexedIterator</type>
      <name>self_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a26fd551bfdc8f327d2a3f4e732bd3816</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a1435c09ae0f158e66787a1292aba98cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalIndexedIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a37c361c39a03beb17fd20958119e22a2</anchor>
      <arglist>(const self_type &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalIndexedIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ae6f1568faf674647f585f0a8b9a95363</anchor>
      <arglist>(pointer begin_ptr, std::size_t position_offset, const std::size_t *dims, const std::size_t *strides)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BidirectionalIndexedIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ada9132c0497b19ae67b54cc8182773f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>difference_type</type>
      <name>GetMemoryOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>aac36e3ec54ed2385f0152dfdb5764a4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>difference_type</type>
      <name>GetPositionOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a4ca06a658c109ccb36d876b4e2699d91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a619c9891d17d4a6eadd88e5736803866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ad3d9d3fccb5fb44cfac359a48ef6a920</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ac68e2b839a8dc65c0bece4a7b2e777fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a844dfcc2078b15b615d75382788d90b0</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a77a54defb9045fd99b090618e902a29b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>acec652f0d87bf7b55d70fb9e03503a5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a4c5722e2e64658479fcb3f43c690c562</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a5778979566da92842f2784ac4e28375c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ab60f6d3c7d9327f103739960fef5ccb9</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>abbeb37e90fcc15a3fc29315e22712c0e</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>difference_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>af94c37ca7ce26c6fd13f75278a256f1e</anchor>
      <arglist>(const self_type &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a16130c45d7aff9d1e3c1391a2f5269c8</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>aa87ad74b22a9f23cff99493f3d6aa290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>aff2d48085c94029d748c9b9d7b860c9b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>aa073e6d8a49ae9968364ed7b3ac44712</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a22878fa43d6a1cf2fed905891eaf0d56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a46bd97924d1439c166acd37b58b71a3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a662a44cab380e508931b1e29eada84dc</anchor>
      <arglist>(const self_type &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a6739d672800377b0b2f2f8143feb6925</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CalculateOffsets</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>af81641de0dd840c5f5d14430570c9ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pointer</type>
      <name>fBegin</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a9c2ce9b9141c8cc2825cb7df2b5a630d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_type</type>
      <name>fDimensions</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a851a32f4e2242f936dadf38943dd499e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_type</type>
      <name>fIdx</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ab9b387e30baefa59179f5157391269f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fLength</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ae456289eff1a51b3c6a4bdd9c1685a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fMemoryOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>a4ecabe0572ee3ab0b3e3bbe3caaef05a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fPositionOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>af9c51ffb06a9faac388467b696839bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pointer</type>
      <name>fPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>aff9cdb97a0d4ca25f09dbafe9b8a4759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_type</type>
      <name>fStrides</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIndexedIterator.html</anchorfile>
      <anchor>ad83d4ef971bdaa1fa1835e1d46260662</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BidirectionalIterator</name>
    <filename>classhops_1_1MHO__BidirectionalIterator.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a82c1e03aff4bbc1bf0f6dc1d1cdd3471</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a7ff97c8b811646672762733f93876ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType *</type>
      <name>pointer</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>af7c4fa0fca0d58cb7ee0e4f7e075faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType &amp;</type>
      <name>reference</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>ad8650d6f44ced4c8eb2581e850fdec99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalIterator</type>
      <name>self_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>aacee08fdc0342a723acf734e8afb2331</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a6e547df5d61006d025bb49fdf032a09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a143d391134837cab5ea1181afab41f9d</anchor>
      <arglist>(const self_type &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>aa9874c470d571ca9f047c8baed706f20</anchor>
      <arglist>(pointer begin_ptr, pointer ptr, std::size_t length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BidirectionalIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a7a47cd39151e2f150ae974e9deff261b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a4b8f071f7e2e3754c77f363665cffe1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>ac8771f2c400e68bdbd7384c324edd0c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>adb1049efc68ad62fb5b623e2a0814ecf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>ab2c6f89d19df6bda42a2a53cd035b20f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>aca35ffcd29193661db5a1408c90721ea</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>af73db05f0aae18502d778becc48396e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>ad53321e2bc1fb11dc65454028bc7e7dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a6a12cee225b1b67fa16a6e76a0a60ff1</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a554e7e21049c10a94e709790f732afc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a6b78afb5bfbcef00eee1049073523e92</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>ab940ec7f53a17a2802fa0dfe45c9b213</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>difference_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a11061374a9cbbb5b8630bc4916c627b4</anchor>
      <arglist>(const self_type &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a5c2747524b6579bcd5ff360722d69bd0</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>ae63c62e5d55635c73545bb43d7b938b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a3fa495a3b6b34bbd7b7e75927f5dc22a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>aa56cab1b3cef4b1d66b0cd29fe982bc4</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a38d3250db9671718e2c99c183932204f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a28f19df670562eb7caeb3c31591b4933</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a0a060db94f23628115f01f7ec7bff080</anchor>
      <arglist>(const self_type &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>afd54766ea1e5858491a0af7472ab71aa</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pointer</type>
      <name>fBegin</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>adbc352bbc35af42e0b26fef39ada271b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fLength</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>ac11d5430651bb0123cb337e86f0feae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pointer</type>
      <name>fPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalIterator.html</anchorfile>
      <anchor>a70f930ca78fd47179d3f999f808e2aa4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BidirectionalStrideIterator</name>
    <filename>classhops_1_1MHO__BidirectionalStrideIterator.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a397d6853d00035c9993c4231d8bc39d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a22a3310e7a7d2b81d718001374f45d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType *</type>
      <name>pointer</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>af9683993836338bb74eb8214352c6ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType &amp;</type>
      <name>reference</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a0859fe0b1bbcae94a52cc42dbc190529</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalStrideIterator</type>
      <name>self_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>aa4d080cf9c5a5f3cda4b74474271b4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a9a8692deafed4319971d5457005ea86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalStrideIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>abc24cb1161b492c9d80e28329eefac74</anchor>
      <arglist>(const self_type &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_BidirectionalStrideIterator</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>ae274174e4ba5a959c70e0ead8eca95b5</anchor>
      <arglist>(pointer begin_ptr, pointer ptr, std::size_t length, std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffset</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>ad21945f21542c4a5f704efbdc4892b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>ab75ae062e53f2aa1ee8bcc53a5f56407</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const pointer</type>
      <name>GetPtr</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a49c58d43d9de709758775fc23df138cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a81de647102a33a0ab1c46b527299cf4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>ac4b5b5ad62337e9c7a7a3fbe4f13a462</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a8198c3fe42e78b13d358ef38b116587e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const reference</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>aeeadc669076d2845659e23e951233246</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a434bff0a6d5064480ab6c7ead5328986</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a27d15552f438da1d364618c5d8907e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator++</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a69ee0ae179e3d568329e5529ab4bedaa</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>ab3d685c5e4c52a0057546480ba08f8d2</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>std::ptrdiff_t</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>acadd1fa84b3691303e69c16414d2c2a5</anchor>
      <arglist>(const self_type &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>ad94eaa109a2623809cf65906d4e6d498</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a600cff2def0ca8224ee570c648249136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator--</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a157c320a24e4a07097ab401264c9700a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>abeb18f4e87c450a88886861ef27afa1c</anchor>
      <arglist>(const std::ptrdiff_t &amp;diff)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>aef5a72b3c38ec91336a9748eef6e8fff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a7554f0edae14b225376785ad8ac6aa23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>self_type</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a193c50cfbb5678820bd08e5042deb20f</anchor>
      <arglist>(const self_type &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__BidirectionalStrideIterator.html</anchorfile>
      <anchor>a4e528bfe3925d39dacf09ae17e49d8e3</anchor>
      <arglist>(const self_type &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileInterface</name>
    <filename>classhops_1_1MHO__BinaryFileInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryFileInterface</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>abda933dd9a029606cfaf5c80a8d000a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryFileInterface</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a58f6ad02a3cc9ee1bed083c0c2f04352</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Close</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a84eac8de384126f3306f7a28056cb390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExtractFileObjectKeys</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>ab5e7f1b7ec560ce90ccd5dee2f99f925</anchor>
      <arglist>(const std::string &amp;filename, std::vector&lt; MHO_FileKey &gt; &amp;keys)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExtractFileObjectKeysAndOffsets</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a7d77d3601e622f8082c4faa736ebeb40</anchor>
      <arglist>(const std::string &amp;filename, std::vector&lt; MHO_FileKey &gt; &amp;keys, std::vector&lt; std::size_t &gt; &amp;byte_offsets)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExtractIndexFileObjectKeys</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>af54f37f3c026d8ccdb35ce46709b41d4</anchor>
      <arglist>(const std::string &amp;index_filename, std::vector&lt; MHO_FileKey &gt; &amp;keys)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOpenForRead</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>acef0cceb81458fbcb50977c4648a08ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOpenForWrite</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>abbf7aa20fc7d7c87df5ac80b38a875ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenToAppend</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a7f86f460f9e86c4e048f6de7430ea616</anchor>
      <arglist>(const std::string &amp;obj_filename, const std::string &amp;index_filename=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenToRead</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a3e8c504d954b4d084343a15c71e69eb0</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenToReadAtOffset</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>abb746ef12a698522da7c1b6ad890031a</anchor>
      <arglist>(const std::string &amp;filename, uint64_t offset_bytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenToWrite</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a1b26e502a7a8e188f7cb7c0da52ccf1a</anchor>
      <arglist>(const std::string &amp;obj_filename, const std::string &amp;index_filename=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Read</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a119de5d49d46aa2c4dc19dd5fd1d4a72</anchor>
      <arglist>(XReadType &amp;obj, MHO_FileKey &amp;obj_key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Write</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>a9cd3d3938723642ae952f44d51a9898c</anchor>
      <arglist>(const XWriteType &amp;obj, const char *shortname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Write</name>
      <anchorfile>classhops_1_1MHO__BinaryFileInterface.html</anchorfile>
      <anchor>aa30bb6d3bdd6ada166de5c30b40713df</anchor>
      <arglist>(const XWriteType &amp;obj, const std::string &amp;shortname=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileStreamer</name>
    <filename>classhops_1_1MHO__BinaryFileStreamer.html</filename>
    <base>hops::MHO_FileStreamer</base>
    <base>hops::MHO_BinaryFileStreamerMultiType</base>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryFileStreamer</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>aa64328d1585b6bf8a9a917cd31a6305f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryFileStreamer</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a22b84caf6dc08a39d60801d374e7d6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>AddBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a9ff9760f258a2ab07501b9926d56e8ce</anchor>
      <arglist>(uint64_t b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Close</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>ad1f566e607b9f8100337355b8f2f2119</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetNBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>ab2c8c3f703572258f72adbf5fae623ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::fstream &amp;</type>
      <name>GetStream</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a422fcec78659f992b91dd3ef5214c700</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::fstream &amp;</type>
      <name>GetStream</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>ad19e3f23bfc791fb7c5ca790baeedeb9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OpenToAppend</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a23a18d890eb5ea1ab3492c95e362e512</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OpenToRead</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a9502522171adc3769fe0cc00fc8eff2c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OpenToWrite</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a16ecc5e591be1f7fbb6beb270794acf7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ResetByteCount</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>aa9f90cf014ad6e2fa4e9e4a4eb307bc4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>MHO_BinaryFileStreamer &amp;</type>
      <name>Self</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a12a6d13dc54323b35b02254b7ba892ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>fNBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamer.html</anchorfile>
      <anchor>a03ffaf7abd0c934febf74b9f32e6e4db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileStreamerMultiType</name>
    <filename>classhops_1_1MHO__BinaryFileStreamerMultiType.html</filename>
    <templarg>XValueTypeS</templarg>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileStreamerMultiType&lt; XValueType &gt;</name>
    <filename>classhops_1_1MHO__BinaryFileStreamerMultiType_3_01XValueType_01_4.html</filename>
    <templarg></templarg>
    <base>hops::MHO_BinaryFileStreamerSingleType</base>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileStreamerMultiType&lt; XValueType, XValueTypeS... &gt;</name>
    <filename>classhops_1_1MHO__BinaryFileStreamerMultiType_3_01XValueType_00_01XValueTypeS_8_8_8_01_4.html</filename>
    <templarg></templarg>
    <templarg>XValueTypeS</templarg>
    <base>hops::MHO_BinaryFileStreamerMultiType&lt; XValueType &gt;</base>
    <base>MHO_BinaryFileStreamerMultiType&lt; XValueTypeS... &gt;</base>
  </compound>
  <compound kind="class">
    <name>MHO_BinaryFileStreamerMultiType&lt; XValueTypeS... &gt;</name>
    <filename>classhops_1_1MHO__BinaryFileStreamerMultiType.html</filename>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileStreamerSingleType</name>
    <filename>classhops_1_1MHO__BinaryFileStreamerSingleType.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryFileStreamerSingleType</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>a366485a0b1d32c4968155893eae28fb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryFileStreamerSingleType</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>a8bbcfe5084ffc3d8595d0fd4ca31015e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>AddBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>a0d7913e84a30c518a18b2fb582752dad</anchor>
      <arglist>(uint64_t)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint64_t</type>
      <name>GetNBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>a82ebbc896cf44f57009a8f333a52b23d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::fstream &amp;</type>
      <name>GetStream</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>a224d2eaff3399495d422c8c83890d862</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ResetByteCount</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>a61d314667e94951ae7c4af01ee9f31e5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual MHO_BinaryFileStreamer &amp;</type>
      <name>Self</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>afd6ede58e3d368658b44f54812d53eb6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_BinaryFileStreamer &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>a4af19f81d702f2f4e5b646cbf852006a</anchor>
      <arglist>(MHO_BinaryFileStreamerSingleType&lt; XValueType &gt; &amp;s, const XValueType &amp;obj)</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_BinaryFileStreamer &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType.html</anchorfile>
      <anchor>ad681f77bb7a4c4c22c843d5d77b5a9e8</anchor>
      <arglist>(MHO_BinaryFileStreamerSingleType&lt; XValueType &gt; &amp;s, XValueType &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileStreamerSingleType&lt; mho_json &gt;</name>
    <filename>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryFileStreamerSingleType</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>a9e6d28e419871b34e8fb218420247b74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryFileStreamerSingleType</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>ac9f8483b288264130f571a1d74335897</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>AddBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>a7fc7a0f519a3438648bdc2c1b679d1e9</anchor>
      <arglist>(uint64_t)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint64_t</type>
      <name>GetNBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>a42f60fce663f09752f93aeaf55c500a5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::fstream &amp;</type>
      <name>GetStream</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>a4a1ee55b67bffb337cb6b492fb394651</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ResetByteCount</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>a20d9848f37d456f0420cfa3d8af17b7a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual MHO_BinaryFileStreamer &amp;</type>
      <name>Self</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>a2f2ec10baf2c83aaac09dd62299450a1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_BinaryFileStreamer &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>a7a911ee532294a3ed10b8774c56892e5</anchor>
      <arglist>(MHO_BinaryFileStreamerSingleType&lt; mho_json &gt; &amp;s, const mho_json &amp;obj)</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_BinaryFileStreamer &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01mho__json_01_4.html</anchorfile>
      <anchor>aeae0d82113ffd34286892e7e3bab2cc6</anchor>
      <arglist>(MHO_BinaryFileStreamerSingleType&lt; mho_json &gt; &amp;s, mho_json &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryFileStreamerSingleType&lt; std::string &gt;</name>
    <filename>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryFileStreamerSingleType</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>aa82d44b83d45242c6b84dd83e92d9378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryFileStreamerSingleType</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a2a2fadfb0b3ff2bd3b14e2370cb45e71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>AddBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>afe8aa4c3a8aaf4078f115891b07db21b</anchor>
      <arglist>(uint64_t)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint64_t</type>
      <name>GetNBytesWritten</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>ab07ae9d55f9277b45a3ced40e69464f8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::fstream &amp;</type>
      <name>GetStream</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a9df9227cff6f7237d5230082f2065ec7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ResetByteCount</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a18262007348225bbf6fad7808da093fa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual MHO_BinaryFileStreamer &amp;</type>
      <name>Self</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a698e51589f368f28e7fac4e2f2cbacef</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_BinaryFileStreamer &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a61a1c989041f57403f7ea45827869996</anchor>
      <arglist>(MHO_BinaryFileStreamerSingleType&lt; std::string &gt; &amp;s, const std::string &amp;obj)</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_BinaryFileStreamer &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__BinaryFileStreamerSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a4bb758078bb0aeefe25905efeb3aa6a5</anchor>
      <arglist>(MHO_BinaryFileStreamerSingleType&lt; std::string &gt; &amp;s, std::string &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BinaryOperator</name>
    <filename>classhops_1_1MHO__BinaryOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryOperator</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>abd9b011b1ad9ce7ed98fac23e0153afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryOperator</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>ace7fcbd64341e102dd5f42985a8d26f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>af0716d50495400b0510af28a5ec75c8e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>aa9d4b322af4ea6f5e98afc218681abe1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>ab98c0e7cdbc7f23197964387625f9e66</anchor>
      <arglist>(const XArgType1 *in1, const XArgType2 *in2, XArgType3 *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>a7448e37ee77a50fb3cbe4d93e0df92e7</anchor>
      <arglist>(const XArgType1 *, const XArgType2 *, XArgType3 *)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>a7640bfa5a29b53673e615aaf1c2ff3a1</anchor>
      <arglist>(const XArgType1 *, const XArgType2 *, XArgType3 *)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const XArgType1 *, const XArgType2 *, XArgType3 * &gt;</type>
      <name>fArgs</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>aa1c256e7acb08712ff0349d3dfacf994</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_BinaryOperator&lt; MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt;, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt;, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; &gt;</name>
    <filename>classhops_1_1MHO__BinaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryOperator</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>abd9b011b1ad9ce7ed98fac23e0153afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryOperator</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>ace7fcbd64341e102dd5f42985a8d26f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>af0716d50495400b0510af28a5ec75c8e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>aa9d4b322af4ea6f5e98afc218681abe1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>ab98c0e7cdbc7f23197964387625f9e66</anchor>
      <arglist>(const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *in1, const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *in2, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>a7448e37ee77a50fb3cbe4d93e0df92e7</anchor>
      <arglist>(const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *, const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>a7640bfa5a29b53673e615aaf1c2ff3a1</anchor>
      <arglist>(const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *, const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *, const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; *, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; * &gt;</type>
      <name>fArgs</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>aa1c256e7acb08712ff0349d3dfacf994</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_BinaryOperator&lt; visibility_type, weight_type, sbd_type &gt;</name>
    <filename>classhops_1_1MHO__BinaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_BinaryOperator</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>abd9b011b1ad9ce7ed98fac23e0153afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BinaryOperator</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>ace7fcbd64341e102dd5f42985a8d26f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>af0716d50495400b0510af28a5ec75c8e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>aa9d4b322af4ea6f5e98afc218681abe1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>ab98c0e7cdbc7f23197964387625f9e66</anchor>
      <arglist>(const visibility_type *in1, const weight_type *in2, sbd_type *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>a7448e37ee77a50fb3cbe4d93e0df92e7</anchor>
      <arglist>(const visibility_type *, const weight_type *, sbd_type *)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>a7640bfa5a29b53673e615aaf1c2ff3a1</anchor>
      <arglist>(const visibility_type *, const weight_type *, sbd_type *)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const visibility_type *, const weight_type *, sbd_type * &gt;</type>
      <name>fArgs</name>
      <anchorfile>classhops_1_1MHO__BinaryOperator.html</anchorfile>
      <anchor>aa1c256e7acb08712ff0349d3dfacf994</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_BitReversalPermutation</name>
    <filename>classhops_1_1MHO__BitReversalPermutation.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_BitReversalPermutation</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a07e4b336a719d1cca0a69bb9d997a959</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_BitReversalPermutation</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a319471a463f83874bec6fa28669fcc40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeBitReversedIndicesBaseTwo</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a0c66a979457c700414df15241dc5ac81</anchor>
      <arglist>(unsigned int N, unsigned int *index_arr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsPowerOfBase</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a59fa9109626c043514f45310ffc8a144</anchor>
      <arglist>(unsigned int N, unsigned int B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsPowerOfTwo</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a87fdeec0897c7601b14adcdf0a7018f4</anchor>
      <arglist>(unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>LogBaseB</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a6b57ce9f0b1545eca3142b24a74448db</anchor>
      <arglist>(unsigned int N, unsigned int B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>LogBaseTwo</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>aabe10e5ec23563da37c5d8318493f85c</anchor>
      <arglist>(unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>NextLowestPowerOfTwo</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a12577ae76d52e7f739ef7d62e244b8b6</anchor>
      <arglist>(unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PermuteArray</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a5e91eb3f662823d9a17243abd40aef44</anchor>
      <arglist>(unsigned int N, const unsigned int *permutation_index_arr, DataType *arr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PermuteArray</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a4a36a1916154e014d01134d8b21b8297</anchor>
      <arglist>(unsigned int N, const unsigned int *permutation_index_arr, DataType *arr, unsigned int stride)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PermuteArrayBranchFree</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a25b124dcaeef9d1a6ef3cfa93702c84b</anchor>
      <arglist>(unsigned int N, const unsigned int *permutation_index_arr, DataType *arr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PermuteArrayBranchFree</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>aa25aba2c8409ef3f474b232cb76a4188</anchor>
      <arglist>(unsigned int N, const unsigned int *permutation_index_arr, DataType *arr, unsigned int stride)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>RaiseBaseToThePower</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a0066e408ba8b38219a8a238152197385</anchor>
      <arglist>(unsigned int B, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>ReverseIndexBits</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a1fbc90e9291f97deda9769ddaceca1b3</anchor>
      <arglist>(unsigned int nbits, unsigned int x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>TwoToThePowerOf</name>
      <anchorfile>classhops_1_1MHO__BitReversalPermutation.html</anchorfile>
      <anchor>a66e4e5a7b1adbaf2d2a247f8c0e21ed8</anchor>
      <arglist>(unsigned int N)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ChannelIndexLabeler</name>
    <filename>classhops_1_1MHO__ChannelIndexLabeler.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ChannelIndexLabeler</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>a1d38d8aed2fbda05f907571fc6fcc374</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ChannelIndexLabeler</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>ae5535711ff82459f8166fe18d91cfe38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>DecodeLabelToValue</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>a2618bd99a658f1c4d3e26f06086ed499</anchor>
      <arglist>(const std::string &amp;label) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>EncodeValueToLabel</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>af90a8a20a36393f52eb71b8f20583945</anchor>
      <arglist>(const uint64_t &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultChannelChars</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>a48038970d16391f65f6e9d8b71783f95</anchor>
      <arglist>(const std::string &amp;ch_set)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExtendedChannelChars</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>a18ab9b1b4b1304660fef3f1107a27dc4</anchor>
      <arglist>(const std::string &amp;ex_set)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fDefaultChannelChars</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>acfd75935a0d587f73358bfb674d3866b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fExtendedChannelChars</name>
      <anchorfile>classhops_1_1MHO__ChannelIndexLabeler.html</anchorfile>
      <anchor>ac56b158dbb15375a6b1e5e909815a44d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ChannelLabeler</name>
    <filename>classhops_1_1MHO__ChannelLabeler.html</filename>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <base>hops::MHO_ChannelIndexLabeler</base>
    <member kind="function">
      <type></type>
      <name>MHO_ChannelLabeler</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>ab7194982f1998df6cf4b360b4b762163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ChannelLabeler</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>ab8700886919ea1c518f075587129ab87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChannelLabelToFrequencyMap</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>a81655c0edf0d5c425a92991b4e6d79da</anchor>
      <arglist>(const std::map&lt; std::string, double &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTolerance</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>a76907de685a8d29dcf54bfd60c6fa352</anchor>
      <arglist>(double tol)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>ad5aadccbc59bebabe2d4b02d58127994</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>aa79e6aa3fbc8ee613659050f04be690d</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>a323721eb59b550c3ff2b38eb191e791c</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ChannelLabeler.html</anchorfile>
      <anchor>a94888821e239627066487a482ea21ca1</anchor>
      <arglist>(const XArrayType *, XArrayType *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ChannelLabelerBuilder</name>
    <filename>classhops_1_1MHO__ChannelLabelerBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <base>hops::MHO_ChannelQuantity</base>
    <member kind="function">
      <type></type>
      <name>MHO_ChannelLabelerBuilder</name>
      <anchorfile>classhops_1_1MHO__ChannelLabelerBuilder.html</anchorfile>
      <anchor>abdd9dcb830d1cffe372abbe2bb4ee8cf</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ChannelLabelerBuilder</name>
      <anchorfile>classhops_1_1MHO__ChannelLabelerBuilder.html</anchorfile>
      <anchor>a9f583e80e39c9f20d549562fa7e0206b</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ChannelLabelerBuilder</name>
      <anchorfile>classhops_1_1MHO__ChannelLabelerBuilder.html</anchorfile>
      <anchor>acecf3e089fb8d5908c43d8386e0bdf2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__ChannelLabelerBuilder.html</anchorfile>
      <anchor>a3c53101921be7c7db37d090c54caa30a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ChannelQuantity</name>
    <filename>classhops_1_1MHO__ChannelQuantity.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ChannelQuantity</name>
      <anchorfile>classhops_1_1MHO__ChannelQuantity.html</anchorfile>
      <anchor>a42d07a1c26ed52b77ed19f8bd427a009</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MHO_ChannelQuantity</name>
      <anchorfile>classhops_1_1MHO__ChannelQuantity.html</anchorfile>
      <anchor>af1f963d1ce2afc7c9f1dafb3b790fa98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>MapChannelQuantities</name>
      <anchorfile>classhops_1_1MHO__ChannelQuantity.html</anchorfile>
      <anchor>aba21578f415b9dd12a3fff23fd92fc0b</anchor>
      <arglist>(std::string chan_names, std::vector&lt; double &gt; &amp;values)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_CheckForNaN</name>
    <filename>classhops_1_1MHO__CheckForNaN.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_CheckForNaN</name>
      <anchorfile>classhops_1_1MHO__CheckForNaN.html</anchorfile>
      <anchor>ae722e29483d299928a1b8501bf4f8ca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_CheckForNaN</name>
      <anchorfile>classhops_1_1MHO__CheckForNaN.html</anchorfile>
      <anchor>a72d0ebd4fa24af76b420a56fcb0007c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isnan</name>
      <anchorfile>classhops_1_1MHO__CheckForNaN.html</anchorfile>
      <anchor>aca5fd8f3a7a889caf03c0542d8a32ea0</anchor>
      <arglist>(const XNumericalType &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_CheckForNaN</name>
    <filename>classMHO__CheckForNaN.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isnan</name>
      <anchorfile>classMHO__CheckForNaN.html</anchorfile>
      <anchor>ad296ed17d13acc02617a4a3821bcd5b6</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isnan</name>
      <anchorfile>classMHO__CheckForNaN.html</anchorfile>
      <anchor>a81ffa78559d439998273e743e8c4bcd7</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isnan</name>
      <anchorfile>classMHO__CheckForNaN.html</anchorfile>
      <anchor>a0f29b70504dacd1a38a38bb5502d44b7</anchor>
      <arglist>(const long double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isnan</name>
      <anchorfile>classMHO__CheckForNaN.html</anchorfile>
      <anchor>aef7779ec7a780dc4111ba96883b4c5a7</anchor>
      <arglist>(const std::complex&lt; double &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isnan</name>
      <anchorfile>classMHO__CheckForNaN.html</anchorfile>
      <anchor>aca19638eaa1390171454189b16d2a4fd</anchor>
      <arglist>(const std::complex&lt; float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isnan</name>
      <anchorfile>classMHO__CheckForNaN.html</anchorfile>
      <anchor>a5a2377b739ae47c77618179e5b587d5b</anchor>
      <arglist>(const std::complex&lt; long double &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_CircularFieldRotationBuilder</name>
    <filename>classhops_1_1MHO__CircularFieldRotationBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_CircularFieldRotationBuilder</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationBuilder.html</anchorfile>
      <anchor>aae04e119cb4333522268a9f6ebb0a388</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_CircularFieldRotationBuilder</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationBuilder.html</anchorfile>
      <anchor>af64406a141b40b60ca74594fdf11308d</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_CircularFieldRotationBuilder</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationBuilder.html</anchorfile>
      <anchor>ac55e22611688fd261735cfba9b4a5319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationBuilder.html</anchorfile>
      <anchor>a98ed3bc43946fce83f7246938d4d43b2</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_CircularFieldRotationCorrection</name>
    <filename>classhops_1_1MHO__CircularFieldRotationCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_CircularFieldRotationCorrection</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>ac0d7038c3706ef1dca5f8e11423173e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_CircularFieldRotationCorrection</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>aef5e2565ac44d77f4877bba6ef4120a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFourfitReferenceTimeVexString</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>ab76049f3fe01ac9e7f688677a93604d8</anchor>
      <arglist>(std::string frt_vex_string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolProductSet</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>a82f66bdd4ce802528daa8e626f67a07e</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;pp_vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceMountType</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>ac091f6bfb5ccb38a8f4e874291dcf0f9</anchor>
      <arglist>(std::string mt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceStationCoordinateData</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>ac844e1dcae51fdc26034362131bd0fb8</anchor>
      <arglist>(station_coord_type *ref_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteMountType</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>a65483a422cf28b300f02c6af3012f123</anchor>
      <arglist>(std::string mt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteStationCoordinateData</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>a1e181a268ee4f6ecbd0be90465cfe93b</anchor>
      <arglist>(station_coord_type *rem_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>a73ef3165a46616d5b21582ee6b643b2e</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>ae3a9747e8a0a11f34376ebe5e8062322</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>af871825e3a280e76ef01617ccdd41d6f</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CircularFieldRotationCorrection.html</anchorfile>
      <anchor>ae787c27574eeed7972ca2261d96fa47c</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ClassIdentity</name>
    <filename>structhops_1_1MHO__ClassIdentity.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ClassName</name>
      <anchorfile>structhops_1_1MHO__ClassIdentity.html</anchorfile>
      <anchor>aa82481443af729eea9ba1ed001256202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ClassName</name>
      <anchorfile>structhops_1_1MHO__ClassIdentity.html</anchorfile>
      <anchor>a3bd44800dc97dcc006e4aa59d8f35965</anchor>
      <arglist>(const XClassType &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ClassVersionErrorMsg</name>
      <anchorfile>structhops_1_1MHO__ClassIdentity.html</anchorfile>
      <anchor>a811508b3d8159f06c83aa7e5068ac95d</anchor>
      <arglist>(const XClassType &amp;obj, MHO_ClassVersion version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_UUID</type>
      <name>GetUUIDFromClass</name>
      <anchorfile>structhops_1_1MHO__ClassIdentity.html</anchorfile>
      <anchor>a259b9ed6872ace2728f13a176f89b9ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_UUID</type>
      <name>GetUUIDFromClass</name>
      <anchorfile>structhops_1_1MHO__ClassIdentity.html</anchorfile>
      <anchor>a68c88e3ecd5e4305ef557427d9f828db</anchor>
      <arglist>(const XClassType &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_UUID</type>
      <name>GetUUIDFromClassName</name>
      <anchorfile>structhops_1_1MHO__ClassIdentity.html</anchorfile>
      <anchor>a484242fa281cadb15c1ac309478e6edd</anchor>
      <arglist>(std::string name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ClassIdentityMap</name>
    <filename>classhops_1_1MHO__ClassIdentityMap.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ClassIdentityMap</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>adeb4c0465fb1605b42912194894bd1ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ClassIdentityMap</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>ac7bc672558d8f417c3ca2b709ea323b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddClassType</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>aacb4044308825b39e1f5267ba5b60464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddClassType</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a0103c4975042d0957488ac71c9807d29</anchor>
      <arglist>(const XClassType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Serializable *</type>
      <name>GenerateContainerFromUUID</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>ae11557634aed6caa84c4650da0f35a0d</anchor>
      <arglist>(const MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetClassNameFromObject</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a18722990995da99e0bfedbbae39ef67c</anchor>
      <arglist>(const XClassType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetClassNameFromUUID</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>ab5fab332ff20bda9ff5cb2058af53933</anchor>
      <arglist>(const MHO_UUID &amp;uuid) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GetUUIDFor</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a1e8027a17af12026e03bacf9f274811b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GetUUIDFromClassName</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a1e04611ffbc80e9cce0fcaf26b3d9880</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTypePresent</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>adb7d3b4cfa2b147704b58f8ad55d7d6a</anchor>
      <arglist>(const MHO_UUID &amp;uuid) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddToMap</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a9ce28a29369978d3a129718baf7a910c</anchor>
      <arglist>(const MHO_UUID &amp;type_uuid, const std::string &amp;name)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, MHO_UUID &gt;</type>
      <name>fClassName2UUID</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>aa9593b215788c588c77f6781609b2465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; MHO_UUID, MHO_SerializableObjectFactory * &gt;</type>
      <name>fFactoryMap</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a7c19c181ba151d9f18cadf93723061f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; MHO_UUID, MHO_JSONConverter * &gt;</type>
      <name>fJSONConverterMap</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a1dff8aca0d05dd0aff93a23c3952b6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_MD5HashGenerator</type>
      <name>fMD5Generator</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a4a3b31a0eaac82497f553cb73c05e3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; MHO_UUID, std::string &gt;</type>
      <name>fUUID2ClassName</name>
      <anchorfile>classhops_1_1MHO__ClassIdentityMap.html</anchorfile>
      <anchor>a2de36e66bf0a4e9d56b4729a56b55269</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ComplexConjugator</name>
    <filename>classhops_1_1MHO__ComplexConjugator.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryFunctor</base>
    <member kind="typedef">
      <type>typename MHO_UnaryFunctor&lt; XArrayType &gt;::citerator_type</type>
      <name>citerator_type</name>
      <anchorfile>classhops_1_1MHO__ComplexConjugator.html</anchorfile>
      <anchor>ac9f1e8a4fb429a7ba78145551eff5f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename MHO_UnaryFunctor&lt; XArrayType &gt;::iterator_type</type>
      <name>iterator_type</name>
      <anchorfile>classhops_1_1MHO__ComplexConjugator.html</anchorfile>
      <anchor>a62d837aaa22e3c04b781f0940277e4e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ComplexConjugator</name>
      <anchorfile>classhops_1_1MHO__ComplexConjugator.html</anchorfile>
      <anchor>acf46611102b12f713cf33a95c9b42039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ComplexConjugator</name>
      <anchorfile>classhops_1_1MHO__ComplexConjugator.html</anchorfile>
      <anchor>a143fdc58fa107496ecf9ac74b378e74d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__ComplexConjugator.html</anchorfile>
      <anchor>a4b569802ffcb6f95439f4aa4608f7f16</anchor>
      <arglist>(citerator_type &amp;input, iterator_type &amp;output) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__ComplexConjugator.html</anchorfile>
      <anchor>a2971bff2e99d5582fbf3235138be0dd3</anchor>
      <arglist>(iterator_type &amp;input) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_CompoundMultiply</name>
    <filename>structhops_1_1MHO__CompoundMultiply.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structhops_1_1MHO__CompoundMultiply.html</anchorfile>
      <anchor>a984033cd5f108aeb06ed1b46ef806ae1</anchor>
      <arglist>(XValueType &amp;a, const XValueType &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>const XValueType</type>
      <name>identity</name>
      <anchorfile>structhops_1_1MHO__CompoundMultiply.html</anchorfile>
      <anchor>ae4603c25b32220cffb5acc546b05ac86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_CompoundReductions</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__CompoundReductions</anchor>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_CompoundSum</name>
    <filename>structhops_1_1MHO__CompoundSum.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structhops_1_1MHO__CompoundSum.html</anchorfile>
      <anchor>a1c0b3ec6ec67e7e167b7c7dc93241c8b</anchor>
      <arglist>(XValueType &amp;a, const XValueType &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>const XValueType</type>
      <name>identity</name>
      <anchorfile>structhops_1_1MHO__CompoundSum.html</anchorfile>
      <anchor>a42d5ae050545632c551babe23b7a0331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_CompoundSum&lt; XItemType &gt;</name>
    <filename>structhops_1_1MHO__CompoundSum.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structhops_1_1MHO__CompoundSum.html</anchorfile>
      <anchor>a1c0b3ec6ec67e7e167b7c7dc93241c8b</anchor>
      <arglist>(XItemType &amp;a, const XItemType &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>const XItemType</type>
      <name>identity</name>
      <anchorfile>structhops_1_1MHO__CompoundSum.html</anchorfile>
      <anchor>a42d5ae050545632c551babe23b7a0331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ComputePlotData</name>
    <filename>classhops_1_1MHO__ComputePlotData.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ComputePlotData</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>aee323fc80b6f65ab8065fe6a3ed9cf84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ComputePlotData</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a5b9c9c76d952d0eb48d2e4dee2c11d87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>xpower_amp_type</type>
      <name>calc_dr</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a64cd51debb76a2a74bd63c0fe0563aa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>calc_error_code</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>acfb96247b28484694255ce935f120c23</anchor>
      <arglist>(const mho_json &amp;plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_freqrms</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a6a3eef97503e4c67e2b77f0c84e81dea</anchor>
      <arglist>(phasor_type &amp;phasors, double coh_avg_phase, double fringe_amp, double total_summed_weights, double snr, double &amp;freqrms_phase, double &amp;freqrms_amp, double &amp;inc_avg_amp_freq)</arglist>
    </member>
    <member kind="function">
      <type>xpower_amp_type</type>
      <name>calc_mbd</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a88c2d7b6c50f02105efd3c59a7d2dbe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>calc_phase</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a15618304ccef76255bc97fe559a8ea97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>calc_quality_code</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a2b651788ffe3c13fbb1a9265553992a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>xpower_amp_type</type>
      <name>calc_sbd</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ad8dc0743bc06d78f0b85cdee08b10b89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>phasor_type</type>
      <name>calc_segs</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>adc17cfcfec0b49da0d8c8dcdb326dbca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_timerms</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ac6f48cfc9dfb458983b92d78fdbda4e7</anchor>
      <arglist>(phasor_type &amp;phasors, std::size_t nseg, std::size_t apseg, double coh_avg_phase, double fringe_amp, double total_summed_weights, double snr, double &amp;timerms_phase, double &amp;timerms_amp, double &amp;inc_avg_amp)</arglist>
    </member>
    <member kind="function">
      <type>xpower_type</type>
      <name>calc_xpower_spec</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ad69032b475650994769111f367a47af9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>correct_vis</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>aaac0b3180af5c5345baa9f5c2d37ec11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisableOptimizeClosure</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a35d70decb885ebc4844715050572aae9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump_manual_pcmodel</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ad0a04756a84feacf346efba81be620e6</anchor>
      <arglist>(mho_json &amp;plot_dict, int station_flag, std::string pol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump_multitone_pcmodel</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a2825555d5dbbde736ac97ebd0349acf7</anchor>
      <arglist>(mho_json &amp;plot_dict, int station_flag, std::string pol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpInfoToJSON</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a912a6d8b15d8c51cea7bb1b8a808de9f</anchor>
      <arglist>(mho_json &amp;plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnableOptimizeClosure</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>adecd91e6b4f4aee588411f49fdd59a5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ae2f070c806cc3d182ca7e306faba7fc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetContainerStore</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a97ce2bbe42a961ff1e0ebb367bdccc57</anchor>
      <arglist>(MHO_ContainerStore *cStore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMBDAnchor</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ac2d9eb6423b960dd2785d113fcec86c9</anchor>
      <arglist>(std::string flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOperatorToolbox</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a9301d58389bdb876dc0e053fe85f3dec</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParameterStore</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>afc52355b3607a41bc55d785acb191979</anchor>
      <arglist>(MHO_ParameterStore *pStore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexInfo</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a773841474db48fc125f7381a74766047</anchor>
      <arglist>(const mho_json &amp;vex_info)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fAmp</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>aa3342d937d26acd4f6f333d128f7301b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MHO_ContainerStore *</type>
      <name>fContainerStore</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a3c2a8f188bb3fe6f82f960f1a95c89ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MHO_CyclicRotator&lt; xpower_type &gt;</type>
      <name>fCyclicRotator</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a36ccde6803c5764e2b7a27e7ba347b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fDelayRate</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a9b7b5c51dc12f91e6a507996299a5259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>xpower_amp_type</type>
      <name>fDRAmpWorkspace</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a0d9c172552506fa293231d92dd510556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>xpower_type</type>
      <name>fDRWorkspace</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ab71cb3cb3ccafed244c473ffe291fef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MHO_MultidimensionalFastFourierTransform&lt; xpower_type &gt;</type>
      <name>fFFTEngine</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>af75d15daa12b707d755602cfcd0341ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>xpower_type</type>
      <name>fFringe</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a3a2581bf72f44951d441796b22615401</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fFringeRate</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a6a0ac206e6e18d2759cfd173d2c35fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; double &gt;</type>
      <name>fImagUnit</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>aa2b959043af4e9ac5f6f41be513511b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>xpower_amp_type</type>
      <name>fMBDAmpWorkspace</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ac50138a0b2aa8f20b78744ade2dd0d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fMBDAnchor</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a168c487b303d3cc5dc846d030d9fe6fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fMBDelay</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a4ea40a519e16f78b9256819c0c8f72ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>xpower_type</type>
      <name>fMBDWorkspace</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a7d837f0c6094427eb008e2df73bf1635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>fNLSBAP</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a8d590fbbb95e665ad7adbf4c5aca1b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>fNUSBAP</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a5656e55b5bc6be1d5db56d2ddbc6af04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MHO_ParameterStore *</type>
      <name>fParamStore</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ac1dc6861477ee3ed36c7c20bf2744b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fRefFreq</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a15c58abd469690695a2d30dbb7691d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MHO_FringeRotation</type>
      <name>fRot</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a8667850624a7b10f4ac12aa49ad5ebcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>visibility_type *</type>
      <name>fSBDArray</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a0bc26306f1c3992c9fd2a14240cb6e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>fSBDBox</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>aa9a09a34a3d434eeccbea5fbd42a9c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fSBDelay</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a720cf67a5f227bf6cb8e50f544dc0a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fSBDMaxBin</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a6993ae2e043c079b6806cf8f141cffbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MHO_OperatorToolbox *</type>
      <name>fToolbox</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a2d7eae943f360c37227da665431dfc07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fTotalSummedWeights</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>af318e0c857d2c971ed45759fc5d1855c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fValid</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>ad3fd6e82bab752f9f5d77c7eb0bf9a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mho_json</type>
      <name>fVexInfo</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a84dd29c4c6830aef8866206045d851bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>visibility_type *</type>
      <name>fVisibilities</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>af6edda99df6b30130c0d1da47ed384b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>weight_type *</type>
      <name>fWeights</name>
      <anchorfile>classhops_1_1MHO__ComputePlotData.html</anchorfile>
      <anchor>a92a2d09064cfaf9440bdad4e6df816ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Constants</name>
    <filename>classhops_1_1MHO__Constants.html</filename>
    <member kind="variable" static="yes">
      <type>constexpr static double</type>
      <name>deg_to_rad</name>
      <anchorfile>classhops_1_1MHO__Constants.html</anchorfile>
      <anchor>af5b2d60fa7659b598c3c1e95ce9119f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static std::complex&lt; double &gt;</type>
      <name>imag_unit</name>
      <anchorfile>classhops_1_1MHO__Constants.html</anchorfile>
      <anchor>a010ce039565b123183d3e3e8136e1051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static double</type>
      <name>ion_k</name>
      <anchorfile>classhops_1_1MHO__Constants.html</anchorfile>
      <anchor>a0fc08eb08a8aa8e84dda488d70033716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static double</type>
      <name>MHz_to_Hz</name>
      <anchorfile>classhops_1_1MHO__Constants.html</anchorfile>
      <anchor>a3789ae01a3accf976a8e8c124093007d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static double</type>
      <name>nanosec_to_second</name>
      <anchorfile>classhops_1_1MHO__Constants.html</anchorfile>
      <anchor>a65d1bca67abe06c0e20ff220ec205c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static double</type>
      <name>pi</name>
      <anchorfile>classhops_1_1MHO__Constants.html</anchorfile>
      <anchor>a742e93c01ed1452253ed3ea6928e9f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>constexpr static double</type>
      <name>rad_to_deg</name>
      <anchorfile>classhops_1_1MHO__Constants.html</anchorfile>
      <anchor>a370e7a6ca61e9c47e27af1dd3386c092</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerDictionary</name>
    <filename>classhops_1_1MHO__ContainerDictionary.html</filename>
    <base>hops::MHO_ClassIdentityMap</base>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerDictionary</name>
      <anchorfile>classhops_1_1MHO__ContainerDictionary.html</anchorfile>
      <anchor>a7e895874e73e23d01a719010684b6110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ContainerDictionary</name>
      <anchorfile>classhops_1_1MHO__ContainerDictionary.html</anchorfile>
      <anchor>a58644b41c40da33bb07a4d4c42508711</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerFileInterface</name>
    <filename>classhops_1_1MHO__ContainerFileInterface.html</filename>
    <base>hops::MHO_ContainerDictionary</base>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerFileInterface</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>a3ece0ef3788fe519892ea4983a827d17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ContainerFileInterface</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>a2e5835d844a97b1e11eb32c509f1eecb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertObjectInStoreToJSON</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>a8518914bbc5d3df1df6618310d25b69f</anchor>
      <arglist>(MHO_ContainerStore &amp;store, const MHO_UUID &amp;obj_uuid, mho_json &amp;json_obj, int level_of_detail=eJSONBasic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertObjectInStoreToJSONAndRaw</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>a1dac18faefcad63f0e22791ce83db6c8</anchor>
      <arglist>(MHO_ContainerStore &amp;store, const MHO_UUID &amp;obj_uuid, mho_json &amp;json_obj, std::size_t &amp;rank, const char *&amp;raw_data, std::size_t &amp;raw_data_byte_size, std::string &amp;raw_data_descriptor, int level_of_detail=eJSONBasic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertStoreToJSON</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>aaa4c6f5291045b0ec9f8aba2cae285cc</anchor>
      <arglist>(MHO_ContainerStore &amp;store, mho_json &amp;json_obj, int level_of_detail=eJSONBasic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PopulateStoreFromFile</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>ab4eaf43ba3563c8663c42243bc473358</anchor>
      <arglist>(MHO_ContainerStore &amp;store, bool do_clear_store=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilename</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>a06d80ffe9c3d5bfc819f61dc337fc1d9</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndexFileName</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>a66cc762564be2d246981b1215db01588</anchor>
      <arglist>(std::string index_filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteStoreToFile</name>
      <anchorfile>classhops_1_1MHO__ContainerFileInterface.html</anchorfile>
      <anchor>ae5cdfda109dff476bdea68de3d2854f9</anchor>
      <arglist>(MHO_ContainerStore &amp;store)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerHDF5Converter</name>
    <filename>classhops_1_1MHO__ContainerHDF5Converter.html</filename>
    <templarg></templarg>
    <base>hops::MHO_HDF5Converter</base>
    <class kind="class">hops::MHO_ContainerHDF5Converter::AxisDumper</class>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerHDF5Converter</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a00537de718381af8f62e167939a1cd3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerHDF5Converter</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a57ea9f162399f4c88f87ecd4b7f7fafa</anchor>
      <arglist>(MHO_ExtensibleElement *element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ContainerHDF5Converter</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a25e1b92ead348768eb761f8125da1ed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetObjectToConvert</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a87dda21438a753a66adabb62fefddf30</anchor>
      <arglist>(MHO_Serializable *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteToHDF5File</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a2848dcb1e3aaed56bddc5635100e41f7</anchor>
      <arglist>(hid_t file_id, std::string group_prefix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; std::is_base_of&lt; MHO_ScalarContainerBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>ConstructHDF5</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a22f60bf313da18d40c35ace2c2b83d78</anchor>
      <arglist>(hid_t file_id, std::string group_prefix, const XContainerType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(std::is_base_of&lt; MHO_VectorContainerBase, XCheckType &gt;::value &amp;&amp;!std::is_base_of&lt; MHO_AxisBase, XCheckType &gt;::value), void &gt;::type</type>
      <name>ConstructHDF5</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a915a2218edd6c8911f80fd112bb9f262</anchor>
      <arglist>(hid_t file_id, std::string group_prefix, const XContainerType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; std::is_base_of&lt; MHO_AxisBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>ConstructHDF5</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a6148a77e8cbf26abc35c103d3fd26a46</anchor>
      <arglist>(hid_t file_id, std::string group_prefix, const XContainerType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>ConstructHDF5</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>ae538c1e0559bfbf8afe717dd0957aacb</anchor>
      <arglist>(hid_t file_id, std::string group_prefix, const XContainerType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ConstructHDF5</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter.html</anchorfile>
      <anchor>a76c6ebcac52994c66377d88fa48ee8b8</anchor>
      <arglist>(hid_t, std::string, const XCheckType *obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerHDF5Converter&lt; MHO_ObjectTags &gt;</name>
    <filename>classhops_1_1MHO__ContainerHDF5Converter_3_01MHO__ObjectTags_01_4.html</filename>
    <base>hops::MHO_HDF5Converter</base>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerHDF5Converter</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>a1e238def0bc7a86b6000dd3125091d80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerHDF5Converter</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>aacc4b13d584da00f0b200a701f57cafc</anchor>
      <arglist>(MHO_ExtensibleElement *element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ContainerHDF5Converter</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>a787e06837fe7f2b3a11a0e48b6a28987</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetObjectToConvert</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>a47d45901a21dea1fca99f51ef1aa7dbe</anchor>
      <arglist>(MHO_Serializable *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteToHDF5File</name>
      <anchorfile>classhops_1_1MHO__ContainerHDF5Converter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>abc3fbc7e4346746ee7b95a3ab9bed2e9</anchor>
      <arglist>(hid_t file_id, std::string group_prefix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerJSONConverter</name>
    <filename>classhops_1_1MHO__ContainerJSONConverter.html</filename>
    <templarg></templarg>
    <base>hops::MHO_JSONConverter</base>
    <class kind="class">hops::MHO_ContainerJSONConverter::AxisDumper</class>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerJSONConverter</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a8aa02c252a1bbfc49159b5cd5abc6e5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerJSONConverter</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a64b889fedaa185df5a1f52cc877c2ea5</anchor>
      <arglist>(MHO_ExtensibleElement *element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ContainerJSONConverter</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a9fc105a344f6727aaf23620bbf8d8ee8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ConstructJSONRepresentation</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a9796188e4268fe2968a740701ca5d122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetObjectToConvert</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a80ec1f226ae4e00f35ba8f12584231ba</anchor>
      <arglist>(MHO_Serializable *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ConstructJSON</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>ab1ff35e0a7d93972b2f6de3f39764426</anchor>
      <arglist>(const XCheckType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; std::is_base_of&lt; MHO_ScalarContainerBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>ConstructJSON</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a8c88da409c76fcf9b13de8fabad39eb2</anchor>
      <arglist>(const XContainerType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt;(std::is_base_of&lt; MHO_VectorContainerBase, XCheckType &gt;::value &amp;&amp;!std::is_base_of&lt; MHO_AxisBase, XCheckType &gt;::value), void &gt;::type</type>
      <name>ConstructJSON</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a2980a567a7f2344485316804c5efea52</anchor>
      <arglist>(const XContainerType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; std::is_base_of&lt; MHO_AxisBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>ConstructJSON</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a6fde1b7f729bfde0dcbfc0f35c0b6501</anchor>
      <arglist>(const XContainerType *obj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>ConstructJSON</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter.html</anchorfile>
      <anchor>a86d80e4a588eb89acd5a1596c688d51f</anchor>
      <arglist>(const XContainerType *obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerJSONConverter&lt; MHO_ObjectTags &gt;</name>
    <filename>classhops_1_1MHO__ContainerJSONConverter_3_01MHO__ObjectTags_01_4.html</filename>
    <base>hops::MHO_JSONConverter</base>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerJSONConverter</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>a0e8c46e6097e73ab22ae1dce31245414</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerJSONConverter</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>afb0acdcd4f4fa0443bc5f9d1154bafcf</anchor>
      <arglist>(MHO_ExtensibleElement *element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ContainerJSONConverter</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>a624f084274c2bd011ad0329a1d6e1212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ConstructJSONRepresentation</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>adf1d9dfb4665baf3a25c1f5c5fb1d639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetObjectToConvert</name>
      <anchorfile>classhops_1_1MHO__ContainerJSONConverter_3_01MHO__ObjectTags_01_4.html</anchorfile>
      <anchor>af05baba21eeb0a5b4302c3542aec6a02</anchor>
      <arglist>(MHO_Serializable *obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ContainerStore</name>
    <filename>classhops_1_1MHO__ContainerStore.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ContainerStore</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a098859e8ed3f641558254b9b11d4656a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ContainerStore</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a49821a0ad9e08ffca430837972c14eaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>af5ad680d1a1fd5e0f21cff97da89ec79</anchor>
      <arglist>(XClassType *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a93df4c1775df05712b86dea3b7f44135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a172a981fef8589ed7e598af870c04994</anchor>
      <arglist>(const MHO_UUID &amp;obj_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a2712f221181fe3f0f11e4557475807f3</anchor>
      <arglist>(XClassType *obj_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpShortNamesToIds</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a1cba89cd988f64128a6c562c301d7d3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::tuple&lt; std::string, std::string, std::string &gt; &gt;</type>
      <name>GetAllObjectInfo</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>ab9da68866bf1259aa65c7c22ab61e3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetAllObjectUUIDsOfType</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>aa6c23daa08ef67b61c8f7f7d5224049d</anchor>
      <arglist>(MHO_UUID type_id, std::vector&lt; MHO_UUID &gt; &amp;obj_ids)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetAllShortNames</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a1bf5872e1b8eb1947c0d6ded1248ffad</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;shortnames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetAllTypeUUIDs</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a6971d6e9313b086e2d70c32d7837564a</anchor>
      <arglist>(std::vector&lt; MHO_UUID &gt; &amp;type_ids)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNObjects</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>aea90e8cc518d391e85e4d84b8a18c6af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNObjects</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>abb5deba9d4de9f7be5e51d32c96fa86d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XClassType *</type>
      <name>GetObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a5220072d0f85b45f046b9887989c082a</anchor>
      <arglist>(const MHO_UUID &amp;obj_id)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Serializable *</type>
      <name>GetObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a17b1cd88623ab61ccd64f62de046fac2</anchor>
      <arglist>(const MHO_UUID &amp;obj_id)</arglist>
    </member>
    <member kind="function">
      <type>XClassType *</type>
      <name>GetObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a750746e89aa37ec1512c17361de19427</anchor>
      <arglist>(const std::string &amp;shortname)</arglist>
    </member>
    <member kind="function">
      <type>XClassType *</type>
      <name>GetObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a98ba66c6240f2eaae3df2e6df7d93307</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GetObjectTypeUUID</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a23fd693e5669ed386f15c7a7862bdff2</anchor>
      <arglist>(const MHO_UUID &amp;obj_id)</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GetObjectUUID</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a9b6cb68b46ed10595a6d11ed0c14fa31</anchor>
      <arglist>(const std::string &amp;shortname)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetShortName</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a462ef5eb99c761de5a4bca823737b5d3</anchor>
      <arglist>(const MHO_UUID &amp;obj_id)</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GetTypeUUID</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>ae6f78d013685c50c4e21d82135f86415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsObjectPresent</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>aad15f2eb03eea6ebdcd6fc8013435c4d</anchor>
      <arglist>(const MHO_UUID &amp;obj_id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RenameObject</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>acb204c225f10bc2a281b695c7edca7bd</anchor>
      <arglist>(const std::string &amp;current_shortname, const std::string &amp;new_shortname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetShortName</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a165afd02427cc03c70e3bae975fc39db</anchor>
      <arglist>(const MHO_UUID &amp;obj_id, const std::string &amp;shortname)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::pair&lt; MHO_UUID, MHO_UUID &gt;</type>
      <name>key_pair</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>ac51e64cd78a80f6d9e2049a6d902db86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ContainerDictionary</type>
      <name>fDictionary</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a2d487d18f32a32a1d7af424ee378177b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; key_pair, MHO_Serializable * &gt;</type>
      <name>fIdsToObjects</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>ab50921c445a5fcf44cf1cb1c7ab015ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; MHO_Serializable *, key_pair &gt;</type>
      <name>fObjectsToIds</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a4209497a5f5656401b13af941f83e1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>fShortNameSet</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a208625904b4d8294c6e2aba41527fb6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, MHO_UUID &gt;</type>
      <name>fShortNameToIds</name>
      <anchorfile>classhops_1_1MHO__ContainerStore.html</anchorfile>
      <anchor>a4f45abae859c12620816cdf9cc70cb6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ControlConditionEvaluator</name>
    <filename>classhops_1_1MHO__ControlConditionEvaluator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ControlConditionEvaluator</name>
      <anchorfile>classhops_1_1MHO__ControlConditionEvaluator.html</anchorfile>
      <anchor>a332a9c58644ec5ad5b33164b58215d0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ControlConditionEvaluator</name>
      <anchorfile>classhops_1_1MHO__ControlConditionEvaluator.html</anchorfile>
      <anchor>afb8c172b5059d2c72c5b6afde9c04d98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Evaluate</name>
      <anchorfile>classhops_1_1MHO__ControlConditionEvaluator.html</anchorfile>
      <anchor>a1b28de04a0ae3085d7c408136d1af83a</anchor>
      <arglist>(mho_json &amp;control_condition)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetApplicableStatements</name>
      <anchorfile>classhops_1_1MHO__ControlConditionEvaluator.html</anchorfile>
      <anchor>a345b1455ca476316490fb246cebeb037</anchor>
      <arglist>(mho_json &amp;control_contents)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPassInformation</name>
      <anchorfile>classhops_1_1MHO__ControlConditionEvaluator.html</anchorfile>
      <anchor>a2acb1c9110cff160d40c7589200f2224</anchor>
      <arglist>(std::string baseline, std::string source, std::string fgroup, std::string scan_time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ControlDefinitions</name>
    <filename>classhops_1_1MHO__ControlDefinitions.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ControlDefinitions</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>a6ab2eb57bce36cffd696f6cddae475e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ControlDefinitions</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>a0d304ecaf8a953a5e52373fbe469e9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>CommentFlag</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>a18dcd455a25d165c722a8d66e3fea3b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static control_element_type</type>
      <name>DetermineControlType</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>a3ce270b4e4c88cdce0015c71554e413e</anchor>
      <arglist>(std::string etype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static mho_json</type>
      <name>GetControlFormat</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>a5a561ffa6087260a8bc837467680e7fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetFormatDirectory</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>af41a75cc212446c191f699d8c84e5a44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>GetKeywordNames</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>aee417a595cd2ce37e6dca1ce47f85deb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>WhitespaceDelim</name>
      <anchorfile>classhops_1_1MHO__ControlDefinitions.html</anchorfile>
      <anchor>aefddad40d1abe980c0c3d770ababe4e2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ControlElementParser</name>
    <filename>classhops_1_1MHO__ControlElementParser.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ControlElementParser</name>
      <anchorfile>classhops_1_1MHO__ControlElementParser.html</anchorfile>
      <anchor>acd12a8a2a06f3cabf3f4dc444d402264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ControlElementParser</name>
      <anchorfile>classhops_1_1MHO__ControlElementParser.html</anchorfile>
      <anchor>a2d554b02d3f1f7b044b84afe45024874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ParseControlStatement</name>
      <anchorfile>classhops_1_1MHO__ControlElementParser.html</anchorfile>
      <anchor>afb6946407fe47283111fd911f02198a2</anchor>
      <arglist>(const MHO_ControlStatement &amp;control_statement)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_ControlElements</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__ControlElements</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ControlFileParser</name>
    <filename>classhops_1_1MHO__ControlFileParser.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ControlFileParser</name>
      <anchorfile>classhops_1_1MHO__ControlFileParser.html</anchorfile>
      <anchor>a8e0e824aee048495644b920bc259864f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ControlFileParser</name>
      <anchorfile>classhops_1_1MHO__ControlFileParser.html</anchorfile>
      <anchor>a3f37e58ad61c3e8005b4950b50bfdff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetLegacyProcessedControlFileText</name>
      <anchorfile>classhops_1_1MHO__ControlFileParser.html</anchorfile>
      <anchor>a83414c693ea96fc03fe700982d517be2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetProcessedControlFileText</name>
      <anchorfile>classhops_1_1MHO__ControlFileParser.html</anchorfile>
      <anchor>af0624cbc331adf5fb65c4b438ad7179b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ParseControl</name>
      <anchorfile>classhops_1_1MHO__ControlFileParser.html</anchorfile>
      <anchor>a77d45bc7bee73b5928923ffff3b55761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PassSetString</name>
      <anchorfile>classhops_1_1MHO__ControlFileParser.html</anchorfile>
      <anchor>a49a706a3088f7646cd75a78faefd1476</anchor>
      <arglist>(std::string set_string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlFile</name>
      <anchorfile>classhops_1_1MHO__ControlFileParser.html</anchorfile>
      <anchor>a8650067b142cdea5afbeb4d28d29d5e3</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_ControlLine</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__ControlLine</anchor>
    <member kind="variable">
      <type>std::string</type>
      <name>fContents</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae15520913658428914ed3a4439c111ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fLineNumber</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa01eff9d37411ec232f101ba0548eb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; MHO_Token &gt;</type>
      <name>fTokens</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acea066ba9611dd06f7d6e8b033961521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_ControlStatement</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__ControlStatement</anchor>
    <member kind="variable">
      <type>std::string</type>
      <name>fKeyword</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab5665de6a60245a04210820ebab2b52e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fStartLineNumber</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8f0377c88b082d3a34d5321511cbe24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; MHO_Token &gt;</type>
      <name>fTokens</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a48acec0344c9952167fbcc220060f2bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ControlTokenProcessor</name>
    <filename>classhops_1_1MHO__ControlTokenProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ControlTokenProcessor</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>a4879a027fe840555387218b2956f8390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ControlTokenProcessor</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>acb700f45a7b43c6e3314eeab70b6e5d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessBool</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>a3269b9fbbd1c0e6ce0861ef74563d5b3</anchor>
      <arglist>(const MHO_Token &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessFixedLengthListString</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>adfcca137b99f58a04503ef934bb23bf5</anchor>
      <arglist>(const std::vector&lt; MHO_Token &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessInt</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>ade7124584b39f78392addebed27929d1</anchor>
      <arglist>(const MHO_Token &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessListInt</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>a954887300e55c8b86bd33c3b3a885ac7</anchor>
      <arglist>(const std::vector&lt; MHO_Token &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessListReal</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>a5ad53b433800f3b0f654235a42e79a6d</anchor>
      <arglist>(const std::vector&lt; MHO_Token &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessListString</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>aa24ceec609c0b1406bbe0aa1ab207d6e</anchor>
      <arglist>(const std::vector&lt; MHO_Token &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessReal</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>a6eb043d13044488831e21be864592fd2</anchor>
      <arglist>(const MHO_Token &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessString</name>
      <anchorfile>classhops_1_1MHO__ControlTokenProcessor.html</anchorfile>
      <anchor>ac9f98dd681897daee240c8d1e8af9009</anchor>
      <arglist>(const MHO_Token &amp;token)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_CyclicRotator</name>
    <filename>classhops_1_1MHO__CyclicRotator.html</filename>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_CyclicRotator</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ab228aa6c94667af618ede65dfe297e86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_CyclicRotator</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>a5efce40478aa93264d376786ca50ce50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOffset</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>a4253d014f5f946fde92c6cd61c63986e</anchor>
      <arglist>(std::size_t dimension_index, int64_t offset_value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ac7a54a89c3eb5955f7d91c5ab68fafab</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ac3f704667fbfecc87d095f8643988b06</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ab4907e69d07de93ace8f84e2cf933c52</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>aa03d367c4346ca80d2eb498cd43f2b3e</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_CyclicRotator&lt; hops::MHO_TableContainer &gt;</name>
    <filename>classhops_1_1MHO__CyclicRotator.html</filename>
    <base>MHO_UnaryOperator&lt; hops::MHO_TableContainer &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_CyclicRotator</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ab228aa6c94667af618ede65dfe297e86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_CyclicRotator</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>a5efce40478aa93264d376786ca50ce50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOffset</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>a4253d014f5f946fde92c6cd61c63986e</anchor>
      <arglist>(std::size_t dimension_index, int64_t offset_value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ac7a54a89c3eb5955f7d91c5ab68fafab</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ac3f704667fbfecc87d095f8643988b06</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ab4907e69d07de93ace8f84e2cf933c52</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>aa03d367c4346ca80d2eb498cd43f2b3e</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_CyclicRotator&lt; MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; &gt;</name>
    <filename>classhops_1_1MHO__CyclicRotator.html</filename>
    <base>MHO_UnaryOperator&lt; MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_CyclicRotator</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ab228aa6c94667af618ede65dfe297e86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_CyclicRotator</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>a5efce40478aa93264d376786ca50ce50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOffset</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>a4253d014f5f946fde92c6cd61c63986e</anchor>
      <arglist>(std::size_t dimension_index, int64_t offset_value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ac7a54a89c3eb5955f7d91c5ab68fafab</anchor>
      <arglist>(MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ac3f704667fbfecc87d095f8643988b06</anchor>
      <arglist>(const MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in, MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>ab4907e69d07de93ace8f84e2cf933c52</anchor>
      <arglist>(MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__CyclicRotator.html</anchorfile>
      <anchor>aa03d367c4346ca80d2eb498cd43f2b3e</anchor>
      <arglist>(const MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in, MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DataSelectionBuilder</name>
    <filename>classhops_1_1MHO__DataSelectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_DataSelectionBuilder</name>
      <anchorfile>classhops_1_1MHO__DataSelectionBuilder.html</anchorfile>
      <anchor>acae34d00e8adf44089632e1b269929a8</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_DataSelectionBuilder</name>
      <anchorfile>classhops_1_1MHO__DataSelectionBuilder.html</anchorfile>
      <anchor>af26313d2b3fb885375315657385fcdb9</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DataSelectionBuilder</name>
      <anchorfile>classhops_1_1MHO__DataSelectionBuilder.html</anchorfile>
      <anchor>a6c3089a0d9c9da144a69186192299408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__DataSelectionBuilder.html</anchorfile>
      <anchor>a7b7a712f350582b4ba6d8489c57b2344</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DCBlock</name>
    <filename>classhops_1_1MHO__DCBlock.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_DCBlock</name>
      <anchorfile>classhops_1_1MHO__DCBlock.html</anchorfile>
      <anchor>accb5625d6af8660cb8cdb1f01c01ee18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DCBlock</name>
      <anchorfile>classhops_1_1MHO__DCBlock.html</anchorfile>
      <anchor>aca11d14e60a0d50faa8a571bc9c2f4d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__DCBlock.html</anchorfile>
      <anchor>a476b37b431ab7862ac3d079cc6754990</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__DCBlock.html</anchorfile>
      <anchor>ac6ec1445c5709552a353af0d1c6a4428</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__DCBlock.html</anchorfile>
      <anchor>a7847c12dff1e5f08feb0325472abab9b</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__DCBlock.html</anchorfile>
      <anchor>ac685d6adf76a371108e09e8c0d2aa66a</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DCBlockBuilder</name>
    <filename>classhops_1_1MHO__DCBlockBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_DCBlockBuilder</name>
      <anchorfile>classhops_1_1MHO__DCBlockBuilder.html</anchorfile>
      <anchor>aa55129c2065cd260ced1daad6a6d0996</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_DCBlockBuilder</name>
      <anchorfile>classhops_1_1MHO__DCBlockBuilder.html</anchorfile>
      <anchor>a44239bcf1b341d26fea6017cd9c9c585</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DCBlockBuilder</name>
      <anchorfile>classhops_1_1MHO__DCBlockBuilder.html</anchorfile>
      <anchor>a21e51e6626eaafe8e257ede824c1ab78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__DCBlockBuilder.html</anchorfile>
      <anchor>a8e58ee390ad75d0ecd361f4db79b970a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DefaultPythonPlotVisitor</name>
    <filename>classhops_1_1MHO__DefaultPythonPlotVisitor.html</filename>
    <base>hops::MHO_FringePlotVisitor</base>
    <member kind="function">
      <type></type>
      <name>MHO_DefaultPythonPlotVisitor</name>
      <anchorfile>classhops_1_1MHO__DefaultPythonPlotVisitor.html</anchorfile>
      <anchor>aa70b7c0c68cb3cbf1284a58302098141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DefaultPythonPlotVisitor</name>
      <anchorfile>classhops_1_1MHO__DefaultPythonPlotVisitor.html</anchorfile>
      <anchor>af70149c7d8500b32b95b6d36c7ea79dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Plot</name>
      <anchorfile>classhops_1_1MHO__DefaultPythonPlotVisitor.html</anchorfile>
      <anchor>ad22ccc97a7a667ed40f325385284ddfa</anchor>
      <arglist>(MHO_FringeData *data) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DelayModel</name>
    <filename>classhops_1_1MHO__DelayModel.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DelayModel</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a141666abcfb46326864ee9996c7a3703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DelayModel</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a9d761bb08090f0541dfef6a46d49e283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeModel</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a0183b1815c978a01c6c4055ca9613056</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAcceleration</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a2ef1ac43ea6bf85c89976f5f23208099</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDelay</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a0f464c118deda52d806f9fe060db0667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRate</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a3ff15993b856d37cf0801066c6aa7930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRefDelay</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a42af2a5fe5ba3d7d3b7f71e7242c9019</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRefRate</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a985f91af6211e2f6927e5ccb3048f4e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRefStationDelay</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a733811ef3020e50da60113df08b481ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFourfitReferenceTimeVexString</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a2a3c73b45c710e3aa6e3064551814099</anchor>
      <arglist>(std::string fourfit_reftime_string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceStationClockOffset</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>ad8c65893fb2439ac89d307ed2c4c31cd</anchor>
      <arglist>(double clock_off)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceStationClockRate</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>a97a3d1bdeb3acd61cf73d9bcd470d8d2</anchor>
      <arglist>(double clock_rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceStationData</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>acba3335a79f30f062c53f2f58aecff82</anchor>
      <arglist>(station_coord_type *ref_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteStationData</name>
      <anchorfile>classhops_1_1MHO__DelayModel.html</anchorfile>
      <anchor>acbbb46d9ed769fa9dc2b29a2cc0eac05</anchor>
      <arglist>(station_coord_type *rem_data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DelayRate</name>
    <filename>classhops_1_1MHO__DelayRate.html</filename>
    <base>MHO_BinaryOperator&lt; visibility_type, weight_type, sbd_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_DelayRate</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>a45911c8a0e2b0a9b81a0f91ab60811c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DelayRate</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>a26148ac27a860252cdb7d3f810901075</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CalculateSearchSpaceSize</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>ace873ac8e9af48c9452a718ae25d0b6f</anchor>
      <arglist>(unsigned int input_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetDelayRateSearchSpaceSize</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>afc4cf6c1d108499990f4ed874802bb99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceFrequency</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>a1f4d45df9eb28da25b5dbdec4b72e1c0</anchor>
      <arglist>(double ref_freq)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>visibility_type</type>
      <name>XArgType1</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>af867beb847b3aeedcd914c4b04238331</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>weight_type</type>
      <name>XArgType2</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>a07a8eecf3b587d9dc1d6bef3c6670cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>sbd_type</type>
      <name>XArgType3</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>a04b0dc7ee6c051dea8e69f7899aa066f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>a7b8c95a341a7279c717cb5f4e7628ca0</anchor>
      <arglist>(const XArgType1 *in1, const XArgType2 *in2, XArgType3 *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__DelayRate.html</anchorfile>
      <anchor>abadb66da4b56072ea38f22bfd47437ac</anchor>
      <arglist>(const XArgType1 *in1, const XArgType2 *in2, XArgType3 *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXBaselineProcessor</name>
    <filename>classhops_1_1MHO__DiFXBaselineProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXBaselineProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>abd3bba981d7fa75a6b81fefa44c2be93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXBaselineProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a15bf926ee14c7b8a6182d8bd0acefcdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddRecord</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>aef06478b6efe4b7ab4cbc8a5a730e116</anchor>
      <arglist>(MHO_DiFXVisibilityRecord *record)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a596ee807485d448d6b01bd11960f9378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConstructVisibilityFileObjects</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>abded8750eae96d0cf3d1343a1b0288f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBaselineID</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a9b191766bbaa05d334f10de40c6fddff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetBaselineShortName</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a4e1fc2629ab3ab88156d24482e540b58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetRefStationMk4Id</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a450639b72f51aafe369a8d988bacce95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetRemStationMk4Id</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>afd9ace54bdfebfb0d6290a3f2d17f4b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>visibility_store_type *</type>
      <name>GetVisibilities</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a1f2e90fea239f219fcc33acbd14be489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAutoCorr</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a67867ba0cc9d0bce8d05412c23985b3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttachDiFXInputFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>aee04f817f4746758482b418923414f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttachDiFXInputTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>af402b014913a6261fb850eea6069c113</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCorrelationDate</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>ad7cd037a56f3472a93e8e000d0b96e28</anchor>
      <arglist>(std::string corrdate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDiFXCodes2VexCodes</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a20e954ff105a2e610044cef630f8f9e3</anchor>
      <arglist>(const std::map&lt; std::string, std::string &gt; &amp;d2v_map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDiFXCodes2VexNames</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>aeaf8c3caea36bfdda7af416f2fdbefad</anchor>
      <arglist>(const std::map&lt; std::string, std::string &gt; &amp;d2v_map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDiFXInputData</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a59a4d555e247d4559f1452d092b3ab57</anchor>
      <arglist>(const mho_json *input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreqGroups</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>acad8456535dad0f91717f797576b744b</anchor>
      <arglist>(std::vector&lt; std::string &gt; fgroups)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrequencyBands</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a24b9d8f389280af27c91c77674ca3366</anchor>
      <arglist>(std::vector&lt; std::tuple&lt; std::string, double, double &gt; &gt; fbands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOnlyBandwidth</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a350fa71223aec3b0880a8189d708e03a</anchor>
      <arglist>(double bw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRescaleFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a96313e8753a27fc729bf38fa6d82a6a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRescaleTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>ab312cfd988428799cd26e9b0e7186feb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRootCode</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>af87ffd9a7f06adefc2d415cf9d551c90</anchor>
      <arglist>(std::string rcode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScanIndex</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a6b06d48c79435a9e1fea153dd2f5a0d0</anchor>
      <arglist>(std::size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationCodes</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a7b85e68493683bfb722876d16003e6cc</anchor>
      <arglist>(MHO_StationCodeMap *code_map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteVisibilityObjects</name>
      <anchorfile>classhops_1_1MHO__DiFXBaselineProcessor.html</anchorfile>
      <anchor>a82ae649c8105df22e673f0ece817625c</anchor>
      <arglist>(std::string output_dir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXChannelNameConstructor</name>
    <filename>classhops_1_1MHO__DiFXChannelNameConstructor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXChannelNameConstructor</name>
      <anchorfile>classhops_1_1MHO__DiFXChannelNameConstructor.html</anchorfile>
      <anchor>aea3b4f5f107f5ef33c61dbe6a5a080fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXChannelNameConstructor</name>
      <anchorfile>classhops_1_1MHO__DiFXChannelNameConstructor.html</anchorfile>
      <anchor>ad6316c52a1554c289a3811cc3d52b6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBandLabel</name>
      <anchorfile>classhops_1_1MHO__DiFXChannelNameConstructor.html</anchorfile>
      <anchor>a493ac339d2558bcbbe238b8632f457d0</anchor>
      <arglist>(std::string band_label, double freq_low, double freq_high)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddChannelNames</name>
      <anchorfile>classhops_1_1MHO__DiFXChannelNameConstructor.html</anchorfile>
      <anchor>a3e3ae652bcba4835f4a90fa4e9d3711d</anchor>
      <arglist>(mho_json &amp;vex_root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScanName</name>
      <anchorfile>classhops_1_1MHO__DiFXChannelNameConstructor.html</anchorfile>
      <anchor>a55176d1b86dff6f1c2a1ae7f0dc0834a</anchor>
      <arglist>(std::string scan_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXInputProcessor</name>
    <filename>classhops_1_1MHO__DiFXInputProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXInputProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXInputProcessor.html</anchorfile>
      <anchor>a3585b5013b8930846869d6dbe3ab79cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXInputProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXInputProcessor.html</anchorfile>
      <anchor>a554a4df0753a960726fca0c7118d2312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertToJSON</name>
      <anchorfile>classhops_1_1MHO__DiFXInputProcessor.html</anchorfile>
      <anchor>a43a990ef9acc6b4f29dff3ce5a90e5a2</anchor>
      <arglist>(mho_json &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadDiFXInputFile</name>
      <anchorfile>classhops_1_1MHO__DiFXInputProcessor.html</anchorfile>
      <anchor>abd204cb11330369b634e8a68d76777d7</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXInterface</name>
    <filename>classhops_1_1MHO__DiFXInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXInterface</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>ad8a7be87e3ca6335d09501775a65de27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXInterface</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a90843b562075ab5d15b703604d320cfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>adfb23533a171a21ccaa8e6c77b448b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessScans</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>ab3af6f15fa1a6e982ef5e39b7cd5a733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttachDiFXInputFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a166a915132d8dc9683a8de61609cfe74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttachDiFXInputTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a4caacd47508a9d8072876a817993ffab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExperimentNumber</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a6f57577d8d6427bf6a4718a3cc68f7fd</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreqGroups</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a48453de117add80b3f6480833efa9300</anchor>
      <arglist>(std::vector&lt; std::string &gt; fgroups)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrequencyBands</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>ac5cb2d30961cd51f59edc0c9552ec009</anchor>
      <arglist>(std::vector&lt; std::tuple&lt; std::string, double, double &gt; &gt; fbands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInputDirectory</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a705141bc710412cad98861dca0b9c3bf</anchor>
      <arglist>(std::string dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNormalizeFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a157b7de863795cb4dcd62564a51ad545</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNormalizeTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a3e1d1103e23b1c1339ff09871c2d2f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOnlyBandwidth</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a3b2afc5be7276379cb65cdbf5f91b47b</anchor>
      <arglist>(double bw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOutputDirectory</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a12eae9c18060156771e9a27b752220f2</anchor>
      <arglist>(std::string dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreserveDiFXScanNamesFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a27984fcc279021e1f893025327b2e793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreserveDiFXScanNamesTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>a4181b5c60e54567af3b6ccb7049c0314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationCodes</name>
      <anchorfile>classhops_1_1MHO__DiFXInterface.html</anchorfile>
      <anchor>ac4a379c9dd04f0ea8801ddc9d64a8dda</anchor>
      <arglist>(MHO_StationCodeMap *code_map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXPCalProcessor</name>
    <filename>classhops_1_1MHO__DiFXPCalProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXPCalProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>a16f52c630fd428bf80f17bc69c80a6c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXPCalProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>af93c1ed9836ad3d980d2e45c56e629db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>multitone_pcal_type *</type>
      <name>GetPCalData</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>a16b5b3a34b29618bc5e44d91513beddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetStationCode</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>ad7c1b0596ace02b8dbeb2f53b45a9a4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Organize</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>a9ae83088b26df1a48daddade469a5f7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadPCalFile</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>aecdaba19cb66bb76cbc84b15cf950049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccumulationPeriod</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>ae581385e4310469d8bd855e1affa1a28</anchor>
      <arglist>(double ap_sec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilename</name>
      <anchorfile>classhops_1_1MHO__DiFXPCalProcessor.html</anchorfile>
      <anchor>ac83030ed6c144a8709a518cf166c3859</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXScanFileSet</name>
    <filename>classhops_1_1MHO__DiFXScanFileSet.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXScanFileSet</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>ad620297090415eb333f7d69f31861eaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXScanFileSet</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>ae80e7132f1c082b45a3c3934d3935986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsComplete</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>aec4cf5d045f2d07444509e75dc461f53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintSummary</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>ab3f620ecc4561c514737c54e06719cfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fCalcFile</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a12e1bc9e3fa7a233a31a99a8099c1255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fFlagFile</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a74bd3df44740c906c81a309063ff8467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fIMFile</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a19b71757d00bc9409e9af7b7e5e86e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fIndex</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>abf85e6609b98b85251a84184a0160f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fInputBaseDirectory</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a4bcd07f6bbd2e56565a365ec207a9f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fInputFile</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>ab6ac8428a968b16ddc59fcfd3cc1fa11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fLocalIndex</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a8552e30d92d670e73a5cc6446e8236b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fOutputBaseDirectory</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a1e5808b0acfc4a44d2af5d08ed78cf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>fPCALFileList</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a2cb1d9fa6d4aa35650b7218a9dec271b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fScanDirectory</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a42608f2bccbdeca2cb0bc59cd9df9217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fScanName</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a8d792ee4d1814c6950a0ee472f603067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fV2DFile</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a826c370a0db31c2a454b72167c54986a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fVexFile</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>ac9fb9f6d8b6c03df2db3faa8d31e6ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>fVisibilityFileList</name>
      <anchorfile>classhops_1_1MHO__DiFXScanFileSet.html</anchorfile>
      <anchor>a236db95f78954951858138b119b89b12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXScanProcessor</name>
    <filename>classhops_1_1MHO__DiFXScanProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXScanProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>ad838a22f3f89bc3081e60c31bae6ddcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXScanProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>ac65f2e5a6db0ff704b1445092f583803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_correlation_vexdate</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a8e7148d6557e9296d0930eefa7745b80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_fourfit_reftime_for_scan</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a1c8bf812e5735ac85289f64601b5d054</anchor>
      <arglist>(mho_json scan_obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessScan</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>ae840003f60739ce490f4ef401ebbf28f</anchor>
      <arglist>(MHO_DiFXScanFileSet &amp;fileSet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttachDiFXInputFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a728890ad2de09019fc5b8255d3540ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttachDiFXInputTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a371fb181976a0c60fbd512bdfe712097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExperimentNumber</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>af5faf6dccb60528137578228701f758d</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreqGroups</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a4442c8ab35cf2245601a72c4886f0d5b</anchor>
      <arglist>(std::vector&lt; std::string &gt; fgroups)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrequencyBands</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a1e5ac96edce10a2889e18238583c7abc</anchor>
      <arglist>(std::vector&lt; std::tuple&lt; std::string, double, double &gt; &gt; fbands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNormalizeFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a4111c77d448ebd333514de1a927e1cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNormalizeTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a5d6118b6f9e746ef20f41c5ea65c8bd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOnlyBandwidth</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>ad9f0605a49b4edd45992848b99368706</anchor>
      <arglist>(double bw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreserveDiFXScanNamesFalse</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>aeb4afcd29903a5857f862b63d1c00226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreserveDiFXScanNamesTrue</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>ad63a82ced6b907d3220b37170f8073f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRootCode</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a430f772e121dc31a9b31c7ded28e2796</anchor>
      <arglist>(std::string rcode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationCodes</name>
      <anchorfile>classhops_1_1MHO__DiFXScanProcessor.html</anchorfile>
      <anchor>a46f07b0bc8fb6180ea89ead0fe360e42</anchor>
      <arglist>(MHO_StationCodeMap *code_map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXVisibilityProcessor</name>
    <filename>classhops_1_1MHO__DiFXVisibilityProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXVisibilityProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>ad30f4e794763b4785a38016655815043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXVisibilityProcessor</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>a9d8eb3352726f559af882f7dc7c0f42a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadDIFXFile</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>a218606eb31d93184399699fb9caf50a1</anchor>
      <arglist>(std::map&lt; int, MHO_DiFXBaselineProcessor &gt; &amp;allBaselineVisibilities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDiFXInputData</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>ac6d9300e241bd4a3370ac5d9f610bbb7</anchor>
      <arglist>(const mho_json *input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilename</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>adb747780f292245dad4f455ab6257080</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreqGroups</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>a54eb508d3cc30bd5312a1b0133caa301</anchor>
      <arglist>(std::vector&lt; std::string &gt; fgroups)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrequencyBands</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>a643b76de5cd38deb1818deb3c7f8b293</anchor>
      <arglist>(std::vector&lt; std::tuple&lt; std::string, double, double &gt; &gt; fbands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOnlyBandwidth</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityProcessor.html</anchorfile>
      <anchor>aade278cbba411b00bd6606f01de648bc</anchor>
      <arglist>(double bw)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DiFXVisibilityRecord</name>
    <filename>classhops_1_1MHO__DiFXVisibilityRecord.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXVisibilityRecord</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a71d6d04318411fcfc200ef1c4ad9d7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_DiFXVisibilityRecord</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>ac1afc23a0c7f4bf6c62b049a2e5180e3</anchor>
      <arglist>(const MHO_DiFXVisibilityRecord &amp;copy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DiFXVisibilityRecord</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a9c17f2ea6f5d212c57e23b6c3614a7cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a8587d848817a26e0dadcbc47a781ba20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bandwidth</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a22689dddb4b9c4d54b0aaead7814c5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>baseline</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a21a24468d0499bdb2d3f07a272a7befd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>configindex</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a75dd7eb016c31081ed20b97f8fef2315</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dataweight</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>ae8926dd6b7c1778d4505274db9d32f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>freq_band</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>aed93bc61bc2ddb8c8bf4c824dde53c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>freqindex</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>af43af247bfa5e38fcea07bc7b41ac374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>headerversion</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a83517dcfb7b84583f92a6a6304914ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mjd</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a03e0c0d641ad5b4a7c57cdf08e8edd92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nchan</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a6521c943222b062de7275ab36119f26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>net_sideband</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>aacb0244a2c481180093d9388d8c22ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>polpair</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>ade3f50d99ee1937e821ab61774e2e76d</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pulsarbin</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a28adbe2fafeff504eaa390dfd0f55ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seconds</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a45eb9252416fb2321615a64a2b38f1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sky_freq</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a73f11b9855f483a3a2175780d6ef7b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sourceindex</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a6d01a4b48fc5bf57537750634656a6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sync</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a1cb38a3e5a5511d502c32b154c2612b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>uvw</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a3bc268485c55eda7ccea0cd1e3d3f1e0</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::complex&lt; float &gt; &gt;</type>
      <name>visdata</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>a106faf11ae31196527359dcab7136fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>visnum</name>
      <anchorfile>classhops_1_1MHO__DiFXVisibilityRecord.html</anchorfile>
      <anchor>abd6a37dc2344177fe01d5496195f856b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DirectoryInterface</name>
    <filename>classhops_1_1MHO__DirectoryInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_DirectoryInterface</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a1f1b21448319f5e1960267f7c23d26ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DirectoryInterface</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>ad8e28e2ecf6311cfda2d674ca923b8de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateDirectory</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a3d83b85b4acb982093d180cf36afc9f3</anchor>
      <arglist>(const std::string &amp;dirname) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetCorelFiles</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a6e78f1dfbf85701ff458acd283a71ace</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;files, std::vector&lt; std::string &gt; &amp;corel_files) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetCurrentDirectory</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a6b737613af0e011ac15170279afe6773</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetCurrentParentDirectory</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>ab73ad71779918e1f9e8b161a1c82a3df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFileList</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a820399b3f9f8f0a4fc06e60827bc8612</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aFileList) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFilesMatchingExtention</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a354a43b098a57cc6e64d2f8b132d3147</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aFileList, const char *anExt) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFilesMatchingExtention</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a6abcd719c24808dc368b68ffe4513195</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aFileList, const std::string &amp;anExt) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFilesMatchingPrefix</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>abf4c8f52ee0dd0fea7a608cfb73d5721</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aFileList, const char *aPrefix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFilesMatchingPrefix</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>af768f08a35629a5a2a8efc498ee9b2ad</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aFileList, const std::string &amp;aPrefix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFringeFiles</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>aa1390bb5c58466a0fca3ffc07a717d78</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;files, std::vector&lt; std::string &gt; &amp;fringe_files, int &amp;max_sequence_num) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetRootFile</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>ad9bc29e620e0df94dfbcd9661146b0e4</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;files, std::string &amp;root_file) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStationFiles</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>ad2b5b40052930008b4d92f4cc662a535</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;files, std::vector&lt; std::string &gt; &amp;station_files) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSubDirectoriesMatchingExtention</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a4acfd40de7e23538df39def6e1ee41fc</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aDirList, const char *anExt) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSubDirectoriesMatchingExtention</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>aa3367bd0e3a22935912a4e71c891a2cb</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aDirList, const std::string &amp;anExt) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSubDirectoryList</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>ad3f9c2bc6efbc93b1d160153dfdb2d1d</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;aSubDirList) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadCurrentDirectory</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a9e50bef0928027b1163c029f042905e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCurrentDirectory</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a2223b8b3ac1045084e927ea561b7f5ff</anchor>
      <arglist>(const std::string &amp;dirname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SplitCorelFileBasename</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a326e7329132696f46e184a82e7baae74</anchor>
      <arglist>(const std::string &amp;corel_basename, std::string &amp;st_pair, std::string &amp;root_code) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SplitStationFileBasename</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a58722d61a4f11f8e84252ea9be204435</anchor>
      <arglist>(const std::string &amp;station_basename, std::string &amp;st, std::string &amp;root_code) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DoesDirectoryExist</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a0d4014887a8d80ba1cad3eeafa9bf711</anchor>
      <arglist>(const std::string &amp;dirname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetBasename</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>ae8f0219d1a4777df278df0eb1eea10f4</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetDirectoryFullPath</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a4e8abe866f1901ccfee6271ad93dae83</anchor>
      <arglist>(const std::string &amp;dirname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetDirectoryFullPathPreserveSymlinks</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a37bb8f6f15eb6c74a09519f7c5c280c5</anchor>
      <arglist>(const std::string &amp;dirname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetFileModifcationTime</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>abd23a147a9ea5f21a80a777bec836571</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetPrefix</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a62ee16c945afdc00a4b38e4acd635358</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsDirectory</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a8ecfabe548ad07c7d6c4b1b350e74106</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsFile</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a9207de634650857db5d2c169eaa59ded</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StripExtensionFromBasename</name>
      <anchorfile>classhops_1_1MHO__DirectoryInterface.html</anchorfile>
      <anchor>a716e41bea8d463cfef9fcd60dbe31fb1</anchor>
      <arglist>(const std::string &amp;file_basename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_DoubleSidebandChannelLabeler</name>
    <filename>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</filename>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_DoubleSidebandChannelLabeler</name>
      <anchorfile>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</anchorfile>
      <anchor>ac5182fb6cf51fb2b098a382ef78d9895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_DoubleSidebandChannelLabeler</name>
      <anchorfile>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</anchorfile>
      <anchor>a568cf483000fd6ff8b4c3db15e599ce3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTolerance</name>
      <anchorfile>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</anchorfile>
      <anchor>a5d69c1ea34f6a052d56a0170e2623c15</anchor>
      <arglist>(double tol)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</anchorfile>
      <anchor>ab8dafcd1af86ea0140d05caf40ea3918</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</anchorfile>
      <anchor>ab6d9b1e6be998c1beeca726e6c459ef1</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</anchorfile>
      <anchor>a6d700e44c683e3250f8668285cbd3213</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__DoubleSidebandChannelLabeler.html</anchorfile>
      <anchor>a4a948aa91864d6db7922cbe42b102011</anchor>
      <arglist>(const XArrayType *, XArrayType *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Element</name>
    <filename>classhops_1_1MHO__Element.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Element</name>
      <anchorfile>classhops_1_1MHO__Element.html</anchorfile>
      <anchor>a8457a2bfa206699701a2163585b6cc5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Element</name>
      <anchorfile>classhops_1_1MHO__Element.html</anchorfile>
      <anchor>aea329679a16385ae6ac6986128360887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Accept</name>
      <anchorfile>classhops_1_1MHO__Element.html</anchorfile>
      <anchor>a3676becf00b1d9f0cdcc9d03b2b37636</anchor>
      <arglist>(MHO_Visitor *aVisitor)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ElementTypeCaster</name>
    <filename>classhops_1_1MHO__ElementTypeCaster.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>hops::MHO_TransformingOperator</base>
    <member kind="function">
      <type></type>
      <name>MHO_ElementTypeCaster</name>
      <anchorfile>classhops_1_1MHO__ElementTypeCaster.html</anchorfile>
      <anchor>aaa8e634d6b74e62fe25bcf819b471e5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ElementTypeCaster</name>
      <anchorfile>classhops_1_1MHO__ElementTypeCaster.html</anchorfile>
      <anchor>a67e3be5d4ca236c666e73ac75eea0dcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__ElementTypeCaster.html</anchorfile>
      <anchor>ab44959572a362da87c1aa9e7aa6bb164</anchor>
      <arglist>(const XArgType1 *in, XArgType2 *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__ElementTypeCaster.html</anchorfile>
      <anchor>aabde5d0952f3f75c3ebc6b81e9fa6599</anchor>
      <arglist>(const XArgType1 *, XArgType2 *) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_EmptyType</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__EmptyType</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_EndZeroPadder</name>
    <filename>classhops_1_1MHO__EndZeroPadder.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryOperator</base>
    <member kind="function">
      <type></type>
      <name>MHO_EndZeroPadder</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>ae570c91b51001fad64809564bf2bf8f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_EndZeroPadder</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a2f631a2d8c2cb69424dcb3de6ab237f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeselectAllAxes</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a029d68b10915f570bde02036a00b8eb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DisableNormFXMode</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>af4a2fe277ddfc92f71dcb537c58045e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DisableTagCopy</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>ada3540de656280930a994d1c797f79b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoNotPreserveWorkspace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a0758f9f7cb95b9a7e4aa134f14f5cc32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>EnableNormFXMode</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a7246da4e96d0d9cde4f97af102b45a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>EnableTagCopy</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a4872b8ee23921796d6b3a5932f72d0ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreserveWorkspace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a6d53567d3cb93a03b359bf891d5b8e05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectAllAxes</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a61cb2c4e20c66b5bdc0a5182914145f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectAxis</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>aaf97119fa1cfddecf3d7b019541a59d7</anchor>
      <arglist>(std::size_t axis_index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetEndPadded</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>ad4cf9d0330e058395a16c9a5b8d80eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetPaddedSize</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>aeed605b766a34bd2a86ab8485b41e14f</anchor>
      <arglist>(std::size_t new_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetPaddingFactor</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a8e6f02939982cf3f592d3324277f411d</anchor>
      <arglist>(std::size_t factor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetReverseEndPadded</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a00afc681b8a9acdab3eb450f17a201d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a0b4730c52fd1f74289e17ebf0d0ec5fb</anchor>
      <arglist>(XArgType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a3c2002cb8957f003ed03e47bb371c3ea</anchor>
      <arglist>(const XArgType *in, XArgType *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a627f246d440fa644e9de24822a7f6e0f</anchor>
      <arglist>(XArgType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a7c46d065f090b0183785c5eba443acd8</anchor>
      <arglist>(const XArgType *in, XArgType *out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_EndZeroPadder&lt; hops::MHO_TableContainer &gt;</name>
    <filename>classhops_1_1MHO__EndZeroPadder.html</filename>
    <base>MHO_UnaryOperator&lt; hops::MHO_TableContainer &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_EndZeroPadder</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>ae570c91b51001fad64809564bf2bf8f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_EndZeroPadder</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a2f631a2d8c2cb69424dcb3de6ab237f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeselectAllAxes</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a029d68b10915f570bde02036a00b8eb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DisableNormFXMode</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>af4a2fe277ddfc92f71dcb537c58045e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DisableTagCopy</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>ada3540de656280930a994d1c797f79b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoNotPreserveWorkspace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a0758f9f7cb95b9a7e4aa134f14f5cc32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>EnableNormFXMode</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a7246da4e96d0d9cde4f97af102b45a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>EnableTagCopy</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a4872b8ee23921796d6b3a5932f72d0ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreserveWorkspace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a6d53567d3cb93a03b359bf891d5b8e05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectAllAxes</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a61cb2c4e20c66b5bdc0a5182914145f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectAxis</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>aaf97119fa1cfddecf3d7b019541a59d7</anchor>
      <arglist>(std::size_t axis_index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetEndPadded</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>ad4cf9d0330e058395a16c9a5b8d80eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetPaddedSize</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>aeed605b766a34bd2a86ab8485b41e14f</anchor>
      <arglist>(std::size_t new_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetPaddingFactor</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a8e6f02939982cf3f592d3324277f411d</anchor>
      <arglist>(std::size_t factor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetReverseEndPadded</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a00afc681b8a9acdab3eb450f17a201d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a0b4730c52fd1f74289e17ebf0d0ec5fb</anchor>
      <arglist>(hops::MHO_TableContainer *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a3c2002cb8957f003ed03e47bb371c3ea</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a627f246d440fa644e9de24822a7f6e0f</anchor>
      <arglist>(hops::MHO_TableContainer *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__EndZeroPadder.html</anchorfile>
      <anchor>a7c46d065f090b0183785c5eba443acd8</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_EstimatePCManual</name>
    <filename>classhops_1_1MHO__EstimatePCManual.html</filename>
    <base>MHO_InspectingOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_EstimatePCManual</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>a880b14e9dbb07fb058202fecb275b1d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_EstimatePCManual</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>a661e6553666e3a16eb8d3c9397daf955</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParameterStore</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>a551dd3db69a1ae20c3d0279f4127a40d</anchor>
      <arglist>(MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPhasors</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>a74dc5b7b2d3f15be72b2c0e584cd4ca3</anchor>
      <arglist>(phasor_type *phasors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlotData</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>a5c79d7be33b06680054a4ada1d934cbb</anchor>
      <arglist>(mho_json &amp;plot_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>ae4aacd07a6a87cb1fbb1b38391166108</anchor>
      <arglist>(const weight_type *weights)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>a7d5ca32e5151601b6ad36c41bfcd5e57</anchor>
      <arglist>(const visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__EstimatePCManual.html</anchorfile>
      <anchor>a9b47c443f5fb182cad453b5b6099bd5e</anchor>
      <arglist>(const visibility_type *in) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ExtendedElement</name>
    <filename>classhops_1_1MHO__ExtendedElement.html</filename>
    <templarg></templarg>
    <base>hops::MHO_Element</base>
    <base>XExtensionType</base>
    <class kind="class">hops::MHO_ExtendedElement::ExtendedVisitor</class>
    <member kind="function">
      <type></type>
      <name>MHO_ExtendedElement</name>
      <anchorfile>classhops_1_1MHO__ExtendedElement.html</anchorfile>
      <anchor>a2e9f7fc9ace83f2c844d14a0248d8523</anchor>
      <arglist>(MHO_ExtensibleElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ExtendedElement</name>
      <anchorfile>classhops_1_1MHO__ExtendedElement.html</anchorfile>
      <anchor>a5fa44812560ad2fe3d14e5d185acbaf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Accept</name>
      <anchorfile>classhops_1_1MHO__ExtendedElement.html</anchorfile>
      <anchor>af0d56cab94072d23b15ef5c4a63c5a23</anchor>
      <arglist>(MHO_Visitor *aVisitor) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ExtensibleElement *</type>
      <name>fParent</name>
      <anchorfile>classhops_1_1MHO__ExtendedElement.html</anchorfile>
      <anchor>a31e0090456a92f5f1e7aa168b74e91e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ExtensibleElement</name>
    <filename>classhops_1_1MHO__ExtensibleElement.html</filename>
    <base>hops::MHO_Element</base>
    <member kind="function">
      <type></type>
      <name>MHO_ExtensibleElement</name>
      <anchorfile>classhops_1_1MHO__ExtensibleElement.html</anchorfile>
      <anchor>a08e0ac36b7baa0b3d4f5d3390d636816</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ExtensibleElement</name>
      <anchorfile>classhops_1_1MHO__ExtensibleElement.html</anchorfile>
      <anchor>a3ebd5b1b0bf0726ac545354cab4d3dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Accept</name>
      <anchorfile>classhops_1_1MHO__ExtensibleElement.html</anchorfile>
      <anchor>a6196efd2aa51a40c710979222c924a7a</anchor>
      <arglist>(MHO_Visitor *aVisitor) override</arglist>
    </member>
    <member kind="function">
      <type>MHO_ExtendedElement&lt; XExtensionType &gt; *</type>
      <name>AsExtension</name>
      <anchorfile>classhops_1_1MHO__ExtensibleElement.html</anchorfile>
      <anchor>a19a425cc45fb610c718c5d2b0dbb667b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasExtension</name>
      <anchorfile>classhops_1_1MHO__ExtensibleElement.html</anchorfile>
      <anchor>a838927fa3c01474e519efe61e4edf6ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MHO_ExtendedElement&lt; XExtensionType &gt; *</type>
      <name>MakeExtension</name>
      <anchorfile>classhops_1_1MHO__ExtensibleElement.html</anchorfile>
      <anchor>afe17d8f32b77738b06ff188eea23aeac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MHO_Element * &gt;</type>
      <name>fExtensions</name>
      <anchorfile>classhops_1_1MHO__ExtensibleElement.html</anchorfile>
      <anchor>ac7053fbca67e03532f14b4f47e0a6b49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ExtremaSearch</name>
    <filename>classhops_1_1MHO__ExtremaSearch.html</filename>
    <templarg></templarg>
    <base>hops::MHO_InspectingOperator</base>
    <member kind="function">
      <type></type>
      <name>MHO_ExtremaSearch</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a08f115dea08f28293ed3c57a80888aea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ExtremaSearch</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>abf5d39b92cdb0d2a46fec00a30b20efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMax</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a6f95ac5bb13a5013f18872307a679366</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetMaxLocation</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a1ed40fb5da893ffafe200ff5d4d4b3d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMin</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a7b09f4ac13c23f74bd4a625a7c95c538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetMinLocation</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a009297133270680dbfe38e217f6982b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>af5a5428cf156dc834026a21d466e7164</anchor>
      <arglist>(const XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>ac7208445491db4e7d29116d711861a8b</anchor>
      <arglist>(const XArgType *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_ExtremaSearch&lt; MHO_TableContainer&lt; double, mbd_axis_pack &gt; &gt;</name>
    <filename>classhops_1_1MHO__ExtremaSearch.html</filename>
    <base>hops::MHO_InspectingOperator</base>
    <member kind="function">
      <type></type>
      <name>MHO_ExtremaSearch</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a08f115dea08f28293ed3c57a80888aea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ExtremaSearch</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>abf5d39b92cdb0d2a46fec00a30b20efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMax</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a6f95ac5bb13a5013f18872307a679366</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetMaxLocation</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a1ed40fb5da893ffafe200ff5d4d4b3d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMin</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a7b09f4ac13c23f74bd4a625a7c95c538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetMinLocation</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>a009297133270680dbfe38e217f6982b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>af5a5428cf156dc834026a21d466e7164</anchor>
      <arglist>(const MHO_TableContainer&lt; double, mbd_axis_pack &gt; *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__ExtremaSearch.html</anchorfile>
      <anchor>ac7208445491db4e7d29116d711861a8b</anchor>
      <arglist>(const MHO_TableContainer&lt; double, mbd_axis_pack &gt; *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FastFourierTransform</name>
    <filename>classhops_1_1MHO__FastFourierTransform.html</filename>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; &gt;</base>
    <member kind="typedef">
      <type>MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt;</type>
      <name>XArrayType</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>af0f38f5cf7d0a68fe45a6c9ef7282b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>a2e62dcdb45b1499557d21db685a7e9d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>a42b8671d6ca62830c38780ce771eb490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetBackward</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>aac9cba171721e1dc5c7d424e20bd038e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetForward</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>a91383712c7c4f80375e7df0607cc3ef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>a949fa96dc1912f754221a7acd9a08324</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>a5cc43eb9139594348912eb24ed4e2a35</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>a95f33bfed4b0eb8b423936a87683e926</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransform.html</anchorfile>
      <anchor>afd7a512c3bd5bd3f78fdb1d81b6b2a35</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_FastFourierTransformCalls</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__FastFourierTransformCalls</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FastFourierTransformUtilities</name>
    <filename>classhops_1_1MHO__FastFourierTransformUtilities.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransformUtilities</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>aafc842697519b55834e0dcf553e7434f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FastFourierTransformUtilities</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ac678529bf7ce6e065751707ee9d5528a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeBluesteinScaleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>aefbddc4e3d4601ea48cde4a13dbf0586</anchor>
      <arglist>(unsigned int N, std::complex&lt; double &gt; *scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeBluesteinScaleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a5ceb3118ee4cbd37fe319242b7ef7626</anchor>
      <arglist>(unsigned int N, std::complex&lt; float &gt; *scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeBluesteinScaleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>aac6d13366de13d8a83ac28ed91100107</anchor>
      <arglist>(unsigned int N, std::complex&lt; long double &gt; *scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeTwiddleFactorBasis</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a1c7a50a99adb898fea69a19ab155a22c</anchor>
      <arglist>(unsigned int log2N, std::complex&lt; double &gt; *twiddle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeTwiddleFactorBasis</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a540b029007bd0b95ffbe653349511546</anchor>
      <arglist>(unsigned int log2N, std::complex&lt; float &gt; *twiddle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeTwiddleFactorBasis</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a5276039b26e4dcfa4a0166963de657f7</anchor>
      <arglist>(unsigned int log2N, std::complex&lt; long double &gt; *twiddle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeTwiddleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ad2f74bdb1f7d89aef20fd5f84415f101</anchor>
      <arglist>(unsigned int N, std::complex&lt; double &gt; *twiddle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeTwiddleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ac4a637aaca5c4cf163e3ddece18406e3</anchor>
      <arglist>(unsigned int N, std::complex&lt; float &gt; *twiddle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeTwiddleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a576b584a5c98e29a32845332814f096d</anchor>
      <arglist>(unsigned int N, std::complex&lt; long double &gt; *twiddle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ButterflyRadixTwo_CooleyTukey</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a12f4bc0e0bc985c83cf69c78db60b568</anchor>
      <arglist>(XFloatType *H0, XFloatType *H1, XFloatType *W)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ButterflyRadixTwo_GentlemanSande</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a4adef1e4a31f68a15cfbfe8de6f8089b</anchor>
      <arglist>(XFloatType *H0, XFloatType *H1, XFloatType *W)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>ComputeBluesteinArraySize</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a574f0ee07dab4e3627d7cf7c50adb13f</anchor>
      <arglist>(unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeBluesteinCirculantVector</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ae1e887f189c42851d4564a24fd417843</anchor>
      <arglist>(unsigned int N, unsigned int M, std::complex&lt; XFloatType &gt; *twiddle, std::complex&lt; XFloatType &gt; *scale, std::complex&lt; XFloatType &gt; *circulant)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeBluesteinScaleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a4a9f06e98a82b60816ca24707549bd95</anchor>
      <arglist>(unsigned int N, std::complex&lt; XFloatType &gt; *scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeConjugateTwiddleFactorBasis</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a617e493099ba2ac1a2f503d67975137b</anchor>
      <arglist>(unsigned int log2N, std::complex&lt; XFloatType &gt; *conj_twiddle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeConjugateTwiddleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>adb220c38f3a6af776777a7849fa850d2</anchor>
      <arglist>(unsigned int N, std::complex&lt; XFloatType &gt; *conj_twiddle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeTwiddleFactorBasis</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a7e99ddf89f9599c00e838f5a6f0f27d9</anchor>
      <arglist>(unsigned int log2N, std::complex&lt; XFloatType &gt; *twiddle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeTwiddleFactors</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>adb939ca4b4a3a71601b1353befa4a9f1</anchor>
      <arglist>(unsigned int N, std::complex&lt; XFloatType &gt; *twiddle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Conjugate</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ad7761d2dceec718a6f55e2b3356aa5fe</anchor>
      <arglist>(unsigned int N, std::complex&lt; XFloatType &gt; *array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Conjugate</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ab2f3029bda7aeb6d13fa4f91f9d9f6b1</anchor>
      <arglist>(unsigned int N, std::complex&lt; XFloatType &gt; *array, unsigned int stride)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FFTBluestein</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ab819a1ac797825c434dcb3b1bec0e73b</anchor>
      <arglist>(unsigned int N, unsigned int M, std::complex&lt; XFloatType &gt; *data, std::complex&lt; XFloatType &gt; *twiddle, std::complex&lt; XFloatType &gt; *conj_twiddle, std::complex&lt; XFloatType &gt; *scale, std::complex&lt; XFloatType &gt; *circulant, std::complex&lt; XFloatType &gt; *workspace, unsigned int stride=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FFTRadixTwo_DIF</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a78b2704dad661adc9d915e92949cc6cc</anchor>
      <arglist>(unsigned int N, std::complex&lt; XFloatType &gt; *data, std::complex&lt; XFloatType &gt; *twiddle, unsigned int stride=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FFTRadixTwo_DIF</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>ada1e13703bd40fd445da6b72d15a9dec</anchor>
      <arglist>(unsigned int N, XFloatType *data, XFloatType *twiddle, unsigned int stride=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FFTRadixTwo_DIT</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a080e315ca6b79dd79f20e75cd399fcca</anchor>
      <arglist>(unsigned int N, std::complex&lt; XFloatType &gt; *data, std::complex&lt; XFloatType &gt; *twiddle, unsigned int stride=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FFTRadixTwo_DIT</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformUtilities.html</anchorfile>
      <anchor>a34f5eae1ccc7175c279ce79cc1f788dc</anchor>
      <arglist>(unsigned int N, XFloatType *data, XFloatType *twiddle, unsigned int stride=1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FastFourierTransformWorkspace</name>
    <filename>classhops_1_1MHO__FastFourierTransformWorkspace.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a325551b9910cef1db7a25aa2de4408d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a9d5341b087432e94b3f0895e7aa7f125</anchor>
      <arglist>(const MHO_FastFourierTransformWorkspace &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a535df40839e3cdedc1b82e78be7bf5fe</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>adc51a60a98dd35c1779f495dbe1d0e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; XFloatType &gt; *</type>
      <name>GetCirculant</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ab8101e3656b51d94a91b16d5ee299247</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; XFloatType &gt; *</type>
      <name>GetConjTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a8f6eabea41c7ec70215d8803b132f353</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetM</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ae35e498aac46bf4649ad34ca266fa7e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetN</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ae2d8882320a6a1210b807592ad013236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const unsigned int *</type>
      <name>GetPermutation</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>aa6af52e36b1d138c1b550443c297e87d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; XFloatType &gt; *</type>
      <name>GetScale</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a9e699f39d8412f49ec542909180fb499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; XFloatType &gt; *</type>
      <name>GetTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a096cccaf7db756fc451c8bd9d51abe5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; XFloatType &gt; *</type>
      <name>GetWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>adddcb7438ab96fbf3937460967178697</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRadix2</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a6248dfb8c7c5d8ead87fb61fd320aaea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a57a9e940670fa431811679850361f20d</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; XFloatType &gt; *</type>
      <name>fCirculant</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a08aeb49ae6e52bf74bd572dff627bf3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; XFloatType &gt; *</type>
      <name>fConjugateTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>abbc4a13be2d98d2b5a12080315c0f263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>fM</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a1c19c920224397a848f434ecb1c780ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>fN</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a86a142782c052fbdc5d8936a55116b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>fPermutation</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>aa114fdfbf9e9737ebcb78b5e216ee0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; XFloatType &gt; *</type>
      <name>fScale</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a22cada253110e6e121822bb9093e69a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; XFloatType &gt; *</type>
      <name>fTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ab0d47a3c1299a0ab8a360b692d08ff8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; XFloatType &gt; *</type>
      <name>fWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a113fa3b176c6ed71e32919cb1b7594e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_FastFourierTransformWorkspace&lt; floating_point_value_type &gt;</name>
    <filename>classhops_1_1MHO__FastFourierTransformWorkspace.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a325551b9910cef1db7a25aa2de4408d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a9d5341b087432e94b3f0895e7aa7f125</anchor>
      <arglist>(const MHO_FastFourierTransformWorkspace &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a535df40839e3cdedc1b82e78be7bf5fe</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FastFourierTransformWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>adc51a60a98dd35c1779f495dbe1d0e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; floating_point_value_type &gt; *</type>
      <name>GetCirculant</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ab8101e3656b51d94a91b16d5ee299247</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; floating_point_value_type &gt; *</type>
      <name>GetConjTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a8f6eabea41c7ec70215d8803b132f353</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetM</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ae35e498aac46bf4649ad34ca266fa7e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetN</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ae2d8882320a6a1210b807592ad013236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const unsigned int *</type>
      <name>GetPermutation</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>aa6af52e36b1d138c1b550443c297e87d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; floating_point_value_type &gt; *</type>
      <name>GetScale</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a9e699f39d8412f49ec542909180fb499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::complex&lt; floating_point_value_type &gt; *</type>
      <name>GetTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a096cccaf7db756fc451c8bd9d51abe5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; floating_point_value_type &gt; *</type>
      <name>GetWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>adddcb7438ab96fbf3937460967178697</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRadix2</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a6248dfb8c7c5d8ead87fb61fd320aaea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a57a9e940670fa431811679850361f20d</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; floating_point_value_type &gt; *</type>
      <name>fCirculant</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a08aeb49ae6e52bf74bd572dff627bf3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; floating_point_value_type &gt; *</type>
      <name>fConjugateTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>abbc4a13be2d98d2b5a12080315c0f263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>fM</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a1c19c920224397a848f434ecb1c780ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>fN</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a86a142782c052fbdc5d8936a55116b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>fPermutation</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>aa114fdfbf9e9737ebcb78b5e216ee0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; floating_point_value_type &gt; *</type>
      <name>fScale</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a22cada253110e6e121822bb9093e69a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; floating_point_value_type &gt; *</type>
      <name>fTwiddle</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>ab0d47a3c1299a0ab8a360b692d08ff8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::complex&lt; floating_point_value_type &gt; *</type>
      <name>fWorkspace</name>
      <anchorfile>classhops_1_1MHO__FastFourierTransformWorkspace.html</anchorfile>
      <anchor>a113fa3b176c6ed71e32919cb1b7594e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FFTWTypeInfo</name>
    <filename>classhops_1_1MHO__FFTWTypeInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FFTWTypeInfo</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>af33f50d403e2576a9dadd81c3352a79a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FFTWTypeInfo</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>a6c0fcec88f39eaf03d6760fd0e626e3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>get_fftw_version_major</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>a408f06756aa9a26a7dbc30c1d0da2758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>get_fftw_version_minor</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>a68989f1e0b6a2081cb5fd9e6ea4693dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_fftw_version_numeric</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>a7349103e310a4376ae339f405c21102a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>get_fftw_version_patch</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>a9a8c839faa187ad88dfde9b40a32a728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_fftw_version_raw</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>a178aceabd4ac78c3d9545da1f7555fee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>split_version_string</name>
      <anchorfile>classhops_1_1MHO__FFTWTypeInfo.html</anchorfile>
      <anchor>a0aa4a40256cf1209e3e1cf9501905522</anchor>
      <arglist>(std::string vstr, char delim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FFTWTypes</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__FFTWTypes</anchor>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_FFTWTypes&lt; double &gt;</name>
    <filename>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</filename>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>complex_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a40618992c9df543990eb65ffbd29743e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; double &gt; *</type>
      <name>complex_type_ptr</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a3c683f12ea4165e54a60a7df8a93924f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftw_complex</type>
      <name>fftw_complex_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a0c2ebb4d489b55908135125be90d092b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftw_complex *</type>
      <name>fftw_complex_type_ptr</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a642d872433871362ea0c3c4556bc619a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftw_iodim</type>
      <name>iodim_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>ab2076cbcaf6c120e9cc5995da1188ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftw_plan</type>
      <name>plan_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a911ff92eb19106b080863e268eb6c230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftw_alignment_of) const</type>
      <name>alignment_of_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a0cf83c622f4aa28a446d2a35459e9398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftw_alloc_complex) const</type>
      <name>alloc_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>ae4d862b8465892fe5e518c4eb89782f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftw_destroy_plan) const</type>
      <name>destroy_plan_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a759848876a88244393824ab8d834e8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftw_execute_dft) const</type>
      <name>execute_dft_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>af1b1bba3bf9165b8efb5730f519e75e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftw_execute) const</type>
      <name>execute_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>afe9fbe831723dbdf5523cf00a4f97b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftw_free) const</type>
      <name>free_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a0e3ef60fbf791768d4fa1e35fc326198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftw_plan_guru_dft) const</type>
      <name>plan_guru_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01double_01_4.html</anchorfile>
      <anchor>a7570f45e81aa469e4bbeafc22fb409e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_FFTWTypes&lt; float &gt;</name>
    <filename>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</filename>
    <member kind="typedef">
      <type>std::complex&lt; float &gt;</type>
      <name>complex_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a5ef81a4f3e62ce72eb8ea03d20854ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; float &gt; *</type>
      <name>complex_type_ptr</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a87bfac7ed1993d67a96eb24dc3d3b700</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwf_complex</type>
      <name>fftw_complex_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a52bab111c27921eba83420f060a8b13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwf_complex *</type>
      <name>fftw_complex_type_ptr</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a6cb71ff7ed29d2fff09ccb93c60b0240</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwf_iodim</type>
      <name>iodim_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a15bff84b470a687c156bcf34657d07dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwf_plan</type>
      <name>plan_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a38524596c05b187727ad552c4f18e2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwf_alignment_of) const</type>
      <name>alignment_of_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a7118c662c66943a78d44244550aebcf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwf_alloc_complex) const</type>
      <name>alloc_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a95973bb0bd3652846421994518bb0192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwf_destroy_plan) const</type>
      <name>destroy_plan_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>ac6e15fc66679bd46641d933a94bf6f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwf_execute_dft) const</type>
      <name>execute_dft_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a938d648b4a623b4885498afcd0dc337a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwf_execute) const</type>
      <name>execute_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>aa425ac8cdea51cd28836a40de9af92b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwf_free) const</type>
      <name>free_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>af4c45a37f823d8e6831dc4b0e9b0f588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwf_plan_guru_dft) const</type>
      <name>plan_guru_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01float_01_4.html</anchorfile>
      <anchor>a57b8d241751cf7535b4168eb8207fda3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_FFTWTypes&lt; floating_point_value_type &gt;</name>
    <filename>namespacehops.html</filename>
    <anchor>namespacehops</anchor>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_FFTWTypes&lt; long double &gt;</name>
    <filename>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</filename>
    <member kind="typedef">
      <type>std::complex&lt; long double &gt;</type>
      <name>complex_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>afde81ba59ef8ae358e3f62683fb42251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; long double &gt; *</type>
      <name>complex_type_ptr</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>ad681a36c56d080fcdf6d6ef0ec7f39db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwl_complex</type>
      <name>fftw_complex_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a83d2c39c66f80569f245d505003f0d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwl_complex *</type>
      <name>fftw_complex_type_ptr</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a3d95eef571b3b333bb11b0da1ff4ed9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwl_iodim</type>
      <name>iodim_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>ac566e6f69745bf0c9c0f8845517638e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fftwl_plan</type>
      <name>plan_type</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a0cf90f5aac35809d1298b6e08eb08738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwl_alignment_of) const</type>
      <name>alignment_of_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a0fe6588b492a9544da03984557439dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwl_alloc_complex) const</type>
      <name>alloc_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a154cc535edb46c476c63c66737886357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwl_destroy_plan) const</type>
      <name>destroy_plan_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a8709d4cb027cbcf6433a4d2c72772490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwl_execute_dft) const</type>
      <name>execute_dft_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a941fb108405b7db7720e1574e54e2303</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwl_execute) const</type>
      <name>execute_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a629cc61a916a0b972f45f8ef147923dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwl_free) const</type>
      <name>free_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>aa8ce93eef21f27cee3714cdd8d958d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;fftwl_plan_guru_dft) const</type>
      <name>plan_guru_func</name>
      <anchorfile>structhops_1_1MHO__FFTWTypes_3_01long_01double_01_4.html</anchorfile>
      <anchor>a3f162e3813b01f985e61cf8be607b75f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FileKey</name>
    <filename>classhops_1_1MHO__FileKey.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FileKey</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a3fb081d3eb158484f776fab3c262da69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_FileKey</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>af5f8dc89ee2896e9c1a6f6d62ca95027</anchor>
      <arglist>(const MHO_FileKey &amp;copy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FileKey</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a670e2814c073ddd4a89c2946fe037d1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>ad1880f60e19844791d3979716555af9a</anchor>
      <arglist>(const MHO_FileKey &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>MHO_FileKey &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a0df572f6914a5e25e692683489d8fef1</anchor>
      <arglist>(const MHO_FileKey &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a65bedf412c2fa7e3c653416e1ba0ea16</anchor>
      <arglist>(const MHO_FileKey &amp;rhs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>ByteSize</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>ade8100d3d7d1dc87f545fd85d154ff52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>fLabel</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>ad7d3bde9bcbe5e226ef1aced030a49fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fName</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a371e2c5171d23e23104bce966c19dca4</anchor>
      <arglist>[MHO_FileKeyNameLength]</arglist>
    </member>
    <member kind="variable">
      <type>MHO_UUID</type>
      <name>fObjectId</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>ad52f4f058be6f014a18332eb259914fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>fSize</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>ad1965417b08e8302bf3055dafed6958a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>fSync</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>aae49490b81172c2e9fe8f102b149101b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MHO_UUID</type>
      <name>fTypeId</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a5855dc27dd263d01a556069eafcc2509</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a78677d30857c1a758c08053a2a28267e</anchor>
      <arglist>(XStream &amp;s, const MHO_FileKey &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__FileKey.html</anchorfile>
      <anchor>a3afdbc227d95ff7da89bf625cc54f3a1</anchor>
      <arglist>(XStream &amp;s, MHO_FileKey &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>hops::MHO_FileKeyVersionInfo</name>
    <filename>namespacehops.html</filename>
    <anchor>unionhops_1_1MHO__FileKeyVersionInfo</anchor>
    <member kind="variable">
      <type>uint32_t</type>
      <name>fLabel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a71fac491fe8630e74d030489091e035a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>fVersionSize</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>add504903a128aeea27554677a0ea47db</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FileStreamer</name>
    <filename>classhops_1_1MHO__FileStreamer.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FileStreamer</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a3acc164f02852fa22a176541e3f7ee16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FileStreamer</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a8e84353e2ce9185e865c7037271d0c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Close</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a85b6a38e254b15d15dbbbcf446f9a112</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFilename</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a1480a67947d76a8d0d1ebcd6d99b6fe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::fstream &amp;</type>
      <name>GetStream</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a5cba2271d81e36ef6f88fc6083eac527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::fstream &amp;</type>
      <name>GetStream</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a2f66e66c4d059ab4a55e9607e8b7e4d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsClosed</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a979e189babc9062796bf514409bf8232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsObjectUnknown</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>acb94b99d1646e49f0255b126b063db13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsOpenForRead</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a6274b45eb5365a52f416d24a02b8f08e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsOpenForWrite</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>aec07f9beef488892a40249982ae807bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>OpenToAppend</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>aae29030822ba8758abaf6caa377bd0e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>OpenToRead</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a1bd58b864a9d5c87ef498ec6cb409925</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>OpenToWrite</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>af99a04592f010b7f0718cdd85006e42b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ResetObjectState</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a66cdadac9985660113c0604867197ea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilename</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>aa8478390e7afa8836b476d07c7c672fc</anchor>
      <arglist>(const std::string filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetObjectUnknown</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a484abaccd61386330c01c2c74d7ad00c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SkipAhead</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>ae912801ceb873d8b41eef837173aa750</anchor>
      <arglist>(size_t n_bytes)</arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>closed</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374ac5dcc897deb7a97b921c5ceb9997558f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>FileState</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>writeable</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374aad84c6b2894a19e94823881c7a285fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>readable</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374ab0dbda4abb0ec331bfeb48626718f746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>closed</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374ac5dcc897deb7a97b921c5ceb9997558f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>undefined</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374a7b11d7de8b30ab31170f3e805787e417</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ObjectState</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>ad966fd7338595d7f8956b1b290bedfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>unset</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>ad966fd7338595d7f8956b1b290bedfceaeca837d9a8341b912c849606e63f0fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>unknown</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>ad966fd7338595d7f8956b1b290bedfcea2300494909fbb66f30d5ea0f52e7065f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>readable</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374ab0dbda4abb0ec331bfeb48626718f746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>undefined</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374a7b11d7de8b30ab31170f3e805787e417</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>unknown</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>ad966fd7338595d7f8956b1b290bedfcea2300494909fbb66f30d5ea0f52e7065f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>unset</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>ad966fd7338595d7f8956b1b290bedfceaeca837d9a8341b912c849606e63f0fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>writeable</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a7308056846e1aa8889a916f9869ec374aad84c6b2894a19e94823881c7a285fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char *</type>
      <name>fBuffer</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a0a89c0d3319748f1edd16f202e0bb35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::streamsize</type>
      <name>fBufferSize</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>aac27f25b2fdce7a6ad9a60bbf9a1727c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::fstream</type>
      <name>fFile</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a703f192f0eac30d624e759d66b320749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fFilename</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>afce2e67965351c92a12152c14c22fd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FileState</type>
      <name>fFileState</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>affc400b9a8accfda828247030e496202</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ObjectState</type>
      <name>fObjectState</name>
      <anchorfile>classhops_1_1MHO__FileStreamer.html</anchorfile>
      <anchor>a263c4bab387191a0acd04506a01ec6c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringeControlInitialization</name>
    <filename>classhops_1_1MHO__FringeControlInitialization.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FringeControlInitialization</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>a4e9ce9378e44afe5c9410a3461892933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringeControlInitialization</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>a2cbd22454c5807b532896e592e7d7c46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_circ_field_rotation_operator</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>acd318113ba16240617e86f41e713e746</anchor>
      <arglist>(mho_json &amp;statements)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_default_operator_format_def</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>ab50f60e19e1e11898ae8abf215c54272</anchor>
      <arglist>(mho_json &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_default_operators</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>ae24aa152091d47cb06a9a0cd7e171cdf</anchor>
      <arglist>(mho_json &amp;statements)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_dpar_sign_correction_operator</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>a6989d3e03c0f3f141a6d8798b24693a2</anchor>
      <arglist>(mho_json &amp;statements)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_polprod_sum_operator</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>a5c1a1ab183bd637aaa77ea05a5decb16</anchor>
      <arglist>(mho_json &amp;statements)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_circular_polprod</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>afe9f26872079d525260f751abfec205c</anchor>
      <arglist>(std::string pp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_linear_polprod</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>a068bbf825f588e059d112e5a47df9708</anchor>
      <arglist>(std::string pp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>need_ion_search</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>aacb24193928697d0f587ced1c61a7bc1</anchor>
      <arglist>(mho_json *control)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>process_control_file</name>
      <anchorfile>classhops_1_1MHO__FringeControlInitialization.html</anchorfile>
      <anchor>aa9c2f7dbb18cc2b4be977c7b3699f067</anchor>
      <arglist>(MHO_ParameterStore *paramStore, mho_json &amp;control_format, mho_json &amp;control_statements)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringeData</name>
    <filename>classhops_1_1MHO__FringeData.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FringeData</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>ab58f7f3f839d954846816a2281b10014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringeData</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>aa873d79f43ab0e8f03766565b3284b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_ContainerStore *</type>
      <name>GetContainerStore</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a95992d52ce70263a2482212289a8f986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json &amp;</type>
      <name>GetControlFormat</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a1095bcc962e0732d9a68b19ca76fe389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json &amp;</type>
      <name>GetControlStatements</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a89f6e70e50baa3b4fa2e19a3c7a69294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_ParameterStore *</type>
      <name>GetParameterStore</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a024c54d7c23676fb79603e47f33a05dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json &amp;</type>
      <name>GetPlotData</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a95512323ff98fd7c6a1080bd7e37293d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_ScanDataStore *</type>
      <name>GetScanDataStore</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a7bcb6273909badd6356e9e5dd2fbd706</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetVex</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>acf16f17c2d4c37171ff535ffb7547354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WriteOutput</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>acf441556dfa56718fd33caaf3f171d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>ConstructFrngFileName</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>ac2a148fc6c9e8c1cb53ec63675494a1d</anchor>
      <arglist>(const std::string directory, const std::string &amp;baseline, const std::string &amp;ref_station, const std::string &amp;rem_station, const std::string &amp;frequency_group, const std::string &amp;polprod, const std::string &amp;root_code, int seq_no)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>ConstructTempFileName</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>ae36cb7201237c4fe77b5486492311428</anchor>
      <arglist>(const std::string directory, const std::string &amp;baseline, const std::string &amp;ref_station, const std::string &amp;rem_station, const std::string &amp;frequency_group, const std::string &amp;polprod, const std::string &amp;root_code, const std::string &amp;temp_id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>WriteDataObjects</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>aa9878b4d71ca6f0832839a251e60c233</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ContainerStore</type>
      <name>fContainerStore</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a6b069d2377593006599b652a99f7fe4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fControlFormat</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a57f4afde7f8a3fac641a3bd93e580f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fControlStatements</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a54b1651bbb33a0c9d691e464d5d26ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ParameterStore</type>
      <name>fParameterStore</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>aaad027ed74cc2ef3cfd3f6e91e97c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fPlotData</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a10e2af4f23fd2faf7a34e012695a168c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ScanDataStore</type>
      <name>fScanStore</name>
      <anchorfile>classhops_1_1MHO__FringeData.html</anchorfile>
      <anchor>a03dd55b18640ad1d74ff0ea6ed7cb5e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringeFitter</name>
    <filename>classhops_1_1MHO__FringeFitter.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FringeFitter</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>aa4bd1d0f589a6a609e46b1de3aa98113</anchor>
      <arglist>(MHO_FringeData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringeFitter</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>abcd7ed34a3de70814ba93d8c1c336fac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Accept</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a21e99c6584831c290306318c2c1bd073</anchor>
      <arglist>(MHO_FringeFitterVisitor *visitor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Configure</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a343453167931cbf82cf32a18bfd191d1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Finalize</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a320aa40dd07152a854ed612a9d71bf11</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>MHO_ContainerStore *</type>
      <name>GetContainerStore</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>ac4cc8797119c1bee457f7cd53924c656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_FringeData *</type>
      <name>GetFringeData</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>abc4e20c014e1965893d8f16d6910b563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_OperatorBuilderManager *</type>
      <name>GetOperatorBuildManager</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a98cf7c10488ba6d56220a6201f4dd85d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_OperatorToolbox *</type>
      <name>GetOperatorToolbox</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a6972deb4fd4b1222d96ef6ac2ec74968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_ParameterStore *</type>
      <name>GetParameterStore</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a7701f5590db669ada24ca98edd1ee1f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_ScanDataStore *</type>
      <name>GetScanDataStore</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a04586e3a58829593cf13861a7300b690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetVex</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a8aeb838821d38d1aa026b5a764a0fcce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a4cd2a20becd9a7d6b540dddb67f11582</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsFinished</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a35991b53361096592025566e69f3cbeb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>PostRun</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a1f5d68aca05e2d073a4c0a4e4d2669db</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>PreRun</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>ae7ba8747965b781e1b3513ee66196bb4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a13a538c0e673ada9797bc7571da73573</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ContainerStore *</type>
      <name>fContainerStore</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>aa4580b5aa98be362d47e3c129e54faf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_FringeData *</type>
      <name>fFringeData</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>ad1f65ef397a9cff8b4d872a423749bd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_OperatorBuilderManager *</type>
      <name>fOperatorBuildManager</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>af371c83cf40e1af3fa107add1c71d93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_OperatorToolbox</type>
      <name>fOperatorToolbox</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>aaef44b932e0307763af9c34434c8c26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ParameterStore *</type>
      <name>fParameterStore</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>a8951c59f3173889011daa7d1b2c8559d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ScanDataStore *</type>
      <name>fScanStore</name>
      <anchorfile>classhops_1_1MHO__FringeFitter.html</anchorfile>
      <anchor>af4ab8b86d04c19c9fbf75e40a687827e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringeFitterFactory</name>
    <filename>classhops_1_1MHO__FringeFitterFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FringeFitterFactory</name>
      <anchorfile>classhops_1_1MHO__FringeFitterFactory.html</anchorfile>
      <anchor>ac548d55b22a392cf56602893a40d48e9</anchor>
      <arglist>(MHO_FringeData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringeFitterFactory</name>
      <anchorfile>classhops_1_1MHO__FringeFitterFactory.html</anchorfile>
      <anchor>a8d693536d86fd10980706a872b53ae41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_FringeFitter *</type>
      <name>ConstructFringeFitter</name>
      <anchorfile>classhops_1_1MHO__FringeFitterFactory.html</anchorfile>
      <anchor>ae35100eee68f66698fea8bf3bc55a319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_FringeData *</type>
      <name>fFringeData</name>
      <anchorfile>classhops_1_1MHO__FringeFitterFactory.html</anchorfile>
      <anchor>a1deb2b6ebe41d1b64533e8d00c1ddabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_FringeFitter *</type>
      <name>fFringeFitter</name>
      <anchorfile>classhops_1_1MHO__FringeFitterFactory.html</anchorfile>
      <anchor>a2f43ce1817760f1cbe80c9f9c3c911b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringeFitterVisitor</name>
    <filename>classhops_1_1MHO__FringeFitterVisitor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FringeFitterVisitor</name>
      <anchorfile>classhops_1_1MHO__FringeFitterVisitor.html</anchorfile>
      <anchor>a70d9b2dfaef769c36fef7baecb1dab2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringeFitterVisitor</name>
      <anchorfile>classhops_1_1MHO__FringeFitterVisitor.html</anchorfile>
      <anchor>adffbf2db3c40674cacabd5cade30fdd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Visit</name>
      <anchorfile>classhops_1_1MHO__FringeFitterVisitor.html</anchorfile>
      <anchor>a986612be479a95b8aaca7706172f0c5b</anchor>
      <arglist>(MHO_FringeFitter *fitter)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringePlotInfo</name>
    <filename>classhops_1_1MHO__FringePlotInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FringePlotInfo</name>
      <anchorfile>classhops_1_1MHO__FringePlotInfo.html</anchorfile>
      <anchor>a21d3c256848ffc18e98979ea6ba9b654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringePlotInfo</name>
      <anchorfile>classhops_1_1MHO__FringePlotInfo.html</anchorfile>
      <anchor>a1270e6331eab375df9fb55607f265073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static mho_json</type>
      <name>construct_plot_data</name>
      <anchorfile>classhops_1_1MHO__FringePlotInfo.html</anchorfile>
      <anchor>a6c12e20690ae4f44e1b7b5470e5e0a4e</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore, MHO_OperatorToolbox *toolbox, mho_json &amp;vexInfo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fill_plot_data</name>
      <anchorfile>classhops_1_1MHO__FringePlotInfo.html</anchorfile>
      <anchor>abf125cb5319ade153b7318d175267bdb</anchor>
      <arglist>(MHO_ParameterStore *paramStore, mho_json &amp;plot_dict)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringePlotVisitor</name>
    <filename>classhops_1_1MHO__FringePlotVisitor.html</filename>
    <base>hops::MHO_FringeFitterVisitor</base>
    <member kind="function">
      <type></type>
      <name>MHO_FringePlotVisitor</name>
      <anchorfile>classhops_1_1MHO__FringePlotVisitor.html</anchorfile>
      <anchor>aedd146631845beee039c6c49a2252f73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringePlotVisitor</name>
      <anchorfile>classhops_1_1MHO__FringePlotVisitor.html</anchorfile>
      <anchor>a52aded318e1544ecd0ad1c8110f01565</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Visit</name>
      <anchorfile>classhops_1_1MHO__FringePlotVisitor.html</anchorfile>
      <anchor>a9183d84e43e28bd3877eab5a4a596563</anchor>
      <arglist>(MHO_FringeFitter *fitter) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>Plot</name>
      <anchorfile>classhops_1_1MHO__FringePlotVisitor.html</anchorfile>
      <anchor>a5348adb4857b6aab8644bf9bbdb5b611</anchor>
      <arglist>(MHO_FringeData *data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FringeRotation</name>
    <filename>classhops_1_1MHO__FringeRotation.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_FringeRotation</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>aad274e783ec085ad8f2942993d845a4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FringeRotation</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>a64059298b99f8af3b5fcd767b2b35d86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNSBDBins</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>a42ea3b07abf5d9b53889856f350911ae</anchor>
      <arglist>(int n_sbd_bins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOptimizeClosureFalse</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>ac1afe80f9a9183493bf19f5bb597e0bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOptimizeClosureTrue</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>a5fd6c18b52f91c78ffb5f17ae9465f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSBDMax</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>a342ee97becabd7ac9b6615341846278b</anchor>
      <arglist>(double sbd_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSBDMaxBin</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>a43e899be0d852d7ca494962ea51e3341</anchor>
      <arglist>(int sbd_max_bin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSBDSeparation</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>afe623a19529839b634537618dbea9345</anchor>
      <arglist>(double sbd_sep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSideband</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>ac8788a5e9d988e2aa3aaf008cbe0aa87</anchor>
      <arglist>(int sb)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::complex&lt; double &gt;</type>
      <name>vrot</name>
      <anchorfile>classhops_1_1MHO__FringeRotation.html</anchorfile>
      <anchor>accca463720069cf78269bf43a25e6151</anchor>
      <arglist>(double time_delta, double freq, double ref_freq, double dr, double mbd) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_FunctorBroadcaster</name>
    <filename>classhops_1_1MHO__FunctorBroadcaster.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_FunctorBroadcaster</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a45b0f25b531772fb25ea9748e17cfc52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FunctorBroadcaster</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a01d63f26fbd4df4bd2ebb2b8e0e58d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XFunctorType *</type>
      <name>GetFunctor</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a0e0dea35a0f3f67a900451fa289fd2ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a91494e148d9ccdeee6454b04b07db262</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a211a4090f9e4cde50534b22b9d4ecf19</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a9e42535ff60515b869339a6e434b0a5b</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a0159858c111b49fc45b280f5daa69aff</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_FunctorBroadcaster&lt; hops::MHO_TableContainer, hops::MHO_NaNMasker &gt;</name>
    <filename>classhops_1_1MHO__FunctorBroadcaster.html</filename>
    <base>MHO_UnaryOperator&lt; hops::MHO_TableContainer &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_FunctorBroadcaster</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a45b0f25b531772fb25ea9748e17cfc52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_FunctorBroadcaster</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a01d63f26fbd4df4bd2ebb2b8e0e58d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hops::MHO_NaNMasker *</type>
      <name>GetFunctor</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a0e0dea35a0f3f67a900451fa289fd2ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a91494e148d9ccdeee6454b04b07db262</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a211a4090f9e4cde50534b22b9d4ecf19</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a9e42535ff60515b869339a6e434b0a5b</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__FunctorBroadcaster.html</anchorfile>
      <anchor>a0159858c111b49fc45b280f5daa69aff</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_GaussianWhiteNoiseSignal</name>
    <filename>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</filename>
    <base>hops::MHO_SimulatedSignalGenerator</base>
    <member kind="function">
      <type></type>
      <name>MHO_GaussianWhiteNoiseSignal</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>ae4a77107a0c76295b25b28b9d27a6bca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MHO_GaussianWhiteNoiseSignal</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>ae8ba0c6d1246917c7614bc2991aeaf1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>adbd94a35d33d3af1533f563b1002fd89</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMean</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>a55f414f6f2f59fa2668293877daf8c69</anchor>
      <arglist>(double mean)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRandomSeed</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>ad91f7aa4c3610c5ee92cdab0d5e2a412</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStandardDeviation</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>ae4d82c8803e29b048d9ec912609f1b9b</anchor>
      <arglist>(double std_dev)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>GenerateSample</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>a07b458a917979108534272a1118eb3ba</anchor>
      <arglist>(const double &amp;, double &amp;sample) const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::normal_distribution&lt; double &gt; *</type>
      <name>fDistribution</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>ace49ff566c6c4d1d89b975d0316f3a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mt19937 *</type>
      <name>fGenerator</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>add4c8f35d3e0774c4d87ad234a18e019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fMean</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>a30f610115fc739fe9d5177b742729cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mt19937::result_type</type>
      <name>fSeed</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>a153e33a233b50eb0264fb451e4e066f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fStandardDeviation</name>
      <anchorfile>classhops_1_1MHO__GaussianWhiteNoiseSignal.html</anchorfile>
      <anchor>ac8e660566bdfdbbe11c00d44de7b7d59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_HDF5Attributes</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__HDF5Attributes</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_HDF5ContainerFileInterface</name>
    <filename>classhops_1_1MHO__HDF5ContainerFileInterface.html</filename>
    <base>hops::MHO_ContainerFileInterface</base>
    <base>hops::MHO_HDF5ConverterDictionary</base>
    <member kind="function">
      <type></type>
      <name>MHO_HDF5ContainerFileInterface</name>
      <anchorfile>classhops_1_1MHO__HDF5ContainerFileInterface.html</anchorfile>
      <anchor>a3a24de51463fc1af76cacc4c0ac21d5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_HDF5ContainerFileInterface</name>
      <anchorfile>classhops_1_1MHO__HDF5ContainerFileInterface.html</anchorfile>
      <anchor>a65183396643e6778593c1de31920458c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ConvertStoreToHDF5</name>
      <anchorfile>classhops_1_1MHO__HDF5ContainerFileInterface.html</anchorfile>
      <anchor>a7d83d8a0f203a0d58c8e25035374590e</anchor>
      <arglist>(MHO_ContainerStore &amp;store, std::string hdf5_filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGroupPrefix</name>
      <anchorfile>classhops_1_1MHO__HDF5ContainerFileInterface.html</anchorfile>
      <anchor>acb1c82f4cdfe86c6321b01708778ed7c</anchor>
      <arglist>(std::string gp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fGroupPrefix</name>
      <anchorfile>classhops_1_1MHO__HDF5ContainerFileInterface.html</anchorfile>
      <anchor>aa7fbbacdbf0da3d6afc1f9d399381e4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_HDF5ConversionHelpers</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__HDF5ConversionHelpers</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_HDF5Converter</name>
    <filename>classhops_1_1MHO__HDF5Converter.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_HDF5Converter</name>
      <anchorfile>classhops_1_1MHO__HDF5Converter.html</anchorfile>
      <anchor>afd236afe8ba425fe4f713b41588e423b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_HDF5Converter</name>
      <anchorfile>classhops_1_1MHO__HDF5Converter.html</anchorfile>
      <anchor>aacecc18775c5a22721edd20985fe2633</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetObjectMetaData</name>
      <anchorfile>classhops_1_1MHO__HDF5Converter.html</anchorfile>
      <anchor>a1af1a0c6e2d48df3d947941d384b8f2f</anchor>
      <arglist>(const mho_json &amp;mdata)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetObjectToConvert</name>
      <anchorfile>classhops_1_1MHO__HDF5Converter.html</anchorfile>
      <anchor>a556d48be4d523150fb1f42581e5105fa</anchor>
      <arglist>(MHO_Serializable *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>WriteToHDF5File</name>
      <anchorfile>classhops_1_1MHO__HDF5Converter.html</anchorfile>
      <anchor>ad0aba59f896a02250a753919dde375f5</anchor>
      <arglist>(hid_t, std::string)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fMetaData</name>
      <anchorfile>classhops_1_1MHO__HDF5Converter.html</anchorfile>
      <anchor>a6d40beab547a7a1be27eb7bf392e1980</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_HDF5ConverterDictionary</name>
    <filename>classhops_1_1MHO__HDF5ConverterDictionary.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_HDF5ConverterDictionary</name>
      <anchorfile>classhops_1_1MHO__HDF5ConverterDictionary.html</anchorfile>
      <anchor>a02edaaff06f3b66186d3daa489886c4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_HDF5ConverterDictionary</name>
      <anchorfile>classhops_1_1MHO__HDF5ConverterDictionary.html</anchorfile>
      <anchor>a1d1c083d766c01b840d04e658633cb14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddHDF5ClassType</name>
      <anchorfile>classhops_1_1MHO__HDF5ConverterDictionary.html</anchorfile>
      <anchor>ab53dab1548bebd64468779d2623abd7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; MHO_UUID, MHO_HDF5Converter * &gt;</type>
      <name>fHDF5ConverterMap</name>
      <anchorfile>classhops_1_1MHO__HDF5ConverterDictionary.html</anchorfile>
      <anchor>adb414e1b05d92bf8667031e260c3c8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_MD5HashGenerator</type>
      <name>fMD5Generator</name>
      <anchorfile>classhops_1_1MHO__HDF5ConverterDictionary.html</anchorfile>
      <anchor>a80011b99835aab7db27561133f22a084</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_HDF5Datasets</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__HDF5Datasets</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_IndexLabelInterface</name>
    <filename>classhops_1_1MHO__IndexLabelInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_IndexLabelInterface</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a2eb655beb57722eca0a2c912c2091826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearIndexLabels</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>ad8bcf35f802859a184c95e28a38d5f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetIndexLabelSize</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a08141a73a0b3553f7442256bdfe9538c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>mho_json &amp;</type>
      <name>GetLabelObject</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a0fc74089c82528a8a39806af92c51e19</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetLabelObject</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>ac05d112e493ca825ac68ad4a61e4f5f9</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>GetMatchingIndexes</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a62fbd7d491a531c2239b482a98c3fcac</anchor>
      <arglist>(std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>GetMatchingIndexes</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a094612bb9c7450bc1aa5145f00f9262b</anchor>
      <arglist>(std::string &amp;key, const XValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertIndexLabelKeyValue</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a540c19c418baf902a6ebafa893f9f8f2</anchor>
      <arglist>(std::size_t index, const std::string &amp;key, const XValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RetrieveIndexLabelKeyValue</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a0f7b57ab83164c36d35eca40a290c1ca</anchor>
      <arglist>(std::size_t index, const std::string &amp;key, XValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLabelObject</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a2fa8e178eb4b672fa1ea7faec3f566e7</anchor>
      <arglist>(mho_json &amp;obj, std::size_t index)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_IndexLabelInterface</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>ae70cfe590f07c424c4ad21b922de73bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_IndexLabelInterface</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>aba19ad4045001a0ecc36ce2a61913f37</anchor>
      <arglist>(const MHO_IndexLabelInterface &amp;copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetIndexLabelObject</name>
      <anchorfile>classhops_1_1MHO__IndexLabelInterface.html</anchorfile>
      <anchor>a4bb19ee924c552142ef7a0e8505b257d</anchor>
      <arglist>(mho_json *obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_InitialFringeInfo</name>
    <filename>classhops_1_1MHO__InitialFringeInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_InitialFringeInfo</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>acea5b4e82752e6a28b6e29284aafc2b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_InitialFringeInfo</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>acedfbd7d5973794d19d6ecf268a38d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>calculate_clock_model</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>a685e70718e2d495e1094889d57bc644e</anchor>
      <arglist>(MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>calculate_freq_space</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>ab55d543fcee4cf7571982ca488722773</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>compute_total_summed_weights</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>a24f2c2267e52522a62aaa0c7f8a1668b</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>configure_reference_frequency</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>afaaec153e695f74aa40403d89964d81b</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>determine_n_active_channels</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>add6e5f79e5cca89a84e52c5308ee2083</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>precalculate_quantities</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>a47756f3954f85c1299f4d232288334b6</anchor>
      <arglist>(MHO_ContainerStore *conStore, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_parameters_minimal</name>
      <anchorfile>classhops_1_1MHO__InitialFringeInfo.html</anchorfile>
      <anchor>a3662544408b4c57143632cb85c0b1a8e</anchor>
      <arglist>(MHO_ParameterStore *paramStore)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_InspectingOperator</name>
    <filename>classhops_1_1MHO__InspectingOperator.html</filename>
    <templarg></templarg>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_InspectingOperator</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>ade9ff5dfb10fd46f60d4b05e388f52e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_InspectingOperator</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a02d0f0c0080c0465abafb7594aa2d12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a2b4643b0fa8840e2cd9c563ff94b7b09</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>aee87234b1bfcec770ca95db0d527b6ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a3cea8e96348fc6b912aaf73a39dc0812</anchor>
      <arglist>(const XArgType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>ae00b4e9b7c1fb8897e0ddf5e87867acc</anchor>
      <arglist>(const XArgType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>aded8287bb457abddd135814ea95c417d</anchor>
      <arglist>(const XArgType *in)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const XArgType *</type>
      <name>fArg</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a5f6eb3f05738ed013a1ae555399caa07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_InspectingOperator&lt; visibility_type &gt;</name>
    <filename>classhops_1_1MHO__InspectingOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_InspectingOperator</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>ade9ff5dfb10fd46f60d4b05e388f52e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_InspectingOperator</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a02d0f0c0080c0465abafb7594aa2d12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a2b4643b0fa8840e2cd9c563ff94b7b09</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>aee87234b1bfcec770ca95db0d527b6ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a3cea8e96348fc6b912aaf73a39dc0812</anchor>
      <arglist>(const visibility_type *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>ae00b4e9b7c1fb8897e0ddf5e87867acc</anchor>
      <arglist>(const visibility_type *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>aded8287bb457abddd135814ea95c417d</anchor>
      <arglist>(const visibility_type *in)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const visibility_type *</type>
      <name>fArg</name>
      <anchorfile>classhops_1_1MHO__InspectingOperator.html</anchorfile>
      <anchor>a5f6eb3f05738ed013a1ae555399caa07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_InterpolateFringePeak</name>
    <filename>classhops_1_1MHO__InterpolateFringePeak.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_InterpolateFringePeak</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a5a71df823b8f35f8ba7992e4ee8eb67f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_InterpolateFringePeak</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a16b4b2a0f226e225382a69d15d6881b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisableOptimizeClosure</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>acb0269c543e7fb1e0240af4fb2b7ccd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnableOptimizeClosure</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>ab51de46892709bf7698bbc09c80a61c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>ae744c8b8f2671e7da54545dfe16f9583</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDelayRate</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a8027b5bfcb24d292fead4d1cca764249</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetFringeAmplitude</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a30301efa08ac8948ebde2f952ce67dc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetFringeRate</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>adcc2f94324cb13053136c6be20a83a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMBDelay</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>abcd55ed9f2ae6491ee3869f0811b99cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSBDelay</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a89a4e5b9e2a9ab4be2b7b40d6a082ab0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a257ee24f88c323812115df19c22c3629</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDRAxis</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>ad329ca2925b84a77dd77e42f7aa278ad</anchor>
      <arglist>(const delay_rate_axis_type *dr_ax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxBins</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a666c28f18785787ce86a1a992b584a6c</anchor>
      <arglist>(int sbd_max, int mbd_max, int dr_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMBDAxis</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a88fd507fee17947e08d68b4b9c1881bd</anchor>
      <arglist>(const time_axis_type *mbd_ax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceFrequency</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>aa6ecbd0ddb2b5d52ff292f338e23e538</anchor>
      <arglist>(double ref_freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceTimeOffset</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a3a78ee4580ea30c5e13a397d8dd93045</anchor>
      <arglist>(double frt_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSBDArray</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>a6964b630dd68e38a6dac74012b60d514</anchor>
      <arglist>(const visibility_type *sbd_arr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__InterpolateFringePeak.html</anchorfile>
      <anchor>ac8d04f01d4ef94824d669f3c5f557864</anchor>
      <arglist>(const weight_type *weights)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Interval</name>
    <filename>classhops_1_1MHO__Interval.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_Interval</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>ac9ffc9ee870f8f7509dc561f7bacd82d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Interval</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a37888a46443425e8b8d28d8ea6d91580</anchor>
      <arglist>(const MHO_Interval &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Interval</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a52d392aa96388517676a84a40a24d031</anchor>
      <arglist>(XIntegerType lower_bound, XIntegerType upper_bound)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Interval</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>ac5d43e06fbbbfa30e2d59a25556b8d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; XIntegerType, XIntegerType &gt;</type>
      <name>GetInterval</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a893cc91df7d2dd2b48814bf3f3e57f14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XIntegerType</type>
      <name>GetLength</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>ad785f17fef68776a1b9bd800d97741ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XIntegerType</type>
      <name>GetLowerBound</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a8a0168d901d9af2a472c0d33489b0cdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XIntegerType</type>
      <name>GetUpperBound</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a743a71bb337fd5444efdf7fafc11157f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MHO_Interval</type>
      <name>Intersection</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a3d0daa8355729cb9dbcfd8d5a66f18fb</anchor>
      <arglist>(const MHO_Interval &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>afe68507565b5874b4c7ba106962ad03f</anchor>
      <arglist>(const MHO_Interval &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a27f454572051396f409d440c59ef46f9</anchor>
      <arglist>(const XIntegerType &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_Interval &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a933b3d08afc766fa6a529e34d761aa4d</anchor>
      <arglist>(const MHO_Interval &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBounds</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>af2da7ce84baf36d3debb05f17ebdaf28</anchor>
      <arglist>(const std::pair&lt; XIntegerType, XIntegerType &gt; &amp;lower_upper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBounds</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a3431dd1d743629a42e5382982618511f</anchor>
      <arglist>(XIntegerType lower_bound, XIntegerType upper_bound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLowerBound</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a4f8e3339b7ea4e117078c01ffdae4136</anchor>
      <arglist>(XIntegerType low)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpperBound</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>ad4fb68d5c6accd93c13973c2d713af06</anchor>
      <arglist>(XIntegerType up)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Interval</type>
      <name>Union</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a62481eab8f4fe814929c624c54e0db9a</anchor>
      <arglist>(const MHO_Interval &amp;other) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetIntervalImpl</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>af57fe3fa02093c29ca057f1edebddcd4</anchor>
      <arglist>(XIntegerType low, XIntegerType up)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XIntegerType</type>
      <name>fLowerBound</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>aef9d90a9d1745915ec46554cd77c3a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XIntegerType</type>
      <name>fUpperBound</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a3872092ebb9298aa0ff67faecf917c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fValid</name>
      <anchorfile>classhops_1_1MHO__Interval.html</anchorfile>
      <anchor>a4a5386fe378ddcfdc80d25eee2a7d82c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_IntervalLabelInterface</name>
    <filename>classhops_1_1MHO__IntervalLabelInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_IntervalLabelInterface</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>ab420eeaa66d9c7cae9b7f20ae96f142e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearIntervalLabels</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a0fd8bfe031c7c488c92570c2fb24f75b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExtractIndexesFromKey</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>ad082fd5b966f0c0018b0f4a4ff9080f6</anchor>
      <arglist>(const std::string &amp;key, std::size_t &amp;lower_index, std::size_t &amp;upper_index)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetFirstIntervalWithKeyValue</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a94d0d45eef4d8d97bf4742b8a5f17380</anchor>
      <arglist>(std::string key, const XLabelValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>mho_json &amp;</type>
      <name>GetIntervalLabelObject</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>ac73ee79e5efcc0013a4a8e55b0eb3528</anchor>
      <arglist>(std::size_t lower_index, std::size_t upper_index)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; mho_json &gt;</type>
      <name>GetMatchingIntervalLabels</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a545bdc59e211927f60094a0b440554af</anchor>
      <arglist>(std::string key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertIntervalLabelKeyValue</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>ade6305df126cde6b059e1b5f06831043</anchor>
      <arglist>(std::size_t lower_index, std::size_t upper_index, const std::string &amp;key, const XValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RetrieveIntervalLabelKeyValue</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a5de01e8eb924e0b96fae83e2c916edd9</anchor>
      <arglist>(std::size_t lower_index, std::size_t upper_index, const std::string &amp;key, const XValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIntervalLabelObject</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a50c85058f428c4537b38208245a21c2b</anchor>
      <arglist>(mho_json &amp;obj, std::size_t lower_index, std::size_t upper_index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ConstructKey</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a868b27ebb6a95aae5a71331fa0498fc5</anchor>
      <arglist>(std::size_t lower_index, std::size_t upper_index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; std::size_t, std::size_t &gt;</type>
      <name>ExtractIndexesFromKey</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a6f89cc760b193859608854d8e8f2365f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_IntervalLabelInterface</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>aef45cabb7a108b2bd2e7a4bd59ebafeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_IntervalLabelInterface</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a6b9468a13034a3da25c626fccd3d1a5f</anchor>
      <arglist>(const MHO_IntervalLabelInterface &amp;copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetIntervalLabelObject</name>
      <anchorfile>classhops_1_1MHO__IntervalLabelInterface.html</anchorfile>
      <anchor>a6949bea93ae61dd651917d5c054d177e</anchor>
      <arglist>(mho_json *obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_IonosphericFringeFitter</name>
    <filename>classhops_1_1MHO__IonosphericFringeFitter.html</filename>
    <base>hops::MHO_BasicFringeFitter</base>
    <member kind="function">
      <type></type>
      <name>MHO_IonosphericFringeFitter</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>ad5909791a8bf2f4099f9e06a41979e77</anchor>
      <arglist>(MHO_FringeData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_IonosphericFringeFitter</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>ad9ecb5a0e453cc7cd14030faef05cc3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Accept</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a00021859be474bc5069fa7522b9c025f</anchor>
      <arglist>(MHO_FringeFitterVisitor *visitor) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Finalize</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a32cacaf342c183867d234ca3ff582eec</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>aba56fabb762a4ee3b775fea58c96aec6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>calculate_approx_snr</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a6c6cb01da47447cc4b8f10e40807c2b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ion_search_smooth</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>afe0a280554364fe1463cea59c71b153a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>rjc_ion_search</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a8140fdfdaa8170938fb501427827e621</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>smoother</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a13d05f12e0d6bc0752e48ccd58fa6efc</anchor>
      <arglist>(double *f, double *g, double *tec_step, int *npts)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sort_tecs</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a993cafd71e29ee894c95bb4790631225</anchor>
      <arglist>(int nion, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;dtec)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fInitialSBWin</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a828c8338526fba86196b691f21742edb</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ion_npts</name>
      <anchorfile>classhops_1_1MHO__IonosphericFringeFitter.html</anchorfile>
      <anchor>a6092768b22f6e1c53b48123595da0952</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_IonosphericPhaseCorrection</name>
    <filename>classhops_1_1MHO__IonosphericPhaseCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_IonosphericPhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__IonosphericPhaseCorrection.html</anchorfile>
      <anchor>a2cf9e154009f707cb1f7021a3a3eef3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_IonosphericPhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__IonosphericPhaseCorrection.html</anchorfile>
      <anchor>af1d9aa2c13e51139bd20fb029ac002d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDifferentialTEC</name>
      <anchorfile>classhops_1_1MHO__IonosphericPhaseCorrection.html</anchorfile>
      <anchor>a44cc2ca26e650fa732ba1a1d5326287d</anchor>
      <arglist>(double dTEC)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__IonosphericPhaseCorrection.html</anchorfile>
      <anchor>a5a9906e4a9f5593c0697b01ed1192dbd</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__IonosphericPhaseCorrection.html</anchorfile>
      <anchor>a043a13a15b1edee5ed0cdda1ea7d88b6</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__IonosphericPhaseCorrection.html</anchorfile>
      <anchor>ae1031d79698aa830c5cf8774edfecdbd</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__IonosphericPhaseCorrection.html</anchorfile>
      <anchor>a3069a60b674db84485f0aaf3d3ae435d</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_JSONConverter</name>
    <filename>classhops_1_1MHO__JSONConverter.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_JSONConverter</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a8af9bf1cd29605437f19736094e796c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_JSONConverter</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>ac873741fc2145cbe69b2a5df2d122bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ConstructJSONRepresentation</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a89e172de6f0435480bdf7dd6a33e070d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>mho_json *</type>
      <name>GetJSON</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a9dc281927b4cd50592f68ed39fe00cd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a137869dcd46904f55e21ae8e54cd52e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRawByteSize</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a94702a4b65d68f58a323eeac8b0fb51a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetRawData</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>aa5268e7d77a0f649f27ff8b510934a0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetRawDataDescriptor</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a490a45a64b7c659a78aa024a218dea42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLevelOfDetail</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>aa70831eea197fc617bb6b25d55a7b3ad</anchor>
      <arglist>(int level)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetObjectToConvert</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a40c1c51cc43b37e9a35a172d4e4c5ca6</anchor>
      <arglist>(MHO_Serializable *)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InsertElement</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>af960dd80fcf74d1eef5d119bf73f9a9c</anchor>
      <arglist>(const std::complex&lt; double &gt; &amp;value, mho_json &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InsertElement</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>ab3dbf5a5c6bc07a12c0e98ace2af23b5</anchor>
      <arglist>(const std::complex&lt; float &gt; &amp;value, mho_json &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InsertElement</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a04020490e7e2aab8fb08cea08198f7f0</anchor>
      <arglist>(const std::complex&lt; long double &gt; &amp;value, mho_json &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InsertElement</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a41cfe939b30f7ece8c16a928a01dfdf5</anchor>
      <arglist>(const XValueType &amp;value, mho_json &amp;data)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fJSON</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a1b8b1d5ecd55fb532bb6e2b12ddb61e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fLOD</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>ad6d7506e0f3676e7478e8a2a89a9bd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fRank</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a8f22a55bb2839a2c3a1ae9089f1c11bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fRawByteSize</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a38a1137a05406bad9433f80cd572fa6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>fRawData</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a3fdd11944532fa4b0f2d3b96fae6f12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fRawDataDescriptor</name>
      <anchorfile>classhops_1_1MHO__JSONConverter.html</anchorfile>
      <anchor>a97d45380ecb3702466b67400e32e3bce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_JSONHeaderWrapper</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__JSONHeaderWrapper</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_JSONWrapper</name>
    <filename>classhops_1_1MHO__JSONWrapper.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_JSONWrapper</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>a047860e11d91310d6b11b5acae0a9bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>aec4e83a60d4b3f6197a3c7b14625d5ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsKey</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>a01162d836ddbaf45d51e6b8df2dd0fa3</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>DumpKeys</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>a0be2488f1dfd3f3781e246d97cb201eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpMap</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>ab32a351cb204524f09f839ae6ec6cea0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasKey</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>ad838788924b9a12b62b9df9f263ee4a1</anchor>
      <arglist>(const char *char_key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasKey</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>afa48fbe7ed6faf902d661eba225931b4</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Insert</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>af94f990de2ea21d48b6b969ff257631b</anchor>
      <arglist>(const std::string &amp;key, const XValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>MHO_JSONWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>af56aebf9c39bf7e6a527d899ebab328b</anchor>
      <arglist>(const MHO_JSONWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Retrieve</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>aeb880d8fcf4405994704f7334f7fcecd</anchor>
      <arglist>(const std::string &amp;key, mho_json &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Retrieve</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>a8af109cd5401bbce3e2d380c32111e35</anchor>
      <arglist>(const std::string &amp;key, XValueType &amp;value) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_JSONWrapper</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>a24eaabfac649dfcc5418d47cb5a1e4b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_JSONWrapper</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>a95533d35215bcb6a4feb133a58615e81</anchor>
      <arglist>(const MHO_JSONWrapper &amp;copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetObject</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>ab9fa54b72be7e5859f46e19865e8ab5b</anchor>
      <arglist>(mho_json obj)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fObject</name>
      <anchorfile>classhops_1_1MHO__JSONWrapper.html</anchorfile>
      <anchor>afa7de95913b4113fc50143b2c73ddbfa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_LegacyDateConverter</name>
    <filename>classhops_1_1MHO__LegacyDateConverter.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_LegacyDateConverter</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>a57d826c6f318b4ae49c4871daaa5d950</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_LegacyDateConverter</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>aa21a39029ed28b81bdafd0c65d6c250a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static legacy_hops_date</type>
      <name>ConvertFromISO8601Format</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>af1725f76e8c001455b02e170307c3e0b</anchor>
      <arglist>(std::string iso_date)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static legacy_hops_date</type>
      <name>ConvertFromVexFormat</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>a8072ba8857bf96840d710f2d8266ecfa</anchor>
      <arglist>(std::string vex_date)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ConvertToISO8601Format</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>a75f2f335fa1f0895f41ac1c8f25d6365</anchor>
      <arglist>(legacy_hops_date a_date)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ConvertToVexFormat</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>a434086a95de4144c29a78c6c40e41f9c</anchor>
      <arglist>(legacy_hops_date a_date)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static legacy_hops_date</type>
      <name>HopsEpoch</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>acf25008e8720da883d91a52782a000c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static legacy_hops_date</type>
      <name>Now</name>
      <anchorfile>classhops_1_1MHO__LegacyDateConverter.html</anchorfile>
      <anchor>a6a694072fd78bb5a96a01c421d229822</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_LegacyRootCodeGenerator</name>
    <filename>classhops_1_1MHO__LegacyRootCodeGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_LegacyRootCodeGenerator</name>
      <anchorfile>classhops_1_1MHO__LegacyRootCodeGenerator.html</anchorfile>
      <anchor>ad827268ee49d8e0e7e5dfffd1a6616d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_LegacyRootCodeGenerator</name>
      <anchorfile>classhops_1_1MHO__LegacyRootCodeGenerator.html</anchorfile>
      <anchor>ac50f6f9d71b26c8da50fc7b5c73cc466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetCode</name>
      <anchorfile>classhops_1_1MHO__LegacyRootCodeGenerator.html</anchorfile>
      <anchor>adc2d55da164378e5a2f636999cabffe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetCodes</name>
      <anchorfile>classhops_1_1MHO__LegacyRootCodeGenerator.html</anchorfile>
      <anchor>ab2771a20700bc9c6b756174f42ae346f</anchor>
      <arglist>(std::size_t N)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_LinearDParCorrection</name>
    <filename>classhops_1_1MHO__LinearDParCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_LinearDParCorrection</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>a3143c5144d763688ba59c363a98a6659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_LinearDParCorrection</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>a4966cdb3c0e15d4c0284f8f708ce8b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolProductSet</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>a5c097dd937c98e7a2ec55a98c5bf6b4e</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;pp_vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceParallacticAngle</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>a5d368b72ec61c3bc1c6686a5b6eae3bf</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteParallacticAngle</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>ab611174f5103cba317189e6d9eefc102</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>aa538483377fd0451950821f010ce3eb9</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>ae3a2fefde5b98f90fb0ea608a4661f0c</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>a2df913e68e9978f1cbc777bd81ca0aa4</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrection.html</anchorfile>
      <anchor>a42aed4fcc03bd6a0364b9a688d4c892c</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_LinearDParCorrectionBuilder</name>
    <filename>classhops_1_1MHO__LinearDParCorrectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_LinearDParCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrectionBuilder.html</anchorfile>
      <anchor>a30f76857c7aebcd30942c0b4ad4cb920</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_LinearDParCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrectionBuilder.html</anchorfile>
      <anchor>a0a90b40add7ae0b86821698b8a5f283e</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_LinearDParCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrectionBuilder.html</anchorfile>
      <anchor>ac91b8277f2a5d63e57cf637e7f081ae2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__LinearDParCorrectionBuilder.html</anchorfile>
      <anchor>a13aaed0c1c4c17cf5ee5cdd1ee632066</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_LockFileHandler</name>
    <filename>classhops_1_1MHO__LockFileHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_LockFileHandler</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>ac4f095ebb6d76a0606fae2ffb38daa5b</anchor>
      <arglist>(MHO_LockFileHandler &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_LockFileHandler</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>af77735f650ef61ac0a45db7868b35162</anchor>
      <arglist>(MHO_LockFileHandler const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisableLegacyMode</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>a44f7b1499660fcc6ef23e3a24308c763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnableLegacyMode</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>a88820eb8d60605ffa83682fde3d57fe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_LockFileHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>a09d5931b3f0d7b0a5bd1d65bbf695fd1</anchor>
      <arglist>(MHO_LockFileHandler &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MHO_LockFileHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>ac6d86964596269bbbbfbf0cb44f9adeb</anchor>
      <arglist>(MHO_LockFileHandler const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveWriteLock</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>a355c37825e5e948589ba4871d1a91465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WaitForWriteLock</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>ad335247a398f32c8f08fe6a43c04bb02</anchor>
      <arglist>(std::string directory, int &amp;next_seq_no)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_LockFileHandler &amp;</type>
      <name>GetInstance</name>
      <anchorfile>classhops_1_1MHO__LockFileHandler.html</anchorfile>
      <anchor>aabef93e20d0d0403518d8dc08de627a3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_LSBOffset</name>
    <filename>classhops_1_1MHO__LSBOffset.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_LSBOffset</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>aecb616b4d296b85c1993b42312a7af15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_LSBOffset</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>a04a3fc3103810a5420d87cb05bb40425</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLSBPhaseOffset</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>a7473fb77ef803e9808d836872347550b</anchor>
      <arglist>(const double &amp;lsb_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationIdentifier</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>a18ba4843f6ffb866c303ec350fd9aeef</anchor>
      <arglist>(std::string station_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>a14529424d3aa61f5879d68d0ff63d1db</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>a091c31aacc1940e05d661619f289f34d</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>a6c458e5e0db569bedeefe24da9417585</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__LSBOffset.html</anchorfile>
      <anchor>a8f27d99ee2eef484f48e06a5e976c7e8</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_LSBOffsetBuilder</name>
    <filename>classhops_1_1MHO__LSBOffsetBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_LSBOffsetBuilder</name>
      <anchorfile>classhops_1_1MHO__LSBOffsetBuilder.html</anchorfile>
      <anchor>a7248cb2616473c56e2668357ede88eb6</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_LSBOffsetBuilder</name>
      <anchorfile>classhops_1_1MHO__LSBOffsetBuilder.html</anchorfile>
      <anchor>a8c3ddfc8d1f0cf6d673f22ac199b1a5c</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_LSBOffsetBuilder</name>
      <anchorfile>classhops_1_1MHO__LSBOffsetBuilder.html</anchorfile>
      <anchor>aa702c73f43def337bd488454862a68c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__LSBOffsetBuilder.html</anchorfile>
      <anchor>a2145da45ad4372c2c0aebbe7b80b42c9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualChannelDelayCorrection</name>
    <filename>classhops_1_1MHO__ManualChannelDelayCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualChannelDelayCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>a274d7ff83c2fbed1c597ef8bff78c71a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualChannelDelayCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>abc926befdcace6bff9909f2bfeee1013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChannelToPCDelayMap</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>a084c0a555b9930a1a00880dbfb3ccfb3</anchor>
      <arglist>(const std::map&lt; std::string, double &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolarization</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>addd9716ba523d1145fa12d4d774f049a</anchor>
      <arglist>(const std::string &amp;pol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationIdentifier</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>a222fcf14c8773faba69833905dde8ba3</anchor>
      <arglist>(std::string station_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>a128516928ae1849e2c02d7616cf8ef9c</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>addb7fdfdb66fcf7066d1ea212cd61a68</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>aba5d6eb84fcc18f3efddd9ea75121cb0</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrection.html</anchorfile>
      <anchor>aac320131106c59c57b0423eca8e18f03</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualChannelDelayCorrectionBuilder</name>
    <filename>classhops_1_1MHO__ManualChannelDelayCorrectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <base>hops::MHO_ChannelQuantity</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualChannelDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrectionBuilder.html</anchorfile>
      <anchor>a9890bafde0373be1b59fc3644df111cc</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ManualChannelDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrectionBuilder.html</anchorfile>
      <anchor>a959182709d9429f5161769bcd8140a2c</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualChannelDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrectionBuilder.html</anchorfile>
      <anchor>a29c268d1586f43c36237d08f5888f8d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__ManualChannelDelayCorrectionBuilder.html</anchorfile>
      <anchor>a05e4c6836d55dcd08d0f9a98df4d26f2</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualChannelPhaseCorrection</name>
    <filename>classhops_1_1MHO__ManualChannelPhaseCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualChannelPhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>a383497c33953e459bb8d01f54248738e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualChannelPhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>aea957fff7fe31123bb9538a877f429a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChannelToPCPhaseMap</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>ada85ef78d916e37e0d8f7226cedf0a92</anchor>
      <arglist>(const std::map&lt; std::string, double &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolarization</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>ac711a8b5e7b385a9dd7168bd351967cb</anchor>
      <arglist>(const std::string &amp;pol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationIdentifier</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>acaafbcf833ba90a29debc23ca4ce4277</anchor>
      <arglist>(std::string station_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>ae69f8123047e45cb5a21b02d9264db93</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>a3d0398b8c8c08bf9d07027f1eb696045</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>aaf99a762bd44019ea51f74c9b64e6462</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrection.html</anchorfile>
      <anchor>ab4491ce6409b8bc447e8247200158295</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualChannelPhaseCorrectionBuilder</name>
    <filename>classhops_1_1MHO__ManualChannelPhaseCorrectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <base>hops::MHO_ChannelQuantity</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualChannelPhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrectionBuilder.html</anchorfile>
      <anchor>a298849441d501a001379ed7028426ae6</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ManualChannelPhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrectionBuilder.html</anchorfile>
      <anchor>a79553f186e5920f08839899fd11c9732</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualChannelPhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrectionBuilder.html</anchorfile>
      <anchor>a05652ec608149155ec3d6f5c57ba36df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__ManualChannelPhaseCorrectionBuilder.html</anchorfile>
      <anchor>a2d2479ac7eccccfc6e0ef1bdcb7bb874</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualPolDelayCorrection</name>
    <filename>classhops_1_1MHO__ManualPolDelayCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualPolDelayCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>ae5bbe438c4752cff8e8a44388c7f3769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualPolDelayCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>a35f420e479028bb6b8366b6f4ebb557e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPCDelayOffset</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>a9d787cd189af18738b72b83bdc2c5fc6</anchor>
      <arglist>(const double &amp;pc_delay_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolarization</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>a7750ed5954b1df73e202bb6787c8bc92</anchor>
      <arglist>(const std::string &amp;pol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceFrequency</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>ad599dc67d02b2bb0d62bba0c76c53a72</anchor>
      <arglist>(double ref_freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationIdentifier</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>a8682e897343f3f27168447605ba5e9c0</anchor>
      <arglist>(std::string station_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>a520831369e6c31dbb597a570fb6dabbe</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>a501932b01cda5b12b3a07fafd7f05bd9</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>a18ef120d318c569419ccb42e2acab068</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrection.html</anchorfile>
      <anchor>abb4824560daf256e926eee4c44319152</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualPolDelayCorrectionBuilder</name>
    <filename>classhops_1_1MHO__ManualPolDelayCorrectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualPolDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrectionBuilder.html</anchorfile>
      <anchor>ad568b1549cc69a8bc15aa1e5a76eefea</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ManualPolDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrectionBuilder.html</anchorfile>
      <anchor>aa1eccdbb13be9eec80173e7fef6dafe7</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualPolDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrectionBuilder.html</anchorfile>
      <anchor>aa38e0f173b02bcb4ba53cbcc6ef509e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__ManualPolDelayCorrectionBuilder.html</anchorfile>
      <anchor>ad1841b6c4f36c7ea35d02003cddeb25f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualPolPhaseCorrection</name>
    <filename>classhops_1_1MHO__ManualPolPhaseCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualPolPhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>a55da2d6d4e6eda273ce058df7b9b1ee8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualPolPhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>a7e04561680e26f78459ce294d02b0c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPCPhaseOffset</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>a3a919568fb271c863caa10a0b700aec4</anchor>
      <arglist>(const double &amp;pc_phase_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolarization</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>a508617b429ef53f7c23f3667e681f6a8</anchor>
      <arglist>(const std::string &amp;pol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationIdentifier</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>a0346944c6ab73220878a78121a3d5d30</anchor>
      <arglist>(std::string station_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>a258bd4401e956e5e127dcfb4c4f5733e</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>a0479f09c1fb131ef89938d6fcc02a313</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>ab34ea5f7720868fc07d2329beefd64fe</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrection.html</anchorfile>
      <anchor>ad3ea8cad4bc2be8a9bd7add478b94556</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ManualPolPhaseCorrectionBuilder</name>
    <filename>classhops_1_1MHO__ManualPolPhaseCorrectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_ManualPolPhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrectionBuilder.html</anchorfile>
      <anchor>aa7de614fbecb9e0d804ee9fd0cbae6a7</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ManualPolPhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrectionBuilder.html</anchorfile>
      <anchor>a0933c40218614462d81a4832ce335cda</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ManualPolPhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrectionBuilder.html</anchorfile>
      <anchor>aa299a1a3e1a4b69d576970011ac95444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__ManualPolPhaseCorrectionBuilder.html</anchorfile>
      <anchor>ad8913abeef7df059e5d7f433a74cf263</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MathUtilities</name>
    <filename>classhops_1_1MHO__MathUtilities.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MathUtilities</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>a3efef9829567f820dea4c39a116ba2d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MathUtilities</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>ad9fc31e50d0a43c2aa75275808c34a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>angular_average</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>a4cb30a17c5a35d05f07e1eff68a8e9be</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ap_mean</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>a062cb13bf55ff2477c4287c63a9200f8</anchor>
      <arglist>(double start, double stop, double *coords, double *val1, double *val2, int n, int *nstart, double *result1, double *result2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>average</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>ab841024e3cf4596341013f9806392080</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DetermineChannelFrequencyLimits</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>a91cdadcf0b22144ae7d3ef02d4537975</anchor>
      <arglist>(double sky_freq, double bandwidth, std::string net_sideband, double &amp;lower_freq, double &amp;upper_freq)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>dwin</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>aae6ddafe901f952f0fda5542c177189a</anchor>
      <arglist>(double value, double lower, double upper)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>FindIntersection</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>a74409d74e887982a8c48d14bf6eec79b</anchor>
      <arglist>(XValueType a, XValueType b, XValueType c, XValueType d, XValueType result[2])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>linterp</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>ae74f654306832ed66c519a33e29921c6</anchor>
      <arglist>(double coord1, double value1, double coord2, double value2, double coord, double *value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>minvert3</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>a5ca2c1ae18c45c7ba38ed3ce405d9b3a</anchor>
      <arglist>(double a[3][3], double ainv[3][3])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>parabola</name>
      <anchorfile>classhops_1_1MHO__MathUtilities.html</anchorfile>
      <anchor>a935a69db3aff7abd3916792739f173d3</anchor>
      <arglist>(double y[3], double lower, double upper, double *x_max, double *amp_max, double q[3])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MBDelaySearch</name>
    <filename>classhops_1_1MHO__MBDelaySearch.html</filename>
    <base>MHO_InspectingOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_MBDelaySearch</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a01f6d4fa5fa6934b33bcaa33333bf507</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MBDelaySearch</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a62efdc4a136bee00a4defb1fd0321300</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAverageFrequency</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a2f30bf36dc93592313b99cfd4347a42b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetCoarseDR</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a36e821dc89a3fc73c96c8a014b563ea8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetCoarseMBD</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ac7ccb2ee4ae1f6fdc5522a8b1c292045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetCoarseSBD</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a6e19b9c16825daacfc765c899239ae25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>delay_rate_axis_type *</type>
      <name>GetDRAxis</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ae393f71ca143476ffd772eb9daca3edd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetDRMaxBin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a8ebb51a36c4516e3acefab3c0b4eac94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDRWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ac9a7d09d145a259ca96d0e51963f490f</anchor>
      <arglist>(double &amp;low, double &amp;high) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetFrequencySpacing</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a67754feb40b3ebb8f434edbdb16f1ea5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>time_axis_type *</type>
      <name>GetMBDAxis</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a61930f5dde82541c16c5acf509d6eda8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMBDMaxBin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>aa5831c04d102b27fc1e4ae3fabdd2fa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMBDWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a262f8cedd9db8b11b54e0a66d286f3e8</anchor>
      <arglist>(double &amp;low, double &amp;high) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNDRBins</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>acc958f34a6c2a8e75f428aa33e42e73c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNDRSPBins</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>abc7ddf0acba3a473cd8be1f98b9fab40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNMBDBins</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ac7c61dac046db8c8250e5fd9066163c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetNPointsSearched</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ad7bb39d859b0aa05d9cf8b7fda930826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNSBDBins</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ace88547f936925e6bd819580aaac7663</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSBDBinSeparation</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a4dab3c58b2eb7db185fc794787fcc4a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSBDMaxBin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>af0a9f5cbea7ef52e0cff0510af2d787f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSBDWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>adca3a4b567724f902570f4a6272b72df</anchor>
      <arglist>(double &amp;low, double &amp;high) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSearchMaximumAmplitude</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ad74a5661ce1c5a45db2ab09abeb5a3d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDRWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ae3fd88ae87d7cb5615ec68a0f04f9b84</anchor>
      <arglist>(double low, double high)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMBDWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a0b69afee9d1f1ceb7927296f4411276f</anchor>
      <arglist>(double low, double high)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceFrequency</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a886425f779cb85b83047a2b39ba2384b</anchor>
      <arglist>(double ref_freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSBDWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ad1a116da802bdf1f2bd04ebd479aac43</anchor>
      <arglist>(double low, double high)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ad369ba101b073dd9e3b72700c52f9c4a</anchor>
      <arglist>(weight_type *wt_data)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>MHO_MultidimensionalFastFourierTransform&lt; mbd_type &gt;</type>
      <name>FFT_ENGINE_TYPE</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a966b0971a35029f0647a038785864036</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>visibility_type</type>
      <name>XArgType</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a1a63ab9ecee5c210b853f651ba5c34a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a6c7d8f119fa61cbd9355e2d078e1a57a</anchor>
      <arglist>(const XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a029357e11953acbebcc2b4da6026e8a5</anchor>
      <arglist>(const MHO_Axis&lt; double &gt; &amp;axis, bool win_set, const double *win, double bin_width, double &amp;low, double &amp;high) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ad502fee097a883471fb1e4c51f1d7ce1</anchor>
      <arglist>(const XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetWindow</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a63959d685fa630f323d3689aef6697d2</anchor>
      <arglist>(double *win, double low, double high)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fAverageFreq</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a73232b82b54d18fcd911a910077af3ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>fChannelFreqs</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a8b371c021f02088ec91b867dbc7004be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::size_t, std::size_t &gt;</type>
      <name>fChannelIndexToFreqPointIndex</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>af716e7e14172c5d1f2fa867f04802c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fCoarseDR</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a20c19fa494cd7decdd5408c42a8a7512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fCoarseMBD</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a694fbeae9d868994bbd03df80443a7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fCoarseSBD</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a3fd30d067f98625a5155c58fb66f6313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_CyclicRotator&lt; mbd_type &gt;</type>
      <name>fCyclicRotator</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ae504e2a866b9c1d9eadd3c1c73accabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_DelayRate</type>
      <name>fDelayRateCalc</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a1874a8ea95372cf6ef18425b81976fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>fDRAxis</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>af8ec0ea3793ae9fce360da128164f4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fDRBinSep</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a20a8c9d15cb2674415b8450e35483a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fDRMaxBin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a1647bdc8554e33409e9d33889377590b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fDRWin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ae0e5b0dfdeaac5f221a721ea506931f7</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fDRWinSet</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a7b5514b495cd6986325fcb4a2d3c3fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FFT_ENGINE_TYPE</type>
      <name>fFFTEngine</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>af30737a8e61d4ad121bb4051b68727a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_UniformGridPointsCalculator</type>
      <name>fGridCalc</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ac0402f8633e87ce601c3fa4565bf28d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fGridSpace</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a2c36cff0c0428b514603e332f64cc219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fGridStart</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ac84d000d058d5b115b1364e154b93fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInitialized</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ac530663982e0c1fb776b2bb0bb1cd965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fMax</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>aa4caf730d5a4137c55f1baa57e987871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ExtremaSearch&lt; mbd_amp_type &gt;</type>
      <name>fMaxSearch</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>af2c9472188899c36b684b5c362826185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mbd_amp_type</type>
      <name>fMBDAmpWorkspace</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a9c0f907e3eab6e9af4a8255b175ce9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>fMBDAxis</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>acb8b0e967ed3a16fa8929b9a9c9e01de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::size_t, std::size_t &gt;</type>
      <name>fMBDBinMap</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>aa59d076da2e91b79c27d94e67f9c1064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fMBDBinSep</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>aa44a98b599c775a9dc17f27f68d785db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fMBDMaxBin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>af3184229468b7be59e2b6d3144b3f8c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fMBDWin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a8ee8813f24e9a31248f22a8c61e65b1a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fMBDWinSet</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>aba0cbc274efc1e904638df0619396eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mbd_type</type>
      <name>fMBDWorkspace</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a11c0a48e15bb1d3bea74cce65b634d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fNDR</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a85cfd49775e8d2d22b8ad0bd7fa15db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fNDRSP</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a9bdbbd6e9ceced11874e6fd5a2b739ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fNGridPoints</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a71c5290448e6dd1787a9a16ba6c27209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fNPointsSearched</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a6910a20da16dca4f419af1a91c074b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>fNSBD</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a8d5d8e8a869b8a106c7e4e3b4d516dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fRefFreq</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ab620a16fef3c2263e111c91c26ad53f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>fSBDAxis</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a1a3905593f1e349c73e9d066b0e700d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fSBDBinSep</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a7f6c8619ad500bf201056e8606e27048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>visibility_type</type>
      <name>fSBDDrWorkspace</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a87e14de6e6cefdc7e1ab79372dde3047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fSBDMaxBin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>aad24643ad0c018cca25e4a0b4c797095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fSBDStart</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>ac5c919be10071061ddd572b27c8136ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fSBDStop</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a1229e0a1e2821bb1c119802317347ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fSBDWin</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a3f265b975b291b4d8b302b867a77ed51</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fSBDWinSet</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a6370ae309995d1aed54fba3e2166f5c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>weight_type *</type>
      <name>fWeights</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a92cc7fd73c25a3867a5835fa63341535</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>weight_type</type>
      <name>fWeightsWorkspace</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a086d8a855b2093b19bbb4030deed2c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>visibility_type</type>
      <name>sbd_dr_data</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearch.html</anchorfile>
      <anchor>a2421eee719f6e390d107454d99f5c0ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MBDelaySearchCUDA</name>
    <filename>classhops_1_1MHO__MBDelaySearchCUDA.html</filename>
    <base>hops::MHO_MBDelaySearch</base>
    <member kind="function">
      <type></type>
      <name>MHO_MBDelaySearchCUDA</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearchCUDA.html</anchorfile>
      <anchor>ab35f365b347ac1b6f1d5c7cea8a4553a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MBDelaySearchCUDA</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearchCUDA.html</anchorfile>
      <anchor>ac446185d605f24a284bc9021207c7780</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>visibility_type</type>
      <name>XArgType</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearchCUDA.html</anchorfile>
      <anchor>a0ef3b75af3e2d5d2920af1d095a5e5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearchCUDA.html</anchorfile>
      <anchor>acbf2b7d00d02571ffc5371381143927e</anchor>
      <arglist>(const XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__MBDelaySearchCUDA.html</anchorfile>
      <anchor>a518b72e9b20b6670f865916ed2c4e697</anchor>
      <arglist>(const XArgType *in) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MD5HashGenerator</name>
    <filename>classhops_1_1MHO__MD5HashGenerator.html</filename>
    <base>hops::MHO_MD5HashGeneratorMultiType</base>
    <member kind="function">
      <type></type>
      <name>MHO_MD5HashGenerator</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a2d97fd757920975e165e0cba26d473e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MD5HashGenerator</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>ae526aeacad51eab0e276f3a7bde9dca2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Finalize</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a2f241d622e45fad39c52f82e220892ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetDigest</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a3468e178759dd1daf70ab91aebfca2fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GetDigestAsUUID</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a3eb6fbdf8590d6e4e7b7bf28522594bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>acc337cf08e26da386701f34d83681d1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual _picohash_md5_ctx_t *</type>
      <name>GetMD5CTXPtr</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a9c3a7ed4ddac844ca7f61ca8df1f6227</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>MHO_MD5HashGenerator &amp;</type>
      <name>Self</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a3988993cb444353e3290d884681c737f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>fDigest</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a2966725dd4f892c6fbc87161e33a7396</anchor>
      <arglist>[PICOHASH_MD5_DIGEST_LENGTH]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>_picohash_md5_ctx_t</type>
      <name>fHashStruct</name>
      <anchorfile>classhops_1_1MHO__MD5HashGenerator.html</anchorfile>
      <anchor>a9057716a272fbb4f884fb4c1da03dd61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MD5HashGeneratorMultiType</name>
    <filename>classhops_1_1MHO__MD5HashGeneratorMultiType.html</filename>
    <templarg>XValueTypeS</templarg>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MD5HashGeneratorMultiType&lt; XValueType &gt;</name>
    <filename>classhops_1_1MHO__MD5HashGeneratorMultiType_3_01XValueType_01_4.html</filename>
    <templarg></templarg>
    <base>hops::MHO_MD5HashGeneratorSingleType</base>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MD5HashGeneratorMultiType&lt; XValueType, XValueTypeS... &gt;</name>
    <filename>classhops_1_1MHO__MD5HashGeneratorMultiType_3_01XValueType_00_01XValueTypeS_8_8_8_01_4.html</filename>
    <templarg></templarg>
    <templarg>XValueTypeS</templarg>
    <base>hops::MHO_MD5HashGeneratorMultiType&lt; XValueType &gt;</base>
    <base>MHO_MD5HashGeneratorMultiType&lt; XValueTypeS... &gt;</base>
  </compound>
  <compound kind="class">
    <name>MHO_MD5HashGeneratorMultiType&lt; XValueTypeS... &gt;</name>
    <filename>classhops_1_1MHO__MD5HashGeneratorMultiType.html</filename>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MD5HashGeneratorSingleType</name>
    <filename>classhops_1_1MHO__MD5HashGeneratorSingleType.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_MD5HashGeneratorSingleType</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType.html</anchorfile>
      <anchor>ad5da26e576e4dc242f92317b3265220f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MD5HashGeneratorSingleType</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType.html</anchorfile>
      <anchor>af2579fc49058946795db71d913147dde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual _picohash_md5_ctx_t *</type>
      <name>GetMD5CTXPtr</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType.html</anchorfile>
      <anchor>ab2f3b56645a056783349c608bd3134fe</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual MHO_MD5HashGenerator &amp;</type>
      <name>Self</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType.html</anchorfile>
      <anchor>a02b423aaee1664f17eee64416315e016</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_MD5HashGenerator &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType.html</anchorfile>
      <anchor>a4b5f46ce047c4519cd269dfcbd37c08d</anchor>
      <arglist>(MHO_MD5HashGeneratorSingleType&lt; XValueType &gt; &amp;s, const XValueType &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MD5HashGeneratorSingleType&lt; std::string &gt;</name>
    <filename>classhops_1_1MHO__MD5HashGeneratorSingleType_3_01std_1_1string_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MD5HashGeneratorSingleType</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a1ba88743e5eb3fd94155fb445a94dd0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MD5HashGeneratorSingleType</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a1bb1a53f8743c2e18721f3c7e64175bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual _picohash_md5_ctx_t *</type>
      <name>GetMD5CTXPtr</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a0d83123812d24a4198968f87b4849f25</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual MHO_MD5HashGenerator &amp;</type>
      <name>Self</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a4553f4cb7735590144ae8fa3be311080</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend">
      <type>friend MHO_MD5HashGenerator &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__MD5HashGeneratorSingleType_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a88a09a553f3bfafaf6b66b39124f4622</anchor>
      <arglist>(MHO_MD5HashGeneratorSingleType&lt; std::string &gt; &amp;s, std::string &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Message</name>
    <filename>classhops_1_1MHO__Message.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Message</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a86640e66b63ec15b86ca21c9af51e6d1</anchor>
      <arglist>(MHO_Message &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Message</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a05dd2d3e384451defb5644ded73a0401</anchor>
      <arglist>(MHO_Message const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AcceptAllKeys</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a443147f9df934f1f7373bd622d6024d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKey</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a5510102b6f37b06e3885d0f8a2ac01b0</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKey</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>ac4bd561aa99e923dfed3300db2149467</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Flush</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>aab12eda3ae8602f216777ea6ff338e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_MessageLevel</type>
      <name>GetMessageLevel</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>adc51fb6cff5191bc4ee05d705129cb97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LimitToKeySet</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a4ee8d8506adc95f655c56fa4b1b8e706</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Lock</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>abfe146c68b505e0c919cea3985f724b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_Message &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>ac4d57ff9763bc97750aad921c9ddca84</anchor>
      <arglist>(const MHO_MessageEndline &amp;)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Message &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a8674ee2e08de07e31473ecd46deb5d97</anchor>
      <arglist>(const MHO_MessageNewline &amp;)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Message &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a98cad938350032e83842299d024e8712</anchor>
      <arglist>(const XStreamableItemType &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Message &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>aca3f1f8b7924b0817eb6a5a68c11b34a</anchor>
      <arglist>(MHO_Message &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MHO_Message &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a32ee0f208795c29d1508c8b244a4fd42</anchor>
      <arglist>(MHO_Message const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllKeys</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a601e13738fa30e95439cf03faaeaf51c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKey</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>adecebbf053ae4d930a120ad255254a4f</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKey</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a77bcb1c200f5ccfc90d39737722056ca</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Message &amp;</type>
      <name>SendMessage</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>ac74fd9026df58ae80d40981496ed0b2d</anchor>
      <arglist>(const MHO_MessageLevel &amp;level, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Message &amp;</type>
      <name>SendMessage</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a2370101ce99be068bdcdabaaac64f8d1</anchor>
      <arglist>(const MHO_MessageLevel &amp;level, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLegacyMessageLevel</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a2af2d4dc37c200683a7919b5e358c429</anchor>
      <arglist>(int legacy_message_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMessageLevel</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>a6981d1a95436f3615d29965519ffc945</anchor>
      <arglist>(MHO_MessageLevel level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Unlock</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>ac6797e4e105ff2ba81956ba0f29ad752</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_Message &amp;</type>
      <name>GetInstance</name>
      <anchorfile>classhops_1_1MHO__Message.html</anchorfile>
      <anchor>affbea24b2e9d8a835a8ac97f4307e2ce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MessageEndline</name>
    <filename>namespacehops.html</filename>
    <anchor>classhops_1_1MHO__MessageEndline</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MessageNewline</name>
    <filename>namespacehops.html</filename>
    <anchor>classhops_1_1MHO__MessageNewline</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MinWeight</name>
    <filename>classhops_1_1MHO__MinWeight.html</filename>
    <base>MHO_UnaryOperator&lt; weight_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_MinWeight</name>
      <anchorfile>classhops_1_1MHO__MinWeight.html</anchorfile>
      <anchor>a35e327f1d00a1e8b1ca60429e0ead1ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MinWeight</name>
      <anchorfile>classhops_1_1MHO__MinWeight.html</anchorfile>
      <anchor>aa681da67c5d6df87dec47f04dc5b12bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinWeight</name>
      <anchorfile>classhops_1_1MHO__MinWeight.html</anchorfile>
      <anchor>affb16f4a2c0016a4a83de0cdd58d7a69</anchor>
      <arglist>(double min_weight)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MinWeight.html</anchorfile>
      <anchor>a5d5aa29c7ee629d4d4f0a2213acbe2b0</anchor>
      <arglist>(weight_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MinWeight.html</anchorfile>
      <anchor>a15b492844950e46d592f2acfd3df50d1</anchor>
      <arglist>(const weight_type *in, weight_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MinWeight.html</anchorfile>
      <anchor>a056c91992cac836c0600d6294229a6bf</anchor>
      <arglist>(weight_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MinWeight.html</anchorfile>
      <anchor>adc3330239f3dbbd0ee7f89f7b08ac01e</anchor>
      <arglist>(const weight_type *in, weight_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MinWeightBuilder</name>
    <filename>classhops_1_1MHO__MinWeightBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_MinWeightBuilder</name>
      <anchorfile>classhops_1_1MHO__MinWeightBuilder.html</anchorfile>
      <anchor>ae9d7b4025edb467eed901fc28ec38a94</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MinWeightBuilder</name>
      <anchorfile>classhops_1_1MHO__MinWeightBuilder.html</anchorfile>
      <anchor>a3f20ed10b24508bc250f338845c98827</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MinWeightBuilder</name>
      <anchorfile>classhops_1_1MHO__MinWeightBuilder.html</anchorfile>
      <anchor>a868107d5b91e69232672453e53ac5eab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__MinWeightBuilder.html</anchorfile>
      <anchor>a88f228c032439c9cf1187c34781b52ab</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MixedPolYShift</name>
    <filename>classhops_1_1MHO__MixedPolYShift.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_MixedPolYShift</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShift.html</anchorfile>
      <anchor>a92e9c0c0ac515e3b8bc8e0324fa5acc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MixedPolYShift</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShift.html</anchorfile>
      <anchor>a3a29fa025aca2890497ed520d6c0c735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPhaseOffset</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShift.html</anchorfile>
      <anchor>a0865e9b89f91ceffaff642e7d3a38dc3</anchor>
      <arglist>(const double &amp;offset)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShift.html</anchorfile>
      <anchor>a9e676c22c4c52b0e6b9b32a2acc1ec49</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShift.html</anchorfile>
      <anchor>a3d57db7658553a273a039b1d5a488a04</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShift.html</anchorfile>
      <anchor>a798d3c4a44f1711a42e4183ed1dc7f02</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShift.html</anchorfile>
      <anchor>a95dfb72b58e6409b0738fc22059c6e95</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MixedPolYShiftBuilder</name>
    <filename>classhops_1_1MHO__MixedPolYShiftBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_MixedPolYShiftBuilder</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShiftBuilder.html</anchorfile>
      <anchor>adba055383c2ca0d512d28cc1169d6344</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MixedPolYShiftBuilder</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShiftBuilder.html</anchorfile>
      <anchor>ac90bdef77d7efe190bef4827d838c3f3</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MixedPolYShiftBuilder</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShiftBuilder.html</anchorfile>
      <anchor>ac82cc6be8b25f32428ae4c248ccf5034</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__MixedPolYShiftBuilder.html</anchorfile>
      <anchor>ad99f64cc1b758e1d66ca6cb83d0af322</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MixedSidebandNormFX</name>
    <filename>classhops_1_1MHO__MixedSidebandNormFX.html</filename>
    <base>hops::MHO_NormFX</base>
    <member kind="function">
      <type></type>
      <name>MHO_MixedSidebandNormFX</name>
      <anchorfile>classhops_1_1MHO__MixedSidebandNormFX.html</anchorfile>
      <anchor>ab6892e8da58de562c0647d75c52414bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MixedSidebandNormFX</name>
      <anchorfile>classhops_1_1MHO__MixedSidebandNormFX.html</anchorfile>
      <anchor>ae8b65a6d7732dd0e0f175063c217e36e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>visibility_type</type>
      <name>XArgType</name>
      <anchorfile>classhops_1_1MHO__MixedSidebandNormFX.html</anchorfile>
      <anchor>a08bcbd14d57f500cc57a2b3d6579a7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MixedSidebandNormFX.html</anchorfile>
      <anchor>a7de31ee0593f726ca65dfeaa0829262b</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MixedSidebandNormFX.html</anchorfile>
      <anchor>a7b043386c2906cc71eb3ba644e402a42</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MixedSidebandNormFX.html</anchorfile>
      <anchor>a5520e3d1125a044f772f2058d210a7b0</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MixedSidebandNormFX.html</anchorfile>
      <anchor>a6632cb305bce709561d714eb416ad5e3</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4CorelInterface</name>
    <filename>classhops_1_1MHO__MK4CorelInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4CorelInterface</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>a1093c6e7b4f9c328805ed03e202d8ae8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4CorelInterface</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>a5f6b1868a4c028a5f06fd54b311e6bf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractCorelFile</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>a3a0519f94949b1eaabcce685975c3639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>struct mk4_corel *</type>
      <name>GetCorelData</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>ad85e8063b74a5b3ff5cbad18c5f3938a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uch_visibility_store_type *</type>
      <name>GetExtractedVisibilities</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>acd07fbc00b9001efd0b46b6763d5ea39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uch_weight_store_type *</type>
      <name>GetExtractedWeights</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>a4bd9b8c56a3f3d132fef48d4f330e279</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCorelFile</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>af2b1172cad22d2b399d580c0b49a2fbb</anchor>
      <arglist>(const std::string &amp;corel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexFile</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterface.html</anchorfile>
      <anchor>a90661e445af6678c74d781fbeeac1885</anchor>
      <arglist>(const std::string &amp;vex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4CorelInterfaceReversed</name>
    <filename>classhops_1_1MHO__MK4CorelInterfaceReversed.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4CorelInterfaceReversed</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>ad0f5b0a2c1cbdd8270740e9790ed4a24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4CorelInterfaceReversed</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a6f428c91807338d7a0055d7848dd3750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeAllocated</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>af94f8a5969e5a871e369f5edcfc7bcc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateCorelStructure</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a2f3490e13f5b299847278f1303b6fe25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>struct mk4_corel *</type>
      <name>GetCorelStructure</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a947210ad9296f645d8aecaea95f6c2f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOutputDirectory</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a6c05fa4abb5384680589d01c4f80d939</anchor>
      <arglist>(const std::string &amp;output_dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRootFileName</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a711d52d195f45f3e43b8aa11585f18de</anchor>
      <arglist>(std::string root_filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisibilityData</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a0bdb1474562b04caf8b24ce89d93a38e</anchor>
      <arglist>(visibility_store_type *vis_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeightData</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a40e6b9a40530243348bc1e1692da6a93</anchor>
      <arglist>(weight_store_type *weight_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WriteCorelFile</name>
      <anchorfile>classhops_1_1MHO__MK4CorelInterfaceReversed.html</anchorfile>
      <anchor>a3056ff60d4ce19032133171b094dc5e1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4FringeExport</name>
    <filename>classhops_1_1MHO__MK4FringeExport.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4FringeExport</name>
      <anchorfile>classhops_1_1MHO__MK4FringeExport.html</anchorfile>
      <anchor>a8b17cb29c35c04f011f60cbad56d4126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4FringeExport</name>
      <anchorfile>classhops_1_1MHO__MK4FringeExport.html</anchorfile>
      <anchor>a6a534b72432d23da48454bcc6a036384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExportFringeFile</name>
      <anchorfile>classhops_1_1MHO__MK4FringeExport.html</anchorfile>
      <anchor>a2064b99c92dbfb88fb33188b39dcd807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetContainerStore</name>
      <anchorfile>classhops_1_1MHO__MK4FringeExport.html</anchorfile>
      <anchor>acca084e30dbb5c664d10674735563e2b</anchor>
      <arglist>(MHO_ContainerStore *cStore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParameterStore</name>
      <anchorfile>classhops_1_1MHO__MK4FringeExport.html</anchorfile>
      <anchor>a36a9a8300c029fbff407e3c9334882ad</anchor>
      <arglist>(MHO_ParameterStore *pStore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlotData</name>
      <anchorfile>classhops_1_1MHO__MK4FringeExport.html</anchorfile>
      <anchor>a8e048fd377f50531277590cd7f8dd65e</anchor>
      <arglist>(mho_json &amp;plot_data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4ScanConverter</name>
    <filename>classhops_1_1MHO__MK4ScanConverter.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4ScanConverter</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverter.html</anchorfile>
      <anchor>a73639dc8c4f9876370c33f1e8aacc3d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4ScanConverter</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverter.html</anchorfile>
      <anchor>a1afbf6721447ef052b80f2239a090d04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DetermineDirectoryType</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverter.html</anchorfile>
      <anchor>accf3c58a550c17916737656c1dc1352b</anchor>
      <arglist>(const std::string &amp;in_dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ProcessScan</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverter.html</anchorfile>
      <anchor>ad451141213a70a4565f028e9f326c110</anchor>
      <arglist>(const std::string &amp;input_dir, const std::string &amp;output_dir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4ScanConverterReversed</name>
    <filename>classhops_1_1MHO__MK4ScanConverterReversed.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4ScanConverterReversed</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverterReversed.html</anchorfile>
      <anchor>adf5aecba320673a06646aad4df7cfdb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4ScanConverterReversed</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverterReversed.html</anchorfile>
      <anchor>ab396cb89353241f25852d525ba483d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessScan</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverterReversed.html</anchorfile>
      <anchor>a57dc54cad703d8fdf6aadcbcca594dbc</anchor>
      <arglist>(const std::string &amp;input_dir, const std::string &amp;output_dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DetermineDirectoryType</name>
      <anchorfile>classhops_1_1MHO__MK4ScanConverterReversed.html</anchorfile>
      <anchor>ad10db3ed68d3640995fff5ca3af0eb25</anchor>
      <arglist>(const std::string &amp;in_dir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4StationInterface</name>
    <filename>classhops_1_1MHO__MK4StationInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4StationInterface</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterface.html</anchorfile>
      <anchor>a2c3ccfef1e1d40f76663ece661a66350</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4StationInterface</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterface.html</anchorfile>
      <anchor>a6cf1c9e063ffa4ba2367ee92402dfccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>station_coord_type *</type>
      <name>ExtractStationFile</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterface.html</anchorfile>
      <anchor>a5e6773394d648d802f347183e3602473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>multitone_pcal_type *</type>
      <name>GetPCalObject</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterface.html</anchorfile>
      <anchor>affa79f1337af79cd0c43d1bbc7372535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mk4_sdata *</type>
      <name>GetStationData</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterface.html</anchorfile>
      <anchor>a653384051946a9744a023861b0b8edce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationFile</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterface.html</anchorfile>
      <anchor>ab2d191dc5d018094cba98ee9957630d3</anchor>
      <arglist>(const std::string &amp;station)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexFile</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterface.html</anchorfile>
      <anchor>a33d9bbc5ce6bd09eaddf58f13b98f471</anchor>
      <arglist>(const std::string &amp;vex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4StationInterfaceReversed</name>
    <filename>classhops_1_1MHO__MK4StationInterfaceReversed.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4StationInterfaceReversed</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a0219d18745ba579079a69197da69ffef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4StationInterfaceReversed</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a2f69a7da78b1e813858bff5497cc6833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeAllocated</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a085a374e78389db9a23e91a537422572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateStationStructure</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a4e4d9caaeb1f175b629a9868f7b3db32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>struct mk4_sdata *</type>
      <name>GetStationStructure</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>afda6c3089f472cfd3a1338633f8505d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOutputDirectory</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a23b92450347ba86c0a9685915f5e344a</anchor>
      <arglist>(const std::string &amp;output_dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOutputFile</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>af58c8ec986eb4568792d59528b328cf2</anchor>
      <arglist>(const std::string &amp;output_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPCalData</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a0e8bcb7f17f3c07be387c453002f741c</anchor>
      <arglist>(multitone_pcal_type *pcal_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationCoordData</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a07c85d3393795c5c9f7c1acee1c1f43d</anchor>
      <arglist>(station_coord_type *coord_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexData</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a14e4499ecbc809b4b166d966a576dc04</anchor>
      <arglist>(const mho_json &amp;vex_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WriteStationFile</name>
      <anchorfile>classhops_1_1MHO__MK4StationInterfaceReversed.html</anchorfile>
      <anchor>a90dbc75ef4c41a8ae76c21812b2cef40</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MK4VexInterface</name>
    <filename>classhops_1_1MHO__MK4VexInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_MK4VexInterface</name>
      <anchorfile>classhops_1_1MHO__MK4VexInterface.html</anchorfile>
      <anchor>a225f704acb0c4ebc6874847b815b1f7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MK4VexInterface</name>
      <anchorfile>classhops_1_1MHO__MK4VexInterface.html</anchorfile>
      <anchor>a634ff3b0a01513b5092bf011437365b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExportVexFileToJSON</name>
      <anchorfile>classhops_1_1MHO__MK4VexInterface.html</anchorfile>
      <anchor>ae8ce1087d2a921df4ce61bcd4c3fbd0c</anchor>
      <arglist>(mho_json &amp;json_obj)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetVex</name>
      <anchorfile>classhops_1_1MHO__MK4VexInterface.html</anchorfile>
      <anchor>af3e17adde41bc72c05fed8f26037ddb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OpenVexFile</name>
      <anchorfile>classhops_1_1MHO__MK4VexInterface.html</anchorfile>
      <anchor>a5e88548b538edadfc75c27ec8c2a2c27</anchor>
      <arglist>(std::string file_path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MPIInterface</name>
    <filename>classhops_1_1MHO__MPIInterface.html</filename>
    <member kind="function">
      <type>void</type>
      <name>BeginSequentialProcess</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a59de15aba08cbc766b8b70ee52c3a4af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BroadcastString</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a8308c741d05fd1a474b273d67fcb12e3</anchor>
      <arglist>(std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Check</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a95e0cb77ec0610881e0649d1285f387f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndSequentialProcess</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a4fdae43146158a3072e71ecbdc4137af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Finalize</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a8e733880f5796665aa38c8a47aeaf697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MPI_Comm *</type>
      <name>GetEvenCommunicator</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a371ecdc49e020108c5e354c7b2cea769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MPI_Group *</type>
      <name>GetEvenGroup</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a21c20f5b286b71d9df9d8b01ec3caa56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGlobalProcessID</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a63b99fe5a5d14e99d6aae5000cdffa52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetHostName</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a19ea8b61335033060da8ad409601af29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLocalProcessID</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a6cd841945d25d8e129a9ea1b7e8b71b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNProcesses</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a5534aaba69060ae781d88117b6ec5290</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNSubGroupProcesses</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a2dd40e73eb18d944210514257fbee842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MPI_Comm *</type>
      <name>GetOddCommunicator</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a5841337d15d2cc4022c7ddafc7f5fd57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MPI_Group *</type>
      <name>GetOddGroup</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ac18b6535e4281975d7aa0fe644555391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetPartnerProcessID</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ad762f7153263a7923915f60a7854dbe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MPI_Group *</type>
      <name>GetSubGroup</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a4daa81cf325e1db5064cec4348cc3bbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MPI_Comm *</type>
      <name>GetSubGroupCommunicator</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a0f4260d861d3f2913868949195f8d687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSubGroupRank</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>aaac900475439743bf7a6d621ca20dbfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GlobalBarrier</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a8b8297ee16e54d52ad181841cceccbe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ac05d746a41145a038e35a3cb78571019</anchor>
      <arglist>(int *argc, char ***argv, bool split_mode=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEvenGroupMember</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a4a8e53316bac65ef6a251da8e84773f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSplitValid</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a7c817eb9b612960ab4f37255cfcd3b8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintMessage</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a2d22dffe4baccdc47ef2718cd399f94c</anchor>
      <arglist>(std::string msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SplitMode</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a8236777f2fa7c7ce62056ef459766a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_MPIInterface *</type>
      <name>GetInstance</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a6b58a044628cbeda3a8d36764579d9b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_MPIInterface</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>aab52f6718fe26c8caf3612f754789be1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MPIInterface</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a8dfeca2754a801ff12b18bb93798b75a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>DetermineLocalRank</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ae22eb4418d99e36c32339b5c3eff0599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetupSubGroups</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>adae0399d810bb8df980c1bd5ddc9f844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>fCoHostedProcessIDs</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ac3709bb544193b8e87a90345ceb6cecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MPI_Comm</type>
      <name>fEvenCommunicator</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a89e1e29fa863e9e68024dea5d19ee470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MPI_Group</type>
      <name>fEvenGroup</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a04b9f780e842b7eb95b8e969420d8f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fGlobalProcessID</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ad236f1e94d3e73a674ef867d6857736f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fHostName</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a4293b8ca683fba3de489f4f0ecd598c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fIsEvenGroupMember</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a14f226d03f901258997c78cafa89ed22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fLocalProcessID</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a63cd737749bc018be1eb5e36d2d76d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fNProcesses</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a0dc7ec2fc5b288b6d07565937f1acab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fNSubGroupProcesses</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>af8b6f1fcaaeab595c39a1044b5f56499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MPI_Comm</type>
      <name>fOddCommunicator</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>add803dfef098f24187e6e612d6823ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MPI_Group</type>
      <name>fOddGroup</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a0a899309139f6ae77cfde64e56edcaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fPartnerProcessID</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a37d2f9144bda63c583fc088a2a9a7469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fSplitMode</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ace6bcf5d716aae5301c68e161344f4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MPI_Status</type>
      <name>fStatus</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a47e02e7096c5ea79e668b3d27466ebfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fSubGroupRank</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a87eb0cd69f58963f23bf14e0852a61f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fValidSplit</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>a05173d87213b0e0d78f69c1596d6c2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static MHO_MPIInterface *</type>
      <name>fMPIInterface</name>
      <anchorfile>classhops_1_1MHO__MPIInterface.html</anchorfile>
      <anchor>ae18f46995f832fe47d11bfb41501cd27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MultidimensionalFastFourierTransform</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryOperator</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a5bba380f544987850cd209d84ff61075</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ab0e8949049446797c373815b484d5e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ac975a23814a3f7b9fe3786abb9bb0946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aca2f05db66c398d89d875697eaac4062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a1662a0008009c795f78fc0681fb4712d</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>add0337589cc8d4b38f1069938bffc954</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a9ffa3cd1ad859160f352343c7d91c9a1</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aefd21c5b96c393211f186f9824a893a4</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_MultidimensionalFastFourierTransform&lt; hops::MHO_TableContainer &gt;</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</filename>
    <base>MHO_UnaryOperator&lt; hops::MHO_TableContainer &gt;</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a5bba380f544987850cd209d84ff61075</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ab0e8949049446797c373815b484d5e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ac975a23814a3f7b9fe3786abb9bb0946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aca2f05db66c398d89d875697eaac4062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a1662a0008009c795f78fc0681fb4712d</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>add0337589cc8d4b38f1069938bffc954</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a9ffa3cd1ad859160f352343c7d91c9a1</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aefd21c5b96c393211f186f9824a893a4</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_MultidimensionalFastFourierTransform&lt; mbd_type &gt;</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</filename>
    <base>hops::MHO_UnaryOperator</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a5bba380f544987850cd209d84ff61075</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ab0e8949049446797c373815b484d5e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ac975a23814a3f7b9fe3786abb9bb0946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aca2f05db66c398d89d875697eaac4062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a1662a0008009c795f78fc0681fb4712d</anchor>
      <arglist>(mbd_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>add0337589cc8d4b38f1069938bffc954</anchor>
      <arglist>(const mbd_type *in, mbd_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a9ffa3cd1ad859160f352343c7d91c9a1</anchor>
      <arglist>(mbd_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aefd21c5b96c393211f186f9824a893a4</anchor>
      <arglist>(const mbd_type *in, mbd_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_MultidimensionalFastFourierTransform&lt; pcal_type &gt;</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</filename>
    <base>hops::MHO_UnaryOperator</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a5bba380f544987850cd209d84ff61075</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ab0e8949049446797c373815b484d5e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ac975a23814a3f7b9fe3786abb9bb0946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aca2f05db66c398d89d875697eaac4062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a1662a0008009c795f78fc0681fb4712d</anchor>
      <arglist>(pcal_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>add0337589cc8d4b38f1069938bffc954</anchor>
      <arglist>(const pcal_type *in, pcal_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a9ffa3cd1ad859160f352343c7d91c9a1</anchor>
      <arglist>(pcal_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aefd21c5b96c393211f186f9824a893a4</anchor>
      <arglist>(const pcal_type *in, pcal_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_MultidimensionalFastFourierTransform&lt; visibility_type &gt;</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a5bba380f544987850cd209d84ff61075</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ab0e8949049446797c373815b484d5e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ac975a23814a3f7b9fe3786abb9bb0946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aca2f05db66c398d89d875697eaac4062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a1662a0008009c795f78fc0681fb4712d</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>add0337589cc8d4b38f1069938bffc954</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a9ffa3cd1ad859160f352343c7d91c9a1</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aefd21c5b96c393211f186f9824a893a4</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MultidimensionalFastFourierTransformFFTW</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryOperator</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>a9ee7c4ac1ab3c84fc67ce1f943cf084c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>a4fac3f96bce25c07b93572a7da6ff887</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultidimensionalFastFourierTransformFFTW</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>aeefe4002aa7d631be11a6756c8e178b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultidimensionalFastFourierTransformFFTW</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>adf2d208c41e8179904b7be9e3f4ca883</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>a048801d8fded9adc7c950434b7c68d3c</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>aefa1898c524600b874e36e79dc0db865</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>a816361ce32f481ed371b12c5eadf58cb</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformFFTW.html</anchorfile>
      <anchor>ac54740cac2deb53667912dbc69ffccfb</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MultidimensionalFastFourierTransformInterface</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</filename>
    <templarg></templarg>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransformInterface::TransformAxis</class>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a69c256470d83da4c91b9d873b42bd3a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a48aa57e2eba5569636fba88f2a6bac4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultidimensionalFastFourierTransformInterface</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a2f79775a9703a315bbaf3fa4680c2331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultidimensionalFastFourierTransformInterface</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a48ba7e7463a6149a58e1ae3723ec090b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeselectAllAxes</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a8e49b888c2afb4c39329bc1e31f6bd0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisableAxisLabelTransformation</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>af017acd142a8a83640ea15506ac97dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnableAxisLabelTransformation</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a76c42f20af267617d7e1dbb835c33716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SelectAllAxes</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>affbe2be4dd4fd0925daab1b4eb485a71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SelectAxis</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a5f9dc49f66367e30a50aa4153d6b6614</anchor>
      <arglist>(std::size_t axis_index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetBackward</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a5e2e88affc72fe272de201a20dca1ccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetForward</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a76b6d126eae8c01d867ef260ef35dd09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; !std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>IfTableTransformAxis</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a0c856afe52df1f2b17ae364ca9132c6a</anchor>
      <arglist>(XArgType *, std::size_t)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::enable_if&lt; std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type</type>
      <name>IfTableTransformAxis</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>adaaf13b5ad51362c4ad39ffffccecca8</anchor>
      <arglist>(XArgType *in, std::size_t axis_index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fAxesToXForm</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>aa73b5dedd950d376810d3deff178021d</anchor>
      <arglist>[XArgType::rank::value]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>fDimensionSize</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a00d4d2c72414cebc55955a8813306b91</anchor>
      <arglist>[XArgType::rank::value]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fForward</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a6f2e82538bb839d30fbd08c1cca58802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInitialized</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>abf06a691290074e633da0eb9664139b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fIsValid</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a792f2c5df090bc623e39fc140a328f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fTransformAxisLabels</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface.html</anchorfile>
      <anchor>a33442bfd03f6b8954be62bbd0566a699</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity</name>
    <filename>structhops_1_1MHO__MultiplyIdentity.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static XValueType</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity.html</anchorfile>
      <anchor>a449f64a45aca3ba4a6fbbf7cd2c8c5e1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; bool &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01bool_01_4.html</anchorfile>
      <anchor>af09c8acd71ead515ecc24c1245d334de</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; double &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01double_01_4.html</anchorfile>
      <anchor>aef2df56b882fe80bd1812637fae2e06e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; float &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01float_01_4.html</anchorfile>
      <anchor>a5ec7f6c1d06d236521a308cf9c950a1d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; int &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01int_01_4.html</anchorfile>
      <anchor>a1eb7a91c16054c9479da2c9668c09ee9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; long double &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01long_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long double</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01long_01double_01_4.html</anchorfile>
      <anchor>aac4aabbfd8528ce3748c6e62ed1d18e2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; short &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01short_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01short_01_4.html</anchorfile>
      <anchor>a84083c72404f3a9e717533d2fe4aa585</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; std::complex&lt; double &gt; &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1complex_3_01double_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::complex&lt; double &gt;</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a81079470c4c1678a32f3571774b3bb9d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; std::complex&lt; float &gt; &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1complex_3_01float_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::complex&lt; float &gt;</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>aa461baf7c02066c4a9e53e5473a22de0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; std::complex&lt; long double &gt; &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1complex_3_01long_01double_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::complex&lt; long double &gt;</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1complex_3_01long_01double_01_4_01_4.html</anchorfile>
      <anchor>a3ce13166bd388fb803fd1c1dc76c6720</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; std::size_t &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1size__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01std_1_1size__t_01_4.html</anchorfile>
      <anchor>aab59b4fd421a41dea2f28a9aa81524e8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_MultiplyIdentity&lt; unsigned int &gt;</name>
    <filename>structhops_1_1MHO__MultiplyIdentity_3_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__MultiplyIdentity_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a82692cb60cb1ddbf98764f8b1b8a4cfe</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MultitonePhaseCorrection</name>
    <filename>classhops_1_1MHO__MultitonePhaseCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_MultitonePhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>a8438d4e807e076f38da58d9f73ccca8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultitonePhaseCorrection</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>ac1d83650bc8aa007de00abbd2438df04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultitonePCData</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>ac0aeaaa49459d0c5d98324f1ed21386c</anchor>
      <arglist>(multitone_pcal_type *pcal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPCPeriod</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>a61af96852ae8ecb030d6fb08138a3efe</anchor>
      <arglist>(std::size_t pc_period)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStation</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>adb0f3c6f756a08039263ec30881eb783</anchor>
      <arglist>(std::string station)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationMk4ID</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>ac472c8376898415c515da2430a619cfb</anchor>
      <arglist>(std::string station_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>ad5b78941678fc75980350fd6f94ee284</anchor>
      <arglist>(weight_type *w)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>a928a7d8af1c769076c407363c529ef6b</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>a3a1c59b9be1c94f8fad78e55f3c9f978</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>a74423cfede2f1536b4b3c6912ac20528</anchor>
      <arglist>(visibility_type *) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>ae2e4e5588fb137776073b841ca2ff2af</anchor>
      <arglist>(const visibility_type *, visibility_type *) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InterpolatePCData</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrection.html</anchorfile>
      <anchor>a0e680dd35b38aa8cba751fd85592e54b</anchor>
      <arglist>(double pcal_minus_visib_toffset)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MultitonePhaseCorrectionBuilder</name>
    <filename>classhops_1_1MHO__MultitonePhaseCorrectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_MultitonePhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrectionBuilder.html</anchorfile>
      <anchor>af4c64a95d5543bb1596b4c4a0ab88c1a</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_MultitonePhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrectionBuilder.html</anchorfile>
      <anchor>ab6ed0075b48aa40deea9c4f608cee698</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_MultitonePhaseCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrectionBuilder.html</anchorfile>
      <anchor>aeeb100398fffcb5caaf18894d88ab05f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__MultitonePhaseCorrectionBuilder.html</anchorfile>
      <anchor>a8320b6f673f89d129a9a5dd1fbdf61da</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NaNMasker</name>
    <filename>classhops_1_1MHO__NaNMasker.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryFunctor</base>
    <member kind="typedef">
      <type>typename MHO_UnaryFunctor&lt; XArrayType &gt;::citerator_type</type>
      <name>citerator_type</name>
      <anchorfile>classhops_1_1MHO__NaNMasker.html</anchorfile>
      <anchor>ac40622963287e47b066ee2bc9380dddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename MHO_UnaryFunctor&lt; XArrayType &gt;::iterator_type</type>
      <name>iterator_type</name>
      <anchorfile>classhops_1_1MHO__NaNMasker.html</anchorfile>
      <anchor>a3fb14895aac5009e97495c05d87aa83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NaNMasker</name>
      <anchorfile>classhops_1_1MHO__NaNMasker.html</anchorfile>
      <anchor>a412207834d87bbeaf47357538b2b807c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NaNMasker</name>
      <anchorfile>classhops_1_1MHO__NaNMasker.html</anchorfile>
      <anchor>adffb2c3f21c4b7de4b76685336861e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NaNMasker.html</anchorfile>
      <anchor>a35f0870c9bb032f4207943a9bb099c54</anchor>
      <arglist>(citerator_type &amp;input, iterator_type &amp;output) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NaNMasker.html</anchorfile>
      <anchor>a38dbb4e1b7161cd65beb7267347e772f</anchor>
      <arglist>(iterator_type &amp;input) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NDArrayMath</name>
    <filename>classhops_1_1MHO__NDArrayMath.html</filename>
    <class kind="struct">hops::MHO_NDArrayMath::Divide</class>
    <class kind="struct">hops::MHO_NDArrayMath::Divide&lt; numerator, 1 &gt;</class>
    <class kind="struct">hops::MHO_NDArrayMath::PowerOfTwo</class>
    <class kind="struct">hops::MHO_NDArrayMath::PowerOfTwo&lt; 0 &gt;</class>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayMath</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a33a5ad3b8ebe5438975d8621d2074451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayMath</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>aec03f8bef3d4f5fc7621cd2243c8048e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CheckIndexValidity</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a2836d4f44464ef608693e6c135225dc3</anchor>
      <arglist>(const std::size_t *DimSize, const std::size_t *Index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DecrementIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a012fb814ec1b88585c5787d75a5e7ec6</anchor>
      <arglist>(const std::size_t *DimSize, std::size_t *Index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DecrementIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>ab5c2043e13c2807d8c419e393074cacc</anchor>
      <arglist>(const std::size_t *DimSize, std::size_t *Index, std::size_t diff)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IncrementIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a7170348c937f0889373a601bfafcb562</anchor>
      <arglist>(const std::size_t *DimSize, std::size_t *Index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IncrementIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>aede86722c5719c30af0ad9c5e8c0b911</anchor>
      <arglist>(const std::size_t *DimSize, std::size_t *Index, std::size_t diff)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>Modulus</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a0bf38727a5b9b3bb9b2556660ffdf5cc</anchor>
      <arglist>(std::size_t arg, std::size_t n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>OffsetFromRowMajorIndex</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a9375d983e27399dd59273fbb217f647c</anchor>
      <arglist>(const std::size_t *DimSize, const std::size_t *Index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>OffsetFromStrideIndex</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>aa36cede9266610c324253d4c310ca143</anchor>
      <arglist>(const std::size_t *Strides, const std::size_t *Index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>OffsetsForReversedIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a9bf3652152bd62e6992cfc273cdd25eb</anchor>
      <arglist>(const std::size_t *DimSize, std::size_t *ReversedIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RowMajorIndexFromOffset</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a276a03d33e9dcaaa731637bbc7fee940</anchor>
      <arglist>(std::size_t offset, const std::size_t *DimSize, std::size_t *Index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>StrideFromRowMajorIndex</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>a3886c4d4b43173698528a5c518c829a2</anchor>
      <arglist>(std::size_t selected_dim, const std::size_t *DimSize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>TotalArraySize</name>
      <anchorfile>classhops_1_1MHO__NDArrayMath.html</anchorfile>
      <anchor>af0a51b2aa3f1a6afe9db3515106fa4e8</anchor>
      <arglist>(const std::size_t *DimSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NDArrayTypeCastFunctor</name>
    <filename>classhops_1_1MHO__NDArrayTypeCastFunctor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename XInputArrayType::iterator</type>
      <name>input_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayTypeCastFunctor.html</anchorfile>
      <anchor>afe77650ff22181da6bf29049188f9d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XInputArrayType::value_type</type>
      <name>input_value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayTypeCastFunctor.html</anchorfile>
      <anchor>a5e8945a2dc0f73676e14b28e629ee196</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XOutputArrayType::iterator</type>
      <name>output_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayTypeCastFunctor.html</anchorfile>
      <anchor>ae70ff50f1ccf21101b6e80978e6c0fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XOutputArrayType::value_type</type>
      <name>output_value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayTypeCastFunctor.html</anchorfile>
      <anchor>a394f4729e8ce5469bff02cb051919737</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayTypeCastFunctor</name>
      <anchorfile>classhops_1_1MHO__NDArrayTypeCastFunctor.html</anchorfile>
      <anchor>ad38886e2feef715f43e03f30c28fa3d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayTypeCastFunctor</name>
      <anchorfile>classhops_1_1MHO__NDArrayTypeCastFunctor.html</anchorfile>
      <anchor>a6bd8901eb85d8f1985c6b5a4c92a0bc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayTypeCastFunctor.html</anchorfile>
      <anchor>a4a934bc06975f5a4653e6fc3e22c9344</anchor>
      <arglist>(input_iterator &amp;input, output_iterator &amp;output)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NDArrayView</name>
    <filename>classhops_1_1MHO__NDArrayView.html</filename>
    <templarg></templarg>
    <templarg>RANK</templarg>
    <member kind="typedef">
      <type>MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ac19bd2f6226d1c526c14f1eddde2045e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; std::size_t, RANK &gt;</type>
      <name>index_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a959f679e26b95743e2f0b19519eaa834</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;</type>
      <name>iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a53d000d09edee388dd9a8e2f07be9a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; std::size_t, RANK &gt;</type>
      <name>rank</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>af357d0685eac608232444c9dd48f5a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ac6d75add4788ad40f13139f0ee634f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayView</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ae79fab09d22531898a53303ee760a407</anchor>
      <arglist>(const MHO_NDArrayView &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayView</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a21796a00f9ed01c52458f42e383978a0</anchor>
      <arglist>(XValueType *ptr, const std::size_t *dim, const std::size_t *strides)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayView</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ae5bde1843d580cff1d09e1efb6a98a84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a9bd80066ad82e9c8ec1a3fe3d4cf1826</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a2c8095e46675895db874774a293f3e18</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a69caf4ce7e37bd6bf0a750af92768660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>af6a1461524c3f8f4ff932002f0209a7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cend</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>abe145c839a89fa3f63212a08640ca42e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckIndexValidity</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>aa1c2bac861e9d877c2af825d517c211d</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>citerator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>aaab5223cd051e957f38ba9db8c43cd8b</anchor>
      <arglist>(std::size_t offset) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayView *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a59a3a80d9b758dc055e8d9898efa7d58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a58121afef92f2266baf131ae058fc8c7</anchor>
      <arglist>(const MHO_NDArrayView &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>aa684d87560712586626a09a3d45063f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetDimension</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a97f074d50ef687d891cf87b499d33bb0</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetDimensionArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>abe220bb1aa56d516c13200d38abdb3da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a924398dfbae0771c7c04b37fb2a46a70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a8d13a00fe66086e216edf34af0cafd1b</anchor>
      <arglist>(std::size_t *dim) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetIndicesForOffset</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a11f433c844b3bd5efcad1fcdf55c8c56</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffsetForIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a6417f7cbb2aba63def0cda75aa7dae19</anchor>
      <arglist>(const std::size_t *index)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>afea3a2cbb09d579b7a26d0d5c4d408c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetSize</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>aed8484172c0afe8b3b82c7b900f64282</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetStride</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>abd5c859bb4670bb8efc64b83b7b97147</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetStrideArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a1eed43ec3f63e9ee7d4c1fe18eac895c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a01625d2c550a2627ae4ea553bc5a2773</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>af1bd7d6d9eb5142f056203c0249c4400</anchor>
      <arglist>(std::size_t *strd) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ad14c82b3d2268f6a6036851d03da0ed7</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a2b264cd69790319171cb1443304d039f</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>aecb009a04e444716026e6b0d4f6c46b4</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayView &amp;</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a1021f5f68c77db855393bc85ccb0c19e</anchor>
      <arglist>(const MHO_NDArrayView &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayView &amp; &gt;::type</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a264bbec8539d5d2a8ed55610f41745ca</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayView &amp;</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>aaf7fed5e7ef20ea3138a3efb0264d0a8</anchor>
      <arglist>(const MHO_NDArrayView &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayView &amp; &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a50210e1d85ec10ed52753df85f9a14ab</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayView &amp;</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ad3f2ab803d66478935f19162fad0be3b</anchor>
      <arglist>(const MHO_NDArrayView &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayView &amp; &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a2320bcef22bf95b34b1b113907475a59</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayView &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a194f37e9ee5ae992107f5de8dc355a87</anchor>
      <arglist>(const MHO_NDArrayView &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a88cd480b47bf9b96a47913b04549ab37</anchor>
      <arglist>(const XValueType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ab2e0aa69815e4bcf72df6f86903dff71</anchor>
      <arglist>(const index_type &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a3cf7bffdacd985817e4e594b9cbca121</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZeroArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a775e272157870b9b8e97f83482151604</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XValueType *</type>
      <name>fDataPtr</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a1fc6e41ea41491f85fcd699c94b3039f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_type</type>
      <name>fDims</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a7e3e08f189b95d10f2d7540e8a767123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>fSize</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>ac9c6baa926cf3dd1210d6b6fda2b2158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_type</type>
      <name>fStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>afd2b7f71b7f8ac33c74aec97995b383a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_type</type>
      <name>fTmp</name>
      <anchorfile>classhops_1_1MHO__NDArrayView.html</anchorfile>
      <anchor>a27eb5f20a722704b8ad5ac2b355757f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NDArrayWrapper</name>
    <filename>classhops_1_1MHO__NDArrayWrapper.html</filename>
    <templarg></templarg>
    <templarg>RANK</templarg>
    <base>hops::MHO_ExtensibleElement</base>
    <member kind="typedef">
      <type>MHO_BidirectionalConstIterator&lt; XValueType &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0bbcb7c60ab86b7f58cdd376954005c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;</type>
      <name>const_stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>abcdb068ba89ba14eb6251b77f03ea67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; std::size_t, RANK &gt;</type>
      <name>index_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>affefe47ce5c642526603332ab58c5f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalIterator&lt; XValueType &gt;</type>
      <name>iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>abb1638428d710f93ff8e0f64e3f6fa0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; std::size_t, RANK &gt;</type>
      <name>rank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a141382b44659721f53439ab6f5f090b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalStrideIterator&lt; XValueType &gt;</type>
      <name>stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a7923f97d7660ae966a2a6a1a8347bc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a56edb371b3b550d1ed4ac66f350d0570</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a10c4d9ae788a0da022e078bcc5131655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a9722a0044a9e00d23cc8b3b605788ac8</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae09476aea6805570b9cbe77119b680e1</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab2158a0b07c120c2b59e6fc0948264c4</anchor>
      <arglist>(XValueType *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aee9301fd354a61b9ee7e0397b123e8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a86345bc1efef3142303161022e00a492</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ad4127abd78c85338cfe57b89c955e255</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a25a966b995be2638bb9efbdf469ce463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a7ab32f2b9da4b4c686195f37371b322a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cend</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab7cce5b792a946e3318873b8c6e4505d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckIndexValidity</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a169c2e70750de3e520aeedf8c12567af</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>citerator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac2305ae95b3df2288e7ff313670e918b</anchor>
      <arglist>(std::size_t offset) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a31e8e4d499f86c9e0299057c20f4bb29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa977a1dc4a490d4cd49583de27d06353</anchor>
      <arglist>(const MHO_NDArrayView&lt; XValueType, RANK &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae07fb3f8a2f4b3e36cfdb8bbbed064ee</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0165a498f23f924ad95725f5e997e55f</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a5c58d89c845a173e2426b0bb4b1c7c4d</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a8f57bdd0110d192b55d3a6672e62b237</anchor>
      <arglist>(std::size_t offset, std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>afa1b4f2d5198f6bce6da0a0d143e7642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XValueType *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a39b2e463d5abc04ca39a1497ca85f06d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const XValueType *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a58b9a574093a7850e1cbf776947a66e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetDimension</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acc4ae2c057a3483b89df4cdc7b3ec877</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetDimensionArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ada0ccecfc1c12a4d94ce3abcb2114912</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a62cfcd1745753c8ad8f910727e7355d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a345838021c44594b3774f9c3190a0361</anchor>
      <arglist>(std::size_t *dim) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetIndicesForOffset</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae2bc7c227bd2de2ae6edc3e3d1c6bf29</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffsetForIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae37f0c04e981b6bd7f361252d3fc6917</anchor>
      <arglist>(const std::size_t *index)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a026be1a2ce52d4a80ff04ed96aa19991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetSize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0074f7e71474cd03305a7201b02c98e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetStride</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>adf798630798e2a060eef0bd8388a612c</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetStrideArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a2648fbe1709d5cf3c589094ed16f570f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a98c9989309fb32106c8aa2dd08ecce3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a126c37428e5c7ba6d99e4f4672cc974d</anchor>
      <arglist>(std::size_t *strd) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a532158cedcaba648043e892771ef6f89</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a1214865d6bfa04ed3ff53a1cafc2c26d</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aab97957bf2e3d5ebd8c3d12ac8924710</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac2a845d7480eaf996823c1736327f1d4</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac97397a9b7bf11058fab28db8997ae73</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acd0add8ffe16229e22988cb2d9fa18e0</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a3182af011c55228158b30f259c018143</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a55d921915d40d2944a94b3932259b084</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a6f43188195639734e28613ce42a0d615</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a4a5403ca4bcf160b1cf26829b098258c</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae08ecbd9e766174fbbf64f6816754a17</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae7743032f686b99d2036dec6023a1316</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a94df84a1c5370b0f73404e8f1e0da570</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XDimSizeTypeS)==RANK), void &gt;::type</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa8d20352642f23564ae9c5e2c0fa6ce0</anchor>
      <arglist>(XDimSizeTypeS... dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a9c221f6c4b64086be626754eb2913d88</anchor>
      <arglist>(const XValueType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExternalData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>af6af1398e46295e3b5df58d03b6eea24</anchor>
      <arglist>(XValueType *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), MHO_NDArrayView&lt; XValueType, count_instances_of_type&lt; const char *, sizeof...(XIndexTypeS) - 1, XIndexTypeS... &gt;::value &gt; &gt;::type</type>
      <name>SliceView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acef2af404b1e035a34f100ea2fbd542d</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aaf1d901b144e261cd9c7ab83d337d625</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ad36853c2a7f4c224e8eef6fe2bf8fff2</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aacdd7954156fc6e121fd9d929c74c9ec</anchor>
      <arglist>(std::size_t offset, std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)&lt; RANK), MHO_NDArrayView&lt; XValueType, RANK -(sizeof...(XIndexTypeS)) &gt; &gt;::type</type>
      <name>SubView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aed809d9fc71513abea9394d3d2bedcfb</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a96759a6fc3a3fb947fbadf05891bb5ce</anchor>
      <arglist>(const index_type &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab253fae68f9dc32b00828842e0a2b37b</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZeroArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa8c5dd06d0440052d4cbc8ceada33ef0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_NDArrayWrapper&lt; double, 3 &gt;</name>
    <filename>classhops_1_1MHO__NDArrayWrapper.html</filename>
    <base>hops::MHO_ExtensibleElement</base>
    <member kind="typedef">
      <type>MHO_BidirectionalConstIterator&lt; double &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0bbcb7c60ab86b7f58cdd376954005c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalConstStrideIterator&lt; double &gt;</type>
      <name>const_stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>abcdb068ba89ba14eb6251b77f03ea67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; std::size_t, RANK &gt;</type>
      <name>index_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>affefe47ce5c642526603332ab58c5f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalIterator&lt; double &gt;</type>
      <name>iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>abb1638428d710f93ff8e0f64e3f6fa0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; std::size_t, RANK &gt;</type>
      <name>rank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a141382b44659721f53439ab6f5f090b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalStrideIterator&lt; double &gt;</type>
      <name>stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a7923f97d7660ae966a2a6a1a8347bc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a56edb371b3b550d1ed4ac66f350d0570</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a10c4d9ae788a0da022e078bcc5131655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a9722a0044a9e00d23cc8b3b605788ac8</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae09476aea6805570b9cbe77119b680e1</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab2158a0b07c120c2b59e6fc0948264c4</anchor>
      <arglist>(double *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aee9301fd354a61b9ee7e0397b123e8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), double &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a86345bc1efef3142303161022e00a492</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const double &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ad4127abd78c85338cfe57b89c955e255</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a25a966b995be2638bb9efbdf469ce463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a7ab32f2b9da4b4c686195f37371b322a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cend</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab7cce5b792a946e3318873b8c6e4505d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckIndexValidity</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a169c2e70750de3e520aeedf8c12567af</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>citerator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac2305ae95b3df2288e7ff313670e918b</anchor>
      <arglist>(std::size_t offset) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a31e8e4d499f86c9e0299057c20f4bb29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa977a1dc4a490d4cd49583de27d06353</anchor>
      <arglist>(const MHO_NDArrayView&lt; double, RANK &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae07fb3f8a2f4b3e36cfdb8bbbed064ee</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0165a498f23f924ad95725f5e997e55f</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a5c58d89c845a173e2426b0bb4b1c7c4d</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a8f57bdd0110d192b55d3a6672e62b237</anchor>
      <arglist>(std::size_t offset, std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>afa1b4f2d5198f6bce6da0a0d143e7642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a39b2e463d5abc04ca39a1497ca85f06d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a58b9a574093a7850e1cbf776947a66e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetDimension</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acc4ae2c057a3483b89df4cdc7b3ec877</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetDimensionArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ada0ccecfc1c12a4d94ce3abcb2114912</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a62cfcd1745753c8ad8f910727e7355d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a345838021c44594b3774f9c3190a0361</anchor>
      <arglist>(std::size_t *dim) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetIndicesForOffset</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae2bc7c227bd2de2ae6edc3e3d1c6bf29</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffsetForIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae37f0c04e981b6bd7f361252d3fc6917</anchor>
      <arglist>(const std::size_t *index)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a026be1a2ce52d4a80ff04ed96aa19991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetSize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0074f7e71474cd03305a7201b02c98e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetStride</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>adf798630798e2a060eef0bd8388a612c</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetStrideArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a2648fbe1709d5cf3c589094ed16f570f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a98c9989309fb32106c8aa2dd08ecce3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a126c37428e5c7ba6d99e4f4672cc974d</anchor>
      <arglist>(std::size_t *strd) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a532158cedcaba648043e892771ef6f89</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), double &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a1214865d6bfa04ed3ff53a1cafc2c26d</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const double &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aab97957bf2e3d5ebd8c3d12ac8924710</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac2a845d7480eaf996823c1736327f1d4</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; double, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac97397a9b7bf11058fab28db8997ae73</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acd0add8ffe16229e22988cb2d9fa18e0</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; double, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a3182af011c55228158b30f259c018143</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a55d921915d40d2944a94b3932259b084</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; double, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a6f43188195639734e28613ce42a0d615</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a4a5403ca4bcf160b1cf26829b098258c</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae08ecbd9e766174fbbf64f6816754a17</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae7743032f686b99d2036dec6023a1316</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a94df84a1c5370b0f73404e8f1e0da570</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XDimSizeTypeS)==RANK), void &gt;::type</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa8d20352642f23564ae9c5e2c0fa6ce0</anchor>
      <arglist>(XDimSizeTypeS... dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a9c221f6c4b64086be626754eb2913d88</anchor>
      <arglist>(const double &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExternalData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>af6af1398e46295e3b5df58d03b6eea24</anchor>
      <arglist>(double *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), MHO_NDArrayView&lt; double, count_instances_of_type&lt; const char *, sizeof...(XIndexTypeS) - 1, XIndexTypeS... &gt;::value &gt; &gt;::type</type>
      <name>SliceView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acef2af404b1e035a34f100ea2fbd542d</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aaf1d901b144e261cd9c7ab83d337d625</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ad36853c2a7f4c224e8eef6fe2bf8fff2</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aacdd7954156fc6e121fd9d929c74c9ec</anchor>
      <arglist>(std::size_t offset, std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)&lt; RANK), MHO_NDArrayView&lt; double, RANK -(sizeof...(XIndexTypeS)) &gt; &gt;::type</type>
      <name>SubView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aed809d9fc71513abea9394d3d2bedcfb</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a96759a6fc3a3fb947fbadf05891bb5ce</anchor>
      <arglist>(const index_type &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab253fae68f9dc32b00828842e0a2b37b</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZeroArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa8c5dd06d0440052d4cbc8ceada33ef0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NDArrayWrapper&lt; XValueType, 0 &gt;</name>
    <filename>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</filename>
    <templarg></templarg>
    <base>hops::MHO_ExtensibleElement</base>
    <member kind="typedef">
      <type>std::integral_constant&lt; std::size_t, 0 &gt;</type>
      <name>rank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>ac74fb59d9c31fd9823ec2a37bf79c5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a8f44c7a387dd7f0e9476ca31ad7c1de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>ac365eb58d132e525ccaa1dae735f18f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a3e28ebe0a502478c0b901063aab8139c</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a2fc7a87b25f10793c7c44f223e8b80fa</anchor>
      <arglist>(const XValueType &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a9fca9e904ca2b4e7fcd4fe4ae8eb0a8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XValueType</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a91bccec05187b3201a9e0bb7e9e016d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a69c6080be859a5d130094d348c7ede49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetSize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>ab76964e9018fc1a258b6266b3b4a843c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>aad376efca93853cf9ae99b173760d0ff</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a4e05eabd340296472805dfa61e4402d5</anchor>
      <arglist>(const XValueType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a148af3ae494b7073a6909a00f4f97048</anchor>
      <arglist>(const XValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZeroArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>ae85ea538e816f7d41dd48fd2eeb78595</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XValueType</type>
      <name>fData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_010_01_4.html</anchorfile>
      <anchor>a0d56ae9b62d3b74b4ccf2c8b03f16d61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NDArrayWrapper&lt; XValueType, 1 &gt;</name>
    <filename>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</filename>
    <templarg></templarg>
    <base>hops::MHO_ExtensibleElement</base>
    <member kind="typedef">
      <type>MHO_BidirectionalConstIterator&lt; XValueType &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a85c7943afd0401b17e36ac4a2659da20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;</type>
      <name>const_stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a7594a6634e599349d9140e8957f73de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; std::size_t, 1 &gt;</type>
      <name>index_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a62c6acd5033e4e594a68e6c3d566ac37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalIterator&lt; XValueType &gt;</type>
      <name>iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>aed1615912679967d6323a7c72054307f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; std::size_t, 1 &gt;</type>
      <name>rank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ac39d1cd3c8f40f178a8e7915fede6c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalStrideIterator&lt; XValueType &gt;</type>
      <name>stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a5b501f9cd06692387d6a2dde5da1941f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ade0236649283b30baede52a01a687ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a7cac78b1bfe29171a09f67896e3d74ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>af07168e43153185e5b0276ccc09f4bd4</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a26d048c4dd4d0ab616b8b2b6d13b143b</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a1e12ee7caab3f1e21a2c7bcbde9c89c6</anchor>
      <arglist>(std::size_t dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a98b1bb7b433ad44c386cf374655270ac</anchor>
      <arglist>(XValueType *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a308dd83c3523031abb3c304218e00b1a</anchor>
      <arglist>(XValueType *ptr, std::size_t dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a08e2035be32903a62239a1bc7a1766de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a05721863529d511d6da2999f3bb3b18d</anchor>
      <arglist>(std::size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>afa3972d1d3ed3e7bdf0436c2e003c498</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>abad23b48b91d74d54c8f080a383dcc3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a901da362648b266bc69231fe84334816</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cend</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a7e47c1ce77ab259a3aa44692d5b274d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>citerator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>af761ac2e487b598b0f6db8d82dee5b52</anchor>
      <arglist>(std::size_t offset) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a6eb05fd975c9f881a7e7af0b4dcb570d</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a56a656e5370db5f88f8b533fea7bbf43</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a256b32bb41faf0a2e61f26c9dd41e19e</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a71d725843d180ea3e723d3fe89d0cebd</anchor>
      <arglist>(std::size_t offset, std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a9ec8150b07990a1f1994bdaa6f5be148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XValueType *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a3cfd9254c300fb36bcd8e986af8d81ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const XValueType *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ab6470b93f9dc42de580736e920581098</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetDimension</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a9a2d393530bbe18cb7653998408a58e7</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetDimensionArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a6cc9c047e47b2ca48aa3bda9141c2bd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a6c1583f26011c36cba1cc1386f592f8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>af372985f8b1b1628f3392d607366f863</anchor>
      <arglist>(std::size_t *dim) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetIndicesForOffset</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a4a35eaf9938f5f33bc666883034d733c</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffsetForIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ac28454108cb7fa16aa164c1a14ac6b08</anchor>
      <arglist>(const std::size_t *index)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a552b9c492454f370bb2292b4ddd1a4d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetSize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ad05b89692cf6a0ca968a9ab70446bd12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetStride</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a24d7eb475f33df78b817b29090357186</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetStrideArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a96585c5919a67360181c53101fadc312</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a6f5a599a20352a0432b6284a07a4d44f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ada80608d343d6dc36645c84a14bf7248</anchor>
      <arglist>(std::size_t *strd) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ae98c43b3fccf47c625b21073d2b3632b</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a20888a98dcbd03311236c5cd91e7448c</anchor>
      <arglist>(std::size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>abb1515fd990f3f31836e708787c35e4a</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a2728ee745db3233e728ac6a7566457fa</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a706d8f6944ac5e9009aa39e5a06331f3</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>afa5fce98b5214f89bbaadba664e62bf7</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a506081334b416e500cdc23009bbca429</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a3166a84cd377959062f7d9dee6f155b5</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a06c57894bc856474cc2690ae305117e8</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a07234f770a617a6962dfae1f45ca3cba</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ae2096a0435c1b1795ec9489ac3fa2012</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a555f51d83e5c4d8a65b4ec35c06d0d12</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ac766c86aec5e348a400829846849ccf5</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ac956f08db3dc223013b35d6ea791dff6</anchor>
      <arglist>(std::size_t dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a4e2582bfd1fc3a28ca5f48f41b2aa49b</anchor>
      <arglist>(const XValueType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExternalData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a8bb064e7444cdc0865f77226e09d6600</anchor>
      <arglist>(XValueType *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExternalData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>ae05a1e804aa8f7fd248742b6021c0a6a</anchor>
      <arglist>(XValueType *ptr, std::size_t dim)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayView&lt; XValueType, 1 &gt;</type>
      <name>SliceView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a9a15db3a0c00e668cea23d48e7f815a7</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a4de0696da0984f4776378c6f9f680b89</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>aa71abb4809a11e1dd788fe9b6a481980</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>adee345d1c41ea8069fa634cf66969be6</anchor>
      <arglist>(std::size_t offset, std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)&lt; 1), MHO_NDArrayWrapper&lt; XValueType, 1 -(sizeof...(XIndexTypeS)) &gt; &gt;::type</type>
      <name>SubView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a8be7ce16e457a3089506a6571fe36393</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a0731de4e1aedab709aaf93440cd620ec</anchor>
      <arglist>(const index_type &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a768d65fa71ce8991ffd959c6307d1770</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZeroArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4.html</anchorfile>
      <anchor>a2e9f236a8ec358235efb11512176ba1f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_NDArrayWrapper&lt; XValueType, XAxisPackType::NAXES::value &gt;</name>
    <filename>classhops_1_1MHO__NDArrayWrapper.html</filename>
    <base>hops::MHO_ExtensibleElement</base>
    <member kind="typedef">
      <type>MHO_BidirectionalConstIterator&lt; XValueType &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0bbcb7c60ab86b7f58cdd376954005c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;</type>
      <name>const_stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>abcdb068ba89ba14eb6251b77f03ea67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; std::size_t, RANK &gt;</type>
      <name>index_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>affefe47ce5c642526603332ab58c5f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalIterator&lt; XValueType &gt;</type>
      <name>iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>abb1638428d710f93ff8e0f64e3f6fa0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; std::size_t, RANK &gt;</type>
      <name>rank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a141382b44659721f53439ab6f5f090b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BidirectionalStrideIterator&lt; XValueType &gt;</type>
      <name>stride_iterator</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a7923f97d7660ae966a2a6a1a8347bc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>XValueType</type>
      <name>value_type</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a56edb371b3b550d1ed4ac66f350d0570</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a10c4d9ae788a0da022e078bcc5131655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a9722a0044a9e00d23cc8b3b605788ac8</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae09476aea6805570b9cbe77119b680e1</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab2158a0b07c120c2b59e6fc0948264c4</anchor>
      <arglist>(XValueType *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NDArrayWrapper</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aee9301fd354a61b9ee7e0397b123e8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a86345bc1efef3142303161022e00a492</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
      <name>at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ad4127abd78c85338cfe57b89c955e255</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a25a966b995be2638bb9efbdf469ce463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a7ab32f2b9da4b4c686195f37371b322a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cend</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab7cce5b792a946e3318873b8c6e4505d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckIndexValidity</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a169c2e70750de3e520aeedf8c12567af</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>citerator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac2305ae95b3df2288e7ff313670e918b</anchor>
      <arglist>(std::size_t offset) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a31e8e4d499f86c9e0299057c20f4bb29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa977a1dc4a490d4cd49583de27d06353</anchor>
      <arglist>(const MHO_NDArrayView&lt; XValueType, RANK &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae07fb3f8a2f4b3e36cfdb8bbbed064ee</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0165a498f23f924ad95725f5e997e55f</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a5c58d89c845a173e2426b0bb4b1c7c4d</anchor>
      <arglist>(std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>const_stride_iterator</type>
      <name>cstride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a8f57bdd0110d192b55d3a6672e62b237</anchor>
      <arglist>(std::size_t offset, std::size_t stride) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>afa1b4f2d5198f6bce6da0a0d143e7642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XValueType *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a39b2e463d5abc04ca39a1497ca85f06d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const XValueType *</type>
      <name>GetData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a58b9a574093a7850e1cbf776947a66e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetDimension</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acc4ae2c057a3483b89df4cdc7b3ec877</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetDimensionArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ada0ccecfc1c12a4d94ce3abcb2114912</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a62cfcd1745753c8ad8f910727e7355d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDimensions</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a345838021c44594b3774f9c3190a0361</anchor>
      <arglist>(std::size_t *dim) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetIndicesForOffset</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae2bc7c227bd2de2ae6edc3e3d1c6bf29</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetOffsetForIndices</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae37f0c04e981b6bd7f361252d3fc6917</anchor>
      <arglist>(const std::size_t *index)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a026be1a2ce52d4a80ff04ed96aa19991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetSize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a0074f7e71474cd03305a7201b02c98e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetStride</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>adf798630798e2a060eef0bd8388a612c</anchor>
      <arglist>(std::size_t idx) const</arglist>
    </member>
    <member kind="function">
      <type>index_type</type>
      <name>GetStrideArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a2648fbe1709d5cf3c589094ed16f570f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t *</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a98c9989309fb32106c8aa2dd08ecce3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStrides</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a126c37428e5c7ba6d99e4f4672cc974d</anchor>
      <arglist>(std::size_t *strd) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a532158cedcaba648043e892771ef6f89</anchor>
      <arglist>(std::size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a1214865d6bfa04ed3ff53a1cafc2c26d</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aab97957bf2e3d5ebd8c3d12ac8924710</anchor>
      <arglist>(XIndexTypeS... idx) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac2a845d7480eaf996823c1736327f1d4</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ac97397a9b7bf11058fab28db8997ae73</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acd0add8ffe16229e22988cb2d9fa18e0</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a3182af011c55228158b30f259c018143</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a55d921915d40d2944a94b3932259b084</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;anArray)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper &amp; &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a6f43188195639734e28613ce42a0d615</anchor>
      <arglist>(T aScalar)</arglist>
    </member>
    <member kind="function">
      <type>MHO_NDArrayWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a4a5403ca4bcf160b1cf26829b098258c</anchor>
      <arglist>(const MHO_NDArrayWrapper &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae08ecbd9e766174fbbf64f6816754a17</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ae7743032f686b99d2036dec6023a1316</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a94df84a1c5370b0f73404e8f1e0da570</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XDimSizeTypeS)==RANK), void &gt;::type</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa8d20352642f23564ae9c5e2c0fa6ce0</anchor>
      <arglist>(XDimSizeTypeS... dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a9c221f6c4b64086be626754eb2913d88</anchor>
      <arglist>(const XValueType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExternalData</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>af6af1398e46295e3b5df58d03b6eea24</anchor>
      <arglist>(XValueType *ptr, const std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), MHO_NDArrayView&lt; XValueType, count_instances_of_type&lt; const char *, sizeof...(XIndexTypeS) - 1, XIndexTypeS... &gt;::value &gt; &gt;::type</type>
      <name>SliceView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>acef2af404b1e035a34f100ea2fbd542d</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_begin</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aaf1d901b144e261cd9c7ab83d337d625</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_end</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ad36853c2a7f4c224e8eef6fe2bf8fff2</anchor>
      <arglist>(std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>stride_iterator</type>
      <name>stride_iterator_at</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aacdd7954156fc6e121fd9d929c74c9ec</anchor>
      <arglist>(std::size_t offset, std::size_t stride)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(sizeof...(XIndexTypeS)&lt; RANK), MHO_NDArrayView&lt; XValueType, RANK -(sizeof...(XIndexTypeS)) &gt; &gt;::type</type>
      <name>SubView</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aed809d9fc71513abea9394d3d2bedcfb</anchor>
      <arglist>(XIndexTypeS... idx)</arglist>
    </member>
    <member kind="function">
      <type>XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>a96759a6fc3a3fb947fbadf05891bb5ce</anchor>
      <arglist>(const index_type &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>const XValueType &amp;</type>
      <name>ValueAt</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>ab253fae68f9dc32b00828842e0a2b37b</anchor>
      <arglist>(const index_type &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZeroArray</name>
      <anchorfile>classhops_1_1MHO__NDArrayWrapper.html</anchorfile>
      <anchor>aa8c5dd06d0440052d4cbc8ceada33ef0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NormFX</name>
    <filename>classhops_1_1MHO__NormFX.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_NormFX</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a0f419578c5f985757c0420b1c2370f0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NormFX</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a4c9a0aadc7f0066fff7f37e9f034226c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a1a5f1fe4e8b9926f54c3f52271069fe0</anchor>
      <arglist>(weight_type *w)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>visibility_type</type>
      <name>XArgType</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a295bed77e48af8418a1892e634594de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a4c7d687c21e9543a36e99fbc9998ecbf</anchor>
      <arglist>(XArgType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>aeecc52b42cb4df773ed2267b5227533f</anchor>
      <arglist>(const XArgType *in, XArgType *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a3187980999e8a4f21a602261272d32e0</anchor>
      <arglist>(XArgType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a48fd9a575a9c1a22da4f6b623af6b10b</anchor>
      <arglist>(const XArgType *in, XArgType *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>weight_type *</type>
      <name>fWeights</name>
      <anchorfile>classhops_1_1MHO__NormFX.html</anchorfile>
      <anchor>a333e509f67e5a0880a17a48cfde7ee96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Notches</name>
    <filename>classhops_1_1MHO__Notches.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_Notches</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>a4cc44934dd9b029173494453552bba08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Notches</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>a101392d7b193d003580e7189261991b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNotchBoundaries</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>a8e55e851f3119852ec6fa38788256993</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;notch_boundary_list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>a51911446d6255d4bd3c711b5c85ce38d</anchor>
      <arglist>(weight_type *weights)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>aca8bd61c4eb530e7f62efd65a0c679ae</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>acf4540e8c2c9306f1002a6f7127547b0</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>a529b2e1ac53f502ae35f85d770c393fa</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Notches.html</anchorfile>
      <anchor>ae3e54e43f821a52a2ccb452e9ffb07e2</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NotchesBuilder</name>
    <filename>classhops_1_1MHO__NotchesBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_NotchesBuilder</name>
      <anchorfile>classhops_1_1MHO__NotchesBuilder.html</anchorfile>
      <anchor>a05460eccb959d1eead52c78e2daa7113</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_NotchesBuilder</name>
      <anchorfile>classhops_1_1MHO__NotchesBuilder.html</anchorfile>
      <anchor>a79eea0a31f526a5f7373999dd9ef275e</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_NotchesBuilder</name>
      <anchorfile>classhops_1_1MHO__NotchesBuilder.html</anchorfile>
      <anchor>a48627b33aedf2107a50d58e843a958f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__NotchesBuilder.html</anchorfile>
      <anchor>a77180a0af0a3da652e6d177a9e491a8e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_NullType</name>
    <filename>namespacehops.html</filename>
    <anchor>classhops_1_1MHO__NullType</anchor>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_ObjectStreamState</name>
    <filename>structhops_1_1MHO__ObjectStreamState.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>structhops_1_1MHO__ObjectStreamState.html</anchorfile>
      <anchor>aec9345afc76b07fa8721b40970b4a33e</anchor>
      <arglist>(MHO_FileStreamer &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnknown</name>
      <anchorfile>structhops_1_1MHO__ObjectStreamState.html</anchorfile>
      <anchor>aa5c7c74188bec240483dc55e4e5d6960</anchor>
      <arglist>(MHO_FileStreamer &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Reset</name>
      <anchorfile>structhops_1_1MHO__ObjectStreamState.html</anchorfile>
      <anchor>a0e519f762454eacc7f2f4aad6517762c</anchor>
      <arglist>(XStreamType &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetUnknown</name>
      <anchorfile>structhops_1_1MHO__ObjectStreamState.html</anchorfile>
      <anchor>a7cd9b24c9a25bc3c88e5e622a1182d99</anchor>
      <arglist>(XStreamType &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ObjectTags</name>
    <filename>classhops_1_1MHO__ObjectTags.html</filename>
    <base>hops::MHO_Taggable</base>
    <base>hops::MHO_ExtensibleElement</base>
    <member kind="function">
      <type></type>
      <name>MHO_ObjectTags</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a927faab64047c3fe3a75dabcef2714ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ObjectTags</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a983f8346e3cb0c8ef2f420926dbfbf18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddObjectUUID</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a4b3d3c8836093bef51af82d202b193b3</anchor>
      <arglist>(const MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpTags</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a97970586ed7fcfd2bad2daa8eda9bc25</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;tag_names) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MHO_UUID &gt;</type>
      <name>GetAllObjectUUIDs</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a80007d41dfe1a901d851d9119cc475a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNObjectUUIDs</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a24b70793f3321e7a5d6163df471f5e1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a6e88afb0759c5fdff423b496028ca87e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; MHO_UUID &gt;</type>
      <name>GetTaggedObjectUUIDSet</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>aef84af2e40362c15e904a9733366779e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTagValue</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>acc598ea88639ad29f4bbdf09130fbb8b</anchor>
      <arglist>(const char *tag_name, XValueType &amp;tag_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTagValue</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>aa329130eba03ac893aae9494eb10d903</anchor>
      <arglist>(const std::string &amp;tag_name, XValueType &amp;tag_value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetTagValueAsString</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a63e6cacbabfc40a42bd986abbc6ebd93</anchor>
      <arglist>(const std::string &amp;tag_name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsObjectUUIDPresent</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a46f771ec7faf850f9808ba430ad1f229</anchor>
      <arglist>(const MHO_UUID &amp;uuid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTagPresent</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a1f5c38e09405a4e477a7aaddf24f2b97</anchor>
      <arglist>(const char *tag_name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTagPresent</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a45d101b92664e36daede024c3d787f97</anchor>
      <arglist>(const std::string &amp;tag_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveObjectUUID</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a2787d95614efc26e243aee44d7e9542c</anchor>
      <arglist>(const MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTagValue</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>aa0dabe1e4c0eb701aad10be953d2f41a</anchor>
      <arglist>(const char *tag_name, const XValueType &amp;tag_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTagValue</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>acefa00638e9b9e2e7c824c93aa713c16</anchor>
      <arglist>(const std::string &amp;tag_name, const XValueType &amp;tag_value)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; MHO_UUID &gt;</type>
      <name>fObjectUUIDSet</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>a1cdce1501352d1b0ca37f056343782c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>acfd90d27477237e7936c6cce148ea83e</anchor>
      <arglist>(XStream &amp;s, const MHO_ObjectTags &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__ObjectTags.html</anchorfile>
      <anchor>afb35c8342b81c696df76dddcd138986a</anchor>
      <arglist>(XStream &amp;s, MHO_ObjectTags &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLBatchedMultidimensionalFastFourierTransform</name>
    <filename>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</filename>
    <templarg></templarg>
    <base>hops::MHO_Operator</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a84593460a0917e8fe543063a43476411</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>abc0db7bd0020d1eb492664db997d4515</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLBatchedMultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a7149aca7db69b341176490866c028743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLBatchedMultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a75a8ee601e7ad8516c5068591fb6fd41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ad6865d76b963468280e7821f5b9c17fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ForceLocalSize</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ac35a16863480adfd537eccb8ab224cc7</anchor>
      <arglist>(unsigned int local)</arglist>
    </member>
    <member kind="function">
      <type>cl::Buffer *</type>
      <name>GetDataBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ae13d1c3c2c193ac1490f3f3860437a6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetOpenCLFlags</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aa3766d9629f2ef6ad7e2cbe0ec85f2bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a704c11e08a472075b2ae33b661d100fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBackward</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aa0cefaca5f0357fc080501c1f90ba8a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetForward</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a3f4e69369394a4dea5b985e39531e254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetInput</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>aa0ea760652a935bbf94b8b2965c58fd2</anchor>
      <arglist>(XArgType *in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetOutput</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a2f1fee6391817685bd061018fee4c2b2</anchor>
      <arglist>(XArgType *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReadOutDataToHostFalse</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a41188e09f8d1f999a155e2fcd3283c1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReadOutDataToHostTrue</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ac31ab12a6d45d4d77d29c30858d96021</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWriteOutHostDataFalse</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a8601c6422b6871a55f37215aa48c8a41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWriteOutHostDataTrue</name>
      <anchorfile>classhops_1_1MHO__OpenCLBatchedMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ae0d6d002a9ca82766d5fe779e7c15c64</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLComplexPointwiseMultiply</name>
    <filename>classhops_1_1MHO__OpenCLComplexPointwiseMultiply.html</filename>
    <base>MHO_BinaryOperator&lt; MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt;, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt;, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, RANK &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLComplexPointwiseMultiply</name>
      <anchorfile>classhops_1_1MHO__OpenCLComplexPointwiseMultiply.html</anchorfile>
      <anchor>af63ff791b7218f3b91a3c9dcc60242f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLComplexPointwiseMultiply</name>
      <anchorfile>classhops_1_1MHO__OpenCLComplexPointwiseMultiply.html</anchorfile>
      <anchor>a1a597f02ae14dc5d9f588ce1d4773aa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__OpenCLComplexPointwiseMultiply.html</anchorfile>
      <anchor>a51165b3bf5d7c6746adfc98c738898ce</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__OpenCLComplexPointwiseMultiply.html</anchorfile>
      <anchor>a5552fe2964320dc5c84c5950d6985922</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLFastFourierTransformPlan</name>
    <filename>classhops_1_1MHO__OpenCLFastFourierTransformPlan.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLFastFourierTransformPlan</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformPlan.html</anchorfile>
      <anchor>a40df41150efdacf5814bdd87061a2088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLFastFourierTransformPlan</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformPlan.html</anchorfile>
      <anchor>ae10e0b6ef45536165ff2a2fff663e766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformPlan.html</anchorfile>
      <anchor>aa535d0bba64635ccd642dc2880c0a527</anchor>
      <arglist>(std::size_t NDIM, std::size_t N)</arglist>
    </member>
    <member kind="function">
      <type>cl::Kernel *</type>
      <name>GetKernel</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformPlan.html</anchorfile>
      <anchor>a486c67437c05db2db75f29f784ac8ba8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNLocal</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformPlan.html</anchorfile>
      <anchor>a6d19512d1910759b32a0c6f8f167c87d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLFastFourierTransformRadix2Stage</name>
    <filename>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryInPlaceOperator</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a9075f60a1d1899837c5b862ecfef711d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>aa62e5af74b9b8a0cc19105ff8d0c43d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLScalarMultiply</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a3949d28b402eecc7cf1a426f79ad8d96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLScalarMultiply</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a5f985b29954f64e9f2450a00260c84ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SelectAxis</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>ada39c0251bf84180a875d4e69d081fff</anchor>
      <arglist>(std::size_t axis_index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReadFalse</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a40ddde855be654354769921a9cff7533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReadTrue</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a84b25904ab2d67a89c4d04c003f2b9ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWriteFalse</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a023487d1aa8f29e58b676c1e442669ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWriteTrue</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a8b16364991ea1c25cd0a15adba95b89b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a74a97c7696adada6746e2e6519962d3e</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLFastFourierTransformRadix2Stage.html</anchorfile>
      <anchor>a3755d83de6db5eb3458fc1dae2a0166d</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLInterface</name>
    <filename>classhops_1_1MHO__OpenCLInterface.html</filename>
    <member kind="function">
      <type>cl::Context</type>
      <name>GetContext</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>adf641e6d0d3172159a6f042ba6a92f23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>cl::Device</type>
      <name>GetDevice</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>ab238ac9a9891244b7efdd9228963fdb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CL_VECTOR_TYPE&lt; cl::Device &gt;</type>
      <name>GetDevices</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a302e84553592c060fa38336a0bd6a296</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetErrorMessage</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>aec19c8ecee43376c6998e9cd8c85ddb1</anchor>
      <arglist>(int code)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetKernelPath</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a9b785d90222ea57f8dcd4c631f7f3ebc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNumberOfDevices</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a0b45f242c0b5d078ad010d867e554f54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>cl::CommandQueue &amp;</type>
      <name>GetQueue</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>abed33fffd4344aba2fb76077ef4b7d5b</anchor>
      <arglist>(int i=-1) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGPU</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>afe586f89d7b0a76237cdb11a6fb9140b</anchor>
      <arglist>(unsigned int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKernelPath</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a25236f6ec6c16099afc40b7bdc2142ad</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_OpenCLInterface *</type>
      <name>GetInstance</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>acb6a8bc68eb8cb016689567f9f3fca12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MHO_OpenCLInterface</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a9784736fb34d8345c2f803413075a90e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLInterface</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>ac05bd85d85fd5e0c7a2142dd1b5170a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>FillErrorCodeMaps</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>ad207290e81615d9f9196b76b8a453490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InitializeOpenCL</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>ab5035c4ae5c0abe52f5a5017a0723894</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>fCLDeviceID</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a85bef703b8ff7291b898df7bef1c77d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cl::Context *</type>
      <name>fContext</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>ab347dd32eb9310b0c483a46dd4178578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CL_VECTOR_TYPE&lt; cl::Device &gt;</type>
      <name>fDevices</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a1f043e181395cbee35f49b1fa1f8959a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fKernelPath</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a301ce39850f60c94d0fc0fe5cd61ff2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, std::string &gt;</type>
      <name>fOpenCLCode2ErrorMap</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a0b17bd9c198832c80e10c6e14e135d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>fOpenCLError2CodeMap</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a95fcfe267d803527d7533e92f70aa1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CL_VECTOR_TYPE&lt; cl::Platform &gt;</type>
      <name>fPlatforms</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>a5926a29191ab38dc06a41ce46b4af4f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; cl::CommandQueue * &gt;</type>
      <name>fQueues</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>ad316334fe078dbb0a86f00eb2372f14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static MHO_OpenCLInterface *</type>
      <name>fOpenCLInterface</name>
      <anchorfile>classhops_1_1MHO__OpenCLInterface.html</anchorfile>
      <anchor>ae15d518b050ac537bfbbcd4e9d5ed24b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLKernelBuilder</name>
    <filename>classhops_1_1MHO__OpenCLKernelBuilder.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLKernelBuilder</name>
      <anchorfile>classhops_1_1MHO__OpenCLKernelBuilder.html</anchorfile>
      <anchor>aef6f08d4fdd81f9d60bf5eb9e708d935</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLKernelBuilder</name>
      <anchorfile>classhops_1_1MHO__OpenCLKernelBuilder.html</anchorfile>
      <anchor>a6f63adb4ee7716644d103413448bca33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>cl::Kernel *</type>
      <name>BuildKernel</name>
      <anchorfile>classhops_1_1MHO__OpenCLKernelBuilder.html</anchorfile>
      <anchor>a2c730f55bd520cede72b9851d7236f60</anchor>
      <arglist>(std::string SourceFileName, std::string KernelName, std::string BuildFlags=std::string(&quot;&quot;))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLMultidimensionalFastFourierTransform</name>
    <filename>classhops_1_1MHO__OpenCLMultidimensionalFastFourierTransform.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryInPlaceOperator</base>
    <base>hops::MHO_MultidimensionalFastFourierTransformInterface</base>
    <member kind="typedef">
      <type>typename XArgType::value_type</type>
      <name>complex_value_type</name>
      <anchorfile>classhops_1_1MHO__OpenCLMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a240395fc13538784f5fbda5d8d0eafa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArgType::value_type::value_type</type>
      <name>floating_point_value_type</name>
      <anchorfile>classhops_1_1MHO__OpenCLMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a0f74b0be8213b77d3f015cbdde77af8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLMultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__OpenCLMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a2af6f393ded8332d0445d75ba4e85a67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLMultidimensionalFastFourierTransform</name>
      <anchorfile>classhops_1_1MHO__OpenCLMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a0a00bbe7fafe74a5e90488900ee8822f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>a32690e1a7445b71f76b1b9bd1c2c4882</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLMultidimensionalFastFourierTransform.html</anchorfile>
      <anchor>ada4e50b0e0d1a49539596991e4b171ec</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLNDArrayBuffer</name>
    <filename>classhops_1_1MHO__OpenCLNDArrayBuffer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLNDArrayBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>aed9293a799f4d4650f8f1ab3a623b429</anchor>
      <arglist>(MHO_ExtensibleElement *element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLNDArrayBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>ab0b8d6b54a2f964ee96b88f7046b2da8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConstructDataBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a3589d099720c4ebddfb3daa5d76fe255</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConstructDimensionBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>ab955ea7536e320ca85250b833861d96c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>cl::Buffer *</type>
      <name>GetDataBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>ae04d2c8353e67187e132a460198b57df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>cl::Buffer *</type>
      <name>GetDimensionBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a7e00c1a6997102822f77b043a3e95396</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadDataBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a40dba36db69ca90f7444ba44f0b02c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteDataBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>aab6a2703eaa290ec38b6f898a534c709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteDimensionBuffer</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>ad42cc5500ecda31d447c323d58ea4ccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cl::Buffer *</type>
      <name>fDataBufferCL</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a63d486767dd61039b8378b772be9d92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cl::Buffer *</type>
      <name>fDimensionBufferCL</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a7799195003324700bfa37464bda6e833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>fDimensions</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a5bc9cee6ff52926ae394a4abe07fadc7</anchor>
      <arglist>[XArrayType::rank::value]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ExtensibleElement *</type>
      <name>fElement</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a8c9d01ced348cac227e560863b4af0b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XArrayType *</type>
      <name>fNDArray</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a1181d3d8b86bce07a06b8292ff7635fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>fRank</name>
      <anchorfile>classhops_1_1MHO__OpenCLNDArrayBuffer.html</anchorfile>
      <anchor>a45255dd8092279bd3d590bcd028aaf9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OpenCLScalarMultiply</name>
    <filename>classhops_1_1MHO__OpenCLScalarMultiply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_OpenCLScalarMultiply</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>a58ad42febc73130985a785b48d601cdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OpenCLScalarMultiply</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>adbdf4ca1f86a8dfca42652a83a9ed79c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XFactorType</type>
      <name>GetFactor</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>aa740b441507b6b1a5cedeb9a87a4f49c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFactor</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>aaab55f061301e71ac4daca5729484b5a</anchor>
      <arglist>(XFactorType factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReadFalse</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>a4f1e7ce527b07dbcafa10f41c944c8a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReadTrue</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>afa702abd9cc6acc6ed8860d7241d5465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWriteFalse</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>a560038b48327b62cc16d81b82b92b580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWriteTrue</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>aea245414ce572b8d70a63314d84ed72a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>afb9f766f1a24d1da3eef8408eb709914</anchor>
      <arglist>(XArrayType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>a909a8a4f2ebda414e167972c53989bac</anchor>
      <arglist>(const XArrayType *in, XArrayType *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>af32f25490339638c174608cb256e8b0d</anchor>
      <arglist>(XArrayType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__OpenCLScalarMultiply.html</anchorfile>
      <anchor>a9d993057556b0c49e7326d4e1e90e6b4</anchor>
      <arglist>(const XArrayType *in, XArrayType *out)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MHO_OpenCLTypeMap</name>
    <filename>MHO__OpenCLInterface_8hh.html</filename>
    <anchor>structMHO__OpenCLTypeMap</anchor>
    <templarg></templarg>
    <member kind="typedef">
      <type>XValueType</type>
      <name>mapped_type</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a31f62a31d3b52e88e164ed9588d1e818</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MHO_OpenCLTypeMap&lt; float &gt;</name>
    <filename>MHO__OpenCLInterface_8hh.html</filename>
    <anchor>structMHO__OpenCLTypeMap_3_01float_01_4</anchor>
    <member kind="typedef">
      <type>CL_TYPE</type>
      <name>mapped_type</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a32546ff3e4723403e44dd6cb0a4ec5b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MHO_OpenCLTypeMap&lt; std::complex&lt; float &gt; &gt;</name>
    <filename>MHO__OpenCLInterface_8hh.html</filename>
    <anchor>structMHO__OpenCLTypeMap_3_01std_1_1complex_3_01float_01_4_01_4</anchor>
    <member kind="typedef">
      <type>CL_TYPE2</type>
      <name>mapped_type</name>
      <anchorfile>MHO__OpenCLInterface_8hh.html</anchorfile>
      <anchor>a60daf04332adf978b36cc4910934731a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Operator</name>
    <filename>classhops_1_1MHO__Operator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>a22d862ce42973f29cb9ec79619fe6242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>aef614b32feed8813b6eefe7bd09a98d7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetName</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>ae944174d27ebc2a0978b3bad9e97cfca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>a959f3b1cf9e6dfbc687c4ea63c441171</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>Priority</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>a42a5df950d1464de705cf1f8a98957a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>a258fbfb617f811155923b477066fed85</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetPriority</name>
      <anchorfile>classhops_1_1MHO__Operator.html</anchorfile>
      <anchor>ae336e78d21bfcdcb355bc9c057411859</anchor>
      <arglist>(const double &amp;priority)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OperatorBuilder</name>
    <filename>classhops_1_1MHO__OperatorBuilder.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_OperatorBuilder</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a7892c773fd245b2948f8c8673d5e4acd</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_OperatorBuilder</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a57f2ad9c7838dc8e730cdf97a059a16f</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OperatorBuilder</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a1337a10e489d53f77d77e95dac5a78f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a9ca5f236585f7523d7206188109591e1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetAttributes</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a21591a64fc853e3f2c54b3186b18a38c</anchor>
      <arglist>(const mho_json &amp;attr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetConditions</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a1f08918250a2d4b01b7aa0527cbae698</anchor>
      <arglist>(const mho_json &amp;cond)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetContainerStore</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a5bd82217af9600a31013b06e604483a9</anchor>
      <arglist>(MHO_ContainerStore *cstore)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFormat</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a2033969b55c8ba07c6470ac8864e6d7f</anchor>
      <arglist>(const mho_json &amp;format)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFringeData</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a33f14a9be573486bb9aeb00578106d54</anchor>
      <arglist>(MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetParameterStore</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a0b6feeb5da8afe7d1cc5eeb7317d76e8</anchor>
      <arglist>(MHO_ParameterStore *pstore)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetToolbox</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a61a2c3becb21cd1ee2bc59fc42458b86</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsConfigurationOk</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a69adf0a5a08b4ac142aa650c8ba032aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fAttributes</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>ae50472a8a3daeec0655cf85fdaaf35cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fConditions</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a076a0ebceaa46443a8fe9e6feab5598c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ContainerStore *</type>
      <name>fContainerStore</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a446f8996af6c790981fb52b79e17e61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fFormat</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a710c592e8aa8d33264aa78f5910efd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_FringeData *</type>
      <name>fFringeData</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a96641993c4ee83b5dcf7bebb8eab7fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_OperatorToolbox *</type>
      <name>fOperatorToolbox</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a43237b05f41b152f504c987df53bd72b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ParameterStore *</type>
      <name>fParameterStore</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilder.html</anchorfile>
      <anchor>a2d103267ff6a55e48c73368f88a62af8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OperatorBuilderManager</name>
    <filename>classhops_1_1MHO__OperatorBuilderManager.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_OperatorBuilderManager</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilderManager.html</anchorfile>
      <anchor>ab282bcbc77f783bbbcd0e2797e6ed127</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata, mho_json control_format)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OperatorBuilderManager</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilderManager.html</anchorfile>
      <anchor>a984fa0e1627f764a95bdd2847d939e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBuilderType</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilderManager.html</anchorfile>
      <anchor>a7e75bbbeacbfadf088cd6729858fc363</anchor>
      <arglist>(const std::string &amp;builder_name, const std::string &amp;format_key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildOperatorCategory</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilderManager.html</anchorfile>
      <anchor>a21f4516d641876a9ce3892f0b997bd70</anchor>
      <arglist>(const char *cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildOperatorCategory</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilderManager.html</anchorfile>
      <anchor>acb2a099082519fa8b158548edeac0727</anchor>
      <arglist>(const std::string &amp;cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateDefaultBuilders</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilderManager.html</anchorfile>
      <anchor>a717fee40b605e74f944ff3014dc1adf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlStatements</name>
      <anchorfile>classhops_1_1MHO__OperatorBuilderManager.html</anchorfile>
      <anchor>ae5fe234a1b7e5b146976a88c848f1756</anchor>
      <arglist>(mho_json *statements)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_OperatorToolbox</name>
    <filename>classhops_1_1MHO__OperatorToolbox.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_OperatorToolbox</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>a1d73fbc335c5896fc566dc15bd3104bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_OperatorToolbox</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>aa90f9bf2ecedf367ddbf15fb9dc43073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddOperator</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>a8e3e76f459d0a295d3ddae9d58cd3840</anchor>
      <arglist>(MHO_Operator *op, const std::string &amp;name, const std::string &amp;category, bool replace_duplicate=true)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MHO_Operator * &gt;</type>
      <name>GetAllOperators</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>a55079c6a855fc8543bbe54c0ff9c9193</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNOperators</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>a9516641a40b239ad5e0989c9bb749391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_Operator *</type>
      <name>GetOperator</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>a2c7705b35836af014e7de4c50d2bdfe8</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Operator *</type>
      <name>GetOperator</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>a794faa6ae429d6e114d87bfd0ea23c38</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>XOperatorType *</type>
      <name>GetOperatorAs</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>aa9fbc1345af67c37c2c32f91b704a3f4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MHO_Operator * &gt;</type>
      <name>GetOperatorsByCategory</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>a7f5dc11b8cef782119a055317e90d42a</anchor>
      <arglist>(const std::string &amp;category)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MHO_Operator * &gt;</type>
      <name>GetOperatorsByPriorityRange</name>
      <anchorfile>classhops_1_1MHO__OperatorToolbox.html</anchorfile>
      <anchor>aa5060ff11564fcbb644ce756eecf7389</anchor>
      <arglist>(double lower_limit, double upper_limit)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ParameterConfigurator</name>
    <filename>classhops_1_1MHO__ParameterConfigurator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ParameterConfigurator</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a25c542dd595919cc87b643a519f54cd7</anchor>
      <arglist>(MHO_ParameterStore *pstore, mho_json control_format)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ParameterConfigurator</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a8f6d17f1c68cff631b2a6b3b4e0f71e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Configure</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>ab96ac4f2557be306d5334ce7fd0a0a2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetAttributes</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>acc88337c615f7ee1c49b905c3ca57ba3</anchor>
      <arglist>(const mho_json &amp;attr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetConditions</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>aea77c88180f35c58833e1dcdd91c90af</anchor>
      <arglist>(const mho_json &amp;cond)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>ParamType</type>
      <name>param_t</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a2416cbe10a0fe279853338e2534f5646</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ParamType</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a86b7312953a9f3e360e762367a85d6b4</anchor>
      <arglist></arglist>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a86b7312953a9f3e360e762367a85d6b4a2245023265ae4cf87d02c8b6ba991139">config</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a86b7312953a9f3e360e762367a85d6b4a9c70933aff6b2a6d08c687a6cbb6b765">global</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a86b7312953a9f3e360e762367a85d6b4ae8ed3f2846110837f3adb8015ccad5ec">station</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a86b7312953a9f3e360e762367a85d6b4ae7e14cdcfbc59bba291688ae9cf039d6">baseline</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a86b7312953a9f3e360e762367a85d6b4a1977c9daa1d67de51a4651abdb160c09">fit</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a86b7312953a9f3e360e762367a85d6b4a32fa6e1b78a9d4028953e60564a2aa4c">plot</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a86b7312953a9f3e360e762367a85d6b4aad921d60486366258809553a3db49a4a">unknown</enumvalue>
    </member>
    <member kind="typedef" protection="protected">
      <type>ParamValueType</type>
      <name>paramv_t</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>ad1c343681643e992e86026e9e830571b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ParamValueType</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a4472b82359291b0648890e5df5ebf624</anchor>
      <arglist></arglist>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a06d324fffd90570dc177e7d1aabcb4dd">int_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a43ccba4dc7f24ce42ac3003b02ca5485">real_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a5c3e61d27b2bdaf4ddb98aadc356e863">bool_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a4771e2c3115bb1af6ce17d9d35a0eb48">string_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a4c1bc9677d08c74ff6427dfea5d87ce8">list_int_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a9bdb1fb1cc5307867534190841467ac7">list_real_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a74ebbf8cc9ef988596a14ab1866a897b">list_string_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a4631ddd508cacf3abbfe3b0ede391d9a">compound_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624a60e028751e7b68456e1173f872816932">logical_intersection_list_string_type</enumvalue>
      <enumvalue file="classhops_1_1MHO__ParameterConfigurator.html" anchor="a4472b82359291b0648890e5df5ebf624aad921d60486366258809553a3db49a4a">unknown</enumvalue>
    </member>
    <member kind="function" protection="protected">
      <type>ParamType</type>
      <name>DetermineParamType</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>aeafd399aa5f9a1132706bb60302fc2c1</anchor>
      <arglist>(const std::string &amp;par_type) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParamValueType</type>
      <name>DetermineParamValueType</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>aa6e02cbb4ce959bce969f9fa75cb0094</anchor>
      <arglist>(const std::string &amp;par_value_type) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetScalarParameter</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a7edcb4b2b1ed9d2251b8a7fa4ac0d962</anchor>
      <arglist>(std::string path, XValueType &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetVectorParameter</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a590f30765daa485f05a1fa001a5756af</anchor>
      <arglist>(std::string path, std::vector&lt; XValueType &gt; &amp;values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>LogicalIntersection</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a9b8eab0ed7b440a1de335114d822fbbb</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;values1, std::vector&lt; std::string &gt; &amp;values2) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetCompoundParameter</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>abcb6f8478c8afe7906aa7b3d9557a971</anchor>
      <arglist>(std::string path, const mho_json &amp;values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetScalarParameter</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a2b207d4dc48575d877e03b716deb23dc</anchor>
      <arglist>(std::string path, const XValueType &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetVectorParameter</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a1658589ade1ebc7feb80f4dccdf1cbf8</anchor>
      <arglist>(std::string path, const std::vector&lt; XValueType &gt; &amp;values)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fAttributes</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>ac3eae6989555a612ee0e8b4d3275a3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fConditions</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a9549b242b9337b44e3d68232e194aae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mho_json</type>
      <name>fFormat</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>a3757edd28fb8f878fb0e0ab90d422eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MHO_ParameterStore *</type>
      <name>fParameterStore</name>
      <anchorfile>classhops_1_1MHO__ParameterConfigurator.html</anchorfile>
      <anchor>af0a63f92e5a0835157daa04fd8c56510</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ParameterManager</name>
    <filename>classhops_1_1MHO__ParameterManager.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ParameterManager</name>
      <anchorfile>classhops_1_1MHO__ParameterManager.html</anchorfile>
      <anchor>a14bd7a2b336893d1a7aa809c5aec2334</anchor>
      <arglist>(MHO_ParameterStore *pstore, const mho_json &amp;control_format)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ParameterManager</name>
      <anchorfile>classhops_1_1MHO__ParameterManager.html</anchorfile>
      <anchor>a2dd98a9d4292b56c24b9195eca2a6944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConfigureAll</name>
      <anchorfile>classhops_1_1MHO__ParameterManager.html</anchorfile>
      <anchor>a1fd5c530378486f7c171504063dfb8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlStatements</name>
      <anchorfile>classhops_1_1MHO__ParameterManager.html</anchorfile>
      <anchor>a5006110c0bc8561a0c92b01e49ac264f</anchor>
      <arglist>(mho_json *statements)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ParameterStore</name>
    <filename>classhops_1_1MHO__ParameterStore.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ParameterStore</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a780820b38ddf59d44f48fcccdbacc1b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MHO_ParameterStore</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a26085ffeb9a7bbc2ec5aff48092217eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearData</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a6b39759af2d406de1d73a5d2902dfd7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFrom</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>ad1b0769877903755e494c75eac4fd08e</anchor>
      <arglist>(const MHO_ParameterStore &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Dump</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a26523e4e1396a590b775a21875d9eefa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpData</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a9aa6140c8656a557b70d75b4532ffb04</anchor>
      <arglist>(mho_json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillData</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a6b92ec49eaaa003809ef4355cf77d3e3</anchor>
      <arglist>(const mho_json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Get</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a9ffebac9548aa8a8a8ee500d32bb7041</anchor>
      <arglist>(const std::string &amp;value_path, XValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>XValueType</type>
      <name>GetAs</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a9b2fcb5606801e9a3580417245e8ec82</anchor>
      <arglist>(const std::string &amp;value_path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPresent</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>aad7e1625ba8f112d175e47fd950ccb79</anchor>
      <arglist>(const std::string &amp;value_path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Set</name>
      <anchorfile>classhops_1_1MHO__ParameterStore.html</anchorfile>
      <anchor>a262ea17291fe890c7c593f188dc13c1f</anchor>
      <arglist>(const std::string &amp;value_path, const XValueType &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Passband</name>
    <filename>classhops_1_1MHO__Passband.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_Passband</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>ab575980f1c27697e1e1f4095edd8a517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Passband</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>acc6e7ab1ca6efc266d677af9d15060f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPassband</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>a1c610729a08431aa33915bdfa1a82e14</anchor>
      <arglist>(const double &amp;first, const double &amp;second)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>a10a55d284d3be2b8396c5b82db9d92e4</anchor>
      <arglist>(weight_type *weights)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>ac8f28244f84d58f8ac7be66257a301c3</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>a5fbeede62e248b954daa49b033fc1bb4</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>a666875c833da9ea33ece1b85965fb8c5</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Passband.html</anchorfile>
      <anchor>a7b4754b5342b189eb28af5bde66b6046</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PassbandBuilder</name>
    <filename>classhops_1_1MHO__PassbandBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_PassbandBuilder</name>
      <anchorfile>classhops_1_1MHO__PassbandBuilder.html</anchorfile>
      <anchor>a98966f6933fc1353ffe8682f81c12969</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_PassbandBuilder</name>
      <anchorfile>classhops_1_1MHO__PassbandBuilder.html</anchorfile>
      <anchor>ad7c47317edb46bd53f6591c5e9ba5819</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PassbandBuilder</name>
      <anchorfile>classhops_1_1MHO__PassbandBuilder.html</anchorfile>
      <anchor>ae5acf94f5b2c9b7a7a81df2eecc6cdbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__PassbandBuilder.html</anchorfile>
      <anchor>ac976047c715b996e279da7fdb66fc32f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PhaseCalibrationTrim</name>
    <filename>classhops_1_1MHO__PhaseCalibrationTrim.html</filename>
    <base>MHO_UnaryOperator&lt; multitone_pcal_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_PhaseCalibrationTrim</name>
      <anchorfile>classhops_1_1MHO__PhaseCalibrationTrim.html</anchorfile>
      <anchor>ab71807f2d04da5d4048b98b82322d7b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PhaseCalibrationTrim</name>
      <anchorfile>classhops_1_1MHO__PhaseCalibrationTrim.html</anchorfile>
      <anchor>a243339414ea9b01c2e33a57dfd458937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisibilities</name>
      <anchorfile>classhops_1_1MHO__PhaseCalibrationTrim.html</anchorfile>
      <anchor>adcc8cb1295191d7718429dbb462def4e</anchor>
      <arglist>(const visibility_type *vis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__PhaseCalibrationTrim.html</anchorfile>
      <anchor>ad77b4d0bf8b3a60668aa187dff162aa5</anchor>
      <arglist>(multitone_pcal_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__PhaseCalibrationTrim.html</anchorfile>
      <anchor>afa513c7b6b58038b3a3d5d9e76760895</anchor>
      <arglist>(const multitone_pcal_type *in, multitone_pcal_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__PhaseCalibrationTrim.html</anchorfile>
      <anchor>a3ee38433f97dc8755cdfea7642a6b464</anchor>
      <arglist>(multitone_pcal_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__PhaseCalibrationTrim.html</anchorfile>
      <anchor>ab5464a373036416c818fd4904cff7dce</anchor>
      <arglist>(const multitone_pcal_type *in, multitone_pcal_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PolProductSummation</name>
    <filename>classhops_1_1MHO__PolProductSummation.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_PolProductSummation</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>afb7a515d9907697c57e5a083657502e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PolProductSummation</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>a30e8afdfc5f9a996b2957199fd26f536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolProductSet</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>ae4826d31a4944669380a84ec6c25ead4</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;pp_vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPolProductSumLabel</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>ae29265e95c5fcf7d0be1944f534ec175</anchor>
      <arglist>(std::string ppl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceMountType</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>ae045c5dd117f926dd8a37fe4c07261d6</anchor>
      <arglist>(std::string mt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceParallacticAngle</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>ad0ffe3aa37744520168889d247b50b76</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceStationCoordinateData</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>a9bd87d45b3424c5d770ea22dcf27c0a2</anchor>
      <arglist>(station_coord_type *ref_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteMountType</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>a9dde82db70f5ceafb480fa25e4898620</anchor>
      <arglist>(std::string mt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteParallacticAngle</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>ac00e253d720855ae0e9c41e6409e52e6</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteStationCoordinateData</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>af776ff4b22cf3467c603ddcd8e21d7f5</anchor>
      <arglist>(station_coord_type *rem_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWeights</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>a0aca5706be91bb39bd848251c778db78</anchor>
      <arglist>(weight_type *w)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>ac25065e017b766df1fe878905e2389b5</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>a12f32c59993081089e5bf7bf5a770f70</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>ab95673da1ca4b5945f496ac167f0a997</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__PolProductSummation.html</anchorfile>
      <anchor>a736a52b5bb4776644fa0e1240fd15daa</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PolProductSummationBuilder</name>
    <filename>classhops_1_1MHO__PolProductSummationBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_PolProductSummationBuilder</name>
      <anchorfile>classhops_1_1MHO__PolProductSummationBuilder.html</anchorfile>
      <anchor>a45ed5f271d2288e7ef809e55ca4b7396</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_PolProductSummationBuilder</name>
      <anchorfile>classhops_1_1MHO__PolProductSummationBuilder.html</anchorfile>
      <anchor>addbad6e1df492957f299fc253761152b</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PolProductSummationBuilder</name>
      <anchorfile>classhops_1_1MHO__PolProductSummationBuilder.html</anchorfile>
      <anchor>a857648f66fd345ef3bc9a073034456a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__PolProductSummationBuilder.html</anchorfile>
      <anchor>a3c25a953754891d6dee16336f08ef700</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_ProfileEvent</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__ProfileEvent</anchor>
    <member kind="variable">
      <type>char</type>
      <name>fFilename</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa547c43498946ad0ab2511bc5c5fd63d</anchor>
      <arglist>[PROFILE_INFO_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fFlag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9ac9d15026d624bfe9b998433df8d23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fFuncname</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a45e68948baeb46f6423529b0820055fe</anchor>
      <arglist>[PROFILE_INFO_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fLineNumber</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0ba9a3f529d287d5ae924d1f8c33e088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>fThreadID</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab802c4c2267901624f55cf944d304118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fTime</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0da51f95f4fa2a4ec12a23ec5cfa5621</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Profiler</name>
    <filename>classhops_1_1MHO__Profiler.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Profiler</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a5e96a8a085edc622e6765e0f614306d7</anchor>
      <arglist>(MHO_Profiler &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Profiler</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a46d7bd856c6c59e2ae63dbfd2b7c4c35</anchor>
      <arglist>(MHO_Profiler const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEntry</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a5805d294f841c197fb0547ba5571098a</anchor>
      <arglist>(int flag, uint64_t thread_id, std::string filename, int line_num, std::string func_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Disable</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a7043e49288910f70298470ada7c2485e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpEvents</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a9956a1ac33698dc9085d4c4115147e39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enable</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a571a36dd764cf8ddf06acb6b053ebdd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetEvents</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a5a97f42ea00b2cf181d281d6a9a6b042</anchor>
      <arglist>(std::vector&lt; MHO_ProfileEvent &gt; &amp;events)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnabled</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a0eac8936545843d364043250e88b7c96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Lock</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>aaf1c696e0869570b577ff5833bde984b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_Profiler &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>ac0f11dcb740b3d93534ee0dbd021c5f7</anchor>
      <arglist>(MHO_Profiler &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MHO_Profiler &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a866d239d4000862b2d1b6814e9e3dbd6</anchor>
      <arglist>(MHO_Profiler const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Unlock</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a3324c4162b108d347f1942038c55f1a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_Profiler &amp;</type>
      <name>GetInstance</name>
      <anchorfile>classhops_1_1MHO__Profiler.html</anchorfile>
      <anchor>a3e11305304bb58f9932d80b035457459</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_PyConfigurePath</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__PyConfigurePath</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyContainerStoreInterface</name>
    <filename>classhops_1_1MHO__PyContainerStoreInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_PyContainerStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>aa3906eee0bc31e903bfc0abf53dc7f44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_PyContainerStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>aaaba01ca74a0fb9100cfa726edc75b09</anchor>
      <arglist>(MHO_ContainerStore *conStore)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyContainerStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>adc1e4e13b1791a2c553f031cbaf9079d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_ContainerStore *</type>
      <name>GetContainerStore</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>a0bd74a4ea9d546e7b72f62c98aa36f1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNObjects</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>a1ad727a7bef1041ce6956438baa01680</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_PyTableContainer&lt; XClassType &gt; *</type>
      <name>GetObject</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>af24e467e91eed992b3e0fc5b406480ee</anchor>
      <arglist>(const std::string &amp;uuid_string)</arglist>
    </member>
    <member kind="function">
      <type>py::list</type>
      <name>GetObjectList</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>a682853c9ed8cc8c185fc2685bc08a837</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetObjectTypeUUID</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>a375b3bcff19f6730cde0162efe2157dc</anchor>
      <arglist>(const std::string &amp;uuid_string) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsObjectPresent</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>a4940268be967c4f1d72d3995cf0a0cad</anchor>
      <arglist>(const std::string &amp;uuid_string) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__PyContainerStoreInterface.html</anchorfile>
      <anchor>a44236066e9aa45740d4f6fa774288c61</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyFringeDataInterface</name>
    <filename>classhops_1_1MHO__PyFringeDataInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_PyFringeDataInterface</name>
      <anchorfile>classhops_1_1MHO__PyFringeDataInterface.html</anchorfile>
      <anchor>a7ac9a40f2e3587d94a59adea1b77e478</anchor>
      <arglist>(MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyFringeDataInterface</name>
      <anchorfile>classhops_1_1MHO__PyFringeDataInterface.html</anchorfile>
      <anchor>afdc7ddef41085038abe711062155d826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_PyContainerStoreInterface &amp;</type>
      <name>GetContainerStore</name>
      <anchorfile>classhops_1_1MHO__PyFringeDataInterface.html</anchorfile>
      <anchor>a82cfada7fd56216e0ec3de4850950a14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_PyParameterStoreInterface &amp;</type>
      <name>GetParameterStore</name>
      <anchorfile>classhops_1_1MHO__PyFringeDataInterface.html</anchorfile>
      <anchor>a48b7121e11a8819eaeb2c5f04027ad0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>py::dict</type>
      <name>GetPlotData</name>
      <anchorfile>classhops_1_1MHO__PyFringeDataInterface.html</anchorfile>
      <anchor>ae08710b363ed7e9ee3c48bde7283f09c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MHO_PyScanStoreInterface &amp;</type>
      <name>GetScanStore</name>
      <anchorfile>classhops_1_1MHO__PyFringeDataInterface.html</anchorfile>
      <anchor>a1c274374b4007d70583dcf010ccf3095</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>py::dict</type>
      <name>GetVex</name>
      <anchorfile>classhops_1_1MHO__PyFringeDataInterface.html</anchorfile>
      <anchor>a6ed1cc31100b098d2a2b8138e8d69e81</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyFringeFitterInstance</name>
    <filename>classhops_1_1MHO__PyFringeFitterInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_PyFringeFitterInstance</name>
      <anchorfile>classhops_1_1MHO__PyFringeFitterInstance.html</anchorfile>
      <anchor>ad9f8b941331dcd9e0cb121d6a2dbcdd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyFringeFitterInstance</name>
      <anchorfile>classhops_1_1MHO__PyFringeFitterInstance.html</anchorfile>
      <anchor>a4ad9b1bdae61837190d3cf558424c0bd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyGenericOperator</name>
    <filename>classhops_1_1MHO__PyGenericOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_PyGenericOperator</name>
      <anchorfile>classhops_1_1MHO__PyGenericOperator.html</anchorfile>
      <anchor>ae2aea711e97fb2c89b7e287c23024550</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyGenericOperator</name>
      <anchorfile>classhops_1_1MHO__PyGenericOperator.html</anchorfile>
      <anchor>a83ed192fd90140d259309852dd7d9ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__PyGenericOperator.html</anchorfile>
      <anchor>ac4a3360ed0e072af509fcc8cdb8809bd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__PyGenericOperator.html</anchorfile>
      <anchor>a164305ef7617b4bcbcb70372ca6e7aeb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFringeData</name>
      <anchorfile>classhops_1_1MHO__PyGenericOperator.html</anchorfile>
      <anchor>ab25fce0911c02f35392527714bab8bba</anchor>
      <arglist>(MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFunctionName</name>
      <anchorfile>classhops_1_1MHO__PyGenericOperator.html</anchorfile>
      <anchor>a8a2eca9fed48579d5ca21890acf87b54</anchor>
      <arglist>(std::string function_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetModuleName</name>
      <anchorfile>classhops_1_1MHO__PyGenericOperator.html</anchorfile>
      <anchor>a954b8c8de11c685499b4cedd21775442</anchor>
      <arglist>(std::string module_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyOperator</name>
    <filename>classhops_1_1MHO__PyOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__PyOperator.html</anchorfile>
      <anchor>acb55fda894a6a40bf742c8d1dd1f2306</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__PyOperator.html</anchorfile>
      <anchor>ad7d3e4d39dc1174f615fe60f740d6fa2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__PyOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyParameterStoreInterface</name>
    <filename>classhops_1_1MHO__PyParameterStoreInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_PyParameterStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyParameterStoreInterface.html</anchorfile>
      <anchor>aef80f8fdc1b537587f0d34d8a49fbeec</anchor>
      <arglist>(MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyParameterStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyParameterStoreInterface.html</anchorfile>
      <anchor>abb04dbab71327499f07ce15b43ffd6ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>py::object</type>
      <name>Get</name>
      <anchorfile>classhops_1_1MHO__PyParameterStoreInterface.html</anchorfile>
      <anchor>a7c04fe35d59a1ec10db4f1d4c7463402</anchor>
      <arglist>(const std::string &amp;value_path) const</arglist>
    </member>
    <member kind="function">
      <type>py::dict</type>
      <name>GetContents</name>
      <anchorfile>classhops_1_1MHO__PyParameterStoreInterface.html</anchorfile>
      <anchor>af8959434856c597170473ede44a6be0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPresent</name>
      <anchorfile>classhops_1_1MHO__PyParameterStoreInterface.html</anchorfile>
      <anchor>ad823077ef717b35d49c01e7d455209c2</anchor>
      <arglist>(const std::string &amp;value_path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classhops_1_1MHO__PyParameterStoreInterface.html</anchorfile>
      <anchor>ab6a1a4d171fdbd2c64ec768801eaa0af</anchor>
      <arglist>(const std::string &amp;value_path, py::object value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyScanStoreInterface</name>
    <filename>classhops_1_1MHO__PyScanStoreInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_PyScanStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a573372c0fb15a4420c55ab3349bb89d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_PyScanStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a642e2ce1edadcf8581a9a9a87ff2ed07</anchor>
      <arglist>(MHO_ScanDataStore *scan_store)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyScanStoreInterface</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a365e31c27d46e810f7f58720bf43b4ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a2d769829886176ea3f3089aeaa198457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_PyContainerStoreInterface &amp;</type>
      <name>GetBaselineData</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a6ba282a11d8ba797141c1c11fe7838b5</anchor>
      <arglist>(std::string baseline)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetBaselineFilename</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>ad909faed5b787979afb91c754833da8a</anchor>
      <arglist>(std::string baseline) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetBaselinesLoaded</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a4547fd763bc35b2629502b9c7684e8b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetBaselinesPresent</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a77cb2a204946ae4fee478026663dd09e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MHO_PyContainerStoreInterface &amp;</type>
      <name>GetFringeData</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a201768ae4efac54cc92fb991315c4ff7</anchor>
      <arglist>(std::string fringe)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFringeFilename</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>adc8e7cd2a7e08e4d46839b2336083986</anchor>
      <arglist>(std::string fringe) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetFringesLoaded</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a48b70845b778195eea9fa19e1f9ebd94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetFringesPresent</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a56fa21965934f8a3ade284f59b915360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNBaselines</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>abd265f1c7cdcd6a562508773be723b91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNFringes</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a7bb03cf418413688c4a0d8fff73f0e8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNStations</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a4a3af86c850289757e77add827f4f2c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetRootFileBasename</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a2130e28075e7beffbae835402548933b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>py::dict</type>
      <name>GetRootFileData</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a1336da2e84a839bc7a3ac2464a0fb09d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MHO_PyContainerStoreInterface &amp;</type>
      <name>GetStationData</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a07752baf8e0e0046906074c54928b026</anchor>
      <arglist>(std::string station)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetStationFilename</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a3e927d79b33f52e620cb08fc72c104c1</anchor>
      <arglist>(std::string station) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetStationsLoaded</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a062b56164b7069005fb3c98350d83e3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetStationsPresent</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>afe57008ac32ced2bb9cffb61207bb1d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a0338275ef843b1dcafd425f8966a053c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBaselineLoaded</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>af143cb3162973809abd21f3d03cae480</anchor>
      <arglist>(std::string baseline) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBaselinePresent</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a543bfe51e129c7d2c8d36794aeefbc8f</anchor>
      <arglist>(std::string bl) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFringeLoaded</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>aac0aafc257e95d048628ce60667faa95</anchor>
      <arglist>(std::string fringe) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFringePresent</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a580d7261153247d105e7dd2df56e0dea</anchor>
      <arglist>(std::string fr) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStationLoaded</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a9d481ac0d6461f31f6d68a1b006e939b</anchor>
      <arglist>(std::string station) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStationPresent</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a5e2bd2d5d59ad3cc1aefe494342e7d13</anchor>
      <arglist>(std::string st) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>adfb98f61f8a109967df132f9f6829f62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadBaseline</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a3c62b897c1ac495918d2323623570525</anchor>
      <arglist>(std::string baseline)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadFringe</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>aad255cc6a213021f9e3f0da4e5c739da</anchor>
      <arglist>(std::string fringe)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadStation</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>ad92a944906dd6278988a034959eb28da</anchor>
      <arglist>(std::string station)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDirectory</name>
      <anchorfile>classhops_1_1MHO__PyScanStoreInterface.html</anchorfile>
      <anchor>a9fa4e2f867739aa965d92131c03c3cbc</anchor>
      <arglist>(std::string dir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyTableContainer</name>
    <filename>classhops_1_1MHO__PyTableContainer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MHO_PyTableContainer</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>a02dd2b1500f1a17c6afb9dea4365b0a3</anchor>
      <arglist>(MHO_ExtensibleElement *element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyTableContainer</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>ad497d7d56eb0a8b55641dd9eb502ed8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetClassName</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>ae57a317ec28bfacde9b48dc11459327a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>py::list</type>
      <name>GetCoordinateAxis</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>a5ffd0def20ecbd99672a75556480d653</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>py::dict</type>
      <name>GetCoordinateAxisMetaData</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>abea9e44618ac2de92c288fdf4fc35413</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetDimension</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>a4002f9e56aba65123e46e5197ba5a7a0</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>py::dict</type>
      <name>GetMetaData</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>a9f9fc1dc380337992b4c8d3b6d609c1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>py::array_t&lt; typename XTableType::value_type &gt;</type>
      <name>GetNumpyArray</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>a861cbb7d6a9a171efa044d44274aa5ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetRank</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>ab91a2ecc86c940a1594e542c66e6c0bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCoordinateAxisMetaData</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>aa163a7ca338acb7fd03eeb1ae53520a2</anchor>
      <arglist>(std::size_t index, py::dict metadata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCoordinateLabel</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>a06c32726b73fb45511c5e8e3ef9befa1</anchor>
      <arglist>(std::size_t axis_index, std::size_t label_index, py::object label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMetaData</name>
      <anchorfile>classhops_1_1MHO__PyTableContainer.html</anchorfile>
      <anchor>a2a46764e28daae776324722b6839ff40</anchor>
      <arglist>(py::dict metadata)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PythonOperatorBuilder</name>
    <filename>classhops_1_1MHO__PythonOperatorBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_PythonOperatorBuilder</name>
      <anchorfile>classhops_1_1MHO__PythonOperatorBuilder.html</anchorfile>
      <anchor>af821bc162c8b724ee003159a255b9193</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_PythonOperatorBuilder</name>
      <anchorfile>classhops_1_1MHO__PythonOperatorBuilder.html</anchorfile>
      <anchor>ad1a652950a75e4afc2e5fe913050caa3</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PythonOperatorBuilder</name>
      <anchorfile>classhops_1_1MHO__PythonOperatorBuilder.html</anchorfile>
      <anchor>a4aee1c231061f2d2f062007269c41041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__PythonOperatorBuilder.html</anchorfile>
      <anchor>a59b11a205dd92df0474373844261cbd1</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyUnaryOperator</name>
    <filename>classhops_1_1MHO__PyUnaryOperator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__PyUnaryOperator.html</anchorfile>
      <anchor>afc5730648531fb6de028f5989c8f709e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__PyUnaryOperator.html</anchorfile>
      <anchor>a57a0dfbfdf02019928b8d3944238f263</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__PyUnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_PyUnaryTableOperator</name>
    <filename>classhops_1_1MHO__PyUnaryTableOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_PyUnaryTableOperator</name>
      <anchorfile>classhops_1_1MHO__PyUnaryTableOperator.html</anchorfile>
      <anchor>a14219b74b53951831a69b34c690c450b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_PyUnaryTableOperator</name>
      <anchorfile>classhops_1_1MHO__PyUnaryTableOperator.html</anchorfile>
      <anchor>aabf0881444a2a3d6f6757f17a87e92eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__PyUnaryTableOperator.html</anchorfile>
      <anchor>abae01a533ae61b6866fdbbb5314032d0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__PyUnaryTableOperator.html</anchorfile>
      <anchor>a28a46f535a1de1b5d02fdd8a8a63fd21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInput</name>
      <anchorfile>classhops_1_1MHO__PyUnaryTableOperator.html</anchorfile>
      <anchor>a4a05f51e05ad115393b03a270e2622b9</anchor>
      <arglist>(XTableType *in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetModuleFunctionName</name>
      <anchorfile>classhops_1_1MHO__PyUnaryTableOperator.html</anchorfile>
      <anchor>a2b9d1f94299a4d7fd090896ade319148</anchor>
      <arglist>(std::string module_name, std::string function_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Reducer</name>
    <filename>classhops_1_1MHO__Reducer.html</filename>
    <templarg></templarg>
    <templarg>XFunctorType</templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <member kind="typedef">
      <type>typename XArrayType::value_type</type>
      <name>XItemType</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a2044db744327a92d12da824160756f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Reducer</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a693768aca0eee16b2a548fbd3eca3b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Reducer</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>ab147df468d88484e539377c106f2bdec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAxisSelection</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a01567a93880a76bb2a085795d16da372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReduceAxis</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a7b38c2de240bbaaac1c242e3dd1fb074</anchor>
      <arglist>(std::size_t axis_index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>ab3310d77baf34375519ea7b21fe02ff4</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>ad40f481b9196f56e34d71754e3e4dd24</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>acf71932423cfa494bcf9436d53383b3b</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>abfd248e20eb5f9a2c0e616f5ec8af1eb</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_Reducer&lt; hops::MHO_TableContainer, hops::MHO_CompoundSum &gt;</name>
    <filename>classhops_1_1MHO__Reducer.html</filename>
    <base>MHO_UnaryOperator&lt; hops::MHO_TableContainer &gt;</base>
    <member kind="typedef">
      <type>typename XArrayType::value_type</type>
      <name>XItemType</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a2044db744327a92d12da824160756f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Reducer</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a693768aca0eee16b2a548fbd3eca3b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Reducer</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>ab147df468d88484e539377c106f2bdec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAxisSelection</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a01567a93880a76bb2a085795d16da372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReduceAxis</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>a7b38c2de240bbaaac1c242e3dd1fb074</anchor>
      <arglist>(std::size_t axis_index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>ab3310d77baf34375519ea7b21fe02ff4</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>ad40f481b9196f56e34d71754e3e4dd24</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>acf71932423cfa494bcf9436d53383b3b</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__Reducer.html</anchorfile>
      <anchor>abfd248e20eb5f9a2c0e616f5ec8af1eb</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SamplerLabeler</name>
    <filename>classhops_1_1MHO__SamplerLabeler.html</filename>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_SamplerLabeler</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>a84bffa68bffd9aedc39e3635203e7f6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SamplerLabeler</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>a48c51c50a3940b8860b4137d430ef2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceStationSamplerChannelSets</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>a36860e1e6476c684c02683920d32de5c</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;channel_sets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteStationSamplerChannelSets</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>ac2380afdf13577519ddcdda9d9da0313</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;channel_sets)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>a1047dfaf9275903a968897850362f018</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>a27d976c6a5f2bac6917f994f679a3826</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>a0837feeb0c3c1d3683fa069d699881dd</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SamplerLabeler.html</anchorfile>
      <anchor>a97acd9d00fa18e7e381adfbeca94eaa0</anchor>
      <arglist>(const XArrayType *, XArrayType *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SamplerLabelerBuilder</name>
    <filename>classhops_1_1MHO__SamplerLabelerBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_SamplerLabelerBuilder</name>
      <anchorfile>classhops_1_1MHO__SamplerLabelerBuilder.html</anchorfile>
      <anchor>a639f0caeb5c4ff95b2ba465591c9588b</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_SamplerLabelerBuilder</name>
      <anchorfile>classhops_1_1MHO__SamplerLabelerBuilder.html</anchorfile>
      <anchor>a0efe8aca18635db97031a434868d4262</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SamplerLabelerBuilder</name>
      <anchorfile>classhops_1_1MHO__SamplerLabelerBuilder.html</anchorfile>
      <anchor>a3c5d03979380ac06a4b4855266750178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__SamplerLabelerBuilder.html</anchorfile>
      <anchor>abe476df2ec121b6a2586c2e6780f5b99</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SBDTableGenerator</name>
    <filename>classhops_1_1MHO__SBDTableGenerator.html</filename>
    <base>MHO_TransformingOperator&lt; visibility_type, sbd_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_SBDTableGenerator</name>
      <anchorfile>classhops_1_1MHO__SBDTableGenerator.html</anchorfile>
      <anchor>a0870938f77b28e2b052fbf33c78b43b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SBDTableGenerator</name>
      <anchorfile>classhops_1_1MHO__SBDTableGenerator.html</anchorfile>
      <anchor>a2e9eb6de12c0c772b5ee7dca05f0efac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>visibility_type</type>
      <name>XArgType1</name>
      <anchorfile>classhops_1_1MHO__SBDTableGenerator.html</anchorfile>
      <anchor>a80d7ffe122452e15d309c4df43c8016b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>sbd_type</type>
      <name>XArgType2</name>
      <anchorfile>classhops_1_1MHO__SBDTableGenerator.html</anchorfile>
      <anchor>af6f5413d3358871c18b0498b950bef03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__SBDTableGenerator.html</anchorfile>
      <anchor>a048f02d8555b2178030c5b6e7962b816</anchor>
      <arglist>(const XArgType1 *in, XArgType2 *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__SBDTableGenerator.html</anchorfile>
      <anchor>a3036563ddbe32a0b121b9edb691a351c</anchor>
      <arglist>(const XArgType1 *in, XArgType2 *out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ScalarContainer</name>
    <filename>classhops_1_1MHO__ScalarContainer.html</filename>
    <templarg></templarg>
    <base>hops::MHO_ScalarContainerBase</base>
    <base>hops::MHO_NDArrayWrapper&lt; XValueType, 0 &gt;</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_ScalarContainer</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>ae84117aa229adda815500db3b08bcc8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_ScalarContainer</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>afa9dd8f697b27fe07965f95be37b8fe2</anchor>
      <arglist>(MHO_ScalarContainer &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ScalarContainer</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>adcf94d41ac4873c9ef89efb19a3c876d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ComputeSerializedSize</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a39cfa2666964132e05ed9e92f485319f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ComputeSerializedSize</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a04c40c2051b3a6b5f13dbcd68fa02e75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a6ebd899402b949b8cd5d9be3a6411227</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetSize</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a024fcf4bfc22a336dbee6cf889b03543</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XValueType</type>
      <name>GetValue</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a928c85351e0b06da1b81bbb09a35a607</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a0519f5b7f1c1339282acf21843299d53</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a4ca6a275e9cef2c7344c042d2e081a10</anchor>
      <arglist>(const XValueType &amp;value)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>a09e4adf6aa38c7481fa0b23118f6007d</anchor>
      <arglist>(XStream &amp;s, const MHO_ScalarContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__ScalarContainer.html</anchorfile>
      <anchor>afcadeef3d40605f7810b36d566ca3a9e</anchor>
      <arglist>(XStream &amp;s, MHO_ScalarContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ScalarContainerBase</name>
    <filename>classhops_1_1MHO__ScalarContainerBase.html</filename>
  </compound>
  <compound kind="class">
    <name>hops::MHO_ScanDataStore</name>
    <filename>classhops_1_1MHO__ScanDataStore.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_ScanDataStore</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>acaa34f7d1fc053b9c3a1c27a7f697c94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_ScanDataStore</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>acc9116cc23ee3e8329d43b093916a5c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a54e1a52b8de8ba09b5702a1d37d8197d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetBaselineFilename</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>ab8c41c3bffac657b36c7ea1b989b4456</anchor>
      <arglist>(std::string baseline) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetBaselinesPresent</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>af1304258fc944b994a2009fc19aceec7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFringeFilename</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a8117f0b0aa1475382c38c711a4279ce0</anchor>
      <arglist>(std::string fringe_basename) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetFringesPresent</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>af0c8ff19709ed26f469fe80de211c1e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNBaselines</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>ae43a58dabb27c7e0b32f88c3460e0ffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNFringes</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>abe13f94a7e3c14688793e1131df4bf48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNStations</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a56806bd9e511aa8a8ee02e88a00eb5b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetRootFileBasename</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>acd4504547babe6a5cb480517919e687b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetRootFileData</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a65876bfb0034d67722da73e6d4c0dea7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetStationFilename</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>ae7cacdb413b13825b186899420908558</anchor>
      <arglist>(std::string station) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetStationsPresent</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>aab7b0ce1c83fc3a2b1ad1c8036bcca75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>ac5f6781466a3f91e37bc396ee2af5486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBaselinePresent</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a8c115e33374862e1d7adf6f68737627e</anchor>
      <arglist>(std::string bl) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFringePresent</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>af718cb182eef1b66a0861c2eb239e00f</anchor>
      <arglist>(std::string basename) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStationPresent</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a9262a1e83f5a7343d3b4c6e42c611cc6</anchor>
      <arglist>(std::string st) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a48b1f769e1bb1923f223360401d0e16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadBaseline</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a75c61055e33f44cf225d3ce6709d92cb</anchor>
      <arglist>(std::string baseline, MHO_ContainerStore *store)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFringe</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a43a29b9fb063f1732965affc3875b7b7</anchor>
      <arglist>(std::string fringe_basename, MHO_ContainerStore *store)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadStation</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>a9e37329ff80cf0149403f94ba98fe048</anchor>
      <arglist>(std::string station, MHO_ContainerStore *store)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDirectory</name>
      <anchorfile>classhops_1_1MHO__ScanDataStore.html</anchorfile>
      <anchor>ac49d9ac431ca6ab8af1259fdf32a58a8</anchor>
      <arglist>(std::string dir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SelectRepack</name>
    <filename>classhops_1_1MHO__SelectRepack.html</filename>
    <templarg></templarg>
    <base>hops::MHO_UnaryOperator</base>
    <member kind="function">
      <type></type>
      <name>MHO_SelectRepack</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>aa503ae15550b7da9bf6fb594215b05cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SelectRepack</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>a2bcbfbd504c0a5679e926d90c4a9f6b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>aabc5aa1ac3cb1f23b27add7586ab99ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectAxisItems</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>a9f52a81732ec6c34860cb558888354fd</anchor>
      <arglist>(std::size_t axis_index, const std::vector&lt; std::size_t &gt; &amp;valid_indexes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>a61bd56798d3ed5f5e1a84fc75fc09d36</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>a25e595cccbdedffe21c4e4453ff7b0fd</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>a7d62bc6ecc91c129756107bc84b06518</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SelectRepack.html</anchorfile>
      <anchor>a9ad52ce5e111f3649a29fd529380ce7d</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Serializable</name>
    <filename>classhops_1_1MHO__Serializable.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Serializable</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>a071ba293eca6f0eb58a8b067ef1506d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Serializable</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>a29f651974e8b1cfaa7a12810a1644cbd</anchor>
      <arglist>(const MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Serializable</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>aadeecd650cb160acb8e83565ecfb8a0a</anchor>
      <arglist>(std::size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Serializable</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>a573b91158c3b24b67b594e6d4af0ccea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GetObjectUUID</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>aa6f524e78beb65d026c87fc6856ba059</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>afa23be74f2fa2f42b4ad04bda2b8729d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_UUID</type>
      <name>GetTypeUUID</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>aab01eda2ff2ad2338899119bcd509d31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>a71a1fcfba885db79a6bc9914fb73786d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetObjectUUID</name>
      <anchorfile>classhops_1_1MHO__Serializable.html</anchorfile>
      <anchor>af3fc6887489606836bf32705332972f7</anchor>
      <arglist>(const MHO_UUID &amp;uuid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SerializableObjectFactory</name>
    <filename>classhops_1_1MHO__SerializableObjectFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_SerializableObjectFactory</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactory.html</anchorfile>
      <anchor>a7c4ab5c51d9318e3abb7fbd781a0992f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SerializableObjectFactory</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactory.html</anchorfile>
      <anchor>ab9780bfffe2663015a4aae2984ce53d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_Serializable *</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactory.html</anchorfile>
      <anchor>a9b8c63425af1d7800de55222286716f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_Serializable *</type>
      <name>BuildFromFileInterface</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactory.html</anchorfile>
      <anchor>a552fc450a850b3959150d628d0c6f4c2</anchor>
      <arglist>(MHO_BinaryFileInterface &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>WriteToFileInterface</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactory.html</anchorfile>
      <anchor>ad2f8ebdd2930bff813a9b9bb8bdf0db6</anchor>
      <arglist>(MHO_BinaryFileInterface &amp;, const MHO_Serializable *, const std::string &amp;shortname=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SerializableObjectFactorySpecific</name>
    <filename>classhops_1_1MHO__SerializableObjectFactorySpecific.html</filename>
    <templarg></templarg>
    <base>hops::MHO_SerializableObjectFactory</base>
    <member kind="function">
      <type></type>
      <name>MHO_SerializableObjectFactorySpecific</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactorySpecific.html</anchorfile>
      <anchor>ae6fd9a6ba431f0433717eaff6eaf6329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SerializableObjectFactorySpecific</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactorySpecific.html</anchorfile>
      <anchor>a49e5a9b4dc4b53a72f1bc4c56e6dbb0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_Serializable *</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactorySpecific.html</anchorfile>
      <anchor>adb48ff3b6bdcd62934235069725a648c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_Serializable *</type>
      <name>BuildFromFileInterface</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactorySpecific.html</anchorfile>
      <anchor>a206ba0a7097cf18f5cbcde0f1bfcadda</anchor>
      <arglist>(MHO_BinaryFileInterface &amp;inter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>WriteToFileInterface</name>
      <anchorfile>classhops_1_1MHO__SerializableObjectFactorySpecific.html</anchorfile>
      <anchor>ac79f0401e0e8ef7bfcbfdb9090184059</anchor>
      <arglist>(MHO_BinaryFileInterface &amp;inter, const MHO_Serializable *object, const std::string &amp;shortname=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SimulatedSignalGenerator</name>
    <filename>classhops_1_1MHO__SimulatedSignalGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_SimulatedSignalGenerator</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>ac75073821d0b8a599a1b3e3e1011bb94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SimulatedSignalGenerator</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>a4b30b516c46885e75c938e36d6667cf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSample</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>a7b1760b72d76aa7ede8062e74daa8f33</anchor>
      <arglist>(const double &amp;sample_time, double &amp;sample) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>GetSamplingFrequency</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>a2b883bf6d6c376a72203972707d6bb57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>a16d5e44fc4c068568abebd337e7d7895</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetSamplingFrequency</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>a988154cd80a59a18e62a6d7cc0401109</anchor>
      <arglist>(double sample_freq)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>GenerateSample</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>aa8bd998b7c21562b8de01939bb894179</anchor>
      <arglist>(const double &amp;sample_time, double &amp;sample) const =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fSamplingFrequency</name>
      <anchorfile>classhops_1_1MHO__SimulatedSignalGenerator.html</anchorfile>
      <anchor>a27685344cfb77a26a98d3024edea1248</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SingleSidebandNormFX</name>
    <filename>classhops_1_1MHO__SingleSidebandNormFX.html</filename>
    <base>hops::MHO_NormFX</base>
    <member kind="function">
      <type></type>
      <name>MHO_SingleSidebandNormFX</name>
      <anchorfile>classhops_1_1MHO__SingleSidebandNormFX.html</anchorfile>
      <anchor>a205606498c698260015e31cd28d6e833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SingleSidebandNormFX</name>
      <anchorfile>classhops_1_1MHO__SingleSidebandNormFX.html</anchorfile>
      <anchor>aa2af82ec8cc1c1e1ad3e75ca2a94eab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>visibility_type</type>
      <name>XArgType</name>
      <anchorfile>classhops_1_1MHO__SingleSidebandNormFX.html</anchorfile>
      <anchor>a5590434bbd99f90c4d7ddef1d92dbb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__SingleSidebandNormFX.html</anchorfile>
      <anchor>ae8fa05cbb6dda9ee145832d37a0ff6d7</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SingleSidebandNormFX.html</anchorfile>
      <anchor>a5e3140bbf4a33bdde243c3f7d0a40bea</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__SingleSidebandNormFX.html</anchorfile>
      <anchor>a73b0da6bcb0cbdc5eb875becd5441a87</anchor>
      <arglist>(XArgType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SingleSidebandNormFX.html</anchorfile>
      <anchor>a6512d9772b9323b5611e10c3046fd0c0</anchor>
      <arglist>(const XArgType *in, XArgType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SingleToneSignal</name>
    <filename>classhops_1_1MHO__SingleToneSignal.html</filename>
    <base>hops::MHO_SimulatedSignalGenerator</base>
    <member kind="function">
      <type></type>
      <name>MHO_SingleToneSignal</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>a128eb8ab63d3c1323d3eebda7e50e430</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MHO_SingleToneSignal</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>a59593d143231c81c3d6a78fc20c91e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>a11ba1cd4149e2d3c9cf54263c461e5dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPhaseOffset</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>a00506c9c755bddbdc14108bd43100182</anchor>
      <arglist>(double phase_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetToneFrequency</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>a118a3a3734ebc4e3fe18c410958889f3</anchor>
      <arglist>(double tone_freq)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>GenerateSample</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>a4fca3c8f99e4b4f008a0553e931ab334</anchor>
      <arglist>(const double &amp;, double &amp;sample) const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fPhaseOffset</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>ac696bbca1aa2aeea927d35cd1a784862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fToneFrequency</name>
      <anchorfile>classhops_1_1MHO__SingleToneSignal.html</anchorfile>
      <anchor>a84b525edb2ca8a8365a2bfc887b7db49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Snapshot</name>
    <filename>classhops_1_1MHO__Snapshot.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Snapshot</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>ae510ab9de537a8e59db8a1c11b7b16bc</anchor>
      <arglist>(MHO_Snapshot &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Snapshot</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>a3d19ba946a93cf7a4ea53772ac496305</anchor>
      <arglist>(MHO_Snapshot const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AcceptAllKeys</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>aaf8d32e464a77b4c6e41921bbf2bdae5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKey</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>ac3994968f6467879575e1500ad2fcf2f</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKey</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>a6c6a9a3129f58fa0c1403f2105c7dcee</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpObject</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>a36a690ee60038b3871eb17fb72421fac</anchor>
      <arglist>(XObjType *obj, const char *key, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpObject</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>a097e513a8cda89c0d594895792283b0b</anchor>
      <arglist>(XObjType *obj, std::string key, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpObject</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>af6cad3d0f8ba605e964ebe5c424fb697</anchor>
      <arglist>(XObjType *obj, std::string key, std::string name, std::string file, int line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LimitToKeySet</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>ae19341250c67ac54f2931866ef920f3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_Snapshot &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>a7d740dd9363c42acd6a6974a1a1d9374</anchor>
      <arglist>(MHO_Snapshot &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MHO_Snapshot &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>abefc4f4c0dc55fb13438f60034de370d</anchor>
      <arglist>(MHO_Snapshot const &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllKeys</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>a38d77ac886594218ed3f70103ae911cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKey</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>ad17f7763c16b98a97e94821187c9c74f</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKey</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>afe2397b76667becfc4df9efcc840026d</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExecutableName</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>ab020db6b22ab051ce7d42e1c22540d2b</anchor>
      <arglist>(const char *exe_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExecutableName</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>ab339387d992499b0a6b08f2046c050f9</anchor>
      <arglist>(std::string exe_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MHO_Snapshot &amp;</type>
      <name>GetInstance</name>
      <anchorfile>classhops_1_1MHO__Snapshot.html</anchorfile>
      <anchor>a1fd8789006b1c470a2a40f5b3a27df2e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_StationCodeMap</name>
    <filename>classhops_1_1MHO__StationCodeMap.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_StationCodeMap</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>ab23fac23ae1c64cf1ee62fd25a5814a7</anchor>
      <arglist>(bool use_legacy_default_codes=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_StationCodeMap</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>aa2adff3004672122a47a314bacb942e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetAllMk4Ids</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>a5f2eaae0e03949d254a7594eaf5c6e35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetAllStationCodes</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>af7c9e1476b263eda31b47e897a591e3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetMk4IdFromStationCode</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>a45b5ac3145364e0ab6233e282a66e5f6</anchor>
      <arglist>(std::string station_code)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetStationCodeFromMk4Id</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>ac76e58b29acfb430dcca2f00cecc0909</anchor>
      <arglist>(std::string mk4id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitializeStationCodes</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>a050190c2f69bc71bd62b7a1cbae1e1a8</anchor>
      <arglist>(std::string station_codes_file=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UseLegacyCodes</name>
      <anchorfile>classhops_1_1MHO__StationCodeMap.html</anchorfile>
      <anchor>a341c1b5359d2c70bb66777b2a48a9053</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_StationDelayCorrection</name>
    <filename>classhops_1_1MHO__StationDelayCorrection.html</filename>
    <base>MHO_UnaryOperator&lt; visibility_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_StationDelayCorrection</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>a3b51bce4cc463679c1bade86c5519f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_StationDelayCorrection</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>ab6d28e5e52653ad87a3f873793768d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPCDelayOffset</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>a04ca6fc3e59a3a311acc313936ae5081</anchor>
      <arglist>(const double &amp;pc_delay_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceFrequency</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>a63a311ebe3ab8d8af34b6bc4e6d7f631</anchor>
      <arglist>(double ref_freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationIdentifier</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>a520c96816416938581f6c28a0ef7bca3</anchor>
      <arglist>(std::string station_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>aacbc1be11ad96e2446c78e02b9280882</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>a0c2fad3ea1f46a845a8132af10cca2ef</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>a00ed8b68afc8b977c09557b62857ff5f</anchor>
      <arglist>(visibility_type *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrection.html</anchorfile>
      <anchor>a0893ab54e0199a34e1472dbee85ff520</anchor>
      <arglist>(const visibility_type *in, visibility_type *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_StationDelayCorrectionBuilder</name>
    <filename>classhops_1_1MHO__StationDelayCorrectionBuilder.html</filename>
    <base>hops::MHO_OperatorBuilder</base>
    <member kind="function">
      <type></type>
      <name>MHO_StationDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrectionBuilder.html</anchorfile>
      <anchor>a10c10e154bc36ce0bbc516eeb646a8fe</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_ContainerStore *cstore=nullptr, MHO_ParameterStore *pstore=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_StationDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrectionBuilder.html</anchorfile>
      <anchor>aa825e89c15daf51c574a099fa18adc41</anchor>
      <arglist>(MHO_OperatorToolbox *toolbox, MHO_FringeData *fdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_StationDelayCorrectionBuilder</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrectionBuilder.html</anchorfile>
      <anchor>a9b30f27aa234b31d7ccd65d363376b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Build</name>
      <anchorfile>classhops_1_1MHO__StationDelayCorrectionBuilder.html</anchorfile>
      <anchor>a3dfde920d1d62f92ba99084029ed0dc7</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_StationModel</name>
    <filename>classhops_1_1MHO__StationModel.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_StationModel</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>aa298b49b6a94e7b4461b1ebf213e1356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_StationModel</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>aaf4a786626092154d81848d16e83252c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeModel</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>aa8aa830c3d9a6e49b6243d52a06a4c94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAzimuth</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>ab167f584b3871c3d01483683fb492ad5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDelay</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>a79d7f53a0029cad598e98d454a680d39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetElevation</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>ab6461b5df9e5bd772392d4cdcbc38eed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetParallacticAngle</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>a0c47c19c62bbffd04bc4a6fec0925516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetUCoordinate</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>a0aafce2713b098dbe3b51de948e5686e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetVCoordinate</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>a4dc97ca53efda3e7e343245eb2241986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetWCoordinate</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>a0ac317bf48582bd4ece6fdd54a6e2d85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEvaluationTimeVexString</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>aca6739bdb3ee280b7005904f4a6c7a33</anchor>
      <arglist>(std::string time_string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStationData</name>
      <anchorfile>classhops_1_1MHO__StationModel.html</anchorfile>
      <anchor>ac6d2c108fc21c73b87d2ebf6420bc2be</anchor>
      <arglist>(station_coord_type *ref_data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_SubSample</name>
    <filename>classhops_1_1MHO__SubSample.html</filename>
    <templarg></templarg>
    <base>MHO_UnaryOperator&lt; XArrayType &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_SubSample</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a5f417e5f9b0d6a951d52f6d23c5023fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SubSample</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>af219712267e0c2294cf6cfe9dec10c94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDimensionAndStride</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>aa966010d0abf41d0d62843873ec477d1</anchor>
      <arglist>(std::size_t dimension_index, std::size_t stride)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a56dbd48ab15b0b6e83c574385e95a4e5</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a9ad20e7b828c02d3380bb3555c58de3f</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a78678095cb7ba42ff8a39263a313aba4</anchor>
      <arglist>(XArrayType *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a2047908f076c8bcaf2c0b91a4c7d49bf</anchor>
      <arglist>(const XArrayType *in, XArrayType *out) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_SubSample&lt; hops::MHO_TableContainer &gt;</name>
    <filename>classhops_1_1MHO__SubSample.html</filename>
    <base>MHO_UnaryOperator&lt; hops::MHO_TableContainer &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_SubSample</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a5f417e5f9b0d6a951d52f6d23c5023fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_SubSample</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>af219712267e0c2294cf6cfe9dec10c94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDimensionAndStride</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>aa966010d0abf41d0d62843873ec477d1</anchor>
      <arglist>(std::size_t dimension_index, std::size_t stride)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a56dbd48ab15b0b6e83c574385e95a4e5</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a9ad20e7b828c02d3380bb3555c58de3f</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a78678095cb7ba42ff8a39263a313aba4</anchor>
      <arglist>(hops::MHO_TableContainer *in) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__SubSample.html</anchorfile>
      <anchor>a2047908f076c8bcaf2c0b91a4c7d49bf</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity</name>
    <filename>structhops_1_1MHO__SumIdentity.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static XValueType</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity.html</anchorfile>
      <anchor>a76d1a60131bc7f5211ec9fab7e62987d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; bool &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01bool_01_4.html</anchorfile>
      <anchor>a353f8e508072ad3936ed1fb0ebaf97d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; double &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01double_01_4.html</anchorfile>
      <anchor>a3d33f13e1870a40efb8afd57805268c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; float &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01float_01_4.html</anchorfile>
      <anchor>aa84a6256ed634846596725a4f7ea0126</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; int &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01int_01_4.html</anchorfile>
      <anchor>a7d57598419981a6684e7f46a8f2383e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; long double &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01long_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long double</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01long_01double_01_4.html</anchorfile>
      <anchor>ab853f9c5ebe0444d8b84fb2587b7a72b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; short &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01short_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01short_01_4.html</anchorfile>
      <anchor>a01706473aeb100764425663e17609b04</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; std::complex&lt; double &gt; &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01std_1_1complex_3_01double_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::complex&lt; double &gt;</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>acf365ffedba0cbdcf9d4b1109b309894</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; std::complex&lt; float &gt; &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01std_1_1complex_3_01float_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::complex&lt; float &gt;</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a7139722e574a15465ff161cb70df8cf3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; std::complex&lt; long double &gt; &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01std_1_1complex_3_01long_01double_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::complex&lt; long double &gt;</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01std_1_1complex_3_01long_01double_01_4_01_4.html</anchorfile>
      <anchor>a67a0bd53df71af257f1a6ab263340a48</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; std::size_t &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01std_1_1size__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01std_1_1size__t_01_4.html</anchorfile>
      <anchor>a683c688e62f6242e5c5c0084eb05be4b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_SumIdentity&lt; unsigned int &gt;</name>
    <filename>structhops_1_1MHO__SumIdentity_3_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>value</name>
      <anchorfile>structhops_1_1MHO__SumIdentity_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a360fc136481f29cfb8413d9679233443</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_TableContainer</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>hops::MHO_TableContainerBase</base>
    <base>MHO_NDArrayWrapper&lt; XValueType, XAxisPackType::NAXES::value &gt;</base>
    <base>XAxisPackType</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>XAxisPackType *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const XAxisPackType *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; double, mbd_axis_pack &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>mbd_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const mbd_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; double, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; pcal_phasor_type, multitone_pcal_axis_type &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>multitone_pcal_axis_type *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const multitone_pcal_axis_type *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; std::complex&lt; double &gt;, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; std::complex&lt; double &gt;, pcal_axis_pack &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>pcal_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const pcal_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; visibility_element_type, baseline_axis_pack &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>baseline_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const baseline_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>mbd_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const mbd_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; visibility_element_type, mbd_dr_axis_pack &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>mbd_dr_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const mbd_dr_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TableContainer&lt; weight_element_type, baseline_axis_pack &gt;</name>
    <filename>classhops_1_1MHO__TableContainer.html</filename>
    <base>hops::MHO_TableContainerBase</base>
    <base>hops::MHO_NDArrayWrapper</base>
    <base>hops::MHO_AxisPack</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a4be820531f7c287c2d08fa38f17e5cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a014d74eca63000429c09c7625425a3e4</anchor>
      <arglist>(const MHO_TableContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a253d0fc65bfd7a7643901d7c243ba4a8</anchor>
      <arglist>(const std::size_t *dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainer</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a451df54023a8ec5894aea9c41d8699b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a95d6d83bf99d5f5a1fc62f7359571f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_TableContainer *</type>
      <name>CloneEmpty</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9a2d028e41ca133fdbfdaa67b2215b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a9f2c2f7df98f9f9f0cf25dad213ebd5e</anchor>
      <arglist>(const MHO_TableContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>baseline_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a7b3751e8cc9742d08a789a60aac1e097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const baseline_axis_pack *</type>
      <name>GetAxisPack</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>af96b5518d98bf0b70e3be1802c359803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>ab1b4ff261355ea20d5197269fdc1485f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a58ca2b5a3d1acd06c07c07a2cc4f652b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a296d158a9afa689ada830cc24759e86f</anchor>
      <arglist>(const std::size_t *dim) override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>a8dcde4d708a3dc8f0281b5302e8ca5ca</anchor>
      <arglist>(XStream &amp;s, const MHO_TableContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__TableContainer.html</anchorfile>
      <anchor>aabb8d24a2ca2e6f1771d0ef7bc1596f4</anchor>
      <arglist>(XStream &amp;s, MHO_TableContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_TableContainerBase</name>
    <filename>classhops_1_1MHO__TableContainerBase.html</filename>
  </compound>
  <compound kind="class">
    <name>hops::MHO_TableContainerBufferBuilder</name>
    <filename>classhops_1_1MHO__TableContainerBufferBuilder.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>hops::MHO_ExtendedElement::ExtendedVisitor</base>
    <member kind="function">
      <type></type>
      <name>MHO_TableContainerBufferBuilder</name>
      <anchorfile>classhops_1_1MHO__TableContainerBufferBuilder.html</anchorfile>
      <anchor>a0a5531f20bb40f450d88b345fca6a438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TableContainerBufferBuilder</name>
      <anchorfile>classhops_1_1MHO__TableContainerBufferBuilder.html</anchorfile>
      <anchor>ae7d4757da9104c4f86a27bc788bc5b92</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Taggable</name>
    <filename>classhops_1_1MHO__Taggable.html</filename>
    <base>hops::MHO_JSONWrapper</base>
    <base virtualness="virtual">hops::MHO_Serializable</base>
    <member kind="function">
      <type></type>
      <name>MHO_Taggable</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a0b10cce72b8eb35c4cc42071faef7724</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Taggable</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a34a692357c9b64ff0c83bb947df46c24</anchor>
      <arglist>(const MHO_Taggable &amp;copy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Taggable</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>ae33d3be9c20ced6dce3db305e34d2551</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearTags</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>ad9ccfa6ce55bd4ea9e37f2bfbdf08684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFrom</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a74eedf9337ead51aa34a07b3703db8bf</anchor>
      <arglist>(const MHO_Taggable &amp;copy_from_obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CopyTags</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a9ff0c9e91598da64f382e40e790641e6</anchor>
      <arglist>(const MHO_Taggable &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyTo</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>aba9ec7771e32aca2115875eed2867c01</anchor>
      <arglist>(MHO_Taggable &amp;copy_to_obj) const</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>GetMetaDataAsJSON</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a29cc193d05cc849ef5556765a46a30af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>aec049bfd4587cb63d887bab57bf08991</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a7b9b9b27f97f67f6aced62b1eae719e8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>MHO_Taggable &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a37bbc5f6aa854321af3faeeb653e113e</anchor>
      <arglist>(const MHO_Taggable &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMetaDataAsJSON</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a701d23cd53b153b2e2038e262b1a4299</anchor>
      <arglist>(mho_json obj)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a37ab06fd872f0813f69fe227d97c4f8b</anchor>
      <arglist>(XStream &amp;s, const MHO_Taggable &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__Taggable.html</anchorfile>
      <anchor>a318a5b5bbae537f73e75aef241936f7b</anchor>
      <arglist>(XStream &amp;s, MHO_Taggable &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TestAssertions</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__TestAssertions</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Timer</name>
    <filename>classhops_1_1MHO__Timer.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Timer</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>af53e75d01f6755909e0eac97e81dfe5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Timer</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>abc61dbae83fce19fd24f8ad80b692d25</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Timer</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>aaff9443eefaaec0da32257942daf9330</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDurationAsDouble</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a7a8298539f762a615751d71c4317e311</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>timespec</type>
      <name>GetDurationAsTimeSpec</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a2257337c7a0b68edb3e790cbe084697b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetName</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a58130789432e1125f5ec764a713f92b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetTimeSinceStart</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a44691936bc71746e0179a173fc2e6f7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MeasureProcessTime</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a6a332821b2d9f062af2a39d3b371a1a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MeasureThreadTime</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a862dd4445d4a6a16358d93d284e7b714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MeasureWallclockTime</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a04bcb19a130a377e17acd3f0356e658a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a71c548d058d4e1dea00b138c312a592a</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>aa7cda4a9f18f2b4ae012140d1b3ef8d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>aa6d20c74208478693e7ea71d3b5fabcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>timespec</type>
      <name>GetTimeDifference</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a2a3736134d076e71f82e666dc2603373</anchor>
      <arglist>(const timespec &amp;start, const timespec &amp;stop) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>clockid_t</type>
      <name>fClockID</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a7801e2bef04b18f0b7438bb307e4790b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fName</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a22981964f1ddc4cffe8e8f4aedc9d14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>timespec</type>
      <name>fStart</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a4311cbae2757a76ef6566a18148a6ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>timespec</type>
      <name>fStop</name>
      <anchorfile>classhops_1_1MHO__Timer.html</anchorfile>
      <anchor>a4883947fddc4bb14b95871d671164c89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_TimeStampConverter</name>
    <filename>classhops_1_1MHO__TimeStampConverter.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_TimeStampConverter</name>
      <anchorfile>classhops_1_1MHO__TimeStampConverter.html</anchorfile>
      <anchor>abb16e75e63fb1d744043d7e68e44d2fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MHO_TimeStampConverter</name>
      <anchorfile>classhops_1_1MHO__TimeStampConverter.html</anchorfile>
      <anchor>a8b8a297a354ee50f5a78b504a6cf7043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ConvertEpochSecondToTimeStamp</name>
      <anchorfile>classhops_1_1MHO__TimeStampConverter.html</anchorfile>
      <anchor>aa0e29137bd0dc6a579151fd2145454e4</anchor>
      <arglist>(const uint64_t &amp;epoch_sec, const double &amp;fractional_part, std::string &amp;date_string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ConvertTimeStampToEpochSecond</name>
      <anchorfile>classhops_1_1MHO__TimeStampConverter.html</anchorfile>
      <anchor>a3f361912cf70676cdf8a6111c744f988</anchor>
      <arglist>(const std::string &amp;date_string, uint64_t &amp;epoch_sec, double &amp;fractional_part)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_Token</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__Token</anchor>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fLineNumber</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acf8776b19e6fdb899fe91fc0ea55bd71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fValue</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a49c95f08b580498f59f27f8836231ae6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Tokenizer</name>
    <filename>classhops_1_1MHO__Tokenizer.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Tokenizer</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a2db8c11f9a7fcbd6d678d989bed05f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MHO_Tokenizer</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>ab355fd7d53602f59f78563fe91fde55a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTokens</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a46de3362dee2b53c0451e6fe24640730</anchor>
      <arglist>(std::vector&lt; std::string &gt; *tokens)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDelimiter</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>acaa09bc7d82e81eaa5a87933c3c5a8b9</anchor>
      <arglist>(const std::string &amp;aDelim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIncludeEmptyTokensFalse</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a31385f3b994b43f013abc0313f0ccd8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIncludeEmptyTokensTrue</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a37a5fbb4532687b170c75b978228366c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreserveQuotesFalse</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a3b3805c8f0c11da6f763b356f7bdf10c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreserveQuotesTrue</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>ae4bceeaac368fbf809537c80471f9e09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoveLeadingTrailingWhitespaceFalse</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a857a32c612ac96b19d299577d3d40afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoveLeadingTrailingWhitespaceTrue</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a793ef73727f0b0b56b40b1a0979e3f04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetString</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a4138c473b9f7b0e7069adafa6f1be422</anchor>
      <arglist>(const std::string *aString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseMulticharacterDelimiterFalse</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a0ef56a9a7daa31e1f8aebe1995c7d157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseMulticharacterDelimiterTrue</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a9768b76414c91fbaf1b671af26a516ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>TrimLeadingAndTrailingWhitespace</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a6a7eef20f93b60ea8b57cad0121c77c7</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>IndexQuoteInstances</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a4eff2baefc3c811343ee7d1479ca31a1</anchor>
      <arglist>(const std::string *aString, std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; *quotes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MultiCharTokenize</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a0ebda244cc22e34b6a9b4d21e2735a95</anchor>
      <arglist>(std::vector&lt; std::string &gt; *tokens)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SingleCharTokenize</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>ace36cc0fb4c61dd008cc99351b16261e</anchor>
      <arglist>(std::vector&lt; std::string &gt; *tokens)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string *</type>
      <name>fCurrentString</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a6bc62ed2cdaffa4048839257cefbc19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fDelim</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>af7cbf73ef2338c48fa4586c212bfa936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fIncludeEmptyTokens</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a58b608601dfe9b9cdcbb4c82cd163835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fMultiCharDelimiter</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a9e4c1307c8eef94c247750384ce8b938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fPreserveQuotes</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a27cb0ab817cec37e80295e508370331d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt;</type>
      <name>fQuotePairIndexes</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>aec5bad907b12f7ca4342c31a77127234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fRemoveLeadingTrailingWhitespace</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a6e049a2ec1436d7bde73ddd50c8958ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string *</type>
      <name>fString</name>
      <anchorfile>classhops_1_1MHO__Tokenizer.html</anchorfile>
      <anchor>a100d60d452e7014021a12314e36e85e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_TransformingOperator</name>
    <filename>classhops_1_1MHO__TransformingOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a59412bbdfd7eae1cab76bb040404f92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>ad10b0deb1d8c99518443e8714305a91f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a062e29f5b17d9614fe409a9324f70b32</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a58d4892b457d33038976d1bb11a81528</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a6764f94688d04b3a52f83e13d4b301f6</anchor>
      <arglist>(const XArgType1 *in, XArgType2 *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a06bb86fafc9bae8e037a5717b989dcf5</anchor>
      <arglist>(const XArgType1 *in, XArgType2 *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a759d200b0d1284cdac19787900fb3bbf</anchor>
      <arglist>(const XArgType1 *in, XArgType2 *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const XArgType1 *, XArgType2 * &gt;</type>
      <name>fArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a0c2b19fa9a44df7f78aca771e47d08a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TransformingOperator&lt; uch_visibility_store_type, visibility_store_type &gt;</name>
    <filename>classhops_1_1MHO__TransformingOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a59412bbdfd7eae1cab76bb040404f92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>ad10b0deb1d8c99518443e8714305a91f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a062e29f5b17d9614fe409a9324f70b32</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a58d4892b457d33038976d1bb11a81528</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a6764f94688d04b3a52f83e13d4b301f6</anchor>
      <arglist>(const uch_visibility_store_type *in, visibility_store_type *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a06bb86fafc9bae8e037a5717b989dcf5</anchor>
      <arglist>(const uch_visibility_store_type *in, visibility_store_type *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a759d200b0d1284cdac19787900fb3bbf</anchor>
      <arglist>(const uch_visibility_store_type *in, visibility_store_type *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const uch_visibility_store_type *, visibility_store_type * &gt;</type>
      <name>fArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a0c2b19fa9a44df7f78aca771e47d08a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TransformingOperator&lt; uch_weight_store_type, weight_store_type &gt;</name>
    <filename>classhops_1_1MHO__TransformingOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a59412bbdfd7eae1cab76bb040404f92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>ad10b0deb1d8c99518443e8714305a91f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a062e29f5b17d9614fe409a9324f70b32</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a58d4892b457d33038976d1bb11a81528</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a6764f94688d04b3a52f83e13d4b301f6</anchor>
      <arglist>(const uch_weight_store_type *in, weight_store_type *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a06bb86fafc9bae8e037a5717b989dcf5</anchor>
      <arglist>(const uch_weight_store_type *in, weight_store_type *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a759d200b0d1284cdac19787900fb3bbf</anchor>
      <arglist>(const uch_weight_store_type *in, weight_store_type *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const uch_weight_store_type *, weight_store_type * &gt;</type>
      <name>fArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a0c2b19fa9a44df7f78aca771e47d08a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_TransformingOperator&lt; visibility_type, sbd_type &gt;</name>
    <filename>classhops_1_1MHO__TransformingOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a59412bbdfd7eae1cab76bb040404f92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_TransformingOperator</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>ad10b0deb1d8c99518443e8714305a91f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a062e29f5b17d9614fe409a9324f70b32</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a58d4892b457d33038976d1bb11a81528</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a6764f94688d04b3a52f83e13d4b301f6</anchor>
      <arglist>(const visibility_type *in, sbd_type *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a06bb86fafc9bae8e037a5717b989dcf5</anchor>
      <arglist>(const visibility_type *in, sbd_type *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a759d200b0d1284cdac19787900fb3bbf</anchor>
      <arglist>(const visibility_type *in, sbd_type *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const visibility_type *, sbd_type * &gt;</type>
      <name>fArgs</name>
      <anchorfile>classhops_1_1MHO__TransformingOperator.html</anchorfile>
      <anchor>a0c2b19fa9a44df7f78aca771e47d08a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_Typelist</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__Typelist</anchor>
    <templarg>T</templarg>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_TypelistSizeImpl</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__TypelistSizeImpl</anchor>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_TypelistSizeImpl&lt; MHO_Typelist&lt; T... &gt; &gt;</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__TypelistSizeImpl_3_01MHO__Typelist_3_01T_8_8_8_01_4_01_4</anchor>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>std::integral_constant&lt; size_t, sizeof...(T) &gt;</type>
      <name>type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae3a2931fba0f0ac6922285c2d53ffb2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_UnaryFunctor</name>
    <filename>classhops_1_1MHO__UnaryFunctor.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename XArrayType::const_iterator</type>
      <name>citerator_type</name>
      <anchorfile>classhops_1_1MHO__UnaryFunctor.html</anchorfile>
      <anchor>a29dc3a39b7837359169f9fd0fb3cf0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename XArrayType::iterator</type>
      <name>iterator_type</name>
      <anchorfile>classhops_1_1MHO__UnaryFunctor.html</anchorfile>
      <anchor>ad8167d017ed66dbc3c5f23b027206481</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryFunctor</name>
      <anchorfile>classhops_1_1MHO__UnaryFunctor.html</anchorfile>
      <anchor>ab7facae9ea2d853e26756a76ccb94566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryFunctor</name>
      <anchorfile>classhops_1_1MHO__UnaryFunctor.html</anchorfile>
      <anchor>a912ba03c7456167f408ba0a4251af7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__UnaryFunctor.html</anchorfile>
      <anchor>a5a63c563290d9d535376d7d6b4e39623</anchor>
      <arglist>(citerator_type &amp;input, iterator_type &amp;output)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__UnaryFunctor.html</anchorfile>
      <anchor>a43105e4aa99637a87046cfc93a3cdbf2</anchor>
      <arglist>(iterator_type &amp;input)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_UnaryInPlaceOperator</name>
    <filename>classhops_1_1MHO__UnaryInPlaceOperator.html</filename>
    <templarg></templarg>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryInPlaceOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>acd62d257021fccc3374ed5f62fa38cbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryInPlaceOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>a7d44fd3c2647615b73430ebc4087b49c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>a13ad4a154060c17a2c459d0dc602043c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>ad38a46404c4bad8434c8760e14dc5622</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>a04638776cbca0a29b92c6f11aa7e88dd</anchor>
      <arglist>(XArgType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>ad2f1d02ed5fba765073e7cdb51691ac6</anchor>
      <arglist>(XArgType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>ab9ec1228066acdee04394ed42b8abead</anchor>
      <arglist>(XArgType *in)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; XArgType * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryInPlaceOperator.html</anchorfile>
      <anchor>aa584291176a0540fe26c4bfb66e297d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_UnaryOperator</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <templarg></templarg>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const XArgType *in, XArgType *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(XArgType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(XArgType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const XArgType *in, XArgType *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(XArgType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const XArgType *in, XArgType *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; XArgType * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const XArgType *, XArgType * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_UnaryOperator&lt; hops::MHO_TableContainer &gt;</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(hops::MHO_TableContainer *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(hops::MHO_TableContainer *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(hops::MHO_TableContainer *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const hops::MHO_TableContainer *in, hops::MHO_TableContainer *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; hops::MHO_TableContainer * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const hops::MHO_TableContainer *, hops::MHO_TableContainer * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_UnaryOperator&lt; MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; &gt;</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *in, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *in, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *in, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; *, MHO_NDArrayWrapper&lt; std::complex&lt; XFloatType &gt;, 1 &gt; * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_UnaryOperator&lt; MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; &gt;</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in, MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in, MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *in, MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; *, MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_UnaryOperator&lt; multitone_pcal_type &gt;</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const multitone_pcal_type *in, multitone_pcal_type *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(multitone_pcal_type *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(multitone_pcal_type *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const multitone_pcal_type *in, multitone_pcal_type *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(multitone_pcal_type *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const multitone_pcal_type *in, multitone_pcal_type *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; multitone_pcal_type * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const multitone_pcal_type *, multitone_pcal_type * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_UnaryOperator&lt; visibility_type &gt;</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const visibility_type *in, visibility_type *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(visibility_type *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(visibility_type *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const visibility_type *in, visibility_type *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(visibility_type *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const visibility_type *in, visibility_type *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; visibility_type * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const visibility_type *, visibility_type * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_UnaryOperator&lt; weight_type &gt;</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const weight_type *in, weight_type *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(weight_type *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(weight_type *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const weight_type *in, weight_type *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(weight_type *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const weight_type *in, weight_type *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; weight_type * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const weight_type *, weight_type * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_UnaryOperator&lt; XArrayType &gt;</name>
    <filename>classhops_1_1MHO__UnaryOperator.html</filename>
    <base>hops::MHO_Operator</base>
    <member kind="function">
      <type></type>
      <name>MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a56a30a66a2fab5e8f005a3aa3f8ff796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UnaryOperator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6a16ae57bd76c4934860582d175f4e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a704c4cb4154241356da3eb744ebfea74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a7e4f90ac93ffc15a3a120e49d3d3a37b</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aa7dbd018a8e2ab56ee718f703cd8df0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>ac4e4bb8c8e69204cf7b9dd8989f4e17a</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_Operator</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>af6ccdf30e87b4a31347593d22dab2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a6acead8f2593c70c45f89201bc503d39</anchor>
      <arglist>(const XArrayType *in, XArrayType *out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a272c2bda0dfa7a7a8c4de4a063fa124b</anchor>
      <arglist>(XArrayType *in)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a198308dde4b15a2b103e615db44804f3</anchor>
      <arglist>(XArrayType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ExecuteOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a4c07658f7e43763056e4e116d845a6bf</anchor>
      <arglist>(const XArrayType *in, XArrayType *out)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a02cd45309143ea2ba35a1ce42b86ad20</anchor>
      <arglist>(XArrayType *in)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>InitializeOutOfPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a8ddd25cb2e815e6e3f5acbf5d0b61058</anchor>
      <arglist>(const XArrayType *in, XArrayType *out)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fInPlace</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aeebfd2ffd335365a3c03182cc7c9521c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; XArrayType * &gt;</type>
      <name>fInPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>aea3536242de828361a2f10b879c50388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::tuple&lt; const XArrayType *, XArrayType * &gt;</type>
      <name>fOutOfPlaceArgs</name>
      <anchorfile>classhops_1_1MHO__UnaryOperator.html</anchorfile>
      <anchor>a487fb22e2a815461fe05048439ec6c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_UniformGridPointsCalculator</name>
    <filename>classhops_1_1MHO__UniformGridPointsCalculator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_UniformGridPointsCalculator</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a39e36330525d194858468c06cf358db4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MHO_UniformGridPointsCalculator</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a5895e838e73727bd1cb94669de26a23a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Calculate</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a621d461d1f4449e3e981ff2764581613</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetGridAverage</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a28c57154ba3ce661e1b4f9f9f6c66c8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; std::size_t, std::size_t &gt;</type>
      <name>GetGridIndexMap</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a58a1275cd58fcd5f35d71b7e54a1ce1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetGridPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a14aeadd8fd6b793f2a719499d2aa5aca</anchor>
      <arglist>(std::vector&lt; double &gt; *grid_pts)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetGridSpacing</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>aee29df2ab7258e6b75229b792d9d5798</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetGridStart</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>ad373995fcae740ff6eb5744d8fdb35f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>GetNGridPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>ab1ca7b84725f7a77577b0fb614488126</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpacingErrorStatus</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>ac14ea74c6a6d9d9ca3e69206ad40e95f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSpread</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a49b23ffbd8d408830121c3b0c513e2b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetUniquePoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a24ae957141ae8a5b32213de4bff6e7c2</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;in_pts, double eps, std::vector&lt; double &gt; &amp;out_pts, std::map&lt; std::size_t, std::size_t &gt; &amp;index_map) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultGridPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a656f5de5436a91ec991a290b9e97ae5a</anchor>
      <arglist>(std::size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEpsilon</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a461e4b4bd933efe89c451b015c10edee</anchor>
      <arglist>(double eps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a1617a7161a7a873c5fdacdd2a676d66a</anchor>
      <arglist>(const double *pts, std::size_t npts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a151aed4607a4efbc020477927010cdd5</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;pts)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Calculate_v1</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>ab029e84869ba85de4017575cc4a747f1</anchor>
      <arglist>(int max_pts=8192)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Calculate_v2</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a55f2d7a3b21391e484448345bd84c1d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>FindStartAndMinMaxSpacing</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a39b486169c9a3eeec7064e98afa295e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fAbsEps</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a5b6eae191be538bdb29f0e7933aa5d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fAverageLocation</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>ae028e99447573a6da4cb96cb394e1986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fDefaultGridPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>adc91e2a128c6cf90a77db6612bf80ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fEpsilon</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a98930869e62814f24a84557608673910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::size_t, std::size_t &gt;</type>
      <name>fIndexMap</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a06a80e16b5a349b404e13296e64548b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fMaxSpacing</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>ab7cc11d611a2ae3e38e4acca04802efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fMinSpacing</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>afe5ed81bbc50388fc9bce1b0309ced5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fNGridPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a712bfdf89e3ad9963ddb4dbedb364765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>fPoints</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>aeb8e79d80148d273571e017a83767a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fSpacing</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>abca3b17d018e2ac0ed8c5d22ae06fd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fSpacingError</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a7bb4f04047e847ae4497c128d1d86bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fSpread</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>a7fffbb4133050a708bdccbff7e99e521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fStart</name>
      <anchorfile>classhops_1_1MHO__UniformGridPointsCalculator.html</anchorfile>
      <anchor>ae1f3638efce3c21390d6d170cdb79df4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Unit</name>
    <filename>classhops_1_1MHO__Unit.html</filename>
    <member kind="function">
      <type>MHO_Unit()</type>
      <name>MHO_Unit</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>ab12a00da456c4eb2deebd0ca9aa17f1e</anchor>
      <arglist>(const std::string &amp;unit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Unit</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>ada0f7b738aa104fcc48a531d53a9d575</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetUnitString</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>aef6f562167866be38bac0eabc82179ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Invert</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>aeba1949d73182e73062adf1daa25e5ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_Unit</type>
      <name>operator*</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>acc1dd4cdfc27b35eb76c5c3603b4a718</anchor>
      <arglist>(const MHO_Unit &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_Unit &amp;</type>
      <name>operator*=</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>aa9e6324dc57f705467bf99bb181598ce</anchor>
      <arglist>(const MHO_Unit &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Unit</type>
      <name>operator/</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>aece442c72221001a2c28ff726c861a40</anchor>
      <arglist>(const MHO_Unit &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_Unit &amp;</type>
      <name>operator/=</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>ac6eca8df2bdece05780614b809783d1b</anchor>
      <arglist>(const MHO_Unit &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>MHO_Unit &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>a7d0605f6e3096862f4b2c95e08fbb908</anchor>
      <arglist>(const MHO_Unit &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>a172f08e54b9160ba98d98a1c80e06466</anchor>
      <arglist>(const MHO_Unit &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RaiseToPower</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>a33faad42625b7fc57bb9edaceebd3463</anchor>
      <arglist>(int power)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnitString</name>
      <anchorfile>classhops_1_1MHO__Unit.html</anchorfile>
      <anchor>a855a156457c0bbfe77d6b75e83a2cd0f</anchor>
      <arglist>(const std::string unit)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_UUID</name>
    <filename>classhops_1_1MHO__UUID.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_UUID</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a91db6d546c5e4707c08eff7361f6710e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_UUID</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>af9fd87b6c492e1252db2a1f1d0f4c29d</anchor>
      <arglist>(const MHO_UUID &amp;copy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UUID</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a83df062dc25a29b445574b42ecbbac12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>as_long</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a0993c6e246e2aabb313e6336f627c650</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>as_string</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>ab0f1d5dbbf417b230cf1e741996221e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>as_truncated_long</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a34626316186146ebf0bd6e48a016b142</anchor>
      <arglist>(bool first_half=true) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>from_string</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>ae89a750c7587f308d0585b82c2b319b7</anchor>
      <arglist>(const std::string &amp;uuid_str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_empty</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>ac8ee26515febb33da49203778de7b612</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a74788767268f36d2a0c56ebc81b8b75f</anchor>
      <arglist>(const MHO_UUID &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a790e83987766e104bd281d35f8f6c23a</anchor>
      <arglist>(const MHO_UUID &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID &amp;</type>
      <name>operator=</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>accb68b31415a346fb17bcc99e4b5dda7</anchor>
      <arglist>(const MHO_UUID &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>ae8484c44102488a6149de3bb13b61a9f</anchor>
      <arglist>(const MHO_UUID &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>uint8_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a91d353237ae87a1e39a7b461284968b8</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const uint8_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a8a7816ae8593e636a8af1df705f0c1a7</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>size</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>af8c0e272c98b54a45708370273273b9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>ByteSize</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>ab9cd3ac9a54cdd51afb18f6a713ec5fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>fBytes</name>
      <anchorfile>classhops_1_1MHO__UUID.html</anchorfile>
      <anchor>a5319b9c7315163abfa02cd15a21dd273</anchor>
      <arglist>[MHO_UUID_LENGTH]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_UUIDGenerator</name>
    <filename>classhops_1_1MHO__UUIDGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_UUIDGenerator</name>
      <anchorfile>classhops_1_1MHO__UUIDGenerator.html</anchorfile>
      <anchor>a9b118d1542dc21ea2ee4978ceddefae9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_UUIDGenerator</name>
      <anchorfile>classhops_1_1MHO__UUIDGenerator.html</anchorfile>
      <anchor>a44f207c93ebba3aa67b3059ed11d3552</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ConvertUUIDToString</name>
      <anchorfile>classhops_1_1MHO__UUIDGenerator.html</anchorfile>
      <anchor>a35750a1d8771191ef5f8e190b022c7c1</anchor>
      <arglist>(MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>MHO_UUID</type>
      <name>GenerateUUID</name>
      <anchorfile>classhops_1_1MHO__UUIDGenerator.html</anchorfile>
      <anchor>a09af8ae263cb817be258ca7295362703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateUUIDAsString</name>
      <anchorfile>classhops_1_1MHO__UUIDGenerator.html</anchorfile>
      <anchor>afe963485d2c1bf2c4c84d592a417ff68</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VectorContainer</name>
    <filename>classhops_1_1MHO__VectorContainer.html</filename>
    <templarg></templarg>
    <base>hops::MHO_VectorContainerBase</base>
    <base>hops::MHO_NDArrayWrapper&lt; XValueType, 1 &gt;</base>
    <base>hops::MHO_Taggable</base>
    <member kind="function">
      <type></type>
      <name>MHO_VectorContainer</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a9594977ab28b609c26b6e10c7414bb8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_VectorContainer</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a5008ad9ed13867ca670908069043eb8f</anchor>
      <arglist>(const MHO_VectorContainer &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_VectorContainer</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a9bd973df4300e07bd0b0778d7ea47a87</anchor>
      <arglist>(std::size_t *dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_VectorContainer</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a84ecc2a350ef2705f117b86b308fb284</anchor>
      <arglist>(std::size_t dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VectorContainer</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a576937b189142868e4051e034c883763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MHO_VectorContainer *</type>
      <name>Clone</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>ad4681d2f047b0d212f19d889dc0442d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ComputeSerializedSize</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>adfc54f267304e6d9f3cfcd548f4ea1b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ComputeSerializedSize</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a2d13fdcc9b98961a7c1bc3142c699bbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Copy</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a1bc345cee744774033b66b42181f72f2</anchor>
      <arglist>(const MHO_VectorContainer &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>GetSerializedSize</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>aaea274dcf1b11ad5f61f9c9cd857c361</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MHO_ClassVersion</type>
      <name>GetVersion</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>a01d7dd830b5b6924ed586396e3ca2dff</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>adeaa1b6142d1d588d5b99f11b4e71be4</anchor>
      <arglist>(XStream &amp;s, const MHO_VectorContainer &amp;aData)</arglist>
    </member>
    <member kind="friend">
      <type>friend XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classhops_1_1MHO__VectorContainer.html</anchorfile>
      <anchor>ab4ad6436d02a42b6645f48e07b41c29e</anchor>
      <arglist>(XStream &amp;s, MHO_VectorContainer &amp;aData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VectorContainerBase</name>
    <filename>classhops_1_1MHO__VectorContainerBase.html</filename>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexBlockParser</name>
    <filename>classhops_1_1MHO__VexBlockParser.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexBlockParser</name>
      <anchorfile>classhops_1_1MHO__VexBlockParser.html</anchorfile>
      <anchor>aded35f8e4c64dc999b172fe525e357ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexBlockParser</name>
      <anchorfile>classhops_1_1MHO__VexBlockParser.html</anchorfile>
      <anchor>a520f4842aac38da54938b6039992dae8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ParseBlockLines</name>
      <anchorfile>classhops_1_1MHO__VexBlockParser.html</anchorfile>
      <anchor>a894edebbba4d578ca435460b2d322ac8</anchor>
      <arglist>(std::string block_name, const std::vector&lt; MHO_VexLine &gt; *block_lines)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFormatDirectory</name>
      <anchorfile>classhops_1_1MHO__VexBlockParser.html</anchorfile>
      <anchor>a610d2f450b2813ada6c88095b0110795</anchor>
      <arglist>(std::string fdir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexDefinitions</name>
    <filename>classhops_1_1MHO__VexDefinitions.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexDefinitions</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>ad8537aa67bfa9c6601e8158c45a7f9c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexDefinitions</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>ae7b3bf81fcf1a693cea89ce59c562b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetBlockNames</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>afcd180205743281ec338a6dac3fc2fe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFormatDirectory</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>ab7b350b40381f31e807bb2f6fd9492fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexVersion</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a937d9de734ef6165074aff4815a080fa</anchor>
      <arglist>(std::string version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>AssignmentDelim</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>ab65774e96f078bad7b886c3de03584b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>AssignmentOp</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>ad38c4e79c0e0c700df50be3e98d89451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>BlockStartFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a582c4de9ef37ed55edc65126e154b7f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>CommentFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>aeccf94959a9948e07a0206ca0342c28a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>DetermineFileVersion</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a84bff47f2c95552e4b5f18d0fe2148f2</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vex_element_type</type>
      <name>DetermineType</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a9d3b0c85701ad60ece979b8e324ddef0</anchor>
      <arglist>(std::string etype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ElementDelim</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>abda8d27db8e618b113219776c14d18e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>EndLiteralFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>acff5fe4da1f007619516eeb1751ea68b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsOptionalField</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a65fea74d477aa23634c686a68fdb17b9</anchor>
      <arglist>(std::string &amp;field_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>OptionalFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a901cf6cc76e8864d3a4756434389204b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>OVexRevisionFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a9c837366efe3fe54c25e40dc3d9f6fe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>RefTag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a7640707cb99ceb68a2d7e2d9216336a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StartLiteralFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a6e83b3418e1c5688d60211db4f222d6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StartTagDelim</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a48e45a02366aaff5007e84419adf95f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StatementEndFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a9978b06ecd0328298e88c898c96b20be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StatementLineEnd</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>ad8a79bdf24d7796afe44d7004b375da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>VexRevisionFlag</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>ade816e24601ec05a9228fc2dde5d07cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>WhitespaceDelim</name>
      <anchorfile>classhops_1_1MHO__VexDefinitions.html</anchorfile>
      <anchor>a948718db5c5bff74ed92bb7d29242939</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MHO_VexDefinitions</name>
    <filename>namespace_3globalScope_4.html</filename>
    <anchor>classMHO__VexDefinitions</anchor>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexElementLineGenerator</name>
    <filename>classhops_1_1MHO__VexElementLineGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexElementLineGenerator</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>ad9f2d2ee96914814d01c2e237add509a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexElementLineGenerator</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a7b6847a1a3d057cd74dab1413207af00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ConstructElementLine</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>af97786a27957bc76cfe56d469632aa9f</anchor>
      <arglist>(std::string element_name, mho_json &amp;element, mho_json &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateCompound</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a1a7c39f4d26488cb09fb3a0a16fa35a9</anchor>
      <arglist>(std::string element_name, mho_json &amp;element, mho_json &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateEpoch</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a73bb19001cf38d454b1b397213da7a37</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateInt</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a830c368b20943507d4e7cc17b772bafe</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateKeyword</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>afe1350a8404980a6b2c27474cc1c6b8b</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateLink</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a873963a29473d1a227440b3a920b84c4</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateListInt</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a0ade3cf5dea6fc0ea3fc3dcf41913614</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateListReal</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a10f48b3ebb53dc66e94c9a44c2400003</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateListString</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>af40826b0d5663f61d375812c92644a9b</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateRaDec</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a4c76e77054f22469574ec1a5b4bbb3be</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateReal</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a9cb6e018206699d081f8cc8ed64d58a1</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GenerateString</name>
      <anchorfile>classhops_1_1MHO__VexElementLineGenerator.html</anchorfile>
      <anchor>a8e2d69e8f78210b4de05ead58b813b08</anchor>
      <arglist>(std::string element_name, mho_json &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexGenerator</name>
    <filename>classhops_1_1MHO__VexGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexGenerator</name>
      <anchorfile>classhops_1_1MHO__VexGenerator.html</anchorfile>
      <anchor>a389d2dc252ee28e8888f299c8de513cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexGenerator</name>
      <anchorfile>classhops_1_1MHO__VexGenerator.html</anchorfile>
      <anchor>ae3c7beac56e62fdefbae2c867496d2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateVex</name>
      <anchorfile>classhops_1_1MHO__VexGenerator.html</anchorfile>
      <anchor>a21b35212d2ad12953277a21298e35de2</anchor>
      <arglist>(mho_json &amp;root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilename</name>
      <anchorfile>classhops_1_1MHO__VexGenerator.html</anchorfile>
      <anchor>ad8a81c989c417d341fbaf5429a344299</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndentPadding</name>
      <anchorfile>classhops_1_1MHO__VexGenerator.html</anchorfile>
      <anchor>a8ce1e19a49f6d79dacedfc31b3861d87</anchor>
      <arglist>(std::string indent_pad)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexInfoExtractor</name>
    <filename>classhops_1_1MHO__VexInfoExtractor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexInfoExtractor</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>a1a2d338511689997dcc7b18258588685</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexInfoExtractor</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>a29d730a5f7a528e9bce749a2e480f0e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_dec_deg</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>a8576c237dcc908644aabb2ff5ba58f5b</anchor>
      <arglist>(std::string dec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate_ra_hrs</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>a7f0217ac8ee6951cb688a294a7733048</anchor>
      <arglist>(std::string ra)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int64_t</type>
      <name>calculate_start_time_seconds_since_1980</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>a1d1d3380c92c73b191450bf98d8804b1</anchor>
      <arglist>(std::string start_date)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extract_clock_early</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>abe82c3a6bcc7b3a6cff9a47e772c7992</anchor>
      <arglist>(const mho_json &amp;clk, double &amp;clock_early, std::string &amp;clock_early_units, double &amp;clock_rate, std::string &amp;clock_rate_units, std::string &amp;origin, std::string &amp;validity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extract_clock_model</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>a4f0670b7eb1f0ac075960b1f5d77b970</anchor>
      <arglist>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extract_sample_rate</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>a493de363b10b56f032cddd7a9233118a</anchor>
      <arglist>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extract_sampler_bits</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>aab2cdfbafe51a6b9dadeedceb0718b1e</anchor>
      <arglist>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extract_vex_info</name>
      <anchorfile>classhops_1_1MHO__VexInfoExtractor.html</anchorfile>
      <anchor>ac41cf457e570b607c3ba73c6acb4acfb</anchor>
      <arglist>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexLine</name>
    <filename>namespacehops.html</filename>
    <anchor>structhops_1_1MHO__VexLine</anchor>
    <member kind="variable">
      <type>std::string</type>
      <name>fContents</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a31eb864341e673096a13c3e64bc87167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fIsLiteral</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af96b6fc748ed2163809facf5f152b2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fLineNumber</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a844a830f19a3fc61252f4491e70263d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>fStatementNumber</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2a5f77922cbd7762f7249624d1f39f66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexParameter</name>
    <filename>classhops_1_1MHO__VexParameter.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexParameter</name>
      <anchorfile>classhops_1_1MHO__VexParameter.html</anchorfile>
      <anchor>a680550208002660e55e7c41c3bab2be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_VexParameter</name>
      <anchorfile>classhops_1_1MHO__VexParameter.html</anchorfile>
      <anchor>a2226ae5fb503a91ec060496ebbb861a1</anchor>
      <arglist>(std::string token, std::string units=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MHO_VexParameter</name>
      <anchorfile>classhops_1_1MHO__VexParameter.html</anchorfile>
      <anchor>a2226ae5fb503a91ec060496ebbb861a1</anchor>
      <arglist>(std::string token, std::string units=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexParameter</name>
      <anchorfile>classhops_1_1MHO__VexParameter.html</anchorfile>
      <anchor>a8a5f4ba0de663dcdb847c4709b74f5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTokenString</name>
      <anchorfile>classhops_1_1MHO__VexParameter.html</anchorfile>
      <anchor>a07090eb5c291631118cdbb8f50b27908</anchor>
      <arglist>(std::string token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnitsString</name>
      <anchorfile>classhops_1_1MHO__VexParameter.html</anchorfile>
      <anchor>a0e498563d2dd00ec3a14379a4014887f</anchor>
      <arglist>(std::string units)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexParser</name>
    <filename>classhops_1_1MHO__VexParser.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexParser</name>
      <anchorfile>classhops_1_1MHO__VexParser.html</anchorfile>
      <anchor>a1ca1ce05a417ee6ec45a77046d932d3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexParser</name>
      <anchorfile>classhops_1_1MHO__VexParser.html</anchorfile>
      <anchor>a9dea2c1606a0b4504d39592825231dd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ParseVex</name>
      <anchorfile>classhops_1_1MHO__VexParser.html</anchorfile>
      <anchor>a55c6bb88578638bf7142170de43a0403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexFile</name>
      <anchorfile>classhops_1_1MHO__VexParser.html</anchorfile>
      <anchor>a6fe2c3e314bb4c356784709934c53c4b</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexVersion</name>
      <anchorfile>classhops_1_1MHO__VexParser.html</anchorfile>
      <anchor>a2a302aa906d37ba6ad00a62bc31dfa06</anchor>
      <arglist>(const char *version)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVexVersion</name>
      <anchorfile>classhops_1_1MHO__VexParser.html</anchorfile>
      <anchor>ae6c29b98794a9093c1b8249aefdc18dd</anchor>
      <arglist>(std::string version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VexTokenProcessor</name>
    <filename>classhops_1_1MHO__VexTokenProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_VexTokenProcessor</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>a5fe146f373d42d2ca824f1a9c8e1da18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VexTokenProcessor</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>afcde928bf6f8b68b8fc336336f65d10f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsWhitespace</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>a79d39b96bde044a95a2ea01620d27004</anchor>
      <arglist>(std::string value)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessInt</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>a012eceaa4c450d4c021a0ef6ff8eeb3a</anchor>
      <arglist>(const std::string &amp;element_name, mho_json &amp;format, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessListInt</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>a05cbb9882941663452a44c251331d7b9</anchor>
      <arglist>(const std::string &amp;element_name, mho_json &amp;format, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessListReal</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>ac42c3aec5fa3ce7ae547f15f3d4e6ffd</anchor>
      <arglist>(const std::string &amp;element_name, mho_json &amp;format, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessListString</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>a522fd11568d21790d3bbbfc065a06662</anchor>
      <arglist>(const std::string &amp;element_name, mho_json &amp;format, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>mho_json</type>
      <name>ProcessReal</name>
      <anchorfile>classhops_1_1MHO__VexTokenProcessor.html</anchorfile>
      <anchor>a6ce3d09d4fe396535bae5d3e07733cfb</anchor>
      <arglist>(const std::string &amp;element_name, mho_json &amp;format, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_VisibilityChannelizer</name>
    <filename>classhops_1_1MHO__VisibilityChannelizer.html</filename>
    <base>MHO_TransformingOperator&lt; uch_visibility_store_type, visibility_store_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_VisibilityChannelizer</name>
      <anchorfile>classhops_1_1MHO__VisibilityChannelizer.html</anchorfile>
      <anchor>ae96bf5bda45f75e430afe1aa2780ebcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_VisibilityChannelizer</name>
      <anchorfile>classhops_1_1MHO__VisibilityChannelizer.html</anchorfile>
      <anchor>a681fd7358b388c48e538d6713165351b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ExecuteImpl</name>
      <anchorfile>classhops_1_1MHO__VisibilityChannelizer.html</anchorfile>
      <anchor>aea7a0dfc60a0aae62ff4cc2dc682306f</anchor>
      <arglist>(const uch_visibility_store_type *in, visibility_store_type *out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitializeImpl</name>
      <anchorfile>classhops_1_1MHO__VisibilityChannelizer.html</anchorfile>
      <anchor>a39676ecad0863834c37525e5f8037c49</anchor>
      <arglist>(const uch_visibility_store_type *in, visibility_store_type *out)</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>hops::MHO_VisibilityChunk</name>
    <filename>namespacehops.html</filename>
    <anchor>unionhops_1_1MHO__VisibilityChunk</anchor>
    <member kind="variable">
      <type>int32_t</type>
      <name>sync_test</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aaf44998a72e638aa8ca290e580988425</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>values</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a28433c99fd26d5b240f18a3e4c9d9737</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_Visitor</name>
    <filename>classhops_1_1MHO__Visitor.html</filename>
    <member kind="function">
      <type></type>
      <name>MHO_Visitor</name>
      <anchorfile>classhops_1_1MHO__Visitor.html</anchorfile>
      <anchor>adcf35ee9c2f3782ce91c472e46e6f30b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_Visitor</name>
      <anchorfile>classhops_1_1MHO__Visitor.html</anchorfile>
      <anchor>ae0b70718d0ad025bbee5296a116f5e5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops::MHO_WeightChannelizer</name>
    <filename>classhops_1_1MHO__WeightChannelizer.html</filename>
    <base>MHO_TransformingOperator&lt; uch_weight_store_type, weight_store_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>MHO_WeightChannelizer</name>
      <anchorfile>classhops_1_1MHO__WeightChannelizer.html</anchorfile>
      <anchor>aa0aadd5d2c47a2a335ed135c135c80f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHO_WeightChannelizer</name>
      <anchorfile>classhops_1_1MHO__WeightChannelizer.html</anchorfile>
      <anchor>aaa138e52feca11a35bcd9f8e4c1bb7f3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fourphase_lib::MixedModeFourphaseSingleScanProcessor</name>
    <filename>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a20699fb89c5c925cab5e21083525e283</anchor>
      <arglist>(self, config_obj, root_file, control_file, frequency_group=&apos;X&apos;)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>calculate_delay_phase_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>af66153025bbec2d3b1d94bb644d1176e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_station_delay_offsets_and_error</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a561dca9b81d61f03c784c388dea3d897</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_station_phase_offsets_and_error</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>aeca3c630ad40f24ad56c17b7b7c7235c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_raw_station_delay_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a7824392b402fa16bc6444fd8c1d3038f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_raw_station_phase_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a7f6785f70b1bd2bf68a10e8bbd3a6d71</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_stations</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a0b807775cd6fdea7313389788fd691cf</anchor>
      <arglist>(self, legacy_stations=&apos;&apos;, target_stations=&apos;&apos;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bl_pol_products</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a25052a7acb3abe5685a234fda92d8d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>config_obj</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a04d1c5f498d4004c963cdea61420805f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_file_path</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ad50f55f52fef006f87cabf48b0132acb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>error_condition</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ade0ca12ed34585366cb4e89d75ed9506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_dir</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>af4a723c0238339049f84454746c3e4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_name</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a19664773c11b6bfa87bf271d4776b92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>frequency_group</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a59bed1ca1c30297f75bd4bf85fba9393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>legacy_stations</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ace65a7e3d6270eaf0516a3c45162b1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_snr</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a2a23df40a47422b816ff0cfe87fdf569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_proc</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a44518149514138bc181e21d82681e381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>root_file_path</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a82c08a3a8188c46203738c1f53133e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_dir</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ae436cd8411f07595b821a729040889b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a1e3b1cb9cf91f08068247ada9c96df29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_y_minus_x_delays</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a0cd3941d0d74f059982f40bf111bfdf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_y_minus_x_phases</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a0b0bae9b5e7aeaf25346f31d6595cc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>target_stations</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ad05fb3f33bc16754f7e064698dffcd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use_progress_ticker</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ad011719234de5fb4a2a39ca81b36350a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mk4_corel</name>
    <filename>mk4__data_8h.html</filename>
    <anchor>structmk4__corel</anchor>
    <member kind="variable">
      <type>void *</type>
      <name>allocated</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a3bfa36912c1560671f339b76fa048879</anchor>
      <arglist>[MAXIND+4]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>file_image</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>af9328750b43857617b76534315e1fe97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_000 *</type>
      <name>id</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a292cad74a4127da0fb86eded7763ba52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct index_tag *</type>
      <name>index</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a6f78e597fa70c404d6aa36df5709dc90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index_space</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a11c1248744f5d3b4efe675370b5510ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nalloc</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a583c8cf68af181c1ecf2f64ca92473c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_100 *</type>
      <name>t100</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a6a83a1a88176099cfd0d193fd4d3122a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::mk4_corel</name>
    <filename>classmk4io_1_1mk4io_1_1mk4__corel.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__del__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1mk4__corel.html</anchorfile>
      <anchor>a99c9f313d3685fc4238e45c64197c96b</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mk4_fringe</name>
    <filename>mk4__data_8h.html</filename>
    <anchor>structmk4__fringe</anchor>
    <member kind="variable">
      <type>void *</type>
      <name>allocated</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ab6d4151e343a27e4af1439a9567b977a</anchor>
      <arglist>[MAXFREQ+16]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>file_image</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>aed80cbdd7fc97121dd82992e15351fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_000 *</type>
      <name>id</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a8446c2beea735873fbc3132f810fd9d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n212</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>add4f2cb868979fbad75607fb7dbe807e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n230</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ae7a8d6d0d290aca7c1d813f50db5f529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nalloc</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a9fb0b868bc39cb4354ec3560b661f8d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_200 *</type>
      <name>t200</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a29896e6c714c8b296ef8f34c52cf5b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_201 *</type>
      <name>t201</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a9d937c3605fa4f28638820018adbdac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_202 *</type>
      <name>t202</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a633c9749a98a5370a25a54bcd108d4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_203 *</type>
      <name>t203</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a1078ec267cc33da99d889c3de219394b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_204 *</type>
      <name>t204</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a81fd9170f58a8d11ad5c7f26a9788da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_205 *</type>
      <name>t205</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a8300085e1d4eef1b1868555b1b8547a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_206 *</type>
      <name>t206</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>abb206b2d67b8ce8b2852e709afb5694f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_207 *</type>
      <name>t207</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ab613ef79c8500c2372029f17335e8ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_208 *</type>
      <name>t208</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ac4cd7f08f2a102d51f999aecf6bbe4e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_210 *</type>
      <name>t210</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a7f29f8395276f10c16aba18bbcd4f596</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_212 *</type>
      <name>t212</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a09552356db6fae234c487e3e6abc4ff5</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_220 *</type>
      <name>t220</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a7c55c096dca3098b68e33a4d85696bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_221 *</type>
      <name>t221</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a7987f4e1f28c0854bba02658cf3b297b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_222 *</type>
      <name>t222</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a93a5668d6040f180ef12d8c8cafe1a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_230 *</type>
      <name>t230</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ac6845d05853691e2908ffb34847c9c33</anchor>
      <arglist>[MAXFREQ *MAXAP]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::mk4_fringe</name>
    <filename>classmk4io_1_1mk4io_1_1mk4__fringe.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__del__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1mk4__fringe.html</anchorfile>
      <anchor>a9067f169a2941a8954f806bca7de9471</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mk4_log</name>
    <filename>mk4__data_8h.html</filename>
    <anchor>structmk4__log</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>file_image</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ac046df6190d869479b793ebb84c216c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_000 *</type>
      <name>id</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a6818867127318fe06ef875f7ac895126</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mk4_sdata</name>
    <filename>mk4__data_8h.html</filename>
    <anchor>structmk4__sdata</anchor>
    <member kind="variable">
      <type>void *</type>
      <name>allocated</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a769db3710e3e76edee7d1c513555556a</anchor>
      <arglist>[2 *MAXSPLINES *MAXFREQ+7 *MAXSTATPER+3]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>file_image</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a4086c22216d3080fc8151848d157da16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_000 *</type>
      <name>id</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>aa6d3d7ff5c6ebd003edd7ba95ced7825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct mk4_sdata::@6</type>
      <name>model</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a22b38b336d823762f595fb069de69ca1</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n304</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a2fc0e0f0a940aa726c5c1f6ad1de6e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n305</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>ae6a1990a6f52bd86825d25cb4fa706b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n306</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a34d9b77b1d15f8a4dc661d038e7dee4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n307</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>aa6bb7780cbab7a1dfc569cdf63425fbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n308</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a1d8c9d71abde9c0ac328114e235cb327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n309</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>af670a71371ff2fc27d91de1ab5626cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nalloc</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a0060099be8b7506b31c886b0e471ea7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_300 *</type>
      <name>t300</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a740f033ffb027b5d8c1fddab2bb4084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_304 *</type>
      <name>t304</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a7ccc5ad077450b1f2109aaffd8cbc2e2</anchor>
      <arglist>[MAXSTATPER]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_305 *</type>
      <name>t305</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a2e8219c9732f990ff9dcf110d8b5f617</anchor>
      <arglist>[MAXSTATPER]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_306 *</type>
      <name>t306</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a266868cb7c53781545547a04063b24f2</anchor>
      <arglist>[MAXSTATPER]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_307 *</type>
      <name>t307</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a0a52783dd8be0e87c8963a0ad5b32e30</anchor>
      <arglist>[MAXSTATPER]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_308 *</type>
      <name>t308</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a5d5e9a646a07ff54ce02c720868bbc94</anchor>
      <arglist>[MAXSTATPER]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_309 *</type>
      <name>t309</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a3a18b09863318e7bc503a7238977c05c</anchor>
      <arglist>[MAXSTATPER]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::mk4_sdata</name>
    <filename>classmk4io_1_1mk4io_1_1mk4__sdata.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__del__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1mk4__sdata.html</anchorfile>
      <anchor>aafe14e5bd89c4b316a8cfb7999911608</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mk4_sdata.model</name>
    <filename>mk4__data_8h.html</filename>
    <anchor>structmk4__sdata_8model</anchor>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a27786fed43e5fe8cd6d1845b8811436f</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_301 *</type>
      <name>t301</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a92930c78aeb14d1496b87d93e23fce40</anchor>
      <arglist>[MAXSPLINES]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_302 *</type>
      <name>t302</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a99c789277be5058b7e76aba6c317fc5d</anchor>
      <arglist>[MAXSPLINES]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_303 *</type>
      <name>t303</name>
      <anchorfile>mk4__data_8h.html</anchorfile>
      <anchor>a3b6c1458714ae182ab5e658f62ffc3c9</anchor>
      <arglist>[MAXSPLINES]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::Mk4StructureBase</name>
    <filename>classmk4io_1_1mk4io_1_1Mk4StructureBase.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__eq__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1Mk4StructureBase.html</anchorfile>
      <anchor>a0772ef701b441c652a3bbde35de2261a</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__ne__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1Mk4StructureBase.html</anchorfile>
      <anchor>a7347e4cacf99a75b7d7788d94e502398</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>approximately_equal</name>
      <anchorfile>classmk4io_1_1mk4io_1_1Mk4StructureBase.html</anchorfile>
      <anchor>af9c631103b72450dc357ed98d0f7b6d5</anchor>
      <arglist>(self, other, ignore_dates=True, verbose=True, abs_tol=1e-14, rel_tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>contains_floats</name>
      <anchorfile>classmk4io_1_1mk4io_1_1Mk4StructureBase.html</anchorfile>
      <anchor>a27bca4a0801b033de3fdbebe84eae485</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>printsummary</name>
      <anchorfile>classmk4io_1_1mk4io_1_1Mk4StructureBase.html</anchorfile>
      <anchor>ae00dca3ceb7ad4ebb8144fbcd6ef51b6</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::model_struct</name>
    <filename>classmk4io_1_1mk4io_1_1model__struct.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>modpoly</name>
    <filename>mk4__typedefs_8h.html</filename>
    <anchor>structmodpoly</anchor>
    <member kind="variable">
      <type>int</type>
      <name>whatever</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>aadf6cc1c3efa1c31bb1457049447a179</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>moni_read_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structmoni__read__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>equalizer</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ad20eadb1809522de5cf893b8811b9ec4</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>track</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a190c59345bfffb82a1eb2e456044fe55</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::mutable_length_char_array</name>
    <filename>classmk4io_1_1mk4io_1_1mutable__length__char__array.html</filename>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::newphasor</name>
    <filename>classmk4io_1_1mk4io_1_1newphasor.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>newphasor</name>
    <filename>type__212_8h.html</filename>
    <anchor>structnewphasor</anchor>
    <member kind="variable">
      <type>float</type>
      <name>amp</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a5beec22cca15aabc1a79eb2c74f55da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phase</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a92d6dd48b45880dc685ece0cf2e3bdf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>weight</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>ada64e8900089eed819d928707aa37295</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::NumericalInterval</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>a8dc2838f60775490fd864683cbce9aa4</anchor>
      <arglist>(self, center, width)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>a0915a676e3ae12478ce1a843380eda31</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_center</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>aa74477ebd40af4701946ab1d47aa05fa</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_lower_limit</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>a292dee3af88d3647e78df9369593c1ab</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_upper_limit</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>a8f1b5d82c1f890b2a3d3ef1dacdf4796</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_width</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>a2b35aad7130b777d04f129889f7df6ba</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>center</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>afd7818cf2b8325bec6953fe82c7683b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>width</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1NumericalInterval.html</anchorfile>
      <anchor>abc9d86fc0dcddd9aa1f77e95261efc7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>param_val</name>
    <filename>vex_8h.html</filename>
    <anchor>structparam__val</anchor>
    <member kind="variable">
      <type>struct data_value</type>
      <name>dval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a2df34f7c3943353b87911f9aa6585b54</anchor>
      <arglist>[MAXNVAL]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ac5a27e094d8db98c3ef937f1d665b234</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>abcecf10a69b90d28770f8b4564c115c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>val</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a567405d935552fc4ae2bf6587afcd3f1</anchor>
      <arglist>[MAXNVAL]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hops_visualization::parse_alist::ParseAlist</name>
    <filename>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>a609f9642969dfe23aaeba0f0b75f52d3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_record_indices</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>a6a79cef09a59986b0732b534281d45b8</anchor>
      <arglist>(self, data_selection_dict, scan_selection_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_alist_data</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>a6733e4812f176477190c814a026491eb</anchor>
      <arglist>(self, afile)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_record_colors</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>ab6cebd329ff34d00d8a628f8a9a99011</anchor>
      <arglist>(self, plot_format_dict)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>counter</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>a9b8c4c1af4fbbc14ddb9023d189800fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>record_color</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>aeef265aa8abffcb0f36fc978a6712d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>record_flags</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>a16e1c511c9836df2f55a6d6152a438d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>records</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>a00784c26821c9f7d7dcdf2ef8450f86c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start_day</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>ace9a041af25c7b530fcec90fda2d1f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>unique_stations</name>
      <anchorfile>classhops__visualization_1_1parse__alist_1_1ParseAlist.html</anchorfile>
      <anchor>a5cb052e77ed5ecba23614c8bb9d77856</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pbs_init_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structpbs__init__struct</anchor>
    <member kind="variable">
      <type>char</type>
      <name>cHost</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>abb11798b238fcb884b56ea13c209b395</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>struct drive_init_struct</type>
      <name>drive</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>afc5c0a8e4fe65e9ca87ba7e61c5c4b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct su_connect_struct</type>
      <name>su_connect</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a1712009db33f93858b3547998fd0f38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>SU_ID</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ac33c1bd54463df71350555ac64ec3c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct SUCC_port_struct</type>
      <name>succ_port</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a1f6aca66e06b05feac59d30fed70b52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>tape_servo_interval</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a12dc956fe5752f2707c759d217ea33b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct tim_mon_struct</type>
      <name>timing_monitor</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a253c0e70090e696ac12376d5b238d35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct TRM_config_struct</type>
      <name>TRM_config</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a8711640eea9be5d38690ae2866e46c32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::pcal_struct</name>
    <filename>classmk4io_1_1mk4io_1_1pcal__struct.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::PccConfiguration</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a5e40048728841aeb9bd5b535d24a5fb1</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>band_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a1763eea77789d02220a8c3e9b279b6d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cut_threshold</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a456da0686eefd265b8ff084a811b64e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_dir</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>aaa3de90b2f14a7e0e110936840baab18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit_method</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a3850bcb9d583674574662e3418c77c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>include_headers</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a2a50e61445e41570f6e2ef16ac3788b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mode</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>aae476e0f1f4081aad246659db7f9ae54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>output_dir</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>abf7d1f101df9abeb15823ff9d8356a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pol_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a06bc279edf7046de590a33d717b7e504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>reference_scan</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>aa8e5ee009ec0337543a805ba6cf2e3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_start_trim_length</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a72e9de66aee00f77cbac0942663b7ed4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stations</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a1261675802a8513fc664710d80960f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use_progress_ticker</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>aa5c1db2e580e47ec08ef3a94814c1fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>verbosity</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccConfiguration.html</anchorfile>
      <anchor>a967af99d19fec21b36b14c0d3ffb787c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::PccDate</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1PccDate.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>aa715e2de769654fa41c92c6881fe9593</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__lt__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>ae9a7197930ff3cd91c84e03101530f58</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>as_string</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>aa9385137d23cb40e0c13cdc3ad488955</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_time_delta_seconds</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>ac8439f339dbf1a59d2713e109470cacc</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>initialize_from_date</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>ab96607412fc8e3c5893abbbbce10d1b3</anchor>
      <arglist>(self, mk4_date)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>day</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>a419906b35fa94b8fb532cc32e9fe4c68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hour</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>a3cf736d74313a6b8327fe7a94379e3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>minute</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>a3c1feb8e617228f0ce68861f4265085d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>second</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>a9e33e321880830f5bdf99d85f0650e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>year</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1PccDate.html</anchorfile>
      <anchor>a0595505a6469511a253323eebfd2b300</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pcm_cfg_struct</name>
    <filename>svex_8h.html</filename>
    <anchor>structpcm__cfg__struct</anchor>
    <member kind="variable">
      <type>float</type>
      <name>counter_coeff</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a1432c2579327523cac3924e85f2dc339</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freq</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a31fe0ab7428bdf82517f8b300cd5e257</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>afa053e9b9f6665132c687106db9eee79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pcm_tab_struct</name>
    <filename>svex_8h.html</filename>
    <anchor>structpcm__tab__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>cos_value</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a091b559ce4fb52b69c2e515252c379b4</anchor>
      <arglist>[4][MAXNVAL]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delta_phase</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a8c8cdd8d353a88c8b1ffb4ac5c153db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nval</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a9ea2b7fe17d0c3d2f347cb6ed57ac7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sin_value</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a97e9c64000de4e3b75100f846c67ef1b</anchor>
      <arglist>[4][MAXNVAL]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fringe_file_manipulation::PhaseResidualData</name>
    <filename>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>af449c1e903e7dacd1e31c03236862c57</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>extract</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>a15c453556faea4c2464df88c81c194ea</anchor>
      <arglist>(self, filename)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>baseline</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>a23051ea3ad717d068327229c54e968bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_phasor_amplitudes</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>a000f4e5f6741e1257e10ef96257ffb9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>a57bd15ae370d61f6d26617af339649ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>filename</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>aee14ba836916aa3e746395119955ff10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>is_valid</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>abdf775d22ad9fb2c6ed5e3517799146b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_corrections</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>ab1e0ca24c30ac4a4bf08b1b6252fd22e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_residuals</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>a754d9a0d9ca978493bddc91525e4312d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>polprod</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>a256b41e161fc6c214ba119b6389c098a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>a0c092f53c30f17f911c030a1971a63ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1PhaseResidualData.html</anchorfile>
      <anchor>aad0e1d3e3740599e2d9419b5f0d671ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::phasor</name>
    <filename>classmk4io_1_1mk4io_1_1phasor.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>phasor</name>
    <filename>type__212_8h.html</filename>
    <anchor>structphasor</anchor>
    <member kind="variable">
      <type>float</type>
      <name>amp</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a1f313ad44378212a20b57ee0bc412cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phase</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a7587a873f3b8d69abb8ad83bc9a16eaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::pcc_delay_fitting::PhasorFitData</name>
    <filename>classvpal_1_1pcc__delay__fitting_1_1PhasorFitData.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1PhasorFitData.html</anchorfile>
      <anchor>aeefe4ad1ad3e7102e6ebc888579476ce</anchor>
      <arglist>(self, ref_freq, freq_phasor_pair_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_phase</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1PhasorFitData.html</anchorfile>
      <anchor>a857adbc547c4b5f625c72b5400635b51</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_phase_std</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1PhasorFitData.html</anchorfile>
      <anchor>a48b8938d31f52d955cf64a9837551f4b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>reference_frequency</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1PhasorFitData.html</anchorfile>
      <anchor>a7e804f1dde9f4868425ff05937996b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tone_phasors</name>
      <anchorfile>classvpal_1_1pcc__delay__fitting_1_1PhasorFitData.html</anchorfile>
      <anchor>a4cb6db8546d7414f761ad4f35aa235ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>plot_info</name>
    <filename>tempo_8h.html</filename>
    <anchor>structplot__info</anchor>
    <member kind="variable">
      <type>char</type>
      <name>ampcl</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ab4973491bbb518da4f1983553de6689b</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>bas</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a9c38f9697339240b9d0358bd2c9397be</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>expt</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ae91069b8601d75a64df478d1075c15da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>frq</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a3a5137cf8912c536971005d621edaf26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a55428556c78984a89b1bad86839e4099</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>index</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a24ed0b7a4afbfdaa3e1a3d412c27f9de</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbad</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a6293e887c8fa9009ebd8658fa96d5fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbadscale</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a5b9d4d6be9571b559e65e8dfdf0d0f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ngood</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a1b9cd65a27e0e53987f0f3a2854676be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npts</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>ac7962432e37a011f42f9f06a5bbab61d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsusp</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>adb0e5cdb54e131060f5d5cdc0db4c743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>onscreen</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a937e3eec685c830dbdb774af460e5f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>plotby</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a0812913da96d2c99f8bc8c7d5772565a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>adc9c3f9ea102d968300167cc6af625c8</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>station</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a0f4405e67ac9ccb9ca25514f02322833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>symbol</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>abecd6d53d277c7a31c149bb2d19dbb9c</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>toffset</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a1066a7bab75004318340a6d9a6152f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>triangle</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a7a6facc49a12cb5eb32b35f7823fe61d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>vport</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a4d0523f44a50984939afb768729d9513</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>window</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a15fe31a1adf2df50f43a5345c88a2893</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x_aux</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a64d6adfbadab871479c3c923f46fe31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xaind</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a02da7da8b9f54cf610673352801ab733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xebar</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>afcb4234b4549822319ac3fb2a0d2c46f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>xmax</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a079933b220bc15df18578970a06440ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>xmin</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a02c12db36d302a36e005ab20baf1a9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>xtype</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a9d09e2c922b147f68c929c3305be8387</anchor>
      <arglist>[30]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y_aux</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a1555e4cd0cdcd78e4a20f30cd41a77b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yaind</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>af0f344f7a4907d006117668097aa6935</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yebar</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a797dfb97eefaa98e21e1cd8ce721cd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ymax</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>aa2e20f1cc7813daff261a648a1102004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ymin</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a7fff1c109412b7fb3d463d99a71bc015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ytype</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a6d7ab9adb190713d730a8d024bc3b9e2</anchor>
      <arglist>[30]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>plot_points</name>
    <filename>tempo_8h.html</filename>
    <anchor>structplot__points</anchor>
    <member kind="variable">
      <type>struct plot_ptqual</type>
      <name>bad</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a2b00109c9dca46517847379204b08a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct plot_ptqual</type>
      <name>good</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a8cfeb8aa34c372621211e143ed5f748a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct plot_ptqual</type>
      <name>suspect</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a1e49d58c98601ee0480b77a234f29671</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>plot_ptqual</name>
    <filename>tempo_8h.html</filename>
    <anchor>structplot__ptqual</anchor>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a976a95dd26561ee70b4afb21e235fb0f</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>xerrh</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a8289e785f6640239954fbd0631a0b084</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>xerrl</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a819239cda796ed87dcc60b366402e967</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a2e4cb2319bc0b3c1757afb1411703513</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>yerrh</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a470abf2064fc98fd10d564244a1ebc5f</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>yerrl</name>
      <anchorfile>tempo_8h.html</anchorfile>
      <anchor>a29dc3d52ea77833b4cfc029ae738dcf7</anchor>
      <arglist>[MAXPLT]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>polar</name>
    <filename>general_8h.html</filename>
    <anchor>structpolar</anchor>
    <member kind="variable">
      <type>float</type>
      <name>ampl</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a263f9e8ad115a16c3ab76b84f4f32e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phase</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a3ba763ea36218dd1b2ee626318e25c84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::polars</name>
    <filename>classmk4io_1_1mk4io_1_1polars.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>polars</name>
    <filename>type__210_8h.html</filename>
    <anchor>structpolars</anchor>
    <member kind="variable">
      <type>float</type>
      <name>ampl</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>a0b3950288a1a94be25ad69377bf1116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phase</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>aa247f1415642d6628798e25b74cd185e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_NDArrayMath::PowerOfTwo</name>
    <filename>structhops_1_1MHO__NDArrayMath_1_1PowerOfTwo.html</filename>
    <templarg>N</templarg>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1PowerOfTwo.html</anchorfile>
      <anchor>af4993bfc62c27ba1b8181767b393fab1a32f46156189c190214a827d129a11b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1PowerOfTwo.html</anchorfile>
      <anchor>af4993bfc62c27ba1b8181767b393fab1a32f46156189c190214a827d129a11b3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hops::MHO_NDArrayMath::PowerOfTwo&lt; 0 &gt;</name>
    <filename>structhops_1_1MHO__NDArrayMath_1_1PowerOfTwo_3_010_01_4.html</filename>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1PowerOfTwo_3_010_01_4.html</anchorfile>
      <anchor>a72fcad6d9577b63ccf05bbdc5b9edd99a22c9178ab18bdd78f848c9ddd698a9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structhops_1_1MHO__NDArrayMath_1_1PowerOfTwo_3_010_01_4.html</anchorfile>
      <anchor>a72fcad6d9577b63ccf05bbdc5b9edd99a22c9178ab18bdd78f848c9ddd698a9cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::pcc_plotting_utils::ProxyCableDelayFitPlotter</name>
    <filename>classvpal_1_1pcc__plotting__utils_1_1ProxyCableDelayFitPlotter.html</filename>
    <member kind="function">
      <type>def</type>
      <name>plot_bandfits</name>
      <anchorfile>classvpal_1_1pcc__plotting__utils_1_1ProxyCableDelayFitPlotter.html</anchorfile>
      <anchor>a18a09d9e16679e827624eaa8eba454d9</anchor>
      <arglist>(self, st_exp_phasor_collection, pcc_config, n_points=500, use_degrees=True)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plot_individual_band_delays</name>
      <anchorfile>classvpal_1_1pcc__plotting__utils_1_1ProxyCableDelayFitPlotter.html</anchorfile>
      <anchor>a00189c7ee61cdda97ac14fe33b5f80ed</anchor>
      <arglist>(self, st_exp_phasor_collection, pcc_config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plot_mean_band_delay</name>
      <anchorfile>classvpal_1_1pcc__plotting__utils_1_1ProxyCableDelayFitPlotter.html</anchorfile>
      <anchor>a8f3bec636f25371470aba6c7541a1a80</anchor>
      <arglist>(self, st_exp_phasor_collection, pcc_config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plot_phasor_amplitude_surface</name>
      <anchorfile>classvpal_1_1pcc__plotting__utils_1_1ProxyCableDelayFitPlotter.html</anchorfile>
      <anchor>a682913800270a03e5935bf318475c090</anchor>
      <arglist>(self, st_exp_phasor_collection, pcc_config, use_degrees=True)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_array</name>
    <filename>psplot_8h.html</filename>
    <anchor>structps__array</anchor>
    <member kind="variable">
      <type>struct psplot_baseline</type>
      <name>baseline</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a6f00e9f2933377c883b659a8e0d011a1</anchor>
      <arglist>[MAXBASE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>displayed</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>aa6e0a7d56351076a42b7cabdaf39d22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct psplot_fgroup</type>
      <name>fglist</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a858db1abc1bdaf4f5b5a178dd79320a4</anchor>
      <arglist>[MAXGROUPS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fplot_open</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a0a6815fcb3db1c27e3ec903acee9ea8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbaselines</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a1779873869da74469f5710008e2e959d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nscans</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ac756a6bfab108e1d4b756bdc344b332f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntagged</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ab6ecbba3ac0e8633e20e180cbde7c770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct psplot_plotparam</type>
      <name>param</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>abe4ed1ad45129225d7dd0c77474e63d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qtagged</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a23f0bd521372afd2cbecd0d8ae79d334</anchor>
      <arglist>[17]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>retain</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a90b9c4939eb804627b193a0408f62d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stnlist</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>acdd90dd025334829bbcda824dde62f3f</anchor>
      <arglist>[MAXSTEXP]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>subgroups</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a8c20aaa16151ba03b165b06935a2fc31</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
    <member kind="variable">
      <type>struct psplot_scantime *</type>
      <name>time</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ac530e9aaa6dcd57b85e432151c08a9d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_count</name>
    <filename>psplot_8h.html</filename>
    <anchor>structps__count</anchor>
    <member kind="variable">
      <type>char</type>
      <name>band</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a227214deea5fb0ae1044c646a6a10690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ae2bdd926db6a64afe3dbc929b1a908e5</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nqual</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a5d654d1a0634cc95186ab63edae79b4d</anchor>
      <arglist>[22]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psplot_baseline</name>
    <filename>psplot_8h.html</filename>
    <anchor>structpsplot__baseline</anchor>
    <member kind="variable">
      <type>int</type>
      <name>alloced</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a2cf44971a1b18862abba07fea144853f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>id</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a0229cbc7caf55881015c2e5f97919e1f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>struct psplot_cell *</type>
      <name>scan</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a1f588b09ec87dde57ec316efc01a7490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tagged</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a47486dcec6ce5e70e46100251f1d888c</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psplot_cell</name>
    <filename>psplot_8h.html</filename>
    <anchor>structpsplot__cell</anchor>
    <member kind="variable">
      <type>int</type>
      <name>colour_index</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a17880f5c841d0edf6f572b4ce742e190</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data_index</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a8064266cdb636b65a8d1846579e48708</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a842622ac121bf1e7780dc4ca15f33915</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psplot_fgroup</name>
    <filename>psplot_8h.html</filename>
    <anchor>structpsplot__fgroup</anchor>
    <member kind="variable">
      <type>char</type>
      <name>fgroup</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a126a8b9ace36ea1b7acbe8bba6fdfd5c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>subgroups</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ac4039284495ffe5b42ba53a65867421f</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psplot_plotparam</name>
    <filename>psplot_8h.html</filename>
    <anchor>structpsplot__plotparam</anchor>
    <member kind="variable">
      <type>int</type>
      <name>band</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a403608343704a36aebc881ccc7e19357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>base_per_page</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ad3626cb893e5a19e9bfa86cf58dac110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>base_sep</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a2511454a2ee3ff5cc1b7b0d597523498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>basepage</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>aa0e4e9fcb8d69719c26e6952ff689747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbasepage</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ab66e961d95bb57f86f8c81072487e555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npages</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a869efc259475b893b524f517f8e90d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>scan_sep</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a81fb238767f5c147807c94c0c67af2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scanpage</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>aa0e1d36a724b2f3141235e9a21f7fe16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scans_per_page</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a17a6653a2090941d3a7b6229207d398f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>tagsize</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a2b67358e7796b3a617fc3eb563994fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>xgb_fract</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a3c8947ed2b51e3523bf290a5dcb65002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ygb_fract</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>ac3fa8258945b7966adaf01afda787725</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psplot_scantime</name>
    <filename>psplot_8h.html</filename>
    <anchor>structpsplot__scantime</anchor>
    <member kind="variable">
      <type>int</type>
      <name>nst</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>adbf78d835141217c888b24fe815a1f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_name</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a7b23902244737d43497311422b1d665b</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scantime</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a613cc57559c1d8744398fb38e299759c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>seconds</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a90861e5d6663c109c7a63752b78742ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct psplot_station</type>
      <name>stations</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a49ca68bbb74efb731b9a9aa674265a81</anchor>
      <arglist>[MAXSTEXP]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tagged</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>addf36c99bba523a582f2b7d513b9120d</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psplot_station</name>
    <filename>psplot_8h.html</filename>
    <anchor>structpsplot__station</anchor>
    <member kind="variable">
      <type>char</type>
      <name>fglist</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a0fe745fa1b2c36e0a13405cc0250db37</anchor>
      <arglist>[MAXBANDS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minus</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a2a8e517a2368970b40821967ccd16e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stn</name>
      <anchorfile>psplot_8h.html</anchorfile>
      <anchor>a4aee718fcd16f0f885302556390a31dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ptrilist</name>
    <filename>aedit_8h.html</filename>
    <anchor>structptrilist</anchor>
    <member kind="variable">
      <type>int</type>
      <name>present</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a3434d412ae904ba59e06e4b7be4f51f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>triangle</name>
      <anchorfile>aedit_8h.html</anchorfile>
      <anchor>a3470df6157b6b870d792d9805498911c</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pval_format</name>
    <filename>vex_8h.html</filename>
    <anchor>structpval__format</anchor>
    <member kind="variable">
      <type>char</type>
      <name>block</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a378bafd54637262c65647f5bff48a4a0</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ngroup</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a8059d89e7ff224f32fdd48f41a15e37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nval</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aaf2a4ee7c7d34f66bf3f887d04f08cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>param_name</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a8f50b1d59afc50e36e7ecff7af4f922c</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>typever</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ac11a39b78e9cb6bc66c66db318857620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct value *</type>
      <name>values</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a54bde3b7d398235424073aae45235969</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>quadarray</name>
    <filename>aedata_8h.html</filename>
    <anchor>structquadarray</anchor>
    <member kind="variable">
      <type>quadsum</type>
      <name>data</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>aef7557be1185d4c12e833a7b6ae7cc58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a0a85fc5d4d111a69e4f55dfad621f728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a9e980a43d5b40ec35a1bd87a5404c5be</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyval</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a53b38c5feb469cdf60384c82d905da43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastorder</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>af204edb0d5397fe21f2218a5f637b416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a9e1732285269b2881a4c96148ad766a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>afio::afio::quadsum</name>
    <filename>classafio_1_1afio_1_1quadsum.html</filename>
    <base>afio::afio::AFIOStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>quadsum</name>
    <filename>adata_8h.html</filename>
    <anchor>structquadsum</anchor>
    <member kind="variable">
      <type>float</type>
      <name>azimuth</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a5869f06c256ad8034ec7dffa87163dfd</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>cl_amp</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa425fe00db0bd9e5eed666cfc6625c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>datatype</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a61bac9c3417d5edad11433213b88fa4f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>duration</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a80befe9176dc75dc9ec44e536cf38c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>elevation</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abd7256d3a1dd60bba292b1451814e87f</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>epoch</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a481bb4556064ee6730d7d1a9e1b60bf7</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>esdesp</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ab997b7f73821989d78b440d907169791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>expt_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a4f64c6c8564cc9b37e9734cbc9a179fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>extent_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ad0c2f4880bc57427290aa4df155f0034</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freq_code</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a6fc9eeae3b8f4f9b195b2436e8c498d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lags</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abde1cd2927216a47c0f6cd26750f7752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>length</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a352865a4b31b3dc37a20bee97a769ade</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mode</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aaa3cef2dcdb0090e9dad6ef40ddf592c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>offset</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a5706d7e371ce0f202b4879013fc427fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>quad</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ab41b8ecb800a971154dd6219c3bb8c8f</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>quality</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>af8970ddd16fa0c98699c1c59e6c757f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aafa1cd119b344cde058131d7fce7ae23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>root_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abb6c51b684cb3113d80f254e0e7969e9</anchor>
      <arglist>[42]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a649f93c5b7656f2c7c0d7279a6e38101</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>scan_offset</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>abbe0d2568bad9811c11147c90a8d59bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a00739f50f29ca97c4dee054d73588ea2</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time_tag</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0a25ef22cd7f8d3ba50c711b77754e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>version</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a175d1b882b9dc85e3f1630913ad8d91a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>quote</name>
    <filename>vex_8h.html</filename>
    <anchor>structquote</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>end</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a6c69c53eb1e65db531a89902fc657412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>start</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a3eb6e2b301d0f404fc4b2ba77713bf4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ra</name>
    <filename>vex_8h.html</filename>
    <anchor>structra</anchor>
    <member kind="variable">
      <type>short</type>
      <name>ra_hrs</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a20f1b7c7a6d3d188ae9cfa3e6cba6d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ra_mins</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a509267bfae2e67a1b219ed761abe4e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ra_secs</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ae70c74b0f907c776d09461d9a3c00694</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>raw_data</name>
    <filename>type__110_8h.html</filename>
    <anchor>structraw__data</anchor>
    <member kind="variable">
      <type>int</type>
      <name>l_cell</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a5e68731752bdb4008c758f92ac9ebc5b</anchor>
      <arglist>[33]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>r_cell</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a8ae785c27f052a07a534678b328fa04f</anchor>
      <arglist>[33]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ref</name>
    <filename>vex_8h.html</filename>
    <anchor>structref</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>args</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aa8b78b3cb2094e95f1d352ffd8a3de34</anchor>
      <arglist>[MAXNVAL]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>blockname</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a5e7dea81812ccbc27239258a22298be5</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>filename</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>abe6e11b8a6ad9f75264eb67e0b432ac3</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>keyword</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a0a0792213dbd4e65b98090b07a72315a</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nargs</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a304c7e853146c02e057c50b7917dd909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stno</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ace3bcd12c05013a9c5669333554ae2dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rootarray</name>
    <filename>aedata_8h.html</filename>
    <anchor>structrootarray</anchor>
    <member kind="variable">
      <type>rootsum</type>
      <name>data</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ae59297d746c034819447978eec1ed6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ac1f1da26312391ce7d105e8062e5b92c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyval</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a0ccad7660c77e714447e1d1222e47841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastorder</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ac0ae34eb40604360f37b8e6c72e4fc40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a042b499a0da203eb42a60da2ba8522ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>afio::afio::rootsum</name>
    <filename>classafio_1_1afio_1_1rootsum.html</filename>
    <base>afio::afio::AFIOStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>rootsum</name>
    <filename>adata_8h.html</filename>
    <anchor>structrootsum</anchor>
    <member kind="variable">
      <type>short</type>
      <name>archiv</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ab65b1ac83831027ab93fc01581dcf8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>corel_vers</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a4e0522d57918a1fd14090e407a80f1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>expt_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a888a5fdcf3b61fa2d6b34fa3f5a7bb20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>extent_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>acecda18d3d8e2a235265a0044f809a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fname</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a8ba0eb30a936c2150e97d4b3090eee75</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>procdate</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aaec6c7597861c00575d1cf2b3d53a838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>root_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa8875b3194022143984257ce465648bb</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a3cefb82af99959d26adb3d04265ebf97</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>size</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a8c63f3a281f90c1df51c16d4c4464695</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa5ac0abfa73cd35ceb717c99bf57c556</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ssec</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a27987035a849f218bd973bb01ed18f1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stations</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aee44b3f2b16c7ff99ba1a370079a7327</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time_tag</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a1252618d9824b27c15a7b0f784b4593c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>version</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a20ca3e21b3b8fc573c3819f2db8ac777</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::sbandf</name>
    <filename>classmk4io_1_1mk4io_1_1sbandf.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>sbandf</name>
    <filename>type__207_8h.html</filename>
    <anchor>structsbandf</anchor>
    <member kind="variable">
      <type>float</type>
      <name>lsb</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ad129e748bcfd0310bb4b8ce224594469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>usb</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a70b0457f34f9cd32458b3a2c5b49b2b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sbands</name>
    <filename>general_8h.html</filename>
    <anchor>structsbands</anchor>
    <member kind="variable">
      <type>short</type>
      <name>psb</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>abd66ff98ac6a7afde01f0ec568dc3506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rsb</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a6e14294bb054d89c5c9818de04eda4ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::sbweights</name>
    <filename>classmk4io_1_1mk4io_1_1sbweights.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>sbweights</name>
    <filename>type__206_8h.html</filename>
    <anchor>structsbweights</anchor>
    <member kind="variable">
      <type>double</type>
      <name>lsb</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a4c0fa56d69f1c2b5f2a392c670038b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>usb</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a90ce470173c564528e192172ece35749</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sc_life</name>
    <filename>htime_8h.html</filename>
    <anchor>structsc__life</anchor>
    <member kind="variable">
      <type>HTime</type>
      <name>birth</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aedf275100661cccc026a9337b477d1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>comment</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>abf5499f5c5dafaf0a7c1acb80fb87444</anchor>
      <arglist>[40]</arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>dsc_dt</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>aabfae4f48247ab772a8473c50cfe8067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>error</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a174a7153489bfe31e73fd7678c0c8d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>esc_dt</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a85eda370b2207bbf0d6126696373e606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HLife *</type>
      <name>last</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a92ce2c743c3ef1e1f3ff85b0ebc46822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HLife *</type>
      <name>next</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a8532c6d4338172b9d2eece448d34936d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HLife *</type>
      <name>old</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a82cd06ca4b7637d4d5e5b501e5ea20dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTLdbl</type>
      <name>span</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a633dcdbdb2c76078fe3d85f64c6a514e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GTime</type>
      <name>start</name>
      <anchorfile>htime_8h.html</anchorfile>
      <anchor>a40d26b07a79850ae418b4646b7b5ca38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>scan</name>
    <filename>vex_8h.html</filename>
    <anchor>structscan</anchor>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a579da48a81b3e676669e3158a926d566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aa8c1929d8a06360d1e0634169aecb849</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ac3c11ef848d13f662767297c1eabed5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>scan_struct</name>
    <filename>ovex_8h.html</filename>
    <anchor>structscan__struct</anchor>
    <member kind="variable">
      <type>float</type>
      <name>a1_tai</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a59d44051e6f210e47708d165eea8178b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>correlator</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a1edc0128f4de6058519842392dbd46f2</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>eop_interval</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ac176173746b9d9ed6225ecdf0c25c469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>eop_reftime</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ab344f15e4343f1e96f79c546c6d6bae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>exper_name</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad721ec3b1e4b11aedcb33391545ac386</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>exper_num</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a7206b8100b7cef6d69797184f94bf73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>ffit_reftime</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>af3de1491a0833075519630d29ca04a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>filename</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a0b6d3970e4740a91df4fff9d896d8746</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>neop</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>aea82ed4af0bd4094a99ba37d36a20391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nst</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a66276d0b97f433138d77f34b49ee1bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_name</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad30889988f06af5b61c467831c22d430</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>struct source_struct</type>
      <name>src</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a8f32b5788a2a9453812f4d34b37e86e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct station_struct *</type>
      <name>st</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a36c837a6871e83ad5f2bc1dce941a2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start_time</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a0c97c293e48442f34ba184f2c6df3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>tai_utc</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ab2ff000af544a805537d6fde186f26f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ut1_utc</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a5cd961ed808bbb91bdf3194fc8375085</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x_wobble</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a6253f4986dc707793c899662aa3ed07b</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y_wobble</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a859a470ed148abcc484bd597c3918714</anchor>
      <arglist>[10]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vexpy::vexpy::scan_struct</name>
    <filename>classvexpy_1_1vexpy_1_1scan__struct.html</filename>
    <base>vexpy::vexpy::VexStructureBase</base>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::ScanPccBandDelay</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a48b7db40af93271693470878b52e1457</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>init_from_string</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a9f0a4e7ae9bc3a83e94f644e2f6e187c</anchor>
      <arglist>(self, line_string)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>is_equal_within_tolerance</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>ab24a78a4c521180384e027366b870f66</anchor>
      <arglist>(self, scan_pcc_delay_object, relative_tolerance=1e-3, absolute_tolerance=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_line</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>ac96c1b3854e1a3d724de53d7a86044ad</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>azimuth</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a0e3b2825c7bfa778e1d17ac063c96830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>delay_model_ps</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a206f41f12d1c7a6370b5c948c11a5324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>doy</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a770f36ead0da2af9d1b97d05579120b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>elevation</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a12695bf454847fdafc944ca43fa8f3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hour</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a52dd34b059e8511c94f4b9dd17a8c658</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>minute</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a03bc54fcc30945cb633f6c5c2bed467e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_model_dc</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a5d96017de170d3c63d566cf7dbef5fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_model_midband</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>af976e1d8249fee0e0f155849f3bc67fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phase_rmse</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a57eb0410870de2b713b405fb5cc785cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a1e780e7879c2eb956b87362b2b0a49de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>second</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a20c36beabe3a99cce9b36454fb5512c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>source_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a0dff0271ff983e30ec8cfae35d81156f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_code</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>aadba6d2a6ce1b6eb78b03486ff287de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>year</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1ScanPccBandDelay.html</anchorfile>
      <anchor>a0d996339477bed38c9fe5b08023c6c61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>seg_data</name>
    <filename>average_8h.html</filename>
    <anchor>structseg__data</anchor>
    <member kind="variable">
      <type>int</type>
      <name>keyval</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a600ffd3eecbc0f301b10072458fed358</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastorder</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aedc6a11d2c3ed35f993380f174c4f7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a0f8d9d0bb1ac50e23836dfa7f31b54af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union seg_data::@2</type>
      <name>u</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aae3517196fc8ce1dbf2be2b0439e6f09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>seg_data.u</name>
    <filename>average_8h.html</filename>
    <anchor>unionseg__data_8u</anchor>
    <member kind="variable">
      <type>fringesum</type>
      <name>fdata</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aac7f73634dcfeb703a9363a0abbda688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>trianglesum</type>
      <name>tdata</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ac89b122b57eba0d8720a64441d5b0745</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::sidebands</name>
    <filename>classmk4io_1_1mk4io_1_1sidebands.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>sidebands</name>
    <filename>type__206_8h.html</filename>
    <anchor>structsidebands</anchor>
    <member kind="variable">
      <type>short</type>
      <name>lsb</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a1342468348302e21f6fb8c328fedc805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>usb</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a6acadced7671d2f3742fe090d9a44571</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fringe_file_manipulation::SingleBaselinePolarizationProductCollection</name>
    <filename>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</filename>
    <base>vpal::report_lib::JsonSerializableObject</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a8de23d90d349dd4ceb8b8bcb304a15ec</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__eq__</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a04d936236e5ceeab2a602b29bd3035b5</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__hash__</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>ab356e616553a71f4fe59e31841a1e1d6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_fringe_object</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>acb441d0d1e7856f5bb7460c55fb04cf1</anchor>
      <arglist>(self, obj)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a17cc7f8703c2781cc346201ab35c6eac</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_dtec_list</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a95eca6e496c870554e9e329ebbcfca17</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_dtec_max_deviation</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>abfefe281339799da87594b0a355bf6b5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_dtec_mean</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a2ff273d4c57778e0aad18134aad39d76</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_dtec_stddev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>ab827059649faf2f78b0bfbdf8aa11917</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_fringe_object</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a1ff3a47841ca9766af8ca986323b9fcc</anchor>
      <arglist>(self, polprod)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_max_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a7fe1864f84d10d6075b5c9b850fd6463</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a1cdd74457577d4e340b62b2817a7bf41</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_min_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a5501eda51bb466968252b8610ff9fdb2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_phase_residuals</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a8f0e2c46109c9c20cc28291ef3cca381</anchor>
      <arglist>(self, pol_product)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_snr_list</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a443483d63095779da21a45537396d737</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>init_values</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a18b8b0a00212d963de09826a82b187eb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>is_complete</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a2b152f513bbab1c97e6fa0702e42a90a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>polarization_product_is_required</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>ad6b68df0b38504f4c2f355e6fed93aee</anchor>
      <arglist>(self, pp_check)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>associated_root_file</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a8992acca73788fb96316083d8f2d151d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>baseline</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a850bf7554dce67b86f2ac3be078990c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cached_required_polprod_list</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a633da33258bbaec6f7167f3668b9c3bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_file_hash</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a697e8d98bc6613dc96ab426e9ae350f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_filename</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a2799f50ca96549e3b689341a7134940a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_mdev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a9ab5b279371f09215b685440e3675d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_mean</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a2ffcf39b93771fd209b1b9befd8f9400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_stddev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a41e3058ffd8de637d41f77bd023ff094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fringe_objects</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a6f20bcd4852ea08ba249deb9e9bb0c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a90f6e7a0c2fefe2eb43b3bcacf745739</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a84bcf551e769dc4e96799853646f45ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>a1eca518f84ca0b1cb3422d8cd302fe91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>required_polprod_list</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>af5ce9114d0ef0e700aad427ada7056dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>root_id</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>ae52e703521a181f48be8a5db5e8dd382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleBaselinePolarizationProductCollection.html</anchorfile>
      <anchor>af99751d1e792bea93edb3607647a3991</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::SingleChannelPhasorCollection</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>adc948c383cbef72107cfec104eedc0ea</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>apply_phase_reference_collection</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>acf92ba5994b9adfeeaa3d72708a7a403</anchor>
      <arglist>(self, reference_scpc)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_time_averaged_phasors</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>af4e02843d4fb4a0828ac558d26e2db44</anchor>
      <arglist>(self, trim_length=DISCARD_OFFSET)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>initialize</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>affa1c4c2a30ac7f180e396713f998c85</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bandwidth</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a48b410211d030805d2c765f36109a750</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>adba221f77ca5b6f9935ab7f4ccf0d9e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>freq_phasor_pairs</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a5a9a1e4f2ce7b22527cdb5644c16a78d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>frequency_interval</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a2f810bb69f9421137a82e08cb20631e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>net_sideband</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a3db80a8b92439ec1b912c80f74473c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ntones</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a896126f15f452dca71bf01e226596f23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pcal_base_freq</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a3dac7358cbf87dc9225e2e4957834977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pcal_spacing</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>ae512995911eeb4cded49739db168c91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phasor</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a0a01f01a19fa8de087f00c20b6943e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phasor_integer</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a4c5e60b62e6ce44ae1d7859d32167a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>polarization</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a2193c0553f16aaf82754e968026294c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rotated_by_reference</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a1745732c5f8aacd0d122b54c19c77eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rotated_freq_phasor_pairs</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a5eefca13fc8dd0477fbacaed5da09105</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sample_rate</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>adf9a19d62188fd8885d806a94fbffcfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sideband_sign</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>ac8a9761f705410de025291b022055271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sky_frequency</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>ab935111869af536a07d138d426da619a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>time_interval</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a58ae2dbf714265dfab766fd5a5e76dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tone_high</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a024828bff07ebe07fbf8058a6f624a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tone_low</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a075fef75132ac46e17bcd962c4c626c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tone_offset_freq_array</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a6dca20076e4978298859e463545df4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tone_physical_freq_array</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1SingleChannelPhasorCollection.html</anchorfile>
      <anchor>a78138e7d7923d97f700939e204debbc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fringe_file_manipulation::SingleScanBaselineCollection</name>
    <filename>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a91ab3724125eba3ee11b175a55ae4f95</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_baseline_collection</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a197df884818129d07c17cdc41171c169</anchor>
      <arglist>(self, baseline_collection)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_baselines_present</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a272cddafdcd5edc3e7701240abe537f7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_collection_for_baseline</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a94a479e86f8c4be94891024593d1f4dc</anchor>
      <arglist>(self, bl)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_list_of_baselines</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a4220a9f41b11cda223529daee3206094</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_max_dtec_mdev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a3ead2da58d72ac56e94a25817f277f88</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_max_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a546390218da2783b59e71dfb4306e9a9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_dtec_mdev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a7cd124ffa530218c48ea9a5f776a2aee</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a33210c661f883e8dd4e7fb574fd26b2a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_min_dtec_mdev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a2ccec7e315066fe4102a92a4fdb8541b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_min_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a6234548e407ab19c59ec38b60ba759c5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_n_baseline_collections</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a59a2a5686bb721e3ff1e1f117806c1ae</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_stations_present</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a7ff3c8b4745b0dadc1fc02e277329665</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>init_values</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a175181cc426708e32aef2575268cb3cd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>associated_root_file</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>ae6097d477b299dd6075e2d5cb2a64e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_file_hash</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>add40e17e705f95695cceb99fbdba80b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_filename</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a5bfbb37c7dca2d491edfc63f8b06851d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_dtec_mdev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a7fa0ed7b12df80ad30624d7b4f76d10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a3aee607bb56c1ec5b77f0d4b599cb496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_dtec_mdev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a4d58f5b5b7e2575979444af11d1c661f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>af2c432e23965a869459cd9ec19e75fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_dtec_mdev</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a51cafd547d45f067598537da77b51f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_snr</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a6966c10b44a90e80e52b550f2c17c2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>root_id</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a5e386aba32e6577abf6e9f610b02e78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a8f92ae377f9bf46782aaaffd96e3715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>single_baseline_pp_collection_dict</name>
      <anchorfile>classvpal_1_1fringe__file__manipulation_1_1SingleScanBaselineCollection.html</anchorfile>
      <anchor>a4459fac7d79557a6c5ce39eb6a81c9ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::ffres2pcp_lib::SingleStationPCPhases</name>
    <filename>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</filename>
    <base>vpal::report_lib::JsonSerializableObject</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>aca185ae58740c8eef59596865249eb13</anchor>
      <arglist>(self, station_id, pol)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_pc_phases</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>af6e610f3c94132e21daf5cc57d26391b</anchor>
      <arglist>(self, scan_name, baseline, pol, pc_phases_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>apply_sigma_cut</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>ad9a212596f829cfa3e3ce5c183f14a18</anchor>
      <arglist>(self, sigma_cut_factor)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_mean_phases</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>ab5778b491816c8e11d58a9b40b3acb83</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a113db7ba79c0d0ecbff91e54719dc58b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_channel_n_datapoints</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a6d975e0d1526393c2e17aa31c0654137</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_phases</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a3543f13db1863613b23c584552716b1f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_stddev_phases</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>ab0ffd1911f6b8fcea6b0544e2e8096c6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>is_empty</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a1523b1a7d79f19785a3508569e44f07e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>merge</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a8e867b546d102ed1ef334b47c19d6790</anchor>
      <arglist>(self, obj)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean_pc_phases</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a642a7074c41a75f034fc8a71a1f2cafb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pc_phases</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>ac5b795481681728541749443a013859e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pol</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a73287426374a6e36ae3da5680aab9aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_baselines_used</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>ac7b88f295c240951c45ddf5ea9a6ad7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_id</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a40589046383e726514d7be855884ae15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stddev_pc_phases</name>
      <anchorfile>classvpal_1_1ffres2pcp__lib_1_1SingleStationPCPhases.html</anchorfile>
      <anchor>a47f9abbde867b6c98ab6086ac534ce0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fourphase_lib::SingleStationPhaseDelayOffsets</name>
    <filename>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</filename>
    <base>vpal::report_lib::JsonSerializableObject</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>af3ccb9e2cc63878b55f23988891d5a9c</anchor>
      <arglist>(self, station_id)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_phase_delay_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a91cb5b82ab7756d44aaa3720a82c82aa</anchor>
      <arglist>(self, scan_name, delay_offsets, phase_offsets)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>apply_sigma_cut</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>ad387f0ce490443509553f78225a1e2e0</anchor>
      <arglist>(self, sigma_cut_factor)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>export_json</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a4370a90a66c896a27c0a23d2952cbd2e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_all_delay_offset_values</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a3123c7b8277a5321106e4dc3f884e878</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_all_phase_offset_values</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a73ff3e1d64e36df10210acbc0faa781f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_delay_offset_error</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>acf3e99ae4144cd82fe0e521a541b39f8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_delay_offset_mad</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>af870e0df0e5f80bbb0041cda57a37168</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_delay_offset_mean</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a78c12b0c2f9e58d59b3bccdf3e4b6a20</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_delay_offset_median</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a4c8dfc881fbe95bb434136d70a46f3cb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_n_cut_entries</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>ab8257238bb138012a0d37f95d02d91f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_n_total_entries</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a3e68767688be9dea726a48bc647ab0e6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_n_used_entries</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a9908c216f234821941e91105e182c369</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_phase_offset_error</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a407f0d88e57295b2ab134fac04b43202</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_phase_offset_mean</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>afd79afbab7e0d0a10a9c5ed7bfaa9391</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>use_data_point</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a4dd8781e66ee92f212b7b1fc0c25e18c</anchor>
      <arglist>(self, data_point)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pc_delay_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>acdd9854ef804247a02f3bd2eb57ac83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pc_phase_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>adfa884dae4bc5a45ba11536e26a5342f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_id</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>a2aa9d10e58f50750eea859ff4941cf4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>used_scans</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets.html</anchorfile>
      <anchor>ad657b37c886fa0cf2beedfc9f7dfa461</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::sky_coord</name>
    <filename>classmk4io_1_1mk4io_1_1sky__coord.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>sky_coord</name>
    <filename>mk4__typedefs_8h.html</filename>
    <anchor>structsky__coord</anchor>
    <member kind="variable">
      <type>short</type>
      <name>dec_degs</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a7cb63c53c0f5be19894aef53c603eaa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>dec_mins</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a5ab08bc20c503c8fe5b7607f34929e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dec_secs</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a1f21d23111fba481910c1c092b34bbb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ra_hrs</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a07fb5919ad086f1a7414fc6ac475ceb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ra_mins</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>ae1d0c619e82d00677c846953d987ccd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ra_secs</name>
      <anchorfile>mk4__typedefs_8h.html</anchorfile>
      <anchor>a49386161a6bb65887baba54c79dcab1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>source_info</name>
    <filename>summary_8h.html</filename>
    <anchor>structsource__info</anchor>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a3939d681fd6f13ad7b5d35ff242729e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a4f58b775a6ecd56a0aad6a973e1d7d0e</anchor>
      <arglist>[32]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>source_struct</name>
    <filename>ovex_8h.html</filename>
    <anchor>structsource__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>calibrator</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a809176def8e26c2e02620cd9a2d252fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dec_rate</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a3c2b37a71b6dbb51d12487e99a21af33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>iau_name</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>aabc2b183083ea7cd749502602d1064c6</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>struct sky_coord</type>
      <name>position</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ae8a46da6e2c007307c62dd7e39a35d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>position_epoch</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ab9ce74098c04122a61bda196ed26ad56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>position_ref_frame</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a8eb3ae954e2d7ea0fc182d946f3db7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ra_rate</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad206d63eb4540adf64e23c8cc135b24d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source_name</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a588f8ad3e5aac72c29518b7487d84c8c</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>source_type</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad1cff50b5d7797e4f59a170a7ea93142</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vexpy::vexpy::source_struct</name>
    <filename>classvexpy_1_1vexpy_1_1source__struct.html</filename>
    <base>vexpy::vexpy::VexStructureBase</base>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::spectral</name>
    <filename>classmk4io_1_1mk4io_1_1spectral.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>spectral</name>
    <filename>type__120_8h.html</filename>
    <anchor>structspectral</anchor>
    <member kind="variable">
      <type>float</type>
      <name>im</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>af0c223fa42b63dbaf3621565a134f8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>re</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a983f0d6cb65c616103878fda29639dbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>srchsummary</name>
    <filename>search_8h.html</filename>
    <anchor>structsrchsummary</anchor>
    <member kind="variable">
      <type>fringesum *</type>
      <name>darray</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a7e3d0ca8f9e3dca7cd5883b198d1bf28</anchor>
      <arglist>[MAX_NRATE *MAX_NDELAY]</arglist>
    </member>
    <member kind="variable">
      <type>fringesum *</type>
      <name>datum</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>ae09f4a35e6cdb9e41172e9c611cf71b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>max_delay</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a0992946168b275c99305711179d0207a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>max_rate</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a2ff434e5adbfb77d3760d97082224a2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>min_delay</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>afe07e73445959c4ef3b900e8db88799d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>min_rate</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>aed6aa91265e0f93e9cb7d33f17322622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nd</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>ade45f7807a10cf2bd0321143c520e9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndelay</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a9cccffc3455fe6367543f25103175f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrate</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>af83f43cf3b77c15508d70fc8a1a8e0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snr</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>a6685d1f4dc6239603177fa6d05a12ea7</anchor>
      <arglist>[MAX_NRATE][MAX_NDELAY]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>srcsum</name>
    <filename>summary_8h.html</filename>
    <anchor>structsrcsum</anchor>
    <member kind="variable">
      <type>int</type>
      <name>begin</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>ad8f63055abf4ea5b907b051ea0011842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>btq</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a8881c6138f0ca0aac1639530e06d922a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>btq_allocated</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>afbfafe460457f3ca198ef6cc74a5b878</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a10875a3252ec368a2c1aee4321c3acf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a36eddb25e3978a5c1911cdc8e0840a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a803964269333e55b1d4f4cea6c83305e</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbtq</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a79cea437f7ea6e433bbc07601469a421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qcodes</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>af13342b22c618f23b6d627af26e34846</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snrmax</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>af8cfb37bdaaca2c4b8340346d223a6c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snrmin</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a1c9630b2c3d46042a4091c5edb4c28c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stations</name>
      <anchorfile>summary_8h.html</anchorfile>
      <anchor>a4ccd03e9220fc95587909b1cd7561c3b</anchor>
      <arglist>[MAXSTEXP+1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>statement</name>
    <filename>vex_8h.html</filename>
    <anchor>structstatement</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>end</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a4b1f9bf2973ba600a7d89505c2d45219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>start</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a4149c9c440e567046589b4dc37a3c659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>str</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ab637e4540043c6540e91638f7a9177de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>station_log</name>
    <filename>lvex_8h.html</filename>
    <anchor>structstation__log</anchor>
    <member kind="variable">
      <type>int</type>
      <name>autopeak_interval</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a0aaf119c5fbbacc2fefd0fddbfb6c876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct discinfo</type>
      <name>disc</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>ae223ebcf1cb10d78843972170a6a7c5b</anchor>
      <arglist>[MAXDISCS]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>disc_set_ID</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a7209cd26b6f447b9139181e87a2ef00e</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>discstart</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a2030e42f0b767a8b1e314099b1f44834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>discstop</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>afe6f7b167124db5e0283006d1c8f67df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>end_footage</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a3d045ab722cad9e6f40bb7733963589c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>headpos</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a698ef7cbf8afa019a1f6f4dd97c2ab07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>linked_stations</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>ac64bf27c5cfd18b4197ff9c4f1b67fbe</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndiscs</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a3afb5974c19eb5e0b0431858d4700095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pass</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a640f4e1ee829d1620a24580dac622a30</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a841aeee5e28d5923d747f2ad2a6c75c7</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>long long</type>
      <name>start_byte</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a1b79e54ece11f25a9239f75f76a30704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>start_footage</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a1a09a4538b36aee89f997a9930a40c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>start_speed</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a51eb7d2bb45141aa596372cc7041ad42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>station</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a4737dfa4e36bf1da771ac04c6f06904b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long long</type>
      <name>stop_byte</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>aab93e59ccdc122e4a691713c4bec2a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>tapestart</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>ad7960813dacfed28f780cbc9901b862f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>tapestop</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a153aed856898665112762402227d82f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>time_on_source</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>ad96c3ebe2333e2e9956605e868af671a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>vsn</name>
      <anchorfile>lvex_8h.html</anchorfile>
      <anchor>a9e13e037e922778a6d7ede5cc1a0f543</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>station_struct</name>
    <filename>ovex_8h.html</filename>
    <anchor>structstation__struct</anchor>
    <member kind="variable">
      <type>float</type>
      <name>axis_offset</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a661261bc2fdff7677d1fad76a887bdbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>axis_type</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ae825df983ffe16c309b5623f96515126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>bits_sample</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad88a5e9c0b8bf2fb5f9b5b0116faf089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct chan_struct</type>
      <name>channels</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a2ec6764e0f4e6673001e80c0aeb15476</anchor>
      <arglist>[MAX_CHAN]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>clock_early</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a2282cd9ce912fcb46bd9f7e688be37ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>clockrate</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a6940f16cafcd51901416f4c44b8a1ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>clockrate_epoch</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a6e05d9b0f20f075f56c2098b53c36c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>coordinate_epoch</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>aa249421265c1c6c68ebaf9dadc399977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>coordinates</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a0fecc8f8f3233c7829213851c0298fa1</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>drive_no</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a5477b302032f4ba27bdb24b8ac56de1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>early_start</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a358fdb7e5293acca826e8b043705100d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>head_position</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a81a158180e3dafc11e9a10cc73bb159b</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>late_finish</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a7f1b074d30d55f152a0d29bc426f2abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mk4_site_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a97e8aee8feb60df946cd4fec72233f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>modulation</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad170d68bad1277ab160c9f49472657a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>multiplex_ratio</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ae6e2ee7bf08e04d2f20c0031b29a2ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>occucode</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ad69d90888d1388164d48a638830df4b4</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pass_direction</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a93f1cce1da7283a86459de290542c5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>passno</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a9cdd80b8f6728cbb251c471092ab0030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rack_type</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ab7d03e5d71ec6916079633c5ee878ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>record_density</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a814b999829f4f51ca0e33f4397c379c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>recorder_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a429c2caf6f903457959081c4848f834c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>recorder_type</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a990d94bc9da457a7e890ec73fa24cd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>roll</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a618d5c05372a49481ae21b848c27b4f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>roll_increment</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a7139575e75b8f78ff4dfa3c06ec49be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>roll_period</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a53e57b3059a9883d51becf12ebe42660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>roll_seq</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a4dff8c60edb8bc99ece30a323ad9a3c4</anchor>
      <arglist>[5][34][32]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>samplerate</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a8e81d776ed155d1d593760ffc9d60864</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>site_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a8e0f89fac47f41bf1b326301a7413ab2</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>site_name</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>af6366fbb80d495702bc869cb96659805</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>site_type</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a746841fbde6c194aafdedc606d7be925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>site_velocity</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a3649f3686a3efaa76179a911b8ba7151</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>start_offset</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a266619d6727a91faae426e99222ef2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>start_tapepos</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a70b57ab5377795975a939021c966570b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>stop_offset</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a97502f8e6191b06c672e739b625dff6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>subpass</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>ac3d94f885692e1147c4c0cb0080dac4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>tape_gap</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a3ff2a7cd4a46f70d990652713ae1dc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>tape_id</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a817b6af709c26e5968392c4b296cca77</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>tape_length</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a7007efd465ab11efa751fd289b56c6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>tape_motion</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a6bb6ede13741a0a552c13b55c429d578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>track_format</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a5536c7bda0f333b9fc6f39d87e56ec0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>zenith_atm</name>
      <anchorfile>ovex_8h.html</anchorfile>
      <anchor>a223f03fbf664f60d8da1bc168b2cf8c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vexpy::vexpy::station_struct</name>
    <filename>classvexpy_1_1vexpy_1_1station__struct.html</filename>
    <base>vexpy::vexpy::VexStructureBase</base>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::StationExperimentPhasorCollection</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>ad51576de161915eb1ed62978480054c6</anchor>
      <arglist>(self, experiment_directory, channel_to_band_map, mk4_site_id, verbosity=0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>apply_arbitrary_scan_as_phase_reference</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>aa2004926359209bf62b36eebb3146860</anchor>
      <arglist>(self, scan_name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>apply_start_as_phase_reference</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>aa5329cc3801f18f88880afd713db2591</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fit_scan_band_delays</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>ac1cdb7edbf46e96c9a285ae4e6e92e36</anchor>
      <arglist>(self, active_band_pol_list, method=&apos;basinhopping&apos;, trim_length=DISCARD_OFFSET, cut_threshold=2.5, outputdir=&quot;./&quot;, verbosity=0, use_progress_ticker=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_dat_files</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a4f77e13fbbd97d02e23c548bdf3845bb</anchor>
      <arglist>(self, pcc_config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_refererence_scan</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a9b2bc0ed61c335acd15eabcf211419e0</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>initialize</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>af97b0d19ad400b37a56b9b3b91101f0c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>locate_root_files</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>ad4da296cceaef2322783e10f10520a72</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>read_in_data</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>ae1ccef54a15831da343056c581155601</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>active_band_pol_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>abc6a3137ec40efb921d74236432f7f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_to_band_map</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a8f3cbb9884059aa6edb6f42b53313709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>datfile_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a825d8954d5176fbc41734494b8ec757e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_dir</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a51ba9b1960cc66b0cdcddf4b55e37169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a6fb90056aa56306c68b01e74ed84a18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_num</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>ad43327b421f0d6563dc4505c5223ecd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mk4_site_id</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a0efe2383df50cd2e57c5e6617976b9ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>reference_scan_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>ad82c6664f4ff2437a509a1e0735417a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>reference_scan_object</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>adfcde3234dc2a7573685bf4a6398c8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>root_files</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a2c1bbff04b364d7e620884e8f3428bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sspc_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a03b27a6b7fd3905f2e2f93bcb300d61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_code</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>adabac573c9b2c63154369ccdddf6bb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>verbosity</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationExperimentPhasorCollection.html</anchorfile>
      <anchor>a4bc321b895e42d0f7a2403934b251003</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stations</name>
    <filename>difx2mark4_8h.html</filename>
    <anchor>structstations</anchor>
    <member kind="variable">
      <type>char</type>
      <name>difx_name</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aa2c668bf6efa37d3f0680914edb0ad63</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>inscan</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ac3b2b09494de596a90d4014121aecd58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>intl_name</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a94fd8563f197140371275aeb937334f0</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>invis</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a94f820da5b097578368382585f8f7c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mk4_id</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>af17f5f0c3e710549bfa4d7effef382b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::proxy_cable_cal::StationScanPhaseCalibrationData</name>
    <filename>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a5877d95c78bd368f0cd01771b779de4d</anchor>
      <arglist>(self, mk4_site_id, ovex_data_file, verbosity=0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>apply_phase_reference_collection</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>aa1e2af9d05fcc998e2f9970fd2c5d44e</anchor>
      <arglist>(self, ref_station_spc)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convert_integer_phasor_to_float</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a4b98dd4cabc15ea008376f39182df627</anchor>
      <arglist>(self, u, v, acc_period, sample_period=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>extract_ovex</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>af543186c5abb9abe334d3ca51eb302bb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>extract_pcal</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a2d76209f29b28ac48ad4248309360b34</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fit_band_delay</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a9c432376115266d2b2b866a55eb04993</anchor>
      <arglist>(self, channel_to_band_map, band_pol, delay_fitter, cut_threshold, verbosity=0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_band_reference_frequencies</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a001800b75a7f9491e9673725981fc0eb</anchor>
      <arglist>(self, channel_to_band_map)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_tone_phasors_grouped_by_band</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>af4b352579f31f56303cda893fbf28706</anchor>
      <arglist>(self, channel_to_band_map)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>azimuth</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a725eb526c2618d4fed032a74f1870f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>channel_name_list</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>abdf40c9baa7515f8d110fd61d6c0b723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>elevation</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a28ae17a33a2a5e5e8f78ab5f519a5c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>abe65e7d59b0831efb0c392943c47a400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit_results</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>ac6526c8fe8f80f19b10f7d8e82e73d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fourfit_ref_time</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a97f73746e85ca751d45c38ef17944dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_channel_bandwidth</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a9ed432d3b57fd64d576e3fd968229773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mk4_site_id</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>adb76b66637b6ddedbcd822e312f1e21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ovex_data_file</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a98ef66ab84ce810499aed322f9f99abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>root_suffix</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a4317b0e83334fd9c6dcbd16afcbd3429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sample_rate</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>aaf6f2ad1748ed0921321dda18e4610e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a4f8564fbc8e5efb1bd9b12ef8b60d82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>single_channel_phasor_collections</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a1fde14d1b2071a4be99a781cc705a103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>site_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a32070741b8ccfa930bb2cf63ad1bc9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>source_name</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a6f50bfa5ecdf2dd117f87d77f3024dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start_time</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>ae84a951409a1e93e89572a3c0dc46a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_code</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a784f6edf504ffb75c5e1b0e221b9fe86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_data_file</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a4b8150761bf9b35abf8518d8452d4cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>valid</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>abec79779ddadfee1341be171d88d6180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>verbosity</name>
      <anchorfile>classvpal_1_1proxy__cable__cal_1_1StationScanPhaseCalibrationData.html</anchorfile>
      <anchor>a1c44585587912c431fd518c9e2c40ef9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::stcount_struct</name>
    <filename>classmk4io_1_1mk4io_1_1stcount__struct.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>stsband</name>
    <filename>general_8h.html</filename>
    <anchor>structstsband</anchor>
    <member kind="variable">
      <type>struct istats</type>
      <name>psb</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>a2f026f330a4ea96f996f321285dd7382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct istats</type>
      <name>rsb</name>
      <anchorfile>general_8h.html</anchorfile>
      <anchor>aa70c7a7a99c8d959ced0730688c811b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SU_chan_out_struct</name>
    <filename>svex_8h.html</filename>
    <anchor>structSU__chan__out__struct</anchor>
    <member kind="variable">
      <type>char</type>
      <name>chan_ID</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a270234f43bb5142432feb085e67e22fc</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>freq_a</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>aadebf5ca71408982ed6e52e55f2cf78e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>freq_b</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>ad8fc7d9c8694e6b5e9d16611816a0448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>freq_c</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a70b0654069a3d0f659482da7fed08546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>freq_d</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>ae3eb0638235b996e39f82d7c4499cde5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>su_connect_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structsu__connect__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>corr_segment</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>addc1668d721a8d668928592035437d9f</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>inputbd_chan_grp</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a2a7d7ab171a12a7f198d8a8defc82182</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SUCC_port_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structSUCC__port__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>console_port</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a35efa5e383fcfcca88649a945649591b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>DPU_port</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a43c4007e1a01af6b6aaf8ade2aa777f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>server_envname</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a2ca2100778d0c9141824e18d4c21b296</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>summary</name>
    <filename>average_8h.html</filename>
    <anchor>structsummary</anchor>
    <member kind="variable">
      <type>int</type>
      <name>end_index</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a29dc84e193a478a21c97d4b56ee10159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nid</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a79593e8db8cbf2733b8eac3f0116e4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>seglen</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a1deaa85130d928bbb3d8a35eff4387e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start_index</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a4b6d1bda45953cfa07ee2062333c1130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbsumm</type>
      <name>tribase</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a07187265c1ee3baeb10c3f098f8732a9</anchor>
      <arglist>[MAXID]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valid</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>a2475d68ee6f66712a06f0df3b0d675ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>svex_struct</name>
    <filename>svex_8h.html</filename>
    <anchor>structsvex__struct</anchor>
    <member kind="variable">
      <type>struct pcm_cfg_struct</type>
      <name>pcm_cfg</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>ab8b476641b1084a7fa23a99c3a37e496</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>struct SU_chan_out_struct</type>
      <name>SU_chan_out</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>aaa742f99e3a1d5e8a290d5dd5f6d6d9e</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct pcm_tab_struct</type>
      <name>tables</name>
      <anchorfile>svex_8h.html</anchorfile>
      <anchor>a9b4a439280f26b722362c25b02afd715</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_R130</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__R130</anchor>
    <member kind="variable">
      <type>uint32_t</type>
      <name>enabled</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aa301e16a7fc803815eb8ec20fb44840d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>headTap3Carry</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a4790da0bff2b82c36425ab377ad4f669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>headTapPastEnd</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6f03bd3d730862e0d60e243e502d5761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>occurred</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>af14637dc58c577c5dbf7511aea94d8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T1_RecHdr</type>
      <name>recHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ac552b37e1b62b28be6da3d825c7491b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>tailTap3Carry</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a4dedc8a187344df83bbea18e34a0114d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>tailTapPastEnd</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a5738c70e3ba88eac0d3c4ee0e3901ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xCFNum</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ab2bf6b0d50e763dc46921a815b3ac8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xChkSum</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a981ed808337220ac1c8940dd8c26a368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xChnId</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a5e7d98f5066f042a9de0736f685d0aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xInBdLink</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ac26bbd1fe78acaf46151aaaf34dbc295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xInBdSync</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6cfef3081d909284f78739f325e8f717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xSuId</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ac2433da52d8b6748db5fb3f8880fd753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yCFNum</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ae2d2f59b52640130494b3f15809e7375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yChkSum</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>adbee28ef552e681c3fb4c76dfc24c1af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yChnId</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a1be4b928eb2292b44d18e96cc12ef452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yInBdLink</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a59141abdfba04fe8831aeafc1818a61d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yInBdSync</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6fc564d5f35731201de0ba2c7807c850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>ySuId</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>acaf28d2f06db242fbf31b1038673352a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_R131</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__R131</anchor>
    <member kind="variable">
      <type>uint32_t</type>
      <name>linkStatus</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>abc7065060e90085de1e74ce509485c60</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>T1_RecHdr</type>
      <name>recHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6a48dd0900df34690948c794c7542fc1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_R141</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__R141</anchor>
    <member kind="variable">
      <type>uint32_t</type>
      <name>cFNum</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a30ec54064af34797ba355f778f71f714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>chkSum</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6455c286c1e806c9e2818161a6036bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>chnId</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ae047f456861171d76addd6dcc20ff8ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>dlyErr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a5703eaf1c6417d6becb7fc0910c82ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>dlyErrRate</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a1cd0d32c0b4b854f1cd5ff63b5c830ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>flags</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>abd6d3fe573ed5d46896bb1dce0319bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>oversamplingFactor</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a57250884ef64738c1ea9ff4503643ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phase</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a3eba4ce9975d594fdc866feebf45a64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseAcc</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a8424471a9baa0ec14002d1a6b176f275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseKAccSegLen</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>acde67cb74bcc0930a11889a7c7251c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseLogIncPeriod</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a0d7230ac010dc051d6d97c0f9f266511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseRate</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6fdd7beb9d74d00539513ce813e67d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T1_RecHdr</type>
      <name>recHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aa1438db0870fa3cc10b0633c978285ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sideband</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aff9689e16d9ee339b5aa9f93930bd698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>suId</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>af9caf6863c5abc14e687f8f6d885f605</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_R142</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__R142</anchor>
    <member kind="variable">
      <type>int32_t</type>
      <name>bDly</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a0c3391dc1768a918a7cb11ce974c9704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bDlyRate</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a9a839b03c40f357c3e8d79a598ca5f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bDlyRateSign</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a51aeb75f0631b04b395f1bab75dd2092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phase</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a2bd83b77285ea268f414a1546d2fe2ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseAcc</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ac5c7c2f9bc649a6ff656a29ca2e97389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>phaseAdj</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a0e3226914ff28741f8ce0acb5ebd6f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>phaseIncClkDiv</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aaec618c367ef4c887ffdb3376b89e4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseRate</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a8b17b5c6dee9007bea0bc953c79dafad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>phaseRateIncCnt</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>abae634241ac920ae6cba95b2e0215a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T1_RecHdr</type>
      <name>recHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aff38c8da932abcd21e7b8b25ccdc49dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tapPos</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aa13dd5e6aa32b72daaa37b3173a65aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>udr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a38ca89842640e5f1309538b40196aee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>unused0</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a579fd91e4013bba6fdbd8abf42305a49</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xDly</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ad2788d8d44138109aed041b971b955dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xDlyRate</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a77c6511c2caacb47970311a3879cc268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>xDlyRateSign</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a8ae82cf309a815d096bce067a6a0bf43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yDly</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ae181e19bccf2494a2da2b35bb56098a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yDlyRate</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a7467045152b8143554431fdc7bb29a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>yDlyRateSign</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a35db8a604250a9933a51844f48e235af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_R143</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__R143</anchor>
    <member kind="variable">
      <type>int32_t</type>
      <name>bDlyFinal</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a983e7c710c9a6d83bee638266ffe4d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bDlyInitial</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ac6e18440a54ce8ecc8a9916cf9e508f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>phaseAdj</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>af49f09d9fcb971d1003d4cae9d88020f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseFinal</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6174c87d9a1f817352ff744b3d05f819</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>phaseIncClkDiv</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a549087c1a410bf3ca34d2f99cb561033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseInitial</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a2ea884935ba941c9a16501107211d03d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>phaseRateFinal</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a8ecfbc729fddbdd87e54da18b90025e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>phaseRateIncCntFinal</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ae615e871f17f4ae376a82511c150d37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T1_RecHdr</type>
      <name>recHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a99f5ac4147bf513b073e4aff08e2db03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tapErr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a10460d3e449d7118180bc42279ab7450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tapPosFinal</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ab163cc70bec34282eeb2398d5c02cb2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>udr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a31e41828197030460109002ba705ffac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>unused0</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a5233318e46efc1d07c0d0a18e7297f2c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xDlyFinal</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a7ddfd9da098f345f5be6546e2e2ce624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>xDlyInitial</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>adf6d80c79808e0015362ace8e31f8559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yDlyFinal</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a5957feeab0faa73afc44f4a582f86cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>yDlyInitial</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a597d31a554b1c9428255c4ea4b2945c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_R144</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__R144</anchor>
    <member kind="variable">
      <type>uint32_t</type>
      <name>cFNumEx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a799fb5d868cbad3413c6d77f577e0b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>cFNumRx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a6e9813f135e706fa7735d66cba9c2726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>chkSumEx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a770a9edd461b32b8851c0fc419e55c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>chkSumRx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ace482cf06dfee74d330601ea6c27197e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>chnIdEx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a3a5561b7a3190b9008b952a30fc5d9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>chnIdRx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ad06bdc411bb15d6cec67e0b5b4376a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T1_RecHdr</type>
      <name>recHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ac6179002dffdc9c41c404fc24b8d8342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>suIdEx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a86c26c6bd8ce03fbd814be81116c364b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>suIdRx</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ab29f15f0b039b4370af82d1950f96189</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_R150</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__R150</anchor>
    <member kind="variable">
      <type>char</type>
      <name>qcode</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ab3d5f2d7d8e4adb53b4be503556720ea</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>T1_RecHdr</type>
      <name>recHdr</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>ace18f72a0b94ca1fa1a9aaa6c4f17d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>unused0</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a01dffc1f2ef8a690cf360b67fcb84cdd</anchor>
      <arglist>[6]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>T1_RecHdr</name>
    <filename>T1_8h.html</filename>
    <anchor>structT1__RecHdr</anchor>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ap</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a0c15b63598fb14860b16b737c5fc1299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a88e6fecdab2f2856f3040d1f848d398d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>cFOffset</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a09622f4eef5a0a144cc63d2cd7d762ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>index</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a72c6495066b005f594281b70ea46c665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>recFmt</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a20212caf6285b81e0944cdff4e86d697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>recId</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a2c8118459e918c540f3dd43b571bb69f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>recVer</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>aed6288c98a30060eb422a3eae937b3b3</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rootcode</name>
      <anchorfile>T1_8h.html</anchorfile>
      <anchor>a718b1b4efa79b755b08f105cdedda698</anchor>
      <arglist>[6]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tapeDB</name>
    <filename>tapeDB_8h.html</filename>
    <anchor>structtapeDB</anchor>
    <member kind="variable">
      <type>char</type>
      <name>exper_name</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a8ba335bca48d7c12065bf0cc41c9dc7d</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>exper_num</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a18f568d9cee8030daa490e1aece3da9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>head</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a263956f38ca1eeab6b2b0abeacfebccd</anchor>
      <arglist>[MAX_PASS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>headpos</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>ae806935e3e6aa61ebe1d24cb5390118b</anchor>
      <arglist>[MAX_PASS]</arglist>
    </member>
    <member kind="variable">
      <type>struct head_pos</type>
      <name>pass</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a756b76a00f5c1ac246e1d542945a2499</anchor>
      <arglist>[MAX_PASS][MAX_INDEX]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a1bf8e1b39104d505aa9905fc77f42841</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>site_id</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a0f1e1dbbbe7ae87350d81762fe4162b3</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start_time</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a0268da4fd92e047a1563408f997cddd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>station</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>aa4d9b5d28314558123214d1656d58dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>sus</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a0b89b8739c64be45a956c7f76bd8b97d</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>ad071b47f49024aeefa42bd0d48bbb244</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>vsn</name>
      <anchorfile>tapeDB_8h.html</anchorfile>
      <anchor>a9d67b4eb7fab48aa569c82111103c0fa</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tbsumm</name>
    <filename>average_8h.html</filename>
    <anchor>structtbsumm</anchor>
    <member kind="variable">
      <type>int</type>
      <name>end_index</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aed47ab7715e7d3732336d6d86423b220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>id</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>adb94bbcce3cd16a302971e50d4e0afd4</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>seglen</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ac10567097b2cc531cb9ad125d5dc1522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start_index</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>aca31523f0586a6b16a7f74a43387be09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start_time</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ade364bde4003ebe752907eff8f72c198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valid</name>
      <anchorfile>average_8h.html</anchorfile>
      <anchor>ac2489f94f336cff983a4f6b35027943e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tim_mon_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structtim__mon__struct</anchor>
    <member kind="variable">
      <type>int</type>
      <name>fail_action</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>af8bdfed3eee531aabfcd1a3e70efd47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>maximum</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a061021f3f2df6f1520c6ad657d12e616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>measurement_name</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a09891364a7187d94f8c09a382ab2c6a5</anchor>
      <arglist>[MAX_NAMESIZE]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>minimum</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>acf488ba6354fc289c5bcc4847c39ce58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>switch_pos</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a191b2e8842423389b7e5c874bb5db7c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>time_account</name>
    <filename>account_8h.html</filename>
    <anchor>structtime__account</anchor>
    <member kind="variable">
      <type>int</type>
      <name>namlen</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a6292e5093d352044b96c55f418959da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>real_time</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>aacc04d6b157b0824643915d6ab9f0ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>segment_name</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a71fe8d1989802bce37d48007a47174cd</anchor>
      <arglist>[NAME_LEN+1]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>system_time</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a291bdb47352fb7782e0fc9cc85858a3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>times_called</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a0b99d889daeb5f3953ad35d6b96ea3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>user_time</name>
      <anchorfile>account_8h.html</anchorfile>
      <anchor>a7f72f7e7aa20b4454a34f7cfd36c845d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>time_code</name>
    <filename>hetetimecode_8h.html</filename>
    <anchor>structtime__code</anchor>
    <member kind="variable">
      <type>IPP_word</type>
      <name>time</name>
      <anchorfile>hetetimecode_8h.html</anchorfile>
      <anchor>a87a2e2cdb4d78cfe2e59e4c3a86f9b62</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>token_struct</name>
    <filename>parser_8h.html</filename>
    <anchor>structtoken__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>category</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a992a86d6f35342183bb5dc7f450ec3bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>line</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a425570fc6d8387465580cfc51c9ed003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>symbol</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>ae4bdff5c564e5ed0808576cacc577ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>value</name>
      <anchorfile>parser_8h.html</anchorfile>
      <anchor>a467c4025d2beead0161f56093ad6661a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::trackstat</name>
    <filename>classmk4io_1_1mk4io_1_1trackstat.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="class">
    <name>hops::MHO_MultidimensionalFastFourierTransformInterface::TransformAxis</name>
    <filename>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface_1_1TransformAxis.html</filename>
    <member kind="function">
      <type></type>
      <name>TransformAxis</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface_1_1TransformAxis.html</anchorfile>
      <anchor>a009f83d26ad4e3eb5c179e541548237c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransformAxis</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface_1_1TransformAxis.html</anchorfile>
      <anchor>a29fc9d545f79b92ed61c4404dabe6f1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface_1_1TransformAxis.html</anchorfile>
      <anchor>a3715c33ad87551c0eed9a97b114672ff</anchor>
      <arglist>(MHO_Axis&lt; double &gt; &amp;axis1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface_1_1TransformAxis.html</anchorfile>
      <anchor>aa70aae0af0c8c53c28eea27908824b45</anchor>
      <arglist>(MHO_Axis&lt; float &gt; &amp;axis1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classhops_1_1MHO__MultidimensionalFastFourierTransformInterface_1_1TransformAxis.html</anchorfile>
      <anchor>a6b57fc5497b44298aa80290c62a5bc99</anchor>
      <arglist>(XAxisType &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>trianglearray</name>
    <filename>aedata_8h.html</filename>
    <anchor>structtrianglearray</anchor>
    <member kind="variable">
      <type>trianglesum</type>
      <name>data</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a310e27178b9849b8847f9c107487e72b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>ac04d4892f2a5c9376bdbe1a75b47d06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a1ec18464676378c9680780aa8c362a66</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyval</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a4f21bd0f41bd4ae46edf33e283d6b5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastorder</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>af028ba71255bbae3378fb47cd1abe979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>a0e0c44f75c56864a9706dfa01ea7590b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>reversed</name>
      <anchorfile>aedata_8h.html</anchorfile>
      <anchor>aeb65dd537bdc02bab8b77b1bdb346366</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>afio::afio::trianglesum</name>
    <filename>classafio_1_1afio_1_1trianglesum.html</filename>
    <base>afio::afio::AFIOStructureBase</base>
  </compound>
  <compound kind="struct">
    <name>trianglesum</name>
    <filename>adata_8h.html</filename>
    <anchor>structtrianglesum</anchor>
    <member kind="variable">
      <type>float</type>
      <name>ambiguity</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a48b448bd921c126f0d30751fef5029eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>azimuth</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a8c24e786da891276ea10bcce20cf0d47</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>bis_amp</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aa3b2836e779b7660ccc2b15d7b84b6e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>bis_phas</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ae140394d00e214a2636c66a69e3d2a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>bis_snr</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a7ceff9748d53075532e37170eaa67add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>cdelay_rate</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a01cd464902ba6e73971c1834295c5cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>cmbdelay</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a5a1bba7d7ded230d8d4f8d8fada7c8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>cotime</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a0c23aeace0e13ef1d0767895f67e80c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>csbdelay</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a38114b47f780c09244637eeebe2838b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>data_quality</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a427b0d144fca5787f6aeb9c83460e3dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>datatype</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ae4a2e97d361cf989c6dc44a6bcafbf11</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>duration</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ab374e715bb3c2d046e78512d5c0d5136</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>elevation</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a285ba21d7b7ffda3ed6ecaf99bb473f5</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>epoch</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a4445cc79a5f6237b8cd2a39e3682cbd3</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>esdesp</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a662fa9be052f8a13298983b14273e19c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>expt_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a336e07103c70df7bd72fb69e6920d124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>extent_no</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a97b0b3df602ad14cdd4151281d60b5dc</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>freq_code</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ac494ea2b5ed5f3e3cc2994d3edfdc0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lags</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aebb6df56e31bdf2bf12d1f95db2fe14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>length</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a5a6c4207a3c219875d1ec3098b91ed4a</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mode</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>ac6405a36317c3beb112d1e9e6e5e4bc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>offset</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a5f9a4fbcf25ff14848644b956d4cbb33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aefb0d3da9e2588c1ee214ea1bf1402fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>root_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a9d4d387b6f48fa45e496195c0128d443</anchor>
      <arglist>[3][7]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_id</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>aefe7abe75951364bac78ae27e43d4fac</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>scan_offset</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a8fa8c7acb268a515a6a35f8d24ca8ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_quality</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a518462d8a8b2bfc132a71b9af27f0bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a2aa1ca9776c80a24704432cb3d739b0a</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time_tag</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a2b9e8651b0ac5627b9ea0ba9ad2d20e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>triangle</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a1830d5f0565caac7ce8341ebb5377d09</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>version</name>
      <anchorfile>adata_8h.html</anchorfile>
      <anchor>a053370e15a647fe4bfa269cdd9fb7e68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TRM_config_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structTRM__config__struct</anchor>
    <member kind="variable">
      <type>struct bad_frame_struct</type>
      <name>invalid_frame_control</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ab8a9880d22b51c8dadf206a024c6a413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mux1_1bit</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a247dbd318460282566416df0c9b37f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mux1_2bit</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ac8b4a97a6596d2336f34096063f2fcc6</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mux2_1bit</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a230ae733d025c24df64a1083ef0c3425</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mux2_2bit</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a159d06eea98cfecf1fecb747db8326b1</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mux4_1bit</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a309e4e5f7655ba8b19bdf122bafe31af</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mux4_2bit</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a5b9f7eacd7d90ddcd712939d64be0783</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>parity_error_limit</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>a6cefb76d13cadf449b8cd15666a86832</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_000</name>
    <filename>classmk4io_1_1mk4io_1_1type__000.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_000</name>
    <filename>type__000_8h.html</filename>
    <anchor>structtype__000</anchor>
    <member kind="variable">
      <type>char</type>
      <name>date</name>
      <anchorfile>type__000_8h.html</anchorfile>
      <anchor>a904f3c8d3989201656ec902b8d953f39</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>type__000_8h.html</anchorfile>
      <anchor>ad72582c5ecc43295545965a66df606af</anchor>
      <arglist>[40]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__000_8h.html</anchorfile>
      <anchor>a40e6839be1290901fffdd23421b0a756</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__000_8h.html</anchorfile>
      <anchor>a65b381cda77ae1931d3aa63f433cb69f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__000_8h.html</anchorfile>
      <anchor>aed6690d535bf459927ab5ae2d2b2f182</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_100</name>
    <filename>classmk4io_1_1mk4io_1_1type__100.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_100</name>
    <filename>type__100_8h.html</filename>
    <anchor>structtype__100</anchor>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a03061f2d6976f5196e85976c2923bbbf</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nblocks</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a72a742d1995a6d7a9bb0d29c54a2c7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndrec</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a29f02500cbe7be1e13aa82f2cd3b9386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nindex</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a01e8221e832477c1b041466608714049</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nlags</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a4109439aa45a6826ed816f7e8900b37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pct_done</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a0310a31443d7783d1f3875f74eda1482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>procdate</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a13584881cb5da7eb67732e8787050b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>qcode</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>aeb31ae7abaf406d079277b700c6369a8</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>aa6e3c799e5df36cd4bc2e5b7bb57a9e9</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rootname</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>ad134d70ce11b35e3ac8b3d0f0c3df8e2</anchor>
      <arglist>[34]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a471321a6ec301345d6d843d62eb958ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>stop</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>aea0fec478ce847e19b3fe4a4f68b6b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>afc3335b98e790bee21c9534db5182cb6</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a37d134541fbeb45c0d54882f24108cb0</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__100_8h.html</anchorfile>
      <anchor>a591774d81c42cff0f7c956d84ddaaeab</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_101</name>
    <filename>classmk4io_1_1mk4io_1_1type__101.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_101</name>
    <filename>type__101_8h.html</filename>
    <anchor>structtype__101</anchor>
    <member kind="variable">
      <type>int</type>
      <name>blocks</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a63283eb306554ecdbdf5c6149a8d5830</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>corr_board</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>afe69bb4a903ed5d66b3f2ee0e4117c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>corr_slot</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a6d9df5405e2c903fe99b608028637ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>index</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a622700b30f078f0b0fc70f833fdf6c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nblocks</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a74a165dea3203d4f2e637a945b64ea35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>post_mortem</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>aecaa81597584badaceb9dff06ef97c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>primary</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a5af092a598da77824a91cb961f621bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a9817a99ac93b27f43b95ce00956ff6de</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ref_chan</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>adae12a44f4c94b0ab1de8b217a3f48f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ref_chan_id</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>ade13bc0e69458e13a7b13cae73802f9f</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rem_chan</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a52fd61887fd57ba7a2935bc5659ef51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rem_chan_id</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>a79c61b72cc69475a71e19f26a614acea</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>status</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>ae4df0349b4579c4cbddbe4401c5a327e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__101_8h.html</anchorfile>
      <anchor>ac2569d4141d714d4c1fa677052ad044f</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_110</name>
    <filename>type__110_8h.html</filename>
    <anchor>structtype__110</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ap</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>ad41bf8e91f2775747ec62f6ce2886f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>ae6703fd2fb86879e9af48e42b27d014b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>bitshift</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a35e154e6cfade620d7f7285f12ea35dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>raw_data</type>
      <name>data</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a964f04dfda4fe8415ce3ad6c4ecb521f</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fbit</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>aadf039b9a49ea29065b7be90c525fcc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>filenum</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>ad74a4afe579b2e3a46443a2017164901</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a32641beb7db875fe038c23b9dcf30ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a2c7fff6966462ce982a1ee835df84e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nblocks</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>ab7ae9757802899546e9621f3482eb99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a6420829c4c9e8f1bd1a3aeb956b6437e</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rootcode</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>aeac4565768d660d8396c0cc7ce661bd6</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a65d4bf339771fe059888897ea2e56ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a4b5945b48b7eba35abd0194aacc95adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>ab52f07920f8899624b1d84d2bf1ecb9b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__110_8h.html</anchorfile>
      <anchor>a9b9eceadfef436d996bfb64fbeda9b87</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_120</name>
    <filename>classmk4io_1_1mk4io_1_1type__120.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__getattribute__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__120.html</anchorfile>
      <anchor>a8fe06b214158129b0fc6169c54a61742</anchor>
      <arglist>(self, name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_120</name>
    <filename>type__120_8h.html</filename>
    <anchor>structtype__120</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ap</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>acd3e1d8d003b6670a0634e5423c559f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a483795e4c4981d08cbf7c74892d0632d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>delay_rate</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a85dad9782c3a7c3f0be142b8fe472aea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fr_delay</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>aae2a66bc8473313c25be18f2a63ce9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union flag_wgt</type>
      <name>fw</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a69b5ddf9c84c9f31f9db349fa6a975eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a1f15045b0f870162882ec5dd5237547f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union lag_data</type>
      <name>ld</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>aadd31a844f1d520c511b54b663020f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nlags</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a2ca18fad13d3e479378c7acad8337cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>aa1c50e67ba019791b9381179029c41e6</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rootcode</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a75cf01f5064edb0af552de6ed98c5652</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>afb795a711ce882899008915519ff22e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>type</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a36fbb5c677645381e751745cff6a3d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__120_8h.html</anchorfile>
      <anchor>a6696827ce76ead072c65400d31a7dc01</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_200</name>
    <filename>classmk4io_1_1mk4io_1_1type__200.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_200</name>
    <filename>type__200_8h.html</filename>
    <anchor>structtype__200</anchor>
    <member kind="variable">
      <type>struct date</type>
      <name>corr_date</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a8135de5caf2892f9056f0bc0dafb1e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>correlator</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>ab3b4ff64980364b997af6e4fe2e0ba9d</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>exper_name</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>ae36300821effb4e4ab3c9da67bb6496c</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>expt_no</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>acdab6a27f052373e333df02a16cc5b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>fourfit_date</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>aa72aa5f391cf34207cb6a448b85a4669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>frt</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a65f0e6a85e349d3b35f446211b380ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a8724efd1729fe675d0bc60490d47f3e9</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>scan_name</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a21256ab1a71894dac7e937bc9a231300</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>scantime</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a690cad5c3554681fc0592a772f5cda71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>software_rev</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>af6c7f990ae4eb209ad074a591f59d5ad</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start_offset</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a47638d2929dd6b3f1eec75cff2b99a17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stop_offset</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a43ce0d2852276dbc70469c29cc9ce7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>a8ba0cbb5caf69dfff23d951e7b53683b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__200_8h.html</anchorfile>
      <anchor>abe318f440a7a066404aae000e48dad48</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_201</name>
    <filename>classmk4io_1_1mk4io_1_1type__201.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_201</name>
    <filename>type__201_8h.html</filename>
    <anchor>structtype__201</anchor>
    <member kind="variable">
      <type>struct sky_coord</type>
      <name>coord</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a5e89d11ca5eb680b872e37c6bb75d48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>coord_date</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>ae7cd27746012914213e8c375ebdfd1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dec_rate</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a2b64a3ebb387849f0ce19ef690acf24d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dispersion</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>abd70dae5689f4a02fdf5df3f6558c651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>epoch</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a47512727e63d1e11689c0f263ca064d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pulsar_epoch</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>ac1a5176de61e2a0a36e365af81c86522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pulsar_phase</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>aa5fc038ee89943e0d93fc9513b37ce3a</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ra_rate</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a9081fb622575479b524467fcc95c4228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a017f8502c8a5f1bda2ad26d47d037eac</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a549f51f78426a3bd4493eb17cc1e29c4</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>a50742b7c2d94d1522a2a069f11c5db77</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>af8ef69317bf580c803ebefc13368857c</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__201_8h.html</anchorfile>
      <anchor>aebc6d4d2c4b8cfc1ea0124ffc062cf49</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_202</name>
    <filename>classmk4io_1_1mk4io_1_1type__202.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_202</name>
    <filename>type__202_8h.html</filename>
    <anchor>structtype__202</anchor>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a68b6105731085a7dcf28afb44efbb523</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nlags</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>aba168175634242aad41065027eba853e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>aad3be2c1ce76720f0b5b8ec54aa5a821</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_az</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a6a7042bab8ce5e8485fcdf36376bfbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_clock</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a6f0570b5e417ef82afbcc8dc704a4204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_clockrate</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>aaa32b007656415fd44cad7e75c2e2a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_elev</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>aca05da77fc537527959bbe7e443e6c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_idelay</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>afca360b8248eb22b463e29cc1084b7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ref_intl_id</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a270770bf8fa318547488169ace45418e</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ref_name</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a5d039a56134f495a716c172aa8d94028</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ref_tape</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>ade3f35a36a09a647bfb69d2fdf09d5f1</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_xpos</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>abcc71a329608e744e2c6e1f9af4fa69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_ypos</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a8d9db39e34185d3438f50e21c7d75474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_zdelay</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a7b47244d1542856e90be069094f35ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_zpos</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a9d088c90b2f8c4255bedf5cd745c11d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_az</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a2868b8b174160e7b98627a00cf1f7951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_clock</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a0a9cbd05594e270a7329f72e418e9f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_clockrate</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a4484e07057dd55de6ccd78d566a0fe8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_elev</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a2455db4bfa3ade121c3bed3e6031aa50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_idelay</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a9e210cd3d1c3653d519b1adb20914df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rem_intl_id</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a33adcf3c205416a1c302d67596137148</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rem_name</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a53a92c1ffbe4b75bdc4433bdd907f7ff</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rem_tape</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>ac7a97ed004245dd57446f2025c08c350</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rem_xpos</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>ac7ae3e0fc99e367a1ec567b8737d4e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rem_ypos</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a79be65be2f3b6f910d701176b067f2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_zdelay</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>aba75dcf9568f3cde34bf4f9330c6d5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rem_zpos</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a2ac6c4b7da36606501b9b2dc1bb93f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>u</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a5d44b8f32d12e7c071436389bb5249db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>uf</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>aeaa57b65a5fd0cafb9a09a539f1880b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a44cdedff16d4457834dc037d68f34541</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>v</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a8e9bd7adba5cae87cd0cc659290a16c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a2dcfb3f8e10118e1c4d55a87f8685508</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>vf</name>
      <anchorfile>type__202_8h.html</anchorfile>
      <anchor>a53a0b32ee4107a049e75664d150d7842</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_203</name>
    <filename>classmk4io_1_1mk4io_1_1type__203.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_203</name>
    <filename>type__203_8h.html</filename>
    <anchor>structtype__203</anchor>
    <member kind="variable">
      <type>struct ch_struct</type>
      <name>channels</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a6baa2475d927f1a755384247ae53e103</anchor>
      <arglist>[8 *MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a909034620ab33b3de2175c246937f3f2</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>ada1a6c939558326577fb3b2414a1104c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>ac1050e08ff98f00801c90d09aaeeacdc</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_203_v0</name>
    <filename>type__203_8h.html</filename>
    <anchor>structtype__203__v0</anchor>
    <member kind="variable">
      <type>struct ch_struct</type>
      <name>channels</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a3bb5e4658960482aacb24f58f4237f11</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>ac49dac36f3998d4cce351ee249e483fd</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>a10c58f7a652abc1f31fb1b56844b3d22</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__203_8h.html</anchorfile>
      <anchor>ac7fbecb21107977d766f7d2ca0c5bf8e</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_204</name>
    <filename>classmk4io_1_1mk4io_1_1type__204.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_204</name>
    <filename>type__204_8h.html</filename>
    <anchor>structtype__204</anchor>
    <member kind="variable">
      <type>char</type>
      <name>control_file</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>ae44d071541c8e0c0fbe55d4bc19ce3e0</anchor>
      <arglist>[96]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ff_version</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>a5b9707506118f7340802dc9643830cd0</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>ffcf_date</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>aa587146d5e87f0460ddb0ae740517375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>override</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>a808e9c30996decca6cc49ac468de4127</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>platform</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>ae3c2c6862201142273ec3e3db5f507cf</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>aa23469f3ca6d6f92bef1ebb524dc4e30</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>aa85fd0c071a17db28dd9b15fb2dbab4b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__204_8h.html</anchorfile>
      <anchor>a7030b4207a0657648ea89b38718991b0</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_205</name>
    <filename>classmk4io_1_1mk4io_1_1type__205.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_205</name>
    <filename>type__205_8h.html</filename>
    <anchor>structtype__205</anchor>
    <member kind="variable">
      <type>struct type_205::@8</type>
      <name>ffit_chan</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>aa74cfe562dcd9e8ddd6fe1f36308460c</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ffmode</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a0a3a31e359ef34b537f850178680c1d2</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>filter</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a92d4edb8f5f59cecadc6bc41c107577a</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>offset</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>ae61e048227a2a4241c47c9f03ed282e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a7fc83f8ac628eeede826b3409c548b5b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a69b3e7c7af83e14382fcb3242d9c5799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>search</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a690aa9165d2ca4f4b89940e2f4ab078c</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>abde931cbdd690397f3569f9b6f398960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>stop</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a493d6055da190829a51414b38b0dff78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>ad447e7a7bc462dc706c0f06bd15efa55</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>utc_central</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a93a450861768e4cc1872f515c4228798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a22ca48300b088a4edc48912ab7453d69</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_205.ffit_chan</name>
    <filename>type__205_8h.html</filename>
    <anchor>structtype__205_8ffit__chan</anchor>
    <member kind="variable">
      <type>short</type>
      <name>channels</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>af0946467af265f5ab21ba69e2b3729dd</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ffit_chan_id</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>abe91f718b58901ac755c311a6bda14b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>afd94c6a26d6b6571e8d9398446227ae8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_205_v0</name>
    <filename>type__205_8h.html</filename>
    <anchor>structtype__205__v0</anchor>
    <member kind="variable">
      <type>struct type_205_v0::@7</type>
      <name>ffit_chan</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>aa2d5bc684b61a88aa608c43483d0427f</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ffmode</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>ac64f4ffd1dd406cbdc24880036f8efe5</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>filter</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a965f403b0e8870f2df9350d502e1fd59</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>offset</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a63831764f6bcabc41908a6af748fe964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>ace986f2c4cf8f758998a7a67bb9fed2c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>aa9a0cd10ed6b24021bdc641c815742b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>search</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a9e67649fbca7441879d9214afd406e6c</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a2a4e5c03539d15605e82345ccf3d7927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>stop</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>aab42fc32129b657cb35b23194b10f086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>aa817cd3040ffc45b257398dcbecb3fe8</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>utc_central</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a91364859ee958163baebe371cce6714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>a75d9d2c2c94983dad68438dfe70d7eda</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_205_v0.ffit_chan</name>
    <filename>type__205_8h.html</filename>
    <anchor>structtype__205__v0_8ffit__chan</anchor>
    <member kind="variable">
      <type>short</type>
      <name>channels</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>af0946467af265f5ab21ba69e2b3729dd</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ffit_chan_id</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>abe91f718b58901ac755c311a6bda14b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused</name>
      <anchorfile>type__205_8h.html</anchorfile>
      <anchor>afd94c6a26d6b6571e8d9398446227ae8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_206</name>
    <filename>classmk4io_1_1mk4io_1_1type__206.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_206</name>
    <filename>type__206_8h.html</filename>
    <anchor>structtype__206</anchor>
    <member kind="variable">
      <type>float</type>
      <name>accept_ratio</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ae043673c1f55b002b9d418608700cabc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>accepted</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aeeaeb7a4d427d3b82d00936fe13a20fd</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>discard</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ad2a89e660184d2c53593d4568a1fb372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>first_ap</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a3f5818991aa707c3bbcc984ac23fb595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>intg_time</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a89d763d1843c7a9e3271a123c698a2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>last_ap</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a893c6688df8956e02f4ce1ba6db45816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mbdsize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aef57fcbc64c1b9417814ba4a415dc961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ratesize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a88d669bbfaefc52933d588ec97e1f4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason1</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ad2a7d378cb6144db522f3c21b8551fc4</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason2</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a9f2744142166fd4803c5b32db2d0f077</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason3</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ae5aa1b091553750c089a859cee489a4b</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason4</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aa297a1874973a674919453c3f01541dc</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason5</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aa52a1c184cf3991a0ef385898ad1eb9b</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason6</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aadcaf9aa586bfd19c285f706d7a8f76b</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason7</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a6d1d46bf90e4ed4efee066b04c78631c</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason8</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a6284c2c4ad25e17f4b4513e473373d55</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aaea7edaa4fbddf3d6f59c2b983b79202</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sbdsize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aca774a6674f4f55218cc423772981bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a7b44da6347cb39bb091cd4c4fcd0db8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a6c8d2fee917a97b40b9e3a28107f330c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ac5913b318d950c9636ad6034dd71f796</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ac5e1b00e7fc430535dbab993a4f7d514</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbweights</type>
      <name>weights</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>af6999f19dfa19d345e52ff18f3df8dff</anchor>
      <arglist>[64]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_206_v0</name>
    <filename>type__206_8h.html</filename>
    <anchor>structtype__206__v0</anchor>
    <member kind="variable">
      <type>float</type>
      <name>accept_ratio</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a5aaa1e28b6584dc9e805be69e158b6f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>accepted</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a027b805979e2f14eb09bde830e83c98f</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>discard</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a54703dd2c29a58883538ed152012e4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>first_ap</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a51eb42d702a361898a73b572ff6572a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>intg_time</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aecc14316487375f66b9c5d6675b64928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>last_ap</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ae4e1688918de5d28e73d18868293348d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mbdsize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a918358ff61304502833b21f8e5c265b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ratesize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ac48a86410afe75634e43889479e53f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason1</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>afce0cfa9ff9c1b866400136770e0ff42</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason2</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a4863a1638c62a7427754db312df6651c</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason3</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a900e947765f3ae75b16928b400afd672</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason4</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a2d68e05c3a742b3224f468a6e41b5332</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason5</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a14d24cf64c8d24b53aed20c46d0fea14</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason6</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a35cca926037176a8c002b558b220759e</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason7</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a283773fab4138e12e1fc5e6e73c5faa0</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason8</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aa2c76d303bbc70d512ce1cc759ad1810</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a9a9187b23b498c62981b01209ab448d7</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sbdsize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a05844adda8ed8b9e7e91cf44e1dc6c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a7990e9d19482ec98bb0239cb3e4a4bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ada4f67df2b094a4fcafc4857d343e2c9</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a009d9e88a3045c440a4e12527945b477</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a2216bef9ebe8e0945bb52f6b22d290d6</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_206_v1</name>
    <filename>type__206_8h.html</filename>
    <anchor>structtype__206__v1</anchor>
    <member kind="variable">
      <type>float</type>
      <name>accept_ratio</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a7bc19df1141fac289d326e2f5e3684dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>accepted</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a45cfa3a37f9c15d6cac5fe9f7143ab21</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>discard</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a430c324f311e98136fe9378b6141d9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>first_ap</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a7f1c652160b27f19c2563fa70d727d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>intg_time</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a4c6ed6e66cb958ec91997391032e262e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>last_ap</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a8cc5ee1a645d80b68e2b35f2bede5baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mbdsize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a23a9f8e8ba132554d343badb682a4b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ratesize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a56bdb128c902a4516251228613af1cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason1</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aa7b64a935bb566e3dee77f1c8a537d32</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason2</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a037fd404bb3ff17f93b133125fa9123c</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason3</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aff03f5a8eac6049dbd2633b7e0a439ca</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason4</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>af0f56ba29a3e4f008dd54a05b0678e5d</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason5</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a235e44c1c074d5318899dfcd67713daa</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason6</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ae124f2c405056f4244c5f48fbb7741aa</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason7</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a1cb18b2908c1ca7a1cc7ca03e30c683c</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sidebands</type>
      <name>reason8</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a22f2eae5597aa8aa8eeda09c2f6e4e50</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ab5eea00139fbb99490dff98239ef04f0</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sbdsize</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ae994fe5369a8be2756913ec112233f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>start</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>af4f0557cbb2df1f63ce1de1a589473c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ac3a6dcbd7720e7bdd4c2cee21e49da7e</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>ad400abc0858a0d8b4cc6070cad497748</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>aa875c2221ca1b8f39c1ab2ca1a85e61a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbweights</type>
      <name>weights</name>
      <anchorfile>type__206_8h.html</anchorfile>
      <anchor>a10a0ef30b6c0fa70dbff788f0029d9e5</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_207</name>
    <filename>classmk4io_1_1mk4io_1_1type__207.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_207</name>
    <filename>type__207_8h.html</filename>
    <anchor>structtype__207</anchor>
    <member kind="variable">
      <type>int</type>
      <name>pcal_mode</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a38d60268300d2919a3037c640c80970c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a61866e508e8c842a1aa6c09bbe683259</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_errate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a2e0705f54c9f1dc5c62e9d07a72c0ad8</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcamp</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a57745921ec18111c89d91c8bd262c6dc</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcfreq</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>aa7c80a42dd669fb369e1ad893ccce706</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcoffset</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a3f192204c65a616b38f5aaaa34ee254d</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcphase</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a5ce746d79a1a84dd66b4449b4f7c346e</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_pcrate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a39be8203df6f57625bf281bc97568131</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_errate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ab20d3379022d46f497433637260b12b6</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcamp</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a80c4f500cbfe9375f949e38378c38c3e</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcfreq</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>af81528021d533b3172b09846a216f130</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcoffset</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a34c1b1cd46294f8e40796efbc5e8b6e0</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcphase</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>af26376e545f26327c529e98902785a76</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_pcrate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a195056d1731d5c35faf6a260f4fe80b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>afaff9662ee5cbf7a68ee8971aa4dbd6d</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unused2</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a9119af0641e9b5e7f8e295816fe0b6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a63205b93ca8d3c60b7d22846de490244</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_207_v0</name>
    <filename>type__207_8h.html</filename>
    <anchor>structtype__207__v0</anchor>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a4cc086ade4f01e02073e9e46409b0768</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_errate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a8596f37122b36dc0a7ec3a5ad935c323</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcamp</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a558cddfd1ff4a21ca00cb253f4dbfb61</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcfreq</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>adc905d1929611fa80fa7b47528dcd585</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcphase</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a9445d2c599887f2e7184355873701776</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_pcrate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a8981b252a13b3c603ade64774266e1a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_errate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ae4334a33962aeb19d2c3721a4ca59bea</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcamp</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>adf3b76f60c94f8ab9e865e4e56afddb0</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcfreq</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a18a4358814c5a96bed5003ac8d21f4c0</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcphase</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a4e9c813c2c75ae9d554ad62b6b6e1577</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_pcrate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>aeea2aa895257a6d609b67955e202c978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ae71c7550c3a2e987577aad20d3837862</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>abb984fd2ac7bcee40f9a49fe6f2b6fac</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_207_v1</name>
    <filename>type__207_8h.html</filename>
    <anchor>structtype__207__v1</anchor>
    <member kind="variable">
      <type>int</type>
      <name>pcal_mode</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a9297bb5528c51d0b77ec1e9cf524f0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a85db7e9cce89a6d7cd6997d3b4eea9b7</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_errate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a67e89f6e543de4b3c6914d377bedf7b5</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcamp</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a5417aa5ff702c71dcd7a605e5315681f</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcfreq</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ae1d187b7103a876aa75bd404367842f4</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcoffset</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a50a88950a4c841c1d1e3cd542eba82ed</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>ref_pcphase</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ab54db80ee8448e92fc1f9b9559dcb93e</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ref_pcrate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>afb98a05f5d4894a00971edc34d55eeea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_errate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ad8dd31ba2e75e5d991bc1273cfbb89d9</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcamp</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a29c4c838fb21eab402893d25aebc0f04</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcfreq</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>aa5910a69009c314f2ce137ca9528510d</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcoffset</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ada984ea5ba0a7509e6afa4902b0cb22d</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct sbandf</type>
      <name>rem_pcphase</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a575db3f2137bf62a3b64add08b12c26a</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rem_pcrate</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>ae02e3752a432e2d165595dc30f8953bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a815331c1957f23f5a3d1629e10546734</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unused2</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a6430dd4b444b844a0735910154881365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__207_8h.html</anchorfile>
      <anchor>a4fe57b913a52b4d01b8645e5e5f06a1c</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_208</name>
    <filename>classmk4io_1_1mk4io_1_1type__208.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_208</name>
    <filename>type__208_8h.html</filename>
    <anchor>structtype__208</anchor>
    <member kind="variable">
      <type>double</type>
      <name>aaccel</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a7862ac0111874d33bef3917eedcad4eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>adelay</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a45b6d0f013481df1c46a785e184cd304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ambiguity</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ae5123cf81b11cbfc9e3468140e5901d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>amplitude</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ab8b3d28ce994ea855d1e170e50a72106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>arate</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a3df4c1415f7b9ac85a193042d25b8a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>errcode</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a791bfb25465f4b74a5aef3c411320222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>inc_chan_ampl</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ac648ece27044b4c01974b0753565706a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>inc_seg_ampl</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a38dd11e43fd0e1a2f048674b4da522e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mbd_error</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a251ba72a48b96b815006168c7c9648e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>prob_false</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a4fe85b163417e58e2b4b47c624585f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>quality</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a3b72b2c5695fc4c365ddcc26f6c4b3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rate_error</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>afb6ec15c9461bbeeefd578c7916aae88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a7199506c5884a2903905d6a5d9068269</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_mbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>aaa4d66ecf4d348831574f2b8863e9bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_rate</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ac77bc15bb68174f73ef2de36399bbc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_sbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a7dcbe6cc06df99a593027fb4577d9af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resphase</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>abf8af8a252876d9dad222b48e403ec86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sbd_error</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>add3ed19082c2f3d3370458a694f3d702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snr</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>af9fef61163291fbd0a39a40ee366c6af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>tape_qcode</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>af23cd1dee111c0e276586f012494855e</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>tec_error</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a8ef2fb8daf48eb1b7056d5299f984d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_mbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a0752a7475c9f33954e80eb7673e24a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_mbd_ref</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a4736c991824e41698b2fa50c9ffebb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_rate</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ab4216af1652211c2484b9ad58ae81780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_rate_ref</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a78f67e1ca1a51453a67deb116888d8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_sbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>aea95daf2f35c0ce1483776dd41aa1461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_sbd_ref</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a116cb49a0dfc817a15e3c98ff39e3279</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>totphase</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ae00cb491366b109cff4ceda358e34d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>totphase_ref</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a7c554caae740bd96f885b4b6851cb851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>aa898ae16bd8dd1e85c6712823efd2b12</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>aa12ab062dbb67fe31117cf8ffa8009ac</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_208_v0</name>
    <filename>type__208_8h.html</filename>
    <anchor>structtype__208__v0</anchor>
    <member kind="variable">
      <type>double</type>
      <name>aaccel</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a97c763f1b38525e7791130208be22888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>adelay</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ab3ffdf98fd7dc50181990681bb3fa0d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ambiguity</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a5031122e506343f70c264946452f29db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>amplitude</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a42c08358e894e5150a3538518e6cb181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>arate</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a748c0a468e5ccb103140086b459c955f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>errcode</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a53f2348b015c14dfd892e02bfc62b184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>inc_chan_ampl</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a340446235b767cb10c2edbde883dafe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>inc_seg_ampl</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>acef792f8e76ada804985414510375226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mbd_error</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a00442e107040ea3752d39bf1f1636a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>prob_false</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a686f638ed785c37efed20b5fc83a9c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>quality</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ae0700faac6884599153b059d016316c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rate_error</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>af0f1c85ddc4718839a38c02653d6cfbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a54a9f25e6bd24aecd2803d26dc7becdf</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_mbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a7a7b71ae4562d4c0177a4232d4f4f8fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_rate</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a9892882976319cd4442648978573d540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resid_sbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a43a5498c9373482c5c15eff349be6d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resphase</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a89da430e9ecb1b6e0c51ef7f82c1a674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sbd_error</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a94c350e4ef3880aa424a7e8b7a1f4b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snr</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a66e89ffa48d257bdd7e4b986ab8cda60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>tape_qcode</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>aac845e6f0933adcd17c1aed2d5415e4d</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_mbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a05a50b84562a1bda55dc2723bb6c69e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_mbd_ref</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ac11448da8dc25c4fe12a323273f7c8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_rate</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ae23051ed23353ac992b0123b572b9947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_rate_ref</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ab8982e06bfa6057504bd8c6b784e1e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_sbd</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>aabb7f648b6d36ccaf9df08c4a77c3b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_sbd_ref</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a03bed4adea20bfc86be553005f0b0e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>totphase</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a452661729da93350bb889c856d3e8570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>ab6e27a1e7a1d01349b086219cf6e9c0e</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__208_8h.html</anchorfile>
      <anchor>a2f7c1fd8c22659257f7e0b43cca382a3</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_210</name>
    <filename>classmk4io_1_1mk4io_1_1type__210.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_210</name>
    <filename>type__210_8h.html</filename>
    <anchor>structtype__210</anchor>
    <member kind="variable">
      <type>struct polars</type>
      <name>amp_phas</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>a6de33ce1748bb961fc81a4e8bd505bb1</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>aa148ae86acd529f8bb685eae3296d1e5</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>a25e1ff5c72353ab973a12da64392f480</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>a2701e2de99127d857ca76b576bedcdbf</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_210_v0</name>
    <filename>type__210_8h.html</filename>
    <anchor>structtype__210__v0</anchor>
    <member kind="variable">
      <type>struct polars</type>
      <name>amp_phas</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>a37a4762f224f2457aa852cf60764bfca</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>aa33928251ab48f303f8bdb8e6bc9256f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>ab004ba15647e7470d6789dbee29205d1</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__210_8h.html</anchorfile>
      <anchor>a0ed700966d0dd22a11d318091f20a6d6</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_212</name>
    <filename>classmk4io_1_1mk4io_1_1type__212.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__getattribute__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__212.html</anchorfile>
      <anchor>a06849a010f5924e04465030f9fd10997</anchor>
      <arglist>(self, name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_212</name>
    <filename>type__212_8h.html</filename>
    <anchor>structtype__212</anchor>
    <member kind="variable">
      <type>short</type>
      <name>channel</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>affc119367ce3e60d26e6d92b245f9bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct newphasor</type>
      <name>data</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a16023f2d6a4695c9cd27263de3b46be9</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>first_ap</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a3de2f39dc63085a05c7ea380abe106eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nap</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>aa5936bba5ae32cbe81eb4c5e7e8c8151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a420503a7f93cecdc0b47b1c5d1c98dfd</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sbd_chan</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a14cb432f5c095a41ae140e1862aff95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a512d926911fb643ed37142e61939b5b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a556ac6dd1e12e9d671a297abb949f4c6</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>aec6dc1975b041ad525a15f167e80cf50</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_212_v0</name>
    <filename>type__212_8h.html</filename>
    <anchor>structtype__212__v0</anchor>
    <member kind="variable">
      <type>short</type>
      <name>channel</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a4156b96ad3f639e6b205db1b305113f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct phasor</type>
      <name>data</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>ad7a8a5ec08a8da47b8b3661a0052df87</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>first_ap</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a37cd969e495dcfe9655364834b39bbbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nap</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>afcb04c793dc6e74546e50d28f794322d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>aff4e47c40d4a52103ea06d65ffa9e188</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>sbd_chan</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a207d89fb4fb59a6001d1ff1f5d811481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>ac4d463213d5703762a85911259e0e549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a08e384de6a45fbb2fc7bc502346287f6</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__212_8h.html</anchorfile>
      <anchor>a5137e66b89b371955c3f65e4b8af1c89</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_220</name>
    <filename>classmk4io_1_1mk4io_1_1type__220.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_220</name>
    <filename>type__220_8h.html</filename>
    <anchor>structtype__220</anchor>
    <member kind="variable">
      <type>char **</type>
      <name>fplot</name>
      <anchorfile>type__220_8h.html</anchorfile>
      <anchor>affbfce019645a23c15b73a9cd2c007f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>height</name>
      <anchorfile>type__220_8h.html</anchorfile>
      <anchor>a9552ba49f8f60503da4dec084b27df4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__220_8h.html</anchorfile>
      <anchor>ae43396c29003e30b3091ffbe485b158d</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__220_8h.html</anchorfile>
      <anchor>a5737f23febdb7d610d04c71d5998e15c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__220_8h.html</anchorfile>
      <anchor>a42c9744766b528503828a0623beb1a18</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>width</name>
      <anchorfile>type__220_8h.html</anchorfile>
      <anchor>a63442b822ff2ae6a54438eb8d71080a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_221</name>
    <filename>classmk4io_1_1mk4io_1_1type__221.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__getattribute__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__221.html</anchorfile>
      <anchor>a608f9411b06143b6836a87fe6cbc1845</anchor>
      <arglist>(self, name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_221</name>
    <filename>type__221_8h.html</filename>
    <anchor>structtype__221</anchor>
    <member kind="variable">
      <type>short</type>
      <name>padded</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>a7c9c35a5e9fec4006eaeb70919ee22da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pplot</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>a975989a614a5db2a6d13dd35b431e94b</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ps_length</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>a35b50bb9d59eb1d833987bad07f75741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>abe70ff4102960729079bcbcd8080e821</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>a713a3fd53b4ddc7ca6c27f4f9ec98743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__221_8h.html</anchorfile>
      <anchor>a9a27263f23e0cb86fea631c09ece6142</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_222</name>
    <filename>classmk4io_1_1mk4io_1_1type__222.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__getattribute__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__222.html</anchorfile>
      <anchor>a2031d63e4b5a9c06c4c72f9eea63a30b</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_control_file_contents</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__222.html</anchorfile>
      <anchor>a3f59cf3c1a953a2f67d3d5e94df0fc19</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_control_file_padded_length</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__222.html</anchorfile>
      <anchor>a367d71756427f2e43ea23e03758c1aaa</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_setstring</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__222.html</anchorfile>
      <anchor>af12253f110f3c347af3ea5414f4f3b10</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_setstring_padded_length</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__222.html</anchorfile>
      <anchor>adbae0a3391699c61beccfcf234c41d37</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_222</name>
    <filename>type__222_8h.html</filename>
    <anchor>structtype__222</anchor>
    <member kind="variable">
      <type>int</type>
      <name>cf_length</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>a02d9b35fc691f3e35f2c563990c645db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>control_contents</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>a7aeeb142d556b215c2256c26ff0b4ec3</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>control_hash</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>a31ff657b0764d671e3c695ae18b12e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>padded</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>abdee3ff4b44d1987afd4ef212560dbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>ad4eedd0075cf3b5c81fcaaacf9f71f9c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>setstring_hash</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>a05d8a1475ee2c1e714ecbb5dce4b0ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>setstring_length</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>ac7d5c49ff91a683ffe1a3be8fb988967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>a503f4c03345be2bc736ff2b4bd89db8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__222_8h.html</anchorfile>
      <anchor>ad6364db28e3e1e2c3253e12194015ed8</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_230</name>
    <filename>classmk4io_1_1mk4io_1_1type__230.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
    <member kind="function">
      <type>def</type>
      <name>__getattribute__</name>
      <anchorfile>classmk4io_1_1mk4io_1_1type__230.html</anchorfile>
      <anchor>a2f996b64ad1dfa1bda8e9344aa76ecc3</anchor>
      <arglist>(self, name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_230</name>
    <filename>type__230_8h.html</filename>
    <anchor>structtype__230</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ap</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>afba8c64af76a042f1bc57e12ad1a0a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frq</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>aa8a82349a14ab962b69bf755c07a4c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>lsbweight</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>aa98aa28abf5f5650e24171bd53702849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nspec_pts</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>a121ab60fd2092a72a744c2d4db911a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>add5521ba1207368eed1e57a494cb8b8f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>aaa0968d21f2e2802fc83cf24dbde3136</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>usbweight</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>a50e9b11df019d5759dcc6a21bf3c9792</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>ad5a067d06f2a175900aec7bbc7cda954</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>hops_scomplex</type>
      <name>xpower</name>
      <anchorfile>type__230_8h.html</anchorfile>
      <anchor>a035d627a1cc536850ff2f3ac36e9d402</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_300</name>
    <filename>classmk4io_1_1mk4io_1_1type__300.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_300</name>
    <filename>type__300_8h.html</filename>
    <anchor>structtype__300</anchor>
    <member kind="variable">
      <type>char</type>
      <name>id</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>a4acc7d084be2b541aa145ac6c10ad790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>intl_id</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>adbac934318a26d66e136f40899ee3a2f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>model_interval</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>adf27c1aee71fb5c469e0d64f2fda4678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>model_start</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>a9960d108cbd1152d69bc8d55fe06c54a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>a5d53a5f30bb39954b2621c4cc2055262</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nsplines</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>ad9d544bac6ded0dc8f642b119017fa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>a95ce73115c0218c0a472e3f073941e36</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>U8</type>
      <name>SU_number</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>a126318fdb2d9018ccd1320b0eb66d811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>aec165e9c3465fb5813aebfe746d0651a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>abf316fd0898ec0c511c9e0121d299d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__300_8h.html</anchorfile>
      <anchor>a8bea2a83511035359e6701a6c4d58913</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_301</name>
    <filename>classmk4io_1_1mk4io_1_1type__301.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_301</name>
    <filename>type__301_8h.html</filename>
    <anchor>structtype__301</anchor>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>ad922a196b3e61220262ad0cb448782f4</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delay_spline</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>aedbd5bf36da77edd74dc01c689084157</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>interval</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>aca82333ad3e48da36cb2d05c2e33cf36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>a90b23d3f432c4183564fd5bd272412c4</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>abf74cb50de3118636337a9cda3d95f5b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>a14f5cf755b78e03b8e5754efc088eba7</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__301_8h.html</anchorfile>
      <anchor>a2a96ac2c05720c30d5c0aa43bd3d42cf</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_302</name>
    <filename>classmk4io_1_1mk4io_1_1type__302.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_302</name>
    <filename>type__302_8h.html</filename>
    <anchor>structtype__302</anchor>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>a888a67d1bbeeab59ca124416bd43d7cc</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>interval</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>a9db5b82cd2190036790406ad8f7b1a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>phase_spline</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>aad4be2644ec79128bc056fc4c1ff8f04</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>a3f9364a7077d52df4717eefb7e80829a</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>ae3859706204c15c6dc99ec85bede60fb</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>a6c6e05984bf91411cf285e26f2440603</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__302_8h.html</anchorfile>
      <anchor>a18cdf735fdfef8a5e735e32baa46a90d</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_303</name>
    <filename>classmk4io_1_1mk4io_1_1type__303.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_303</name>
    <filename>type__303_8h.html</filename>
    <anchor>structtype__303</anchor>
    <member kind="variable">
      <type>double</type>
      <name>azimuth</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a8bedbb36d89cb360118f9f1606541fcc</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>abb3cd1b07c0810a82842517818cc9b9c</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>elevation</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>ab47f52d5270297df4ba377fe0d200c5b</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>interval</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a7fcd4787e373383fa8be3f6f21ee0a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>parallactic_angle</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a07f62bfe2ad9ef54b8c364e6d6cfcfb2</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a6f3b25dcdd0702b792294e0bcd12cc74</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>u</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a3ac2d2dcf7663eeadfa691654897ab03</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>aaf05befe92f25ffca7ff0f7cfca08d60</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a9d2d641aa3518f275f30774f6cee4e6a</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>v</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>af29c5792c3a206bdf064eb94cec45c19</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a5280ec188d3adf971f3fbaf4d7c22680</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>w</name>
      <anchorfile>type__303_8h.html</anchorfile>
      <anchor>a32ae6745495f02e1ec4687ae03bfeb00</anchor>
      <arglist>[6]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_304</name>
    <filename>classmk4io_1_1mk4io_1_1type__304.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_304</name>
    <filename>type__304_8h.html</filename>
    <anchor>structtype__304</anchor>
    <member kind="variable">
      <type>float</type>
      <name>duration</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a9364247488c78992f9e76f8c63dcc55b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a61f1a9586022408cb57941bb99c1ec1b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>time</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>adb539ee9eb65459e91846d456eff7d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_304::@9</type>
      <name>trackstats</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a7fb4d6d026e05f9479418e1b2a81e41f</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>ac17d3f22bb1fa925ac7a84b55c1c97bb</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a3fd8052dc4057cb6bd9fac937c00e24e</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_304.trackstats</name>
    <filename>type__304_8h.html</filename>
    <anchor>structtype__304_8trackstats</anchor>
    <member kind="variable">
      <type>int</type>
      <name>bad_frames</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a277bfea159770b5c6a867208b6caf65f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>crc_error</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>aab1ab14329432ca89f400579744932b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>error_count</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>ae18a4d4830028f90f158755e5e80fec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frames</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>adcdc1ac079a91d513a5a759b0fb9c1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>missing_sync</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a0a7f84bbd841f6aadf407542f2f6c1af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>slip_sync</name>
      <anchorfile>type__304_8h.html</anchorfile>
      <anchor>a1fb086e7608614306c150ee430ed79dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_305</name>
    <filename>classmk4io_1_1mk4io_1_1type__305.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_305</name>
    <filename>type__305_8h.html</filename>
    <anchor>structtype__305</anchor>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__305_8h.html</anchorfile>
      <anchor>a8b0ffaa53831669490eaef6e43b142e2</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__305_8h.html</anchorfile>
      <anchor>ab3ee1377b26c7b5a9c60ac3017e11417</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__305_8h.html</anchorfile>
      <anchor>a026e83b67eb9d1ba4c6dd7fa92225fc5</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_306</name>
    <filename>classmk4io_1_1mk4io_1_1type__306.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_306</name>
    <filename>type__306_8h.html</filename>
    <anchor>structtype__306</anchor>
    <member kind="variable">
      <type>float</type>
      <name>duration</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a6888b8455e62ac6fe432436ab0dac4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a93c10ebe722dfcae645566ca18d2cb9a</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>struct type_306::@10</type>
      <name>stcount</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a21a847f1f74f2f9d3ccfaef3ba7ea12d</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>time</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a80d01222fb477c743fe1d0bb26a630ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a7fb4515922db86b8367e6b96e038afd5</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>af713922a1f7c90c78f3cefb874064ae7</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_306.stcount</name>
    <filename>type__306_8h.html</filename>
    <anchor>structtype__306_8stcount</anchor>
    <member kind="variable">
      <type>int</type>
      <name>bigneg</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a34724f732e7f9c54653543d74e70297d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bigpos</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>aa840745dfddf09dd442dd9db3645987c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a27786fed43e5fe8cd6d1845b8811436f</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>neg</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>af24c2c15b9d03797c6874986a8d19516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pos</name>
      <anchorfile>type__306_8h.html</anchorfile>
      <anchor>a5e0bdcbddccca4d66d74ba8c1cee1a68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_307</name>
    <filename>classmk4io_1_1mk4io_1_1type__307.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_307</name>
    <filename>type__307_8h.html</filename>
    <anchor>structtype__307</anchor>
    <member kind="variable">
      <type>double</type>
      <name>accum_period</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>ad132a737a72b7fef856823077119ac49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ChanCount</type>
      <name>counts</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a4e674df658f83410e769bb7cb1c9a022</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>U32</type>
      <name>frame_count</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>adfc6940287af0467a20c5010345afa9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>aa0a057b23d3e95de708d551d06adc61b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rot</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a4ec64ad9c27e0bdfbec8990444249785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>su</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>aa74fceafe15e70a77eb0bdaf536b49dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a105ae788c1d17660555821fd345521e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a3ba6583cc49db625695e841356a3348a</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused2</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>ab568341b20c23af23c4abba22e634a78</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused3</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a07dc094d2d9865270c4f056667dbecb7</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__307_8h.html</anchorfile>
      <anchor>a6695772c834cfdf6d9aff7396b73a8c2</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_308</name>
    <filename>classmk4io_1_1mk4io_1_1type__308.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_308</name>
    <filename>type__308_8h.html</filename>
    <anchor>structtype__308</anchor>
    <member kind="variable">
      <type>float</type>
      <name>duration</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a8fc53dc605b286e53233f827b2767f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_308::@11</type>
      <name>pcal</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>ab8d6f40f6a845f20bda9543f7484bcbc</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a043a05ba788976937c64cb618b6fc17b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>struct date</type>
      <name>time</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a63bc36ff5e9642836aeb0cc6980c19cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>ae729afe9806068d2af02073f5f2db7b0</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a8b3e39ef653789c6ca14e72572ffca61</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_308.pcal</name>
    <filename>type__308_8h.html</filename>
    <anchor>structtype__308_8pcal</anchor>
    <member kind="variable">
      <type>char</type>
      <name>chan_id</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a85844fef98218528192cc597d7617c83</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>frequency</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>afad6c43b628858e0b472d0c164557fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>imaginary</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>afe2afe473e754b6553a88cc9656170e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>real</name>
      <anchorfile>type__308_8h.html</anchorfile>
      <anchor>a4bca24304861acde5770fdbe3cc2503b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mk4io::mk4io::type_309</name>
    <filename>classmk4io_1_1mk4io_1_1type__309.html</filename>
    <base>mk4io::mk4io::Mk4StructureBase</base>
  </compound>
  <compound kind="struct">
    <name>type_309</name>
    <filename>type__309_8h.html</filename>
    <anchor>structtype__309</anchor>
    <member kind="variable">
      <type>double</type>
      <name>acc_period</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>ae66d5675ee1c19c43df6660312779f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_309::ch1_tag</type>
      <name>chan</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a5af50dfa33a8cd6328c3b1e25cf717d9</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntones</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a78e9f5f2a963a3202b83b5bb411a854e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a6645a296c278c483df29eb19eccc372b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rot</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>af54a57a2a803ca10b5032bb7e097ecf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>su</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a165cfcc11eb0beffceecbe2b979f6a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>ac8ed82af71920916916d37c090531f4d</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>aef4a53b37c14db88f4068aa6484cdff7</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_309_v0</name>
    <filename>type__309_8h.html</filename>
    <anchor>structtype__309__v0</anchor>
    <member kind="variable">
      <type>double</type>
      <name>acc_period</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a2e5953c9ef248c3378b35203b05d3797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_309_v0::ch_tag</type>
      <name>chan</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a1ecb7a2c12543011e6a0123d05dfff16</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntones</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a8662149ab3f69230ca3642f9b3b44384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>record_id</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a94d970ca9869cb0e935434fb5d49d87f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rot</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a825710c81f890658be1b49e89f8289fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>su</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a08a324851d5020d326d95d48a36e933d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unused1</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a8465a00329cc4bda80510f4bb0b0fab3</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version_no</name>
      <anchorfile>type__309_8h.html</anchorfile>
      <anchor>a22be466b3a0ef3d7478c963a40296943</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_dump</name>
    <filename>plot__data__dir_8h.html</filename>
    <anchor>structtype__dump</anchor>
    <member kind="variable">
      <type>struct mk4_fringe *</type>
      <name>fringe</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>a448035420da71095e8e4f10d79a071e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_meta *</type>
      <name>meta</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>a93f48bf093b1eb5e1954919d591944e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_param *</type>
      <name>param</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>ad4274b67704c8fed264646072eb974e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_pass *</type>
      <name>pass</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>a321b93d10896a9625f881021ebba9c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_plot *</type>
      <name>plot</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>ab0cc62d38dea5152960a25c353b8ebe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct vex *</type>
      <name>root</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>a485c5bb816206e6ba61b16f17c560575</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct type_status *</type>
      <name>status</name>
      <anchorfile>plot__data__dir_8h.html</anchorfile>
      <anchor>a4ca87c957ed6f892260239706b96e308</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_filter</name>
    <filename>filter_8h.html</filename>
    <anchor>structtype__filter</anchor>
    <member kind="variable">
      <type>int</type>
      <name>absent</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a555ea53e362d69ef2acba5b9aea48c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ap_mid_miss</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a011add97ef88e555148e3c7e2d9f7eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>badd</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a9369ba3885c364cf5697271c65774f72</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cf_service</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a90f834e913d772e50648250480cb5d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cfnum</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>ad1db9df1689a6c1d3bade0f1cd544181</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>chid</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>ad9d05080645e8264e258cbea1ac82d8d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>chksum</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>aaeb515bd603ca8ef3a77463e36b8b762</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>emasked</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>aee4f176298581038da4c6ea361229c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ib_sync</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a84c36e5a4446111ef28928e2e080fc82</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>link</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>afcd7f0befea68679d647f3aa67ef12dd</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndiscard</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>ae29c3aa5304899a5e9428878c4a0b097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>suid</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a91cec395279e2cbee4b09c7817e4ea24</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tap_overrun</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a66906c346b9098e6f808189f033847dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>triple_carries</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>ab301fc96f86a269f5e87fa3c00a1a6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xperror</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a23f7d62d361cc3c9a461a5d22c1ec3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yperror</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>aff17e8d763066cae1618a74b052d608b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zero</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>a20f839fb7f60a234b7e4d18bcadf99b4</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_meta</name>
    <filename>meta__struct_8h.html</filename>
    <anchor>structtype__meta</anchor>
    <member kind="variable">
      <type>char</type>
      <name>build_time</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>aad4c4b8f7d37aaf3b187c386fbb6349b</anchor>
      <arglist>[23]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>corr_time</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a91e5c4a4681ab23ae5a9fa39430d0106</anchor>
      <arglist>[23]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>corrvers</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a2a1da4bd70a2dd5487280107097e5224</anchor>
      <arglist>[36]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>dec</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>ae346d90d56ab691853efd68b3e9bb493</anchor>
      <arglist>[23]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>exper_name</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>ad6b4e087d03f57493e60a555b5ee2f59</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>exper_num</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a165876d290f421897bcc948be1862de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ff_time</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>af0c6c8caf837f08408abe9963fda1635</anchor>
      <arglist>[23]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fourfitcmd</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a7bab1721872eb2186487f65994ff9c2a</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nplots</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a7b70699220a70e49aeeaf8c92af66bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pass_frt</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>ae6f40aecd445903ac3ab79653658c598</anchor>
      <arglist>[13]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pass_start</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a60ebf032d7bf6401b0557997ca7b4066</anchor>
      <arglist>[13]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pass_stop</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a496145f4f32e85636fb382e23b89b0d2</anchor>
      <arglist>[13]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>polstr</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>aac02380271cfe416e42785f6f5287f9f</anchor>
      <arglist>[13]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ra</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a172dfe0bb96f69acb79eb5cf26a5d6ef</anchor>
      <arglist>[23]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>rt_sn_bl</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>ac51706098428d5c9af887808bd2c076a</anchor>
      <arglist>[80]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start_plot</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>a4c809fd7a902c745c9e57edc460d03e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>yr_doy</name>
      <anchorfile>meta__struct_8h.html</anchorfile>
      <anchor>ad8f5e36b171a70c1f5609ccfa7c86131</anchor>
      <arglist>[10]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_param</name>
    <filename>param__struct_8h.html</filename>
    <anchor>structtype__param</anchor>
    <member kind="variable">
      <type>double</type>
      <name>acc_period</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa9dff0ef6fc33863605f4542f887d94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ah_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>acba150c4de3e6165b94e89b6c57e1ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ah_file</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0d147c041cf27f2ac4df7ba7b9deacf1</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ah_file_chans</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a79e905af763070db85be8b80a836b756</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ah_flag_files</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>abe36cfd1c2a8b0254c2f468c405b8165</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ah_period</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ac3eeca0e5810322f5eee2dc2e1ad7e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ah_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aeabc621d6ca12ff562f73a22fdbe6516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ah_poly</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a2e7e7735bded79a91503260d3dccef9c</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ah_tref</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a3fa808d1845bf97d05410a1fba983289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>avxplopt</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a87d420717711d52761012ac38b16afea</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>avxpzoom</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a184519e65c2f79931436537af51358e0</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>baseline</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a2e7820df0998eb238db240e0740793b9</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bits_sample</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9016d54514b2cc325f3928c7c343067b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>bocf_period</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a8dd39cb67c0f29dde8ff038b9426bcc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bocfs_per_ap</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aafa47c4bcbd4e6f4bc179d1a0c28f6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>control_file_buff</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a786b84253e01bec118e66ca776950a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cor_limit</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5ae1abb4e7b179739eb25339cc1635fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cormode</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a62c0ec6022e6f68ff5969902a9fd52ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>corr_type</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>abfe2f5a8f14382ee80eddd436b5dd7af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>dc_block</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a491438ab65f685ff92ababc783243ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>elevation</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9984ea37b05e868eb868738f49425a96</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epoch_time</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a63ae510c742d8c39e832e051b91878a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>error_mask</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a3c3c03b7d1839da41b14617f01405417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>est_pc_manual</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0da3df9424947c1393d13e551b2090b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>first_plot</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>af440e1de7b43fe6aaed95ffc9ca85a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fmatch_bw_pct</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a6bd3264e8b0cd9b565a97cd09ada9ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>frt_offset</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa6370ab66564d6db387d0e36d73ca163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gen_cf_record</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1e0457c248fbbb025a490fa999c366c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>interpol</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae7ae98d49580e521feb401ec35439c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>inv_sigma</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1f7f73c89b4159c2737738c262822ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ion_diff</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0fae9788f283d695098144023c359c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ion_pts</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae82c9a85bc04b9cbb8411efa0fb0c50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ion_smooth</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a726be37f9b7e1a81ce823dc5688c9126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxap</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a34e40afb76627fd2473d195e1e197a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mbd_anchor</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>add42b49167c3850bd9c19feee9df305f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mbdrplopt</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a4df426039a6a5317a0ad513bf65bd0c4</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minap</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae0e48724daea5cacb82eac915146041b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mixed_mode_rot</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5dbfeb1109aa4238e93e83f9608eed3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mod4numbering</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ad01e0397b5086404c6752eaf2b9f1e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mount_type</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a84ac92ccd470e454852e8d7b6d3dcb2b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nlags</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afc491296aa5330791465a1f62bdf9050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnotches</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0cd5d07d1532ee6ed5c196b48e72eb50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>noautofringes</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a427517bad31afdcab16fc9ec4889e06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>notches</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a621c1d02104f8730ab9a2032317fa822</anchor>
      <arglist>[MAXNOTCH][2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nplot_chans</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1100c988a198a3e388809ec9857fcf74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_ap</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a7472e73a47cab59dcef02987ab48c00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ov_bline</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a221a6f6a81d5e322cc227fd374b7c05b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>par_angle</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a4c8989f21810a23f77efef7fbdf9d468</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>passband</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a4f1903c44a3c284039e3eda9401b507b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_amp_hcode</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a26a3b089678a814364b9fe29218782ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_freq</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae95d9a91980c8baf61667363be89c28f</anchor>
      <arglist>[MAXFREQ][2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>pc_mode</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a3b677adfcbb5102a87d8a5d41b77de15</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>pc_period</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aee8a9b47552f07dde94aae67b2d7e710</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pc_tonemask</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>abac67c08812f6c345304789002708b82</anchor>
      <arglist>[MAXFREQ][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pcal_spacing</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a734a7cbf0b388202649e003982c6236f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>plot_data_dir</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ac4acff2fdb5bd5feccb6ecb38381f08e</anchor>
      <arglist>[2][256]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>pol</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a425f6a555164c64ef40dca34c7359d0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ref_freq</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afcd199da31a26e7885853c902b413b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>reftime</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa839955ea8b858f5738ef36187c13c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rf_fglist</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a785734a88d84327387700670c12954cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>samp_period</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a946698d8babf41196ee53ac329f69d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>set_string_buff</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a63913695d1a39288c02ce98603917ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>speedup</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afacce5efab8466ba649b8cb17cbe91d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>start</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a13e47e88a55cca0124cb10d965e36502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>start_nom</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>af5f2550a7de2918bb20deca3c87b06d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start_offset</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1d7604e4df681a0dca72a09a57fec47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>stop</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ab0524d77bf7e490c557d0bb7f7e2b826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>stop_nom</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae9605614704ba8b7ba0001b1c03ab9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stop_offset</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ab3a176e150a24126e9b9ac9be298164e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>su_number</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a37b60a32d616093aae0ec8ea24bd8b99</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>use_sample_cnts</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ab1d22948c7f5b5d3e4cd1ff3138fea93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weak_channel</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ac4762efb069c7a56db97c19c578155b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>win_dr</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a468701a7fa97e414d8685e341a8ef284</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>win_ion</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5723dde843f38cef9e43f57ae51e47e6</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>win_mb</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a96e93531c321f5e14117eb66bfbf5dc7</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>win_sb</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a7d1aac103c152b5a6d8ddb081754fa55</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_pass</name>
    <filename>pass__struct_8h.html</filename>
    <anchor>structtype__pass</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ap_off</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a3dd5331c9e1529d1b97ac8630af85410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>autocorr</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ad3a097b14f3e2d59ad45bfd87247e534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channels</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a722023239c4c5f88f2cdab52c6675f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct c_block</type>
      <name>control</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aefe15865d52ff9a0c8d4129a333d6b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linpol</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a6d7dd24350e717f41983b9bc32043f7a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nfreq</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a71a061fd5d52e31234ca49f32870c209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nlags</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>af29bc82bf233f06adef501e97eabf545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npctones</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a4a9381635ea509e1c5b3436e6d7e340e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npols</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>acf1363a44c484e9848e82ccfed6f1f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_ap</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>aab28ad7e084b73985e519840f3b66840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct freq_corel</type>
      <name>pass_data</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a36753e69c2f92c25ff0879a179c37146</anchor>
      <arglist>[MAX_CHAN]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pci</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>abc7fc008ad544d10d67b2f83d7388471</anchor>
      <arglist>[2][MAX_CHAN]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pcinband</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a51a968cbc3828680104b0d09c803993f</anchor>
      <arglist>[2][MAX_CHAN][MAX_PCF]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pol</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>af5a80fc4b33f7e06a4dceee6936874dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pprods_present</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a5185b3c38938850bcd4f34266a367cb3</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>reftime</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>ab46b56d56a747061cd3d394568075a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>start</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a7f0a8500bc9bf4bd078a3a6a789f5b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>stop</name>
      <anchorfile>pass__struct_8h.html</anchorfile>
      <anchor>a46bf9319278df9a27f01d0bc49fc086c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_plot</name>
    <filename>plot__struct_8h.html</filename>
    <anchor>structtype__plot</anchor>
    <member kind="variable">
      <type>hops_complex</type>
      <name>cp_spectrum</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a856ebed21629b871666842b329104647</anchor>
      <arglist>[2 *MAXLAG]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>d_rate</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a0a581da0dcbb69bf2ec00bdfd4eaa9a2</anchor>
      <arglist>[MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dr_size</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>aa336348f8e084faaf96de925c41a03a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dr_size_max</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>aba7c04642a5e0e8e8637df4cf7bdfc36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mb_amp</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>ab27da6a7d46905a7bf41c011c3387e6c</anchor>
      <arglist>[MBDMXPTS]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mean_ap</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>ad5ef8c5765430207e22ba14c275a1e7b</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_ap</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>aee84c75358c79b5d4301082a35d29c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_freq</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a6d22ee7ac1cba22d089b7604b98d3173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_mb_pts</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a95df8733614734b33bf64ecd3efeed41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hops_complex</type>
      <name>phasor</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a13878661fcb7c8812407e3d67899cb97</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sb_amp</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>ad9edf40c650fd89b96dbaeadc356d588</anchor>
      <arglist>[2 *MAXLAG]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_amp</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a10fa11633b9a69926fdaf8b053d2a5a8</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_frac_lsb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a27dc903a2d46708a7bcaeb318ecb87e5</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_frac_usb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>ad4569ad22712875b40a14f23ed61cfc3</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_phs</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a8b1851d475042f4205048118ecb99717</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_refbias_lsb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a2c2d3689f4dcc62501888cfae2606af8</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_refbias_usb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>aa7f7a79e4c4019c44d23412afecd96b6</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_referr</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>ac934f5d37d6692e751db652f13612f93</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_refpcal</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a6ca95704b9dd4b22c593a12dbf1d9fe6</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_refscnt_lsb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a70097b17dd2ef03f2954f1c88387999c</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_refscnt_usb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>aa8e4bcc4d96ca68f43dfdfbfc7b80a53</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_rembias_lsb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>aee2bdc0858485845d80d86748e8d1400</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_rembias_usb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a37d974a14b39a28846190fec41eeac8d</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_remerr</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a6936d8ad99f2537c67fb10ee0fd036aa</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_rempcal</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a6835e4c1b9988cb53b5b4c4e6dbd3dd3</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_remscnt_lsb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a75a19793c5014b3e80018d8927a19f6f</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seg_remscnt_usb</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>ad0604c164b963607a8cbf3f3e738a413</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weights</name>
      <anchorfile>plot__struct_8h.html</anchorfile>
      <anchor>a50b2b211795c91839c7320d03f14c26c</anchor>
      <arglist>[MAXFREQ+1][MAXAP]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_statistics</name>
    <filename>statistics_8h.html</filename>
    <anchor>structtype__statistics</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ercc</name>
      <anchorfile>statistics_8h.html</anchorfile>
      <anchor>ae2481016178ee0eefaa7e3e4da1dd5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frq_acc</name>
      <anchorfile>statistics_8h.html</anchorfile>
      <anchor>adfb16591c7cf460dd9012cb802751c95</anchor>
      <arglist>[MAXFREQ][8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>frq_x_perror</name>
      <anchorfile>statistics_8h.html</anchorfile>
      <anchor>ad529b0527da4f17eda926d97589dab04</anchor>
      <arglist>[MAXFREQ][8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>frq_y_perror</name>
      <anchorfile>statistics_8h.html</anchorfile>
      <anchor>aac1a7dcb89203a4f08706f61b10438cd</anchor>
      <arglist>[MAXFREQ][8]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>xperror</name>
      <anchorfile>statistics_8h.html</anchorfile>
      <anchor>a0f6372083c3b5b54baeb0c708ff0fded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>yperror</name>
      <anchorfile>statistics_8h.html</anchorfile>
      <anchor>a0cf7741157e356cf856398fa10dfe343</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>type_status</name>
    <filename>param__struct_8h.html</filename>
    <anchor>structtype__status</anchor>
    <member kind="variable">
      <type>double</type>
      <name>amp_corr_fact</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a177a375145b9df41010b68d3d25561ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>amp_err</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a627843f2a3d8c487484feea5503e05fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>amp_rate_corr</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5d38a552e8abb000d004900929d05e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>AN</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aecf9f3bb3f8f3c7ed96f15645eaf0def</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ap</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a87013423c03d177e66e3c2ade33c4560</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ap_frac</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa6a7244dfe9657f157aad10776bf759b</anchor>
      <arglist>[2][MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ap_num</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a4d73876ebc9102f4b61c2f74c6c852ee</anchor>
      <arglist>[2][MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>apbyfreq</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5335263e336573e4c0afa84dc8f2d64e</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>apdelay</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a23596f2d15ad0c03371b28bf3955483c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>apphase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>adbe99a37e08b80be32f19f3f48222eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>apseg</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a90704d80cb0caeb959f9f4df46cc88ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>coh_avg_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa0776c89ebf55f3e60197ec8a23eeaca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>corr_dr_max</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a8d12f9722faff434edc859e7c10855b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delay_offs</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>abf4cae0b28f8e3fd1de9463184615f07</anchor>
      <arglist>[MAXFREQ][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delay_offs_pol</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae817e84c6c9c9d54eaca9809144ba444</anchor>
      <arglist>[MAXFREQ][2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delres_max</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afce31460b126f251c127b6703f252766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dr</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a7d439b513edaa47f2c78fdb821f4175d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dr_indx</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa3a7964ee5409aedf512b663c7b3e650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dr_max</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afa8aa9bc0f49a3a07e3ed2f2a5cf7f40</anchor>
      <arglist>[2 *MAXLAG]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dr_max_global</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a7d1d3e4b4d9a800d2011bcd570a52cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>drsp_size</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a23136c78001ae4f87aee23a5a2b2f622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dtec</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a486173f8c069cf7fececf745b552e9a1</anchor>
      <arglist>[MAX_ION_PTS][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epoch_err</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>abb9678ba6b2cdb1bbae965e338735b4f</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epoch_off_cent</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9b95581172f452244a32bdbac7627f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>f_rate_size</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9ac9125292de28099df1b68a3de5b110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>freq</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a3490edc53b090b6c4bd4073132bfd2e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>freq_space</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a7d7e76fec5499a5bf685c85c3337de94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>freq_spread</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>af8b19013c2982645287add203b559a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>freqrms_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ab91f95efbf8fb53551885da43290f697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>freqrms_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a215b7ee43374133c792e9de283a93906</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hops_complex</type>
      <name>fringe</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ac959924cbebef89d4c48691dbce7d8fe</anchor>
      <arglist>[MAXFREQ+1]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>GHA</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9a089113f4887f853fa430ddedc9bcde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>grid_points</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ac4684986b8a8313a61d61c083b09b54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>inc_avg_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a4c89da490ffbe2434a8131b14226fbc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>inc_avg_amp_freq</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa57cceaaec89dad4fe6d55b5992bd27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>inc_avg_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ad9d4a47a792726617f86d9df310f04e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>int_pc_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a61dbf6e2fbbb428d9a58dbcbdd894319</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>integ_time</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0bede910490b8fd7a0a4dfa4c1ff4132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>interp_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a226b99d6150589b1d396e5c3f9736b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>interp_err</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a76ff8b8835cd54dd38ba6b2117c2191a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ion_sigmas</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a408edaf43ba1fea14b32e697425c664c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lag</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a56794c908ad4f65e339cf70c5c6545b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>large_errors</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0d3ae53dec51b1fb004ef139be00e5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>loopion</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a706fbfaf0305f47295151ad161481aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lsb_phoff</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa78ceb5fec290f73bbecba6d30b3545b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_delchan</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a965e2eea9f6e29ac26c015ec672ccb40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mb_index</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5a9b35622e373b025c29734233e529ce</anchor>
      <arglist>[MAXFREQ]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mb_indx</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a85191b6b3ea60be42da5899a18b7e48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mbd</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>adc8ac885d8a161f403e578090c720a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mbd_max</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a649e63d5040061862682b58d97394b66</anchor>
      <arglist>[2 *MAXLAG]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mbd_max_global</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ada300f2666fe318679e49c52e7f0f801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mbd_sep</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9088758e2b0c8fc05b56e7e922f3f5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mod_resid_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afeeb132cbd906d7cb578ed9b1e9af4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>napbyfreq</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a347ac0c11afff87ce524aff61fbc15d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nion</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0cc518c8126fcd0b16194a21584656c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nseg</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1874f3f0a29bd717874b6dcdb05bae59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae4bcead7edb4ec0ce8a1f11d0f434944</anchor>
      <arglist>[MAXFREQ][2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_delay</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1e064bfc7e85c289444e94e566d6a31e</anchor>
      <arglist>[MAXFREQ][2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_meas</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a2c0125430f310a30f02537e71a8817a1</anchor>
      <arglist>[MAXFREQ][2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_offset</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0258ce6fbd5384ff57f7051ea558fa0e</anchor>
      <arglist>[MAXFREQ][2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ab3b98158cf39c2e84d773e1b2f683832</anchor>
      <arglist>[MAXFREQ][2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pc_rate</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a26ac6ced9208b9a9590cb9b2c1a69a13</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pcals_accum</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a7dd96676e0bb61db7ca96e1bc7e7d615</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ph_delay_err</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a67c5617343a0fe7f8f20b984358fcb34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>phase_err</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a80a4538e1c3e686d8f094a7b2bd05801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>prob_false</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>acc0992d8fb85b6bbdada09338138617f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pts_searched</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>adfb19c3afaddb27e4e3566c825ec119e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rate_dec_width</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a9e8c124eea47e10357572017498c0bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rate_ra_width</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a2036d7e0425b0fc0ebc3f49fab2f7487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rate_sep</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aec40b21b9ac54ac74aae8849fff848fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>resid_ph_delay</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a787a5697d683d6294ee1b9a12a98c305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>resid_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a99e119d3e2e2b0d0ada401b321d7d9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sb_bw_apcnt</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aea68572a4e806fdb7db1e4777f8c633e</anchor>
      <arglist>[MAXFREQ+2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sb_bw_fracs</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afcb9cb5a699aa15d176e58d8e86721d9</anchor>
      <arglist>[MAXFREQ+2][2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sb_bw_origs</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a2d78c7b5875ba7b354e37f3cf3cdec11</anchor>
      <arglist>[MAXFREQ+2][2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sb_indx</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a816fc7b4cf5116d2b9f0ca12310357e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sbavg</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1334b776bcb77aee15e5006a96182b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sbd_dec_width</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae4bfb7b74cd4e65c60e9c1260c8cf93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sbd_max</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a41519ef3183fc1f62f4437b84097ad74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sbd_ra_width</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a4f6bbac3bb81dcf9da57656a93610778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sbd_sep</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>abfc9b629d7f09218381de3e340b76748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sbdbox</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a37aa045a8ea79a57a0faa69f17ba9212</anchor>
      <arglist>[MAXFREQ+1]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>search_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0fc70e7c142e364a8ce8526a4af49ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sliver_errors</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a5b035d5d9a4d26a613825a46e28caabd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>snr</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a006d490f6eec25c4350ad1b69cefff87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>space_err</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>aa4d201f95bd266bc9680158d84c64640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stc_present</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae943a38885590fc60f81f2e189766c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>th_freqrms_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a1346050ec4982a33d6e633b7e54fb883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>th_freqrms_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afb91a8d888da9122a84478185de2fed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>th_timerms_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a54300c84f218de2859064d7d15d15eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>th_timerms_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ae53703515f696356cf575ea1be62cc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>timerms_amp</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a430cfd9ac3bdafa8a705403f26ba3f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>timerms_phase</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a2d1f29de4ede030bb24a8e18c6c84164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tot_sb_bw_aperr</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a0493d7ebf613e067e58be01a67fcb958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>total_ap</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a898317d062a93bc3b990c2f37dc869dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>total_ap_frac</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a01f74ea2c91b4212e27661ee0594dc12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>total_lsb_frac</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afbaf14e58e6756d707f42966531ac78b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>total_usb_frac</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a36123095d4b31a5afbe0a18feee1b15f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>win_dr</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>afb074e4e2420707856adcc8564571e45</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>win_dr_save</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a824aa6c90f3acf07066a89d45f063281</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>win_mb</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a8e047fb9396a9905dff444b2d0e8e2ba</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>win_mb_save</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a66acb652a09dcc58c791d56c58721c9a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>win_sb</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>ab49f8125e9a2aceedd047dab7e13ff58</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>win_sb_save</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a097df8364ff877b60d3e8ed52f936465</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>xpnotchpband</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a2480c142513f81cb53f96606d0f229e1</anchor>
      <arglist>[2 *MAXNOTCH]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zero_errors</name>
      <anchorfile>param__struct_8h.html</anchorfile>
      <anchor>a05827d7684aa73ec00e3d7e69867aa13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>udat</name>
    <filename>usearray_8h.html</filename>
    <anchor>structudat</anchor>
    <member kind="variable">
      <type>int</type>
      <name>parameter_id</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>aa034489d4f4a2ab4faadc4c614b2c59c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>parameter_index</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a65559310e04660f3df7042f63e8f9373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>parameter_name</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>aae010554c9a05db80c1e2d9425094de6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>usearray</name>
    <filename>usearray_8h.html</filename>
    <anchor>structusearray</anchor>
    <member kind="variable">
      <type>int</type>
      <name>allocated</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a8375d444a40e7052bfb086cca5c9ca91</anchor>
      <arglist>[MAX_PARMS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nparms</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>afa17a6d29b5c5c7ac85c8c956495d571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npoints</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a89fd712f3fd078c160fb89d29638a676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>parameter</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>aef33c79f66cede23d1033d6b0bd88a11</anchor>
      <arglist>[MAX_PARMS]</arglist>
    </member>
    <member kind="variable">
      <type>struct udat</type>
      <name>type</name>
      <anchorfile>usearray_8h.html</anchorfile>
      <anchor>a3a0c36da36259b43e6c3ca8a8b3fd2cb</anchor>
      <arglist>[MAX_PARMS]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vacuum_struct</name>
    <filename>ivex_8h.html</filename>
    <anchor>structvacuum__struct</anchor>
    <member kind="variable">
      <type>short</type>
      <name>inches_of_H2O</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>acfb58b6b8b74259ebdf100a288385b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>setting</name>
      <anchorfile>ivex_8h.html</anchorfile>
      <anchor>ade8f51c6a2e80e45581141fa6c442a85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>value</name>
    <filename>vex_8h.html</filename>
    <anchor>structvalue</anchor>
    <member kind="variable">
      <type>char</type>
      <name>mandatory</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a6ff64bc1c46936ffb19a461182b41953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>range</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a3900761c83c0c64639419b4e9a331950</anchor>
      <arglist>[50]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>type</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a543930f497135c3a9b74183127634939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>units</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ad772dfaa9cddc6ecb21f514e4cc0e04e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vex</name>
    <filename>vex_8h.html</filename>
    <anchor>structvex</anchor>
    <member kind="variable">
      <type>struct Cvex_Config *</type>
      <name>cvex</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ade2243831e51971c37eac38f330b33b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cvex_src</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a802ff1b274b6195e039ace28e8d6f9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct evex_struct *</type>
      <name>evex</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a050f386dcaa835c4329f58d1ac43ad3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>evex_src</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ac40c3c40fa55a14267d8759b8fba5afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>filename</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a9d605ee4f80a20ead825f1c56a460ddf</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>struct ivex_struct *</type>
      <name>ivex</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a7e3ef49ddb2771e49e92ef0213fb562e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ivex_src</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>aee102ba8ed5818c710161f5fb7a13790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct lvex_struct *</type>
      <name>lvex</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a78395dff283f9c74a5d456c2872ce7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>lvex_src</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a207709b90ddcfdfd8538fffd30eaca16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct scan_struct *</type>
      <name>ovex</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a7edd147b2c001dc595c5d922acc48182</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ovex_src</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a9c5ab778bddf2c5d30c88ed3c9ecdaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct svex_struct *</type>
      <name>svex</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>ac94a18b1c42ac22d78395de8d9cba4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>svex_src</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a8530f73cc6cf0c1b73ae91bb10c3ee4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vextypes</name>
      <anchorfile>vex_8h.html</anchorfile>
      <anchor>a870cf8e0d0cfdff664db8b876b415983</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vexpy::vexpy::vex</name>
    <filename>classvexpy_1_1vexpy_1_1vex.html</filename>
    <base>vexpy::vexpy::VexStructureBase</base>
  </compound>
  <compound kind="class">
    <name>vexpy::vexpy::VexStructureBase</name>
    <filename>classvexpy_1_1vexpy_1_1VexStructureBase.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__eq__</name>
      <anchorfile>classvexpy_1_1vexpy_1_1VexStructureBase.html</anchorfile>
      <anchor>a977b385c197df406231e1b04697ebe0d</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__ne__</name>
      <anchorfile>classvexpy_1_1vexpy_1_1VexStructureBase.html</anchorfile>
      <anchor>a11038ebcd0191035b2a7e6620ddd58b1</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>printarray</name>
      <anchorfile>classvexpy_1_1vexpy_1_1VexStructureBase.html</anchorfile>
      <anchor>a110929a2baeb94c6b38d42e056b0c1af</anchor>
      <arglist>(self, a)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>printsummary</name>
      <anchorfile>classvexpy_1_1vexpy_1_1VexStructureBase.html</anchorfile>
      <anchor>af155ab0d05c4c75c206558a0208a5841</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vpal::fourphase_lib::VGOSFourphaseSingleScanProcessor</name>
    <filename>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ad7d1504708ae53e873dd66a982cc3f15</anchor>
      <arglist>(self, config_obj, root_file, control_file)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>calculate_delay_phase_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>af1ddddf8a6634d5f2add8c0b7b698561</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_ionosphere_fix_control_file</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>aaaaf6c6aded794304f7d45d48d127064</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_ionosphere_search_control_file</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ac91a6c17727dd95c0f8cbd22dab4cd3b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>determine_ionosphere</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a48615b8570a3c3ce886f0eb6b6e3fa7e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_station_delay_offsets_and_error</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a8020a80f8cfbc3835fa29c86b00924f7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_mean_station_phase_offsets_and_error</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a80de9c62c86e5f83b8c4bb9434bbc825</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_raw_station_delay_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>aed2f3ce6311222d2778a218c6ed4ec50</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_raw_station_phase_offsets</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a9a90a652655a86432da046d33890767d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_stations</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ad80e6737754e2547a824f3f8382215c0</anchor>
      <arglist>(self, stations=&apos;&apos;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>baseline_dtec</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a23d5a07df2d8c401d2833639a438655e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>config_obj</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a806c0b8ab048b4cd6c20470d578375db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>control_file_path</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>acf8789495b770a6e55ffd920845e8eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtec_tolerance</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a302f7ec014dd8ba0adb812ac55f3718f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>error_condition</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>ac3565ec4b7a02acb37f1f1c3f3e971a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_dir</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a17253924bbe15fd84df5aa64b760b59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp_name</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>abb7c9b2c5e585ec5678e73c4d1f06acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ion_fix_control_file_path</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>adc14dbc6f5c41134794beb27ae32147a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ion_search_control_file_path</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a4e50cf5e4bf088bf4d02cd78432f7b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_proc</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a7075d3257086cdf86b863225b6c647c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pol_products</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a6dabac758ae774203b4e45e821a430a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>root_file_path</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a3bab764b4b34f81c941ec9bdc0fe74b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_dir</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a30799e12f69dff5470831ad2249f79dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scan_name</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a7dc710f316dbf1fe47d04b6b503386d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_y_minus_x_delays</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a52762d6845f53ec958f65e6638791a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_y_minus_x_phases</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a396ba225097174b6b2f2851eee042b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stations</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>a80facdf050080f9e2255719c5c578bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use_progress_ticker</name>
      <anchorfile>classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor.html</anchorfile>
      <anchor>acaa4904e6275a0aeba21b95e0ee75424</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vis_record</name>
    <filename>difx2mark4_8h.html</filename>
    <anchor>structvis__record</anchor>
    <member kind="variable">
      <type>int</type>
      <name>baseline</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ae9c0eea3dd3ba3035daa7a46c27df19d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct vis_record::components</type>
      <name>comp</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>af2b0cbf801a53bd6c26c2dbd2448e4a7</anchor>
      <arglist>[MAX_VIS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>config_index</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a830b2f4cb30b160daec5532a1978fd1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>freq_index</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a58f62a78e010c80ab32393d3b60fbac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>iat</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ad89ec1f263d922d9bdda9157760412f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mjd</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ae6eb8fd5e339b0abf16eed96c885063e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nvis</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>aee479aa1e80ceba4571eea1f1f05420e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>pols</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a61ec6c432bc645ff99be9528a2b8d33e</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pulsar_bin</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a54bd8c05879c90e7fa66d2f1ac2d124f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>source_index</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a89617b95ffe9234eaaedf7f444580637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sync</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a85405915991a6d1834311c6acc4836c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>uvw</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>ad7eeb28ccff8050306fa76488f31edaa</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>version</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a44f88b31ebb56755c0c8cf939dd739fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weight</name>
      <anchorfile>difx2mark4_8h.html</anchorfile>
      <anchor>a14b52e86107eb4d38bb957e5775a7f3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>XAxisPackType</name>
    <filename>classXAxisPackType.html</filename>
  </compound>
  <compound kind="class">
    <name>XExtensionType</name>
    <filename>classXExtensionType.html</filename>
  </compound>
  <compound kind="namespace">
    <name>afio</name>
    <filename>namespaceafio.html</filename>
    <namespace>afio::afio</namespace>
  </compound>
  <compound kind="namespace">
    <name>afio::afio</name>
    <filename>namespaceafio_1_1afio.html</filename>
    <class kind="class">afio::afio::afile_structure</class>
    <class kind="class">afio::afio::AFIOStructureBase</class>
    <class kind="class">afio::afio::corelsum</class>
    <class kind="class">afio::afio::fringesum</class>
    <class kind="class">afio::afio::quadsum</class>
    <class kind="class">afio::afio::rootsum</class>
    <class kind="class">afio::afio::trianglesum</class>
    <member kind="function">
      <type>def</type>
      <name>afio_load</name>
      <anchorfile>namespaceafio_1_1afio.html</anchorfile>
      <anchor>a8a0988cf12991409fe4395762dd4333d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>afiofp_approximately_equal</name>
      <anchorfile>namespaceafio_1_1afio.html</anchorfile>
      <anchor>a5a104a15cc5aab08691634992a221c1b</anchor>
      <arglist>(a, b, abs_tol=1e-14, rel_tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>alist</name>
      <anchorfile>namespaceafio_1_1afio.html</anchorfile>
      <anchor>a6977ac95996187d29c4c21c1209c974f</anchor>
      <arglist>(filename)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>example2</name>
    <filename>namespaceexample2.html</filename>
    <member kind="function">
      <type>def</type>
      <name>fix_noema_jumps</name>
      <anchorfile>namespaceexample2.html</anchorfile>
      <anchor>aa8aabf4e4cc861b4c8fce69b5bd73dff</anchor>
      <arglist>(fringe_data_interface)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>example3</name>
    <filename>namespaceexample3.html</filename>
    <member kind="function">
      <type>def</type>
      <name>generate_pcphases</name>
      <anchorfile>namespaceexample3.html</anchorfile>
      <anchor>a2ad9372584a44b1b77099623d1476365</anchor>
      <arglist>(fringe_data_interface)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ffcontrol</name>
    <filename>namespaceffcontrol.html</filename>
    <namespace>ffcontrol::ffcontrol</namespace>
  </compound>
  <compound kind="namespace">
    <name>ffcontrol::ffcontrol</name>
    <filename>namespaceffcontrol_1_1ffcontrol.html</filename>
    <class kind="class">ffcontrol::ffcontrol::c_block</class>
    <class kind="class">ffcontrol::ffcontrol::dstats</class>
    <class kind="class">ffcontrol::ffcontrol::FFControlStructureBase</class>
    <class kind="class">ffcontrol::ffcontrol::gat_struct</class>
    <class kind="class">ffcontrol::ffcontrol::istats</class>
    <member kind="function">
      <type>def</type>
      <name>append_control_file</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>aa324864423b0ab76814a8fd1a3f8fb0b</anchor>
      <arglist>(control_filename, output_filename, cf_lines)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>append_control_file_with_find_and_replace</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a99f21242802b2a3b466fd44ed402457d</anchor>
      <arglist>(control_filename, output_filename, cf_lines, original_string_list, replacement_string_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_control_block</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a70931e8c8dc064a920e6ed9ae8d15f9f</anchor>
      <arglist>(filename, baseline, source, fgroup, time)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_control_file_hash</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a3c43d9861557e022c2fff862e973ec68</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_fcode_index</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>abf84620bcb2b0ebf4e9ba29d3d18bfae</anchor>
      <arglist>(freq_char)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_ffcontrol_library</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a6852ee618b36895c2c8c5e6770d27bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepend_control_file_with_find_and_replace</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a91e57c76f9171c15e1ace363a535c452</anchor>
      <arglist>(control_filename, output_filename, cf_lines, original_string_list, replacement_string_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>remove_lines_and_append_control_file</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a8a32cee72b98fca1af0532d1adffab07</anchor>
      <arglist>(control_filename, output_filename, cf_lines, remove_string_list)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>AP_BY_AP</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>adaf3cf41023f57b1d437ed8bc3b52b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>COMCHAR</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>aea1f729abe7ef147f5178a9c1921d873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DISCARD</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a26630fa769538f04d19b2780515c4f08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DSB</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1c9b37523f5fe00de16133e9e1e613bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EACH_MINUTE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>af4332ff2580e6631e5cded11db82f3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ITERATE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a5973070828a8bb9ac01a293691d833b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>KEEP</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>abc2178a7734028c9bca71cf2bd0ebbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>LSB</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a126785eec348f877447c165d6d589216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MANUAL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>ab56c47cbf191fd569936784ea6f19b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAX_SAMP</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>af16bb9d26fe00a52c25704f285148178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAXFREQ</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a20b2b67e73f90629dd80610a8e92978c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAXNOTCH</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a9ea13eeb76b0c222c9cf738676420cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MODEL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>ab3681847c042fcb978083a10619bbcc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MULTITONE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>acf1ecf718c90fc7055529e5744bab76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NORMAL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1fbf96a2602e046fd85e3ae90e6171e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NULLCHAR</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1cb258f77b8f6116dac09c37894a3b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>NULLFLOAT</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a44de222e0827892d1cfebe8079f3c6d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NULLINT</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>adf4a4a1e4f6aef3eda07043435e2ab32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>PHYLE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a004c662109fcdda8c8a0b49568d943a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>POLYNOMIAL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a0d2cab75b3f93db11f4b66618716fa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SBD</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a76991e845a887b4a10a83ce31e1457f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SCAN_START</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a55a2f9f9074570f0b4fa184f252f9ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SIMUL</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a1b49f8524d677fb1e2eb0211ed1514ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SINEWAVE</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a877b1a5e19859b629c71b059fc838ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>USB</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>ae663bc0ca0fe1541a0d3b02f2e988b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>WILDCARD</name>
      <anchorfile>namespaceffcontrol_1_1ffcontrol.html</anchorfile>
      <anchor>a4cc7e910322267cb8dfce2b7080191f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops</name>
    <filename>namespacehops.html</filename>
    <namespace>hops::selfname</namespace>
    <class kind="struct">hops::apply_to_tuple</class>
    <class kind="struct">hops::apply_to_tuple2</class>
    <class kind="struct">hops::apply_to_tuple2&lt; 0 &gt;</class>
    <class kind="struct">hops::apply_to_tuple&lt; 0 &gt;</class>
    <class kind="struct">hops::count_instances_of_type</class>
    <class kind="struct">hops::count_instances_of_type&lt; XCheckType, 0, T... &gt;</class>
    <class kind="struct">hops::h5helper_complex_double</class>
    <class kind="struct">hops::h5helper_complex_float</class>
    <class kind="class">hops::hops_clock</class>
    <class kind="struct">hops::indexed_tuple_visit</class>
    <class kind="struct">hops::indexed_tuple_visit&lt; 0 &gt;</class>
    <class kind="struct">hops::is_complex</class>
    <class kind="struct">hops::is_complex&lt; std::complex&lt; double &gt; &gt;</class>
    <class kind="struct">hops::is_complex&lt; std::complex&lt; float &gt; &gt;</class>
    <class kind="struct">hops::is_complex&lt; std::complex&lt; long double &gt; &gt;</class>
    <class kind="struct">hops::is_same_count</class>
    <class kind="struct">hops::is_same_count&lt; T, T &gt;</class>
    <class kind="class">hops::legacy_hops_date</class>
    <class kind="struct">hops::lockfile_data</class>
    <class kind="class">hops::MHO_AbsoluteValue</class>
    <class kind="class">hops::MHO_AFileDefinitions</class>
    <class kind="class">hops::MHO_AFileInfoExtractor</class>
    <class kind="class">hops::MHO_Axis</class>
    <class kind="class">hops::MHO_AxisBase</class>
    <class kind="class">hops::MHO_AxisPack</class>
    <class kind="class">hops::MHO_BasicFringeDataConfiguration</class>
    <class kind="class">hops::MHO_BasicFringeFitter</class>
    <class kind="class">hops::MHO_BasicFringeInfo</class>
    <class kind="class">hops::MHO_BasicFringeUtilities</class>
    <class kind="class">hops::MHO_BidirectionalConstIterator</class>
    <class kind="class">hops::MHO_BidirectionalConstStrideIterator</class>
    <class kind="class">hops::MHO_BidirectionalIndexedIterator</class>
    <class kind="class">hops::MHO_BidirectionalIterator</class>
    <class kind="class">hops::MHO_BidirectionalStrideIterator</class>
    <class kind="class">hops::MHO_BinaryFileInterface</class>
    <class kind="class">hops::MHO_BinaryFileStreamer</class>
    <class kind="class">hops::MHO_BinaryFileStreamerMultiType</class>
    <class kind="class">hops::MHO_BinaryFileStreamerMultiType&lt; XValueType &gt;</class>
    <class kind="class">hops::MHO_BinaryFileStreamerMultiType&lt; XValueType, XValueTypeS... &gt;</class>
    <class kind="class">hops::MHO_BinaryFileStreamerSingleType</class>
    <class kind="class">hops::MHO_BinaryFileStreamerSingleType&lt; mho_json &gt;</class>
    <class kind="class">hops::MHO_BinaryFileStreamerSingleType&lt; std::string &gt;</class>
    <class kind="class">hops::MHO_BinaryOperator</class>
    <class kind="class">hops::MHO_BitReversalPermutation</class>
    <class kind="class">hops::MHO_ChannelIndexLabeler</class>
    <class kind="class">hops::MHO_ChannelLabeler</class>
    <class kind="class">hops::MHO_ChannelLabelerBuilder</class>
    <class kind="class">hops::MHO_ChannelQuantity</class>
    <class kind="class">hops::MHO_CheckForNaN</class>
    <class kind="class">hops::MHO_CircularFieldRotationBuilder</class>
    <class kind="class">hops::MHO_CircularFieldRotationCorrection</class>
    <class kind="class">hops::MHO_ClassIdentity</class>
    <class kind="class">hops::MHO_ClassIdentityMap</class>
    <class kind="class">hops::MHO_ComplexConjugator</class>
    <class kind="struct">hops::MHO_CompoundMultiply</class>
    <class kind="struct">hops::MHO_CompoundSum</class>
    <class kind="class">hops::MHO_ComputePlotData</class>
    <class kind="class">hops::MHO_Constants</class>
    <class kind="class">hops::MHO_ContainerDictionary</class>
    <class kind="class">hops::MHO_ContainerFileInterface</class>
    <class kind="class">hops::MHO_ContainerHDF5Converter</class>
    <class kind="class">hops::MHO_ContainerHDF5Converter&lt; MHO_ObjectTags &gt;</class>
    <class kind="class">hops::MHO_ContainerJSONConverter</class>
    <class kind="class">hops::MHO_ContainerJSONConverter&lt; MHO_ObjectTags &gt;</class>
    <class kind="class">hops::MHO_ContainerStore</class>
    <class kind="class">hops::MHO_ControlConditionEvaluator</class>
    <class kind="class">hops::MHO_ControlDefinitions</class>
    <class kind="class">hops::MHO_ControlElementParser</class>
    <class kind="class">hops::MHO_ControlFileParser</class>
    <class kind="struct">hops::MHO_ControlLine</class>
    <class kind="struct">hops::MHO_ControlStatement</class>
    <class kind="class">hops::MHO_ControlTokenProcessor</class>
    <class kind="class">hops::MHO_CyclicRotator</class>
    <class kind="class">hops::MHO_DataSelectionBuilder</class>
    <class kind="class">hops::MHO_DCBlock</class>
    <class kind="class">hops::MHO_DCBlockBuilder</class>
    <class kind="class">hops::MHO_DefaultPythonPlotVisitor</class>
    <class kind="class">hops::MHO_DelayModel</class>
    <class kind="class">hops::MHO_DelayRate</class>
    <class kind="class">hops::MHO_DiFXBaselineProcessor</class>
    <class kind="class">hops::MHO_DiFXChannelNameConstructor</class>
    <class kind="class">hops::MHO_DiFXInputProcessor</class>
    <class kind="class">hops::MHO_DiFXInterface</class>
    <class kind="class">hops::MHO_DiFXPCalProcessor</class>
    <class kind="class">hops::MHO_DiFXScanFileSet</class>
    <class kind="class">hops::MHO_DiFXScanProcessor</class>
    <class kind="class">hops::MHO_DiFXVisibilityProcessor</class>
    <class kind="class">hops::MHO_DiFXVisibilityRecord</class>
    <class kind="class">hops::MHO_DirectoryInterface</class>
    <class kind="class">hops::MHO_DoubleSidebandChannelLabeler</class>
    <class kind="class">hops::MHO_Element</class>
    <class kind="class">hops::MHO_ElementTypeCaster</class>
    <class kind="struct">hops::MHO_EmptyType</class>
    <class kind="class">hops::MHO_EndZeroPadder</class>
    <class kind="class">hops::MHO_EstimatePCManual</class>
    <class kind="class">hops::MHO_ExtendedElement</class>
    <class kind="class">hops::MHO_ExtensibleElement</class>
    <class kind="class">hops::MHO_ExtremaSearch</class>
    <class kind="class">hops::MHO_FastFourierTransform</class>
    <class kind="class">hops::MHO_FastFourierTransformUtilities</class>
    <class kind="class">hops::MHO_FastFourierTransformWorkspace</class>
    <class kind="class">hops::MHO_FFTWTypeInfo</class>
    <class kind="class">hops::MHO_FFTWTypes</class>
    <class kind="struct">hops::MHO_FFTWTypes&lt; double &gt;</class>
    <class kind="struct">hops::MHO_FFTWTypes&lt; float &gt;</class>
    <class kind="struct">hops::MHO_FFTWTypes&lt; long double &gt;</class>
    <class kind="class">hops::MHO_FileKey</class>
    <class kind="union">hops::MHO_FileKeyVersionInfo</class>
    <class kind="class">hops::MHO_FileStreamer</class>
    <class kind="class">hops::MHO_FringeControlInitialization</class>
    <class kind="class">hops::MHO_FringeData</class>
    <class kind="class">hops::MHO_FringeFitter</class>
    <class kind="class">hops::MHO_FringeFitterFactory</class>
    <class kind="class">hops::MHO_FringeFitterVisitor</class>
    <class kind="class">hops::MHO_FringePlotInfo</class>
    <class kind="class">hops::MHO_FringePlotVisitor</class>
    <class kind="class">hops::MHO_FringeRotation</class>
    <class kind="class">hops::MHO_FunctorBroadcaster</class>
    <class kind="class">hops::MHO_GaussianWhiteNoiseSignal</class>
    <class kind="class">hops::MHO_HDF5ContainerFileInterface</class>
    <class kind="class">hops::MHO_HDF5Converter</class>
    <class kind="class">hops::MHO_HDF5ConverterDictionary</class>
    <class kind="class">hops::MHO_IndexLabelInterface</class>
    <class kind="class">hops::MHO_InitialFringeInfo</class>
    <class kind="class">hops::MHO_InspectingOperator</class>
    <class kind="class">hops::MHO_InterpolateFringePeak</class>
    <class kind="class">hops::MHO_Interval</class>
    <class kind="class">hops::MHO_IntervalLabelInterface</class>
    <class kind="class">hops::MHO_IonosphericFringeFitter</class>
    <class kind="class">hops::MHO_IonosphericPhaseCorrection</class>
    <class kind="class">hops::MHO_JSONConverter</class>
    <class kind="class">hops::MHO_JSONWrapper</class>
    <class kind="class">hops::MHO_LegacyDateConverter</class>
    <class kind="class">hops::MHO_LegacyRootCodeGenerator</class>
    <class kind="class">hops::MHO_LinearDParCorrection</class>
    <class kind="class">hops::MHO_LinearDParCorrectionBuilder</class>
    <class kind="class">hops::MHO_LockFileHandler</class>
    <class kind="class">hops::MHO_LSBOffset</class>
    <class kind="class">hops::MHO_LSBOffsetBuilder</class>
    <class kind="class">hops::MHO_ManualChannelDelayCorrection</class>
    <class kind="class">hops::MHO_ManualChannelDelayCorrectionBuilder</class>
    <class kind="class">hops::MHO_ManualChannelPhaseCorrection</class>
    <class kind="class">hops::MHO_ManualChannelPhaseCorrectionBuilder</class>
    <class kind="class">hops::MHO_ManualPolDelayCorrection</class>
    <class kind="class">hops::MHO_ManualPolDelayCorrectionBuilder</class>
    <class kind="class">hops::MHO_ManualPolPhaseCorrection</class>
    <class kind="class">hops::MHO_ManualPolPhaseCorrectionBuilder</class>
    <class kind="class">hops::MHO_MathUtilities</class>
    <class kind="class">hops::MHO_MBDelaySearch</class>
    <class kind="class">hops::MHO_MBDelaySearchCUDA</class>
    <class kind="class">hops::MHO_MD5HashGenerator</class>
    <class kind="class">hops::MHO_MD5HashGeneratorMultiType</class>
    <class kind="class">hops::MHO_MD5HashGeneratorMultiType&lt; XValueType &gt;</class>
    <class kind="class">hops::MHO_MD5HashGeneratorMultiType&lt; XValueType, XValueTypeS... &gt;</class>
    <class kind="class">hops::MHO_MD5HashGeneratorSingleType</class>
    <class kind="class">hops::MHO_MD5HashGeneratorSingleType&lt; std::string &gt;</class>
    <class kind="class">hops::MHO_Message</class>
    <class kind="class">hops::MHO_MessageEndline</class>
    <class kind="class">hops::MHO_MessageNewline</class>
    <class kind="class">hops::MHO_MinWeight</class>
    <class kind="class">hops::MHO_MinWeightBuilder</class>
    <class kind="class">hops::MHO_MixedPolYShift</class>
    <class kind="class">hops::MHO_MixedPolYShiftBuilder</class>
    <class kind="class">hops::MHO_MixedSidebandNormFX</class>
    <class kind="class">hops::MHO_MK4CorelInterface</class>
    <class kind="class">hops::MHO_MK4CorelInterfaceReversed</class>
    <class kind="class">hops::MHO_MK4FringeExport</class>
    <class kind="class">hops::MHO_MK4ScanConverter</class>
    <class kind="class">hops::MHO_MK4ScanConverterReversed</class>
    <class kind="class">hops::MHO_MK4StationInterface</class>
    <class kind="class">hops::MHO_MK4StationInterfaceReversed</class>
    <class kind="class">hops::MHO_MK4VexInterface</class>
    <class kind="class">hops::MHO_MPIInterface</class>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransform</class>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransformFFTW</class>
    <class kind="class">hops::MHO_MultidimensionalFastFourierTransformInterface</class>
    <class kind="struct">hops::MHO_MultiplyIdentity</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; bool &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; double &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; float &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; int &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; long double &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; short &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::complex&lt; double &gt; &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::complex&lt; float &gt; &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::complex&lt; long double &gt; &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; std::size_t &gt;</class>
    <class kind="struct">hops::MHO_MultiplyIdentity&lt; unsigned int &gt;</class>
    <class kind="class">hops::MHO_MultitonePhaseCorrection</class>
    <class kind="class">hops::MHO_MultitonePhaseCorrectionBuilder</class>
    <class kind="class">hops::MHO_NaNMasker</class>
    <class kind="class">hops::MHO_NDArrayMath</class>
    <class kind="class">hops::MHO_NDArrayTypeCastFunctor</class>
    <class kind="class">hops::MHO_NDArrayView</class>
    <class kind="class">hops::MHO_NDArrayWrapper</class>
    <class kind="class">hops::MHO_NDArrayWrapper&lt; XValueType, 0 &gt;</class>
    <class kind="class">hops::MHO_NDArrayWrapper&lt; XValueType, 1 &gt;</class>
    <class kind="class">hops::MHO_NormFX</class>
    <class kind="class">hops::MHO_Notches</class>
    <class kind="class">hops::MHO_NotchesBuilder</class>
    <class kind="class">hops::MHO_NullType</class>
    <class kind="struct">hops::MHO_ObjectStreamState</class>
    <class kind="class">hops::MHO_ObjectTags</class>
    <class kind="class">hops::MHO_OpenCLBatchedMultidimensionalFastFourierTransform</class>
    <class kind="class">hops::MHO_OpenCLComplexPointwiseMultiply</class>
    <class kind="class">hops::MHO_OpenCLFastFourierTransformPlan</class>
    <class kind="class">hops::MHO_OpenCLFastFourierTransformRadix2Stage</class>
    <class kind="class">hops::MHO_OpenCLInterface</class>
    <class kind="class">hops::MHO_OpenCLKernelBuilder</class>
    <class kind="class">hops::MHO_OpenCLMultidimensionalFastFourierTransform</class>
    <class kind="class">hops::MHO_OpenCLNDArrayBuffer</class>
    <class kind="class">hops::MHO_OpenCLScalarMultiply</class>
    <class kind="class">hops::MHO_Operator</class>
    <class kind="class">hops::MHO_OperatorBuilder</class>
    <class kind="class">hops::MHO_OperatorBuilderManager</class>
    <class kind="class">hops::MHO_OperatorToolbox</class>
    <class kind="class">hops::MHO_ParameterConfigurator</class>
    <class kind="class">hops::MHO_ParameterManager</class>
    <class kind="class">hops::MHO_ParameterStore</class>
    <class kind="class">hops::MHO_Passband</class>
    <class kind="class">hops::MHO_PassbandBuilder</class>
    <class kind="class">hops::MHO_PhaseCalibrationTrim</class>
    <class kind="class">hops::MHO_PolProductSummation</class>
    <class kind="class">hops::MHO_PolProductSummationBuilder</class>
    <class kind="struct">hops::MHO_ProfileEvent</class>
    <class kind="class">hops::MHO_Profiler</class>
    <class kind="class">hops::MHO_PyContainerStoreInterface</class>
    <class kind="class">hops::MHO_PyFringeDataInterface</class>
    <class kind="class">hops::MHO_PyFringeFitterInstance</class>
    <class kind="class">hops::MHO_PyGenericOperator</class>
    <class kind="class">hops::MHO_PyOperator</class>
    <class kind="class">hops::MHO_PyParameterStoreInterface</class>
    <class kind="class">hops::MHO_PyScanStoreInterface</class>
    <class kind="class">hops::MHO_PyTableContainer</class>
    <class kind="class">hops::MHO_PythonOperatorBuilder</class>
    <class kind="class">hops::MHO_PyUnaryOperator</class>
    <class kind="class">hops::MHO_PyUnaryTableOperator</class>
    <class kind="class">hops::MHO_Reducer</class>
    <class kind="class">hops::MHO_SamplerLabeler</class>
    <class kind="class">hops::MHO_SamplerLabelerBuilder</class>
    <class kind="class">hops::MHO_SBDTableGenerator</class>
    <class kind="class">hops::MHO_ScalarContainer</class>
    <class kind="class">hops::MHO_ScalarContainerBase</class>
    <class kind="class">hops::MHO_ScanDataStore</class>
    <class kind="class">hops::MHO_SelectRepack</class>
    <class kind="class">hops::MHO_Serializable</class>
    <class kind="class">hops::MHO_SerializableObjectFactory</class>
    <class kind="class">hops::MHO_SerializableObjectFactorySpecific</class>
    <class kind="class">hops::MHO_SimulatedSignalGenerator</class>
    <class kind="class">hops::MHO_SingleSidebandNormFX</class>
    <class kind="class">hops::MHO_SingleToneSignal</class>
    <class kind="class">hops::MHO_Snapshot</class>
    <class kind="class">hops::MHO_StationCodeMap</class>
    <class kind="class">hops::MHO_StationDelayCorrection</class>
    <class kind="class">hops::MHO_StationDelayCorrectionBuilder</class>
    <class kind="class">hops::MHO_StationModel</class>
    <class kind="class">hops::MHO_SubSample</class>
    <class kind="struct">hops::MHO_SumIdentity</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; bool &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; double &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; float &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; int &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; long double &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; short &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::complex&lt; double &gt; &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::complex&lt; float &gt; &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::complex&lt; long double &gt; &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; std::size_t &gt;</class>
    <class kind="struct">hops::MHO_SumIdentity&lt; unsigned int &gt;</class>
    <class kind="class">hops::MHO_TableContainer</class>
    <class kind="class">hops::MHO_TableContainerBase</class>
    <class kind="class">hops::MHO_TableContainerBufferBuilder</class>
    <class kind="class">hops::MHO_Taggable</class>
    <class kind="class">hops::MHO_Timer</class>
    <class kind="class">hops::MHO_TimeStampConverter</class>
    <class kind="struct">hops::MHO_Token</class>
    <class kind="class">hops::MHO_Tokenizer</class>
    <class kind="class">hops::MHO_TransformingOperator</class>
    <class kind="struct">hops::MHO_Typelist</class>
    <class kind="struct">hops::MHO_TypelistSizeImpl</class>
    <class kind="struct">hops::MHO_TypelistSizeImpl&lt; MHO_Typelist&lt; T... &gt; &gt;</class>
    <class kind="class">hops::MHO_UnaryFunctor</class>
    <class kind="class">hops::MHO_UnaryInPlaceOperator</class>
    <class kind="class">hops::MHO_UnaryOperator</class>
    <class kind="class">hops::MHO_UniformGridPointsCalculator</class>
    <class kind="class">hops::MHO_Unit</class>
    <class kind="class">hops::MHO_UUID</class>
    <class kind="class">hops::MHO_UUIDGenerator</class>
    <class kind="class">hops::MHO_VectorContainer</class>
    <class kind="class">hops::MHO_VectorContainerBase</class>
    <class kind="class">hops::MHO_VexBlockParser</class>
    <class kind="class">hops::MHO_VexDefinitions</class>
    <class kind="class">hops::MHO_VexElementLineGenerator</class>
    <class kind="class">hops::MHO_VexGenerator</class>
    <class kind="class">hops::MHO_VexInfoExtractor</class>
    <class kind="class">hops::MHO_VexLine</class>
    <class kind="class">hops::MHO_VexParameter</class>
    <class kind="class">hops::MHO_VexParser</class>
    <class kind="class">hops::MHO_VexTokenProcessor</class>
    <class kind="class">hops::MHO_VisibilityChannelizer</class>
    <class kind="union">hops::MHO_VisibilityChunk</class>
    <class kind="class">hops::MHO_Visitor</class>
    <class kind="class">hops::MHO_WeightChannelizer</class>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; polprod_axis_type, channel_axis_type, time_axis_type, frequency_axis_type &gt;</type>
      <name>baseline_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af48b735b87edae9b558863d649fe86d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>channel_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2859f63239a0103e37caa96041f657cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; int &gt;</type>
      <name>coeff_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a722c3b5840ed195f2f7b99ebab1ac67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>ComplexD</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afdc59198fd24a8457048c3970e71de16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; float &gt;</type>
      <name>ComplexF</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a80e99f6a68015d31363e343d4e22e57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>coord_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1397f942baddf540131095329c8a3ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>delay_rate_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a400119d44fcb0f0cbffd8a9bfb01e22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac5d5af22f2673e1a054bdd3eb64f5825</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_MultidimensionalFastFourierTransform&lt; visibility_type &gt;</type>
      <name>FFT_ENGINE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aabe0d71e00c2f8f265a53d47914a7893</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FLAG_TYPE</type>
      <name>flag_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba71fe94b8e0028458f45a1f1032a6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>FLAG_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afc2319090e7d24f7e26f6f22da6e605f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>frequency_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5b27a5854e62b4faacbedfe4e91cb322</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct hops::h5helper_complex_double</type>
      <name>h5helper_complex_double</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5860a53ed4d3448019e6c1c1e09cdeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct hops::h5helper_complex_float</type>
      <name>h5helper_complex_float</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a70e95959da2b39bc66eb98400afbb2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::chrono::time_point&lt; hops_clock, Duration &gt;</type>
      <name>hops_time</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae184e4a1cc248eab7c662c73f3817df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Int</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5e46198ab188f5da37f5f03ebebcdc17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; pol_axis_type, channel_axis_type &gt;</type>
      <name>manual_pcal_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1d483b5c48c0a8f7f2e213f11c3c5f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; manual_pcal_element_type, manual_pcal_axis_type &gt;</type>
      <name>manual_pcal_delay_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0056676cc2cdefcf839a9a50b03b1044</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PCFP_TYPE</type>
      <name>manual_pcal_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6e1fd514a425115a857fff21f598845f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; manual_pcal_element_type, manual_pcal_axis_type &gt;</type>
      <name>manual_pcal_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4eaba5675cabcc15609b4a8af1610cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; double, mbd_axis_pack &gt;</type>
      <name>mbd_amp_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a14d8b513a00fa05f407b5a6142f31238</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; time_axis_type &gt;</type>
      <name>mbd_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a73c3f8a3e90792851cbeb56a1a8dd7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_type, mbd_dr_axis_pack &gt;</type>
      <name>mbd_dr_amp_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ace31e8302ce3cb01e749115968385c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; time_axis_type, delay_rate_axis_type &gt;</type>
      <name>mbd_dr_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a51030cf719a4eee8c2aede06cbb18b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, mbd_dr_axis_pack &gt;</type>
      <name>mbd_dr_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a34485a13f7dbf2dc3fee00cbd94618ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt;</type>
      <name>mbd_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a07871b98086236e6650863c1bf955e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; char &gt;</type>
      <name>MHO_AxisChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab28bb1a8d2574463f9671cfc095aaf96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::complex&lt; double &gt; &gt;</type>
      <name>MHO_AxisComplexDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad575b4e743c7d4fff1aa0a41511bbc29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::complex&lt; float &gt; &gt;</type>
      <name>MHO_AxisComplexFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a93b242d6e77cc9c6e784f445e1a5925d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::complex&lt; long double &gt; &gt;</type>
      <name>MHO_AxisComplexLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad142c2298784f348d8db7f42f30d7e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>MHO_AxisDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a68c52039667eee64c2b627f3f48325ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; float &gt;</type>
      <name>MHO_AxisFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af630eae72c4708218dfe859dd7824106</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; int &gt;</type>
      <name>MHO_AxisInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad2a938a2d29908e42015548966a4683d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; long &gt;</type>
      <name>MHO_AxisLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a02334ffe6d48c44145ae992353082334</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; long double &gt;</type>
      <name>MHO_AxisLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab3474bb63f09127b7f52b8ccecfe718b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; long long &gt;</type>
      <name>MHO_AxisLongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a761bbb9d4934c671c588a7befd6e52cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; short &gt;</type>
      <name>MHO_AxisShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1d9a678f77b431a09b11af38a69a243d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>MHO_AxisString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2d44b3ffd680e07afd52e53ddc0e273d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned char &gt;</type>
      <name>MHO_AxisUChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a27fceed677c4baa89b90b6f2808716b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned int &gt;</type>
      <name>MHO_AxisUInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7bfab43279798ac1e6453be1be794c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned long &gt;</type>
      <name>MHO_AxisULong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad840f91d2ab5dd52176c386987a4f512</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned long long &gt;</type>
      <name>MHO_AxisULongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3a2c8d6d8383694f293ea8bef564cd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; unsigned short &gt;</type>
      <name>MHO_AxisUShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a35f198950e86bf0616c1d7ec5015226e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_BinaryFileStreamerMultiType&lt; bool, char, unsigned char, short, unsigned short, int, unsigned int, long, unsigned long, long long, unsigned long long, float, double, long double, std::complex&lt; float &gt;, std::complex&lt; double &gt;, std::complex&lt; long double &gt;, std::string, mho_json &gt;</type>
      <name>MHO_BinaryFileStreamerBasicTypes</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8fcc30cc0b26685a20791dbeb9e1a340</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MHO_ClassVersion</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a79b4811cd0a8f2e7e35c6d3f85ce8b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_MD5HashGeneratorMultiType&lt; bool, char, unsigned char, short, unsigned short, int, unsigned int, long, unsigned long, long long, unsigned long long, float, double, long double, std::string &gt;</type>
      <name>MHO_MD5HashGeneratorBasicTypes</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a219036a368246e0e2f11100e110920cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; bool &gt;</type>
      <name>MHO_ScalarBool</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ade1d04834c517ba8ed0a8c05bdad6b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; char &gt;</type>
      <name>MHO_ScalarChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac40bc6bc90b9052f4ec8d8d62a22baa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::complex&lt; double &gt; &gt;</type>
      <name>MHO_ScalarComplexDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7d097b554ab3d0b2ba2060dfb5bf10a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::complex&lt; float &gt; &gt;</type>
      <name>MHO_ScalarComplexFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a873e3ba9c24123c34a114d414ded404e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::complex&lt; long double &gt; &gt;</type>
      <name>MHO_ScalarComplexLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1dc5ecefc988bd90eb028ea4fb5e4948</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; double &gt;</type>
      <name>MHO_ScalarDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6f11084c68244831cfa07add8ab83947</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; float &gt;</type>
      <name>MHO_ScalarFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8ec24681caf44e7dc10e8fbc3c401799</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; int &gt;</type>
      <name>MHO_ScalarInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1a5d3d4b516a67071666f61dfbaa40b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; long &gt;</type>
      <name>MHO_ScalarLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a034099594b108bd673782ae23eacc539</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; long double &gt;</type>
      <name>MHO_ScalarLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3a5d42b1ead3dd415a4151ee046a99f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; long long &gt;</type>
      <name>MHO_ScalarLongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab61536f020e5eb3375c84197e219d130</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; short &gt;</type>
      <name>MHO_ScalarShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af1e6211c91648ad8d05005af02941f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; std::string &gt;</type>
      <name>MHO_ScalarString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a55f2b27c57170bec11ef314d113a956d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned char &gt;</type>
      <name>MHO_ScalarUChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abef6a948319fcac017e30ffc68bcf031</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned int &gt;</type>
      <name>MHO_ScalarUInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a886f21b0a37e387dae91a906415af96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned long &gt;</type>
      <name>MHO_ScalarULong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af24da85abf3448a82d8d119a04dbeff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned long long &gt;</type>
      <name>MHO_ScalarULongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6cf7fedae5dc19e09dcba53bb4fdf0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_ScalarContainer&lt; unsigned short &gt;</type>
      <name>MHO_ScalarUShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab37f7561df3aeab7181f6c71e11ec8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename MHO_TypelistSizeImpl&lt; L &gt;::type</type>
      <name>MHO_TypelistSize</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a81428c7deedf83c6fd0583047fe632d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; char &gt;</type>
      <name>MHO_VectorChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a29f00cfe63c7fc6ac3591215c4efa724</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::complex&lt; double &gt; &gt;</type>
      <name>MHO_VectorComplexDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9f5ff6f143076c1c92a70500d76a7a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::complex&lt; float &gt; &gt;</type>
      <name>MHO_VectorComplexFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae42aae4aa1cbc028fd45769f2643af98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::complex&lt; long double &gt; &gt;</type>
      <name>MHO_VectorComplexLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1e8fee182ecb9322f08aaa8668d8a99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; double &gt;</type>
      <name>MHO_VectorDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a05963e248b42eb6d1153148756694cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; float &gt;</type>
      <name>MHO_VectorFloat</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a75bfc06f19bc97169f3105ac9cb1ac3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; int &gt;</type>
      <name>MHO_VectorInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a11a102c0a6bea5eeb7cbb80b04a5cd42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; long &gt;</type>
      <name>MHO_VectorLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a76fa5aeaeda9727ed2cb5761b6a2a366</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; long double &gt;</type>
      <name>MHO_VectorLongDouble</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7f33f180c4e7ea9ddf340708316cab05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; long long &gt;</type>
      <name>MHO_VectorLongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a21a71621ea785944afba5332c73bffbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; short &gt;</type>
      <name>MHO_VectorShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a45af48428c7c6e933c7436c342f4d215</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; std::string &gt;</type>
      <name>MHO_VectorString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a63045d71eca449d36b1e5a9f619008d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned char &gt;</type>
      <name>MHO_VectorUChar</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac7e60405fd7ba13b63a2fa0bb1895867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned int &gt;</type>
      <name>MHO_VectorUInt</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a66f406045e3731107f679448e4e339dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned long &gt;</type>
      <name>MHO_VectorULong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5d600f505d24e80546c63a74e5876a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned long long &gt;</type>
      <name>MHO_VectorULongLong</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae5af04ca5354f16f9f62f5db34b7d6f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_VectorContainer&lt; unsigned short &gt;</type>
      <name>MHO_VectorUShort</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0a98f83602d1bd34280b6fe7def8f844</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; pol_axis_type, time_axis_type, frequency_axis_type &gt;</type>
      <name>multitone_pcal_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6ba0b1d8890636426cda441f4a98a360</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; pcal_phasor_type, multitone_pcal_axis_type &gt;</type>
      <name>multitone_pcal_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a635984d730aadef0172598ca5fbfe135</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; pol_axis_type, channel_axis_type &gt;</type>
      <name>pcal_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab7f1cb591e5863dd0c95bd1a71488345</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; double, pcal_axis_pack &gt;</type>
      <name>pcal_phase_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8b2403be2c8594f6b082398f4b2806c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; PCFP_TYPE &gt;</type>
      <name>pcal_phasor_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa558c2e0a424c958495757fab2eaa6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>PCFP_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab1c120560d091c1b355299adbd274a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>phase_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a188bfd2d604e1c52bf641ae9390e7fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; std::complex&lt; double &gt;, MHO_AxisPack&lt; MHO_Axis&lt; double &gt;, MHO_Axis&lt; double &gt; &gt; &gt;</type>
      <name>phasor_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae84ae133e425a9e97ee17c8fa9f57a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>pol_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2accf62c54a2f1e3d463614d9da0f5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; std::string &gt;</type>
      <name>polprod_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1cabc272767304b4249535a2222103f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>visibility_type</type>
      <name>sbd_dr_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aabbe0bfe9a11919b42c09e997f8138b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>visibility_type</type>
      <name>sbd_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a263565c55505788061e161e68af995e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SPLINE_TYPE</type>
      <name>spline_coeff_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab6b2a0f7448d5b24e6418d64d01fb5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>SPLINE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2e8f2c2c3a84cb54d2a3732750ba301d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; coord_axis_type, time_axis_type, coeff_axis_type &gt;</type>
      <name>station_coord_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a43d60f805a8b120faef21ff6aa9e4a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; spline_coeff_type, station_coord_axis_pack &gt;</type>
      <name>station_coord_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6f27aa7690ad9ea81270e4c98605d9bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9163387793470606909d77fa3a33513d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_Axis&lt; double &gt;</type>
      <name>time_axis_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a33ae2c1875355c3959825a49b1080cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_AxisPack&lt; polprod_axis_type, time_axis_type, frequency_axis_type &gt;</type>
      <name>uch_baseline_axis_pack</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa7674bef0bbb74e125e5879b89d16e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_store_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_visibility_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8408c0f774da156de840825b92005e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_visibility_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1e59e456764cd51f36acca474ccde0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_store_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_weight_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac72deb6b4c0793fbb28d5c15b91bb6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_type, uch_baseline_axis_pack &gt;</type>
      <name>uch_weight_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7fafaf7e27baefbdfd1115c1c9247753</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>VFP_STORE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7271f63209a0610d8be0a659ed3bc7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>VFP_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac7ed0ca1886593ccfab9335d9b2388c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; VFP_STORE_TYPE &gt;</type>
      <name>visibility_element_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3284541bb8c2e9eb114b2016f5805658</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; VFP_TYPE &gt;</type>
      <name>visibility_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a741de096410bb20f75acc7c8c00bd0b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_store_type, baseline_axis_pack &gt;</type>
      <name>visibility_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa8731e6011eaaa14a1fbd1bb5515ea65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; visibility_element_type, baseline_axis_pack &gt;</type>
      <name>visibility_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afcc97dd4e78b9092817b1dbb0c561e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WFP_STORE_TYPE</type>
      <name>weight_element_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7d13ce806c7759b51fcda8a3bd6bf5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WFP_TYPE</type>
      <name>weight_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aae1b8cfd47782523a6e6173e0927df21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_store_type, baseline_axis_pack &gt;</type>
      <name>weight_store_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6d71a9ffaa068345a980f1e1613d97bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; weight_element_type, baseline_axis_pack &gt;</type>
      <name>weight_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a74fe9c8c1d011d62f4fd08db2f915d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>WFP_STORE_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af63c410bcc02bbd8b36bbbeff0a52b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>WFP_TYPE</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3b029f345d31806548518716602b5015</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; double, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</type>
      <name>xpower_amp_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0876bf037431c9d1550c2af6cb40a34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MHO_TableContainer&lt; std::complex&lt; double &gt;, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</type>
      <name>xpower_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a085bda9bb87c6f1100bf200de099be8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>control_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca58d901115c1b20ac8e533363c3b70423</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_list_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcabc1b0033575e5b75903a3f6c55480b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcaeeedb14f290602c7c779aca6e8b069e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcaa28e13aa79ac578ec8d03defa1b6037e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_list_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca013d0b09045b27e75945b4049ea256ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_fixed_length_list_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcacbd5083e82de9a3c2bc78d515fa6edc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_list_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca5f8472dc665bad0c007ed38f16e2b040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_conditional_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca2442b2a3f7cf42f8a57477b38331e8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_compound_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fca75c581e734adac305ac3cd953deac987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_bool_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcadc7cc77e6fc62cb864226c6ff14f251b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>control_unknown_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acffe53f5b1dadbe500c7b969db0cc6fcaf2e37cd991df63994682d8f05bd137bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MHO_JSONVerbosityLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONBasicLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a72010d59f8fe66d4a5e10884849fe4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONTagsLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3aa34bc7d673e8d53fd8ebc7be94b2c393</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONAxesLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a3fe29c8221f16602d0b07dea8d90872b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONAxesWithLabelsLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a09455e05581c81190d3174c3e0f2ec79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eJSONAllLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac365f2fc32d18186b2c15d9d69fee3b3a6a1dd75c51d5a0ca672f9863367acb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MHO_MessageLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eSpecialLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09aaac756650fbaa2d4e6b756c9287a5e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eSilentErrorLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09ae5f55ad64222c98562d16d45b475ca59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eFatalErrorLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09adbb7a8dd881e5846fcca150304d11771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eErrorLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09aaba5b52ec3480e7f5cd7e6157457030c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eWarningLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09aa73d0d4f73e6cfd4654e75e967818ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eStatusLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09a1c875665edba4b8c0fdd234e041c04bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eInfoLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09acb6ccc2eef78772406d1d53dd65f3f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eDebugLevel</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94a3ffdec6ff39967590ca955ab81e09a6dcc05af4179555fa24fbcf7ebe99d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MHO_ProfilerFlag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8f9c03709f211d49ed4caaf36ce118b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pStartFlag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8f9c03709f211d49ed4caaf36ce118b6a2f310b19d2c406ae4a6a6c1dd9320f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pStopFlag</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8f9c03709f211d49ed4caaf36ce118b6ae8cec9d95f167ac1a0bc13807053da97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>par_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a2d490927d4b284c0ef8b09343f9603ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>int64_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a39aa2d058a8feb36d0fafc94c4f9bd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>double_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6af3f7b4b7a81742aed110f3d50e900eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a8dd12b615b04dc9f4a5fcf47e7c6aee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bool_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a6810caa67243f3b2884fd5a482bf7603</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unknown_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adaffca1375039985f7a1706aec619bb6a73d1ef5f73a1021623fd8ff11e3bb23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>vex_element_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aac51c9baf9c47d4b0c50e8a637e50b7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_int_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aaae5cecd7aa53843fed68d063dddd009a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa08be1fcfb93fce0a2ae46b2840788a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aaa8715bf579a77a060c6a0bab3d41d072</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_string_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa16a0b25e56cce0a592e0f5314cd288b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_epoch_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aae21aa99e1c7848da862771095c2b99b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_radec_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa219bfc7cfcbae1c196af8771c45b8a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_real_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa391ab20c6d67618c22b50be81d8db27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_compound_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa3b2bcab43b04d456a48bd80780f10a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_list_compound_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa96f8de8c5563756abbe89815ee1ba4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_link_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa5a7a45837ce65df82b78a71f86906ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_keyword_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa4416dda430610d29122c3506b8c7175b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_reference_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa10d263604a9ee4c7051e9fd73f96d070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vex_unknown_type</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acb837f491449da0138d5e2824a60760aa2933bbeb5cf31a4727a5196cd342f21a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>adler32_checksum</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9d689dcf5ca4aae4fceecfad2cca1a09</anchor>
      <arglist>(unsigned char *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>afile_header</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab62f3705527ff994bb1981588622fce9</anchor>
      <arglist>(int version, int type, char afile_com_char)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae4eeea1c905e099b4e62f6b9edc75adb</anchor>
      <arglist>(const XTupleType &amp;tup, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1b41da5b6d9a0dd5a33bc7ce8bddcb24</anchor>
      <arglist>(XTupleType &amp;tup, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7fc2aff6d5cdcded0f07cf55d8b3de1b</anchor>
      <arglist>(const XTupleType &amp;tup1, XTupleType &amp;tup2, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_at2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0b2cebee4189d48a621294b3f3cef539</anchor>
      <arglist>(XTupleType &amp;tup1, XTupleType2 &amp;tup2, size_t index, XFunctorType &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a57e46aa8499c286e98a416e3baf8cc74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_field_rotations_fixed</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3565637d587b82cd03dc8a5f4046835c</anchor>
      <arglist>(std::complex&lt; double &gt; cpolvalue[4], double *par_angle, double *elevation, int *mount_type)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>create_complex_dtype_double</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a06bede74dd75a66d1f4af82b207c9a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>create_complex_dtype_float</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adf2f1a224a76181a28251dd23cda734b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyContainerStoreInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5ef5add9610b6df765276f64d068ed2b</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyFringeDataInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a431846e8de6844bd66d74ca03a11d5c6</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyParameterStoreInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94bcd64fcaad24df3ddaeef1d4858c2f</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyScanStoreInterface</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad1dd1a197d643b937a5995761efa7dfa</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclarePyTableContainer</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a677938cf651793d79237261f93e1571d</anchor>
      <arglist>(py::module &amp;m, std::string pyclass_name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>decode_value</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2b37bfe1aa0771554f22d5b183682ea7</anchor>
      <arglist>(const std::string &amp;code, const std::string &amp;character_set)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack1</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa7e371fcc850757bd8f8ddabdc45a391</anchor>
      <arglist>(Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack1</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a448113d66dc1468c6e1cb3d65186b154</anchor>
      <arglist>(Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack1</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af0b40fe097c506704348d20cbb196a65</anchor>
      <arglist>(String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af8c28795e28809f4ab0954bd75015984</anchor>
      <arglist>(Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64e43b68b8ad8020d3e67f571727d591</anchor>
      <arglist>(Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa22d36ca42fb01dda36333b5c7315db2</anchor>
      <arglist>(Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ade8c9bff2715f81444d7cab0b21cb843</anchor>
      <arglist>(Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a88037b70c7c9da061fc7d9fffffc599d</anchor>
      <arglist>(Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a218c756b89f12b4f2bbbbe3d0359fe4c</anchor>
      <arglist>(Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a32476257141883bbd3d56c82d6994932</anchor>
      <arglist>(String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64f880b2026005fdf21b355ee1b569ff</anchor>
      <arglist>(String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae54372173572de85288948ee08de11d9</anchor>
      <arglist>(String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab494f9fd9472378e9666241117e1980b</anchor>
      <arglist>(Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af4770804e01ce20a06ad3dfebde65677</anchor>
      <arglist>(Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af5c1c84049c26d336c9256e65a383a28</anchor>
      <arglist>(Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4edeabf2eea790774debcbe393b2a6e6</anchor>
      <arglist>(Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a27019be0ec1e3b7a6eae6c97c68c8fb4</anchor>
      <arglist>(Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2cb525d99f3aee9047aeafe2a34a4410</anchor>
      <arglist>(Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af53445d9c9ff147eea83603cb3a11554</anchor>
      <arglist>(Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2b99e2484f51306d4ac7e6e59158c3c6</anchor>
      <arglist>(Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa5010d8d4cb192034d518b6241709b48</anchor>
      <arglist>(Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5f282101376bb44a8fb444e2c2f5a487</anchor>
      <arglist>(Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9fa11b02bf1e60ab37c873c700dcf62e</anchor>
      <arglist>(Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afedd69475409d572aa711574ec278751</anchor>
      <arglist>(Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a80e034e55c47ecdf7a55f9327500b6dd</anchor>
      <arglist>(Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a667f8a782613a5683117c78038717c2c</anchor>
      <arglist>(Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a51d40f4ff6a3b4cc54e77325cd3e7275</anchor>
      <arglist>(Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a52dc1927ea457f651a4b2a06e693bae9</anchor>
      <arglist>(Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac73c62965b8ea352a88f0cb186917208</anchor>
      <arglist>(Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba073cb004e87fc62ffbcc8f7da467ee</anchor>
      <arglist>(Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1eeaa8ab4170cf606c3870b349d4d6e8</anchor>
      <arglist>(String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1debf395b0334ff89f0440d8c74d213b</anchor>
      <arglist>(String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2f2267797758d1c21a9058c872878628</anchor>
      <arglist>(String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a020f89283201497f076765a2bba6976d</anchor>
      <arglist>(String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acf104c2fd7a030ccf399824229326593</anchor>
      <arglist>(String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac4ff07ff31378956b5bb0dade8bfd260</anchor>
      <arglist>(String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a655e80d6c21f3f1de4efbd3e6241d83d</anchor>
      <arglist>(String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1d906fec37b5d1b69cdf8e8f01b0ecfa</anchor>
      <arglist>(String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack3</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad3ca30d20396f068c26c7d994c987eef</anchor>
      <arglist>(String, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0ed3bdb4560d73476a9bb35f29cd0f85</anchor>
      <arglist>(Double, Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1fe58dcd3cdd981efccd3a635951054f</anchor>
      <arglist>(Double, Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a48bcd6c399d6744af06929fd39ecc9c1</anchor>
      <arglist>(Double, Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae781b85d95cf58ba6bba5a7249189595</anchor>
      <arglist>(Double, Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab204685e0c58f0681f31434ff157c4d1</anchor>
      <arglist>(Double, Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac17dd4ea91770c5e9dc26de233f1496b</anchor>
      <arglist>(Double, Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad0408eb0fda2f46c50f931087b203069</anchor>
      <arglist>(Double, Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af7c92693e9d51d79947093a7c1ff8661</anchor>
      <arglist>(Double, Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a74a19283629b57fc7ba9bb91abc169ae</anchor>
      <arglist>(Double, Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a181df0db06c15284692e99f222eab953</anchor>
      <arglist>(Double, Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8cf7ad7a7d6ee0940bff4777d70beaf9</anchor>
      <arglist>(Double, Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a570e91d6f080ecd892093db18a5223e1</anchor>
      <arglist>(Double, Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af49e9f0731c96049c026789d9b8b4c89</anchor>
      <arglist>(Double, Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6cb91eeafce50d168227bc076051b4fb</anchor>
      <arglist>(Double, Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aaece5e59c881e0f8928bf1be2e7fcdf1</anchor>
      <arglist>(Double, Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abe8c0bedfb3ca91945e86d76ee449189</anchor>
      <arglist>(Double, Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a71fab5189e2def6882362236a4ddf99c</anchor>
      <arglist>(Double, Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a88fea3689419f898691a3caa86f963fd</anchor>
      <arglist>(Double, Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba414cee0aad80baf2ea26b1bacf9a83</anchor>
      <arglist>(Double, String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac777451a6df11928be91f7b7f2b6f44e</anchor>
      <arglist>(Double, String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64770c279fca37026196c7f98b51c6bd</anchor>
      <arglist>(Double, String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a18f25a29509a32075accb5004c143702</anchor>
      <arglist>(Double, String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9e6830c8aa8646716959b7a221768d52</anchor>
      <arglist>(Double, String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af6dd2e0b7a7366860102b9bb7667ebd7</anchor>
      <arglist>(Double, String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a84495f90ffe9e9a3d127c71deaa2ee19</anchor>
      <arglist>(Double, String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af05c574f6c7793575943fa36612a537c</anchor>
      <arglist>(Double, String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a17cb2c210e0041930a92b22cd9b1c77f</anchor>
      <arglist>(Double, String, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3d1252351591ac7b892b3a5ede8d9512</anchor>
      <arglist>(Int, Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac849b8e1dfa5b4ed412af7de5cf3f7cf</anchor>
      <arglist>(Int, Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5086759d5ed7dfa116aa1a387c0d054d</anchor>
      <arglist>(Int, Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a69648e2b71941f75387b96a46720702a</anchor>
      <arglist>(Int, Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a40904beb2f614dd9a90c9ee3c73393d5</anchor>
      <arglist>(Int, Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6b2fd1e67990e8a854972f1911dfd53b</anchor>
      <arglist>(Int, Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aecf9204c7cd5a9d2a03e8bdda7e96ce3</anchor>
      <arglist>(Int, Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa7ce7b028ba950c44c93989b0a101cf8</anchor>
      <arglist>(Int, Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6081caee5e8bea69ea3d72f6ccc14aaa</anchor>
      <arglist>(Int, Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5d046471922264d099d40201b9542990</anchor>
      <arglist>(Int, Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a02a31899087f8b916474b5eaa7ee9bcb</anchor>
      <arglist>(Int, Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>af7453ec2d35e002d35b6d7b3989b48de</anchor>
      <arglist>(Int, Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a87a63e11638f637565865590d02c8c75</anchor>
      <arglist>(Int, Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab315b360ca4a6b4825c0d442f9e18824</anchor>
      <arglist>(Int, Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae65a279180baa783d4b67532f6857972</anchor>
      <arglist>(Int, Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a30129a8dbd69efa63869e22031c8479b</anchor>
      <arglist>(Int, Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2480bb3119efcffb136e5e3b21705269</anchor>
      <arglist>(Int, Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abf22c32e1a191f3933d86847b374566e</anchor>
      <arglist>(Int, Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab7b8ab8523594917975102925ff4eb90</anchor>
      <arglist>(Int, String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>acdd63a2acb8a0a53bdb7100fbdae2141</anchor>
      <arglist>(Int, String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ada3618e7c2fd363d26215ecac252b8dc</anchor>
      <arglist>(Int, String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4b94f21f0fdacaf8125f6a8503e2e4ba</anchor>
      <arglist>(Int, String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a72420512dd0b0f45978e4096829c2738</anchor>
      <arglist>(Int, String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0dda627124fb1e3611ce5d988c2d425a</anchor>
      <arglist>(Int, String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aee7c77def0bbf82329b2013d56ca7687</anchor>
      <arglist>(Int, String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1afe84c835e9235d0fcb196a80583df3</anchor>
      <arglist>(Int, String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a06538744f5f3b5e698a01f9db838d68c</anchor>
      <arglist>(Int, String, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5c99190b7cb7714eb81ba5fd31f53ba9</anchor>
      <arglist>(String, Double, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa0513cd15f14d0a4a496cc8255247961</anchor>
      <arglist>(String, Double, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5e54dbbe94451e0b7da8ed80820ce6d4</anchor>
      <arglist>(String, Double, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab75e66e6125c1df44ac22603c96aa9c1</anchor>
      <arglist>(String, Double, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afa21637ac9a4a42bc350c459c962ba90</anchor>
      <arglist>(String, Double, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a4216f6c826facdc4a45ef2bf1885589a</anchor>
      <arglist>(String, Double, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae0d8c1cfb8593291280689dcbaf6fd9e</anchor>
      <arglist>(String, Double, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2c29a6ef3312b9d4007898bf2215db60</anchor>
      <arglist>(String, Double, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a75d8a8b769e89a522fb01ba0de94e71f</anchor>
      <arglist>(String, Double, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a01136372b7667743ee0c273e52aa1aee</anchor>
      <arglist>(String, Int, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2299823df5074fd7430ebb485b8ab421</anchor>
      <arglist>(String, Int, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a96ab6f2110ff5fc6c81a70840fa7d229</anchor>
      <arglist>(String, Int, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>add124d2a4cfdc55466f2062b22cfb86a</anchor>
      <arglist>(String, Int, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac2813a4cf08d1193ab4bfd64b7662a4c</anchor>
      <arglist>(String, Int, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a6b917a80f3e9be386610c4c3aa56aa01</anchor>
      <arglist>(String, Int, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a90c4d815d6df28412de46ee891a7fa67</anchor>
      <arglist>(String, Int, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64e640f40fd8969f6fd5100cc75a0b79</anchor>
      <arglist>(String, Int, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba4ea403239e750e2dce743ebe274ff8</anchor>
      <arglist>(String, Int, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8fec75ff92cfe86bcd8c5c911eaaa3d3</anchor>
      <arglist>(String, String, Double, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8a5e43f3f4075770c7ce6b2ceb0c3641</anchor>
      <arglist>(String, String, Double, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afaa0566fdb51d05c3f63c93ec7bc8cb7</anchor>
      <arglist>(String, String, Double, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aed0f4121e6850532bf7cbb70b860df6d</anchor>
      <arglist>(String, String, Int, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8c0fd7eddfbc8bd6708a146078b66f9a</anchor>
      <arglist>(String, String, Int, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aba8552a0854a2dfbcda2deccafbbfe63</anchor>
      <arglist>(String, String, Int, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1fc8520a8d74deca2fdc32e6ad24aa80</anchor>
      <arglist>(String, String, String, Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac4e7a1ece8950e1bbf7ca8bc390803b0</anchor>
      <arglist>(String, String, String, Int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefAxisPack4</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae3d3ee9d28e003fbd77f9b8d845dee99</anchor>
      <arglist>(String, String, String, String)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad4be88576c756e5030c8f0a9d61b9f66</anchor>
      <arglist>(ComplexD)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a21764b2da632a79dc9e66b601d6b8707</anchor>
      <arglist>(ComplexF)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0798bd97b6d036495f3361e4cab75979</anchor>
      <arglist>(Double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefTableContainers</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7e5a636fe6d5781188f51c8be9d45c91</anchor>
      <arglist>(Int)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>encode_value</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1aec64eb770cf9fe2ea0dff3b4f9a779</anchor>
      <arglist>(const uint64_t &amp;value, const std::string &amp;character_set)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FFTBluestein</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac1bdf8477fb0b742fb1151553218c088</anchor>
      <arglist>(std::complex&lt; XFloatType &gt; *data, MHO_FastFourierTransformWorkspace&lt; XFloatType &gt; &amp;work, bool isForward, unsigned int stride=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FFTRadix2</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afcf03d23bacb0b9a76beda3a26854384</anchor>
      <arglist>(std::complex&lt; XFloatType &gt; *data, MHO_FastFourierTransformWorkspace&lt; XFloatType &gt; &amp;work, bool isForward, unsigned int stride=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillDate</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a89ca0e9a12cdc77628b52f6bd9e11174</anchor>
      <arglist>(struct date *destination, struct legacy_hops_date &amp;a_date)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillDateStation</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>aa36b5429472f9eab39202f6535614112</anchor>
      <arglist>(struct date *destination, struct legacy_hops_date &amp;a_date)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillJSONFromTaggable</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3f6f79dab809bb2fca3a8a7c59292cd8</anchor>
      <arglist>(const MHO_Taggable *map, mho_json &amp;obj_tags)</arglist>
    </member>
    <member kind="function">
      <type>std::basic_istream&lt; CharT, Traits &gt; &amp;</type>
      <name>from_stream</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1fdde9fc3b75f424635db92c8f07f54c</anchor>
      <arglist>(std::basic_istream&lt; CharT, Traits &gt; &amp;is, const CharT *fmt, hops_time&lt; Duration &gt; &amp;tp, std::basic_string&lt; CharT, Traits, Alloc &gt; *abbrev=nullptr, std::chrono::minutes *offset=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N &gt;=sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>istream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a41bd4d58a4b5e7caefd28e2f16f935c6</anchor>
      <arglist>(XStream &amp;s, std::tuple&lt; T... &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N&lt; sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>istream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0cb668b8c617cb12dec59f0788a3376e</anchor>
      <arglist>(XStream &amp;s, std::tuple&lt; T... &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>json_to_hdf5_attributes</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9e009f3898e156f1f46f9cd47b152e5e</anchor>
      <arglist>(const mho_json &amp;j, hid_t parent_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a92a45302a8be10d376ec255feefdae19</anchor>
      <arglist>(const std::string &amp;key, const mho_json &amp;value, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a685b6f126da52cab94881345499ba338</anchor>
      <arglist>(const std::string &amp;key, XValueType value, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_attribute&lt; std::string &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a95e7643d7d4758dc9eb79e4636348919</anchor>
      <arglist>(const std::string &amp;key, std::string value, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_dataset</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae9d6504fdbc8179c19333b27d52e095f</anchor>
      <arglist>(hid_t group_id, hid_t &amp;dataset_id, const std::string &amp;name, hsize_t rank, hsize_t *dims, const XDataType *data, const mho_json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_scalar_dataset</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a780c5313aed60980443722bbec5359fe</anchor>
      <arglist>(hid_t group_id, hid_t &amp;dataset_id, const std::string &amp;name, const XValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_scalar_dataset&lt; std::string &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a32c76108bb01b35a1842ddad67a7acc7</anchor>
      <arglist>(hid_t group_id, hid_t &amp;dataset_id, const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_scale</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a64086a2b9c99d2972988c1137ef74cc2</anchor>
      <arglist>(hid_t group_id, hid_t dataset_id, std::size_t axis_idx, const std::string &amp;parent_name, const std::string &amp;name, const std::vector&lt; XDataType &gt; *data, const mho_json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_scale&lt; std::string &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>afe29cba57ee8ed9e6dee0a6ecdac3cfa</anchor>
      <arglist>(hid_t group_id, hid_t dataset_id, std::size_t axis_idx, const std::string &amp;parent_name, const std::string &amp;name, const std::vector&lt; std::string &gt; *data, const mho_json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_string_vector_dataset</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a845cac6521c1636edb068e2c86b2a085</anchor>
      <arglist>(hid_t group_id, hid_t dataset_id, const std::string &amp;name, const std::vector&lt; std::string &gt; *data, const mho_json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_vector_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a037d2482ff0f513dec143a00bdce3a49</anchor>
      <arglist>(const std::string &amp;key, const std::vector&lt; std::string &gt; *data, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>herr_t</type>
      <name>make_vector_attribute</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad2a0a89a47551138813c1b3cb082c5e0</anchor>
      <arglist>(const std::string &amp;key, const std::vector&lt; XDataType &gt; *data, hid_t parent_dataset_id)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a07d1b26cb2d9dd73446ce44c21ed1363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; double &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac4e09a6809fad69a32e530b2cd61aa37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; float &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>abf9b76138f0b60402ccd520e938d13a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7eddf47c9fec858deccfdb6c9e06c696</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a58651101c65f4ee5ac9ed5504352dc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a87b145ec0f5f43d5d8e8a8dd53d9aa5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; int8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5d90d8725b748d261d577760d960f11f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; std::complex&lt; double &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9c89df1262c0e55d85462266b6668fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; std::complex&lt; float &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab4ca57cf28e33d433cf1ed4e43b5f296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>add513e78f4c5f94322c1b59c081dc462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9fd2ad491108d4d99c17025f0d77e2e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a03dcd8163b006fd80d59c8d825faae9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>MHO_HDF5TypeCode&lt; uint8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>adbbeb510d14c4df1ec10ad28f66ff594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae1e001fffefcd1f966ad1dce82f0b61d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; double &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0602315ab6bdf049da5b245d00bbe483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; float &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac55e2fc2521f7fa12ea7b8824b79ea9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a3dfe4e5d278b3cbfd449cfba436434ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ac1c790f251e17e29d51ed101d062e617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a78a66c7350c3700dd2aded10692506c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; int8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ade141b4e0812f17bef7726a143da76ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; std::complex&lt; double &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a05b251f9a0b9719390a4723d2a615678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; std::complex&lt; float &gt; &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8ca5636b5f82451873ba2eff237bac60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint16_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1251404e92436967f3b0d2de68c7b9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint32_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7af77a828f4d8c38850cd57097f12da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint64_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a94194623de5019a9a525fd8eee981eed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>MHO_NumpyTypeCode&lt; uint8_t &gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a998264622a587a776290a3daefb0c8da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; CharT, Traits &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a174940b00c57da6d7b0e8d51ba70e21a</anchor>
      <arglist>(std::basic_ostream&lt; CharT, Traits &gt; &amp;os, const hops_time&lt; Duration &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>XStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7e8434b0f8b1ccd39b88ac1bc80aec95</anchor>
      <arglist>(XStream &amp;s, const MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>XStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a2aea726ae9199bde2012cf8534ad1be1</anchor>
      <arglist>(XStream &amp;s, MHO_UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N &gt;=sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>ostream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad032a709a8441f20b6a217c616cbff2a</anchor>
      <arglist>(XStream &amp;s, const std::tuple&lt; T... &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;(N&lt; sizeof...(T)), XStream &amp; &gt;::type</type>
      <name>ostream_tuple</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae7d2a541be200cdbbfeff8e7ca64c4af</anchor>
      <arglist>(XStream &amp;s, const std::tuple&lt; T... &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_buffer</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a34069855e99e339c27c8bcd3c6f864bc</anchor>
      <arglist>(char *buf)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>SplitString</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a595136c6bf4b755717a2b7b5ba7ccff8</anchor>
      <arglist>(const std::string &amp;input, std::string delim=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>string_pattern_replace</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a1e71a86ea2ae687c3fd4dbadc275357a</anchor>
      <arglist>(const std::string &amp;value, const std::string &amp;pattern, const std::string &amp;replacement)</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; CharT, Traits &gt; &amp;</type>
      <name>to_stream</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ae6072705dd8a3df2c27db3e3af380e7a</anchor>
      <arglist>(std::basic_ostream&lt; CharT, Traits &gt; &amp;os, const CharT *fmt, const hops_time&lt; Duration &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; typename XContainer1::value_type, typename XContainer2::value_type &gt;</type>
      <name>zip_into_map</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a8d0f4fafdc07ca17ed352822e742aad4</anchor>
      <arglist>(const XContainer1 &amp;c1, const XContainer2 &amp;c2)</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>afile_com_char</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a695ebe94a62183f552658efc11ae728b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>fformat_v5</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a0744e6a58160c1eeb3f19e1fcfa6172e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>fformat_v6</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a5357ca710b0a4b6eae37d0ebcd67daf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header50</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a65517ebb7561c68a573c841d57300e2e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header51</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab3bd2a1b96f4ace5f3b60c77a34fe62a</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header52</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a59114722cce0fe4e28e27b335a42573c</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header53</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7209e638225ae13a162dd9ec46786db9</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header60</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a7e4c3ba12ee43067f5a58a18565ecf8f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header61</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>a9b3fb31578772ac6786982f52591a9a1</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header62</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ab97818e5d05a2d7878276e76c9f2addf</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>header63</name>
      <anchorfile>namespacehops.html</anchorfile>
      <anchor>ad50dec3694eabfecfb37b6ffee2fec5d</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops::selfname</name>
    <filename>namespacehops_1_1selfname.html</filename>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>file_basename</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a7349e6c374784eeb941e65d6f979215a</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>r_slash</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a4b727f3b94f924cec2c986e4d8bd58c3</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>str_end</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a3e4c3b136de3b8499ee63f8c8a57a2a3</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>str_slash</name>
      <anchorfile>namespacehops_1_1selfname.html</anchorfile>
      <anchor>a8c0d550f499dc2b87c3ca478a6606587</anchor>
      <arglist>(const char *str)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops_io</name>
    <filename>namespacehops__io.html</filename>
    <namespace>hops_io::parse_pdd_file</namespace>
  </compound>
  <compound kind="namespace">
    <name>hops_io::parse_pdd_file</name>
    <filename>namespacehops__io_1_1parse__pdd__file.html</filename>
    <member kind="function">
      <type>def</type>
      <name>parse_PDD</name>
      <anchorfile>namespacehops__io_1_1parse__pdd__file.html</anchorfile>
      <anchor>a207479aeeca70c672d6acd62e7ab7417</anchor>
      <arglist>(filename)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops_visualization</name>
    <filename>namespacehops__visualization.html</filename>
    <namespace>hops_visualization::alist_plot</namespace>
    <namespace>hops_visualization::fourfit_plot</namespace>
    <namespace>hops_visualization::parse_alist</namespace>
    <namespace>hops_visualization::picking_aedit</namespace>
    <namespace>hops_visualization::read_alist</namespace>
  </compound>
  <compound kind="namespace">
    <name>hops_visualization::alist_plot</name>
    <filename>namespacehops__visualization_1_1alist__plot.html</filename>
    <member kind="function">
      <type>def</type>
      <name>pick_action</name>
      <anchorfile>namespacehops__visualization_1_1alist__plot.html</anchorfile>
      <anchor>ab17067798933bdb5072a84e73c3eae55</anchor>
      <arglist>(event)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plot_alist_data</name>
      <anchorfile>namespacehops__visualization_1_1alist__plot.html</anchorfile>
      <anchor>abefdc3e867958cc3fa69a10d5acbb427</anchor>
      <arglist>(fignum, x_data, y_data, x_label, y_label)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops_visualization::fourfit_plot</name>
    <filename>namespacehops__visualization_1_1fourfit__plot.html</filename>
    <member kind="function">
      <type>def</type>
      <name>get_numpy_version_tuple</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ae4ca281d1341376ea43e8a9d39144620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>is_version_less_than</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a36a83fb8d78a3b0bc050f0538eb45ddb</anchor>
      <arglist>(version_tuple_check, version_tuple_reference)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_amplitude_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab07419aea966e64c11232534d8ffc1f2</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_channel_info_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a5a8dae6fc0fec83a2c0376f7037a034a</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_channel_segment_plots_alt</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a19a3c022c1a43f6a8fd4fd20506717db</anchor>
      <arglist>(fig, plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_channel_segment_validity_plots</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>aad89ec8b1fa22d882a0f94ce20be7449</anchor>
      <arglist>(fig, plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_coord_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a7628d22bfed0670845a9471ec1137994</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_data_stats_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a36ad0d8aa119b76cb361b5a3efbee41e</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_dr_mbd_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab6d399ca3105bba506a1df279a626816</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_fourfit_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>aa2dbe3679003bc909e6f04083abcf159</anchor>
      <arglist>(plot_dict, show_on_screen, filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_fourfit_plot_wrapper</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a5ce78c7351b5f086aebf2a95c77754de</anchor>
      <arglist>(fringe_data_interface)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_info_text_box</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a2d8d8ad36a089a526af749b66df7ee74</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_model_resid_info_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a6e11ce988de3f9c5426c549546315a01</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_pcal_plots</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a59287368806e550d5970e98a217b3d03</anchor>
      <arglist>(fig, plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_rms_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a3efacd5ba4a1b26fe5f88f62258ccdc2</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_sbd_dtec_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab8f25ab6ab083a430575cddbac313a1a</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_sciformat</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>af7498f17757d0bafda689b03cacaa7f6</anchor>
      <arglist>(float_value, nprec, nmd, np_use_min_digits=True)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_top_info_text</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ad0a32ca86a408f2d8c38e66e8b5375d2</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_window_table</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>a1bcac6054b7668465c418e8ea9bcc104</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>make_xpower_plot</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>af3c684584646855b9a888e24ba5b0d4f</anchor>
      <arglist>(plot_dict)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>press_event_handler</name>
      <anchorfile>namespacehops__visualization_1_1fourfit__plot.html</anchorfile>
      <anchor>ab13f84574e5d9e6b1fb6f47e5061cf01</anchor>
      <arglist>(event)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops_visualization::parse_alist</name>
    <filename>namespacehops__visualization_1_1parse__alist.html</filename>
    <class kind="class">hops_visualization::parse_alist::AfileData</class>
    <class kind="class">hops_visualization::parse_alist::ParseAlist</class>
    <member kind="variable">
      <type>list</type>
      <name>alist_fields</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>aaf97bfcd7f12a7f3b3428423884a436b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>plot_fields</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>a2253e14ef389f5181dd98859e007fc4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dictionary</type>
      <name>plot_label_convert</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>a6a53c2a194e201f7ff69e108b21ef45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dictionary</type>
      <name>plot_labels</name>
      <anchorfile>namespacehops__visualization_1_1parse__alist.html</anchorfile>
      <anchor>a6ff76cafbe36002a95f33411819985eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops_visualization::picking_aedit</name>
    <filename>namespacehops__visualization_1_1picking__aedit.html</filename>
    <member kind="function">
      <type>def</type>
      <name>pick_action</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>ad2d5b7e2d56cef3465cb1f426496eb14</anchor>
      <arglist>(event)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>amp</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a8179ee8684a5bbb2d3e99a166d9b3991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ax</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a79a9006b6a9b0893bd0d181effcbd274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>baseline</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a6e2a6c8b6fe464b07a75ab82b31e1ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fig</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a21b99c0c346fae5fd63eb4ea51844a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fname</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a75a8ac1982f1afadb660b4aa741e4b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>markerfacecolor</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>addfde37af27978b98790b98579a640f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>markersize</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>ad6c850bd71278743f36b1d61c0c789e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>picker</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>ab89caf9afb4b65ec5742586e236483d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t</name>
      <anchorfile>namespacehops__visualization_1_1picking__aedit.html</anchorfile>
      <anchor>a50488c776a6d29c2e11aab0f907f5a04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hops_visualization::read_alist</name>
    <filename>namespacehops__visualization_1_1read__alist.html</filename>
    <member kind="function">
      <type>def</type>
      <name>get_amp_time</name>
      <anchorfile>namespacehops__visualization_1_1read__alist.html</anchorfile>
      <anchor>a85c74ac2bc9d582cbce213c1653435ed</anchor>
      <arglist>(filename, baseline)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>mk4io</name>
    <filename>namespacemk4io.html</filename>
    <namespace>mk4io::mk4io</namespace>
  </compound>
  <compound kind="namespace">
    <name>mk4io::mk4io</name>
    <filename>namespacemk4io_1_1mk4io.html</filename>
    <class kind="class">mk4io::mk4io::auto_global</class>
    <class kind="class">mk4io::mk4io::auto_per_lag</class>
    <class kind="class">mk4io::mk4io::ch1_tag</class>
    <class kind="class">mk4io::mk4io::ch_struct</class>
    <class kind="class">mk4io::mk4io::ChanCount</class>
    <class kind="class">mk4io::mk4io::complex_struct</class>
    <class kind="class">mk4io::mk4io::counts_global</class>
    <class kind="class">mk4io::mk4io::counts_per_lag</class>
    <class kind="class">mk4io::mk4io::date</class>
    <class kind="class">mk4io::mk4io::ffit_chan_struct</class>
    <class kind="class">mk4io::mk4io::flag_wgt</class>
    <class kind="class">mk4io::mk4io::index_tag</class>
    <class kind="class">mk4io::mk4io::lag_data</class>
    <class kind="class">mk4io::mk4io::lag_tag</class>
    <class kind="class">mk4io::mk4io::mk4_corel</class>
    <class kind="class">mk4io::mk4io::mk4_fringe</class>
    <class kind="class">mk4io::mk4io::mk4_sdata</class>
    <class kind="class">mk4io::mk4io::Mk4StructureBase</class>
    <class kind="class">mk4io::mk4io::model_struct</class>
    <class kind="class">mk4io::mk4io::mutable_length_char_array</class>
    <class kind="class">mk4io::mk4io::newphasor</class>
    <class kind="class">mk4io::mk4io::pcal_struct</class>
    <class kind="class">mk4io::mk4io::phasor</class>
    <class kind="class">mk4io::mk4io::polars</class>
    <class kind="class">mk4io::mk4io::sbandf</class>
    <class kind="class">mk4io::mk4io::sbweights</class>
    <class kind="class">mk4io::mk4io::sidebands</class>
    <class kind="class">mk4io::mk4io::sky_coord</class>
    <class kind="class">mk4io::mk4io::spectral</class>
    <class kind="class">mk4io::mk4io::stcount_struct</class>
    <class kind="class">mk4io::mk4io::trackstat</class>
    <class kind="class">mk4io::mk4io::type_000</class>
    <class kind="class">mk4io::mk4io::type_100</class>
    <class kind="class">mk4io::mk4io::type_101</class>
    <class kind="class">mk4io::mk4io::type_120</class>
    <class kind="class">mk4io::mk4io::type_200</class>
    <class kind="class">mk4io::mk4io::type_201</class>
    <class kind="class">mk4io::mk4io::type_202</class>
    <class kind="class">mk4io::mk4io::type_203</class>
    <class kind="class">mk4io::mk4io::type_204</class>
    <class kind="class">mk4io::mk4io::type_205</class>
    <class kind="class">mk4io::mk4io::type_206</class>
    <class kind="class">mk4io::mk4io::type_207</class>
    <class kind="class">mk4io::mk4io::type_208</class>
    <class kind="class">mk4io::mk4io::type_210</class>
    <class kind="class">mk4io::mk4io::type_212</class>
    <class kind="class">mk4io::mk4io::type_220</class>
    <class kind="class">mk4io::mk4io::type_221</class>
    <class kind="class">mk4io::mk4io::type_222</class>
    <class kind="class">mk4io::mk4io::type_230</class>
    <class kind="class">mk4io::mk4io::type_300</class>
    <class kind="class">mk4io::mk4io::type_301</class>
    <class kind="class">mk4io::mk4io::type_302</class>
    <class kind="class">mk4io::mk4io::type_303</class>
    <class kind="class">mk4io::mk4io::type_304</class>
    <class kind="class">mk4io::mk4io::type_305</class>
    <class kind="class">mk4io::mk4io::type_306</class>
    <class kind="class">mk4io::mk4io::type_307</class>
    <class kind="class">mk4io::mk4io::type_308</class>
    <class kind="class">mk4io::mk4io::type_309</class>
    <member kind="function">
      <type>def</type>
      <name>clear_mk4fringe</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a4b3420022cec7dbcfbb39a3bee68978a</anchor>
      <arglist>(mk4_fringe_obj)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4corel</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a8d4475f82fd107a912087bdd9b56682e</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4fp_approximately_equal</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>aa909ba4245eac7b212a166bb13f216ab</anchor>
      <arglist>(a, b, abs_tol=1e-14, rel_tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4fringe</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a3a2b7d7fc5e9c6918ebc3fcbaeea8184</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4io_load</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a16e4a853325f3bca3c94282a84a2be46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4redefine_array_length</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a3d422fdac3bb5c5df38f252016837fba</anchor>
      <arglist>(array, new_size)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4redefine_char_array_length</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a31d6f9a0b60c5d904428dc9a1801e912</anchor>
      <arglist>(array, new_size)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mk4sdata</name>
      <anchorfile>namespacemk4io_1_1mk4io.html</anchorfile>
      <anchor>a07c94174a008f44f284e1f51eed517b1</anchor>
      <arglist>(filename)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vexpy</name>
    <filename>namespacevexpy.html</filename>
    <namespace>vexpy::vexpy</namespace>
  </compound>
  <compound kind="namespace">
    <name>vexpy::vexpy</name>
    <filename>namespacevexpy_1_1vexpy.html</filename>
    <class kind="class">vexpy::vexpy::chan_struct</class>
    <class kind="class">vexpy::vexpy::scan_struct</class>
    <class kind="class">vexpy::vexpy::source_struct</class>
    <class kind="class">vexpy::vexpy::station_struct</class>
    <class kind="class">vexpy::vexpy::vex</class>
    <class kind="class">vexpy::vexpy::VexStructureBase</class>
    <member kind="function">
      <type>def</type>
      <name>get_file_station_polarizations</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a38010bfd85ff86f2e7a2afc0620847bf</anchor>
      <arglist>(ovex_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_ovex</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ad7b494f37264544407a3b859bd33c496</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_vexpy_library</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a0ee6e3af2a74d4d8a7c59932b4c9412f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ADAPTIVE</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ae6d16f4adc4bf6a658b9bf7ac1e38a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>AZEL</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>aa08b4a29ee18d80c16c74e30f3719efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>B1950</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>af6ca945aee00447d9100998be62c74dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>C_UNDEFINED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ace064cf43a90853fb2011c03cbf621bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>CONTINUOUS</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>af95754fb018057336611488b6c56c689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DUMMY</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ab93ed004bc1343a61c04c70d20fbd94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EARTH_ORBIT</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a75f275632e2b148d15c26481fbf60d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EQUATORIAL</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a4921c30aaf6c4598ed6f5a3694e9600e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>F_UNDEFINED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a620ea5fee8fc6907ac30ee7470fe05ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>FIXED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a8f6627f9a9ace600d1c1e9ba3ac21134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>I_UNDEFINED</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ad7942efc8b8803d0d3de0ba54f3231ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>J2000</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ae3cde02edf64c0bd9d527a09f7b2af6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>K4</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a903d6f8273be3f696022b8823de8530d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK3A</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a0e20ae5108503453b43e8d7be3fff66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK4</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>afc83ffb8cf34bb7d7e7fa1ec51032949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK5A</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a02755f7ad1f5fdd1154a453641750b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MARK5B</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ade130ae34870c2cdac3f61fd1c759843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAX_CHAN</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a39b3bdcff58f5ce76a63bc333bd3a159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OFF</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a3a0552e2ef5c41cf4bedb5b9581af729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ON</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a0eaaa7c814f1dec900a4e7ef5acdfbe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OVEX</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a8cc799d63c865b901adbcd117b71ce95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>QUASAR</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ab1ebb40125c9bb7a08c6b6c5ec454090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>S2</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>adc0eaad0b6494761195a1f2c2a6f5821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SATELLITE</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a61ff517db311b1fd99d465c76ac39d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>STAR</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>ad3ea39acaa7c8488a86c09393579dd31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>START_STOP</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>acf7e3cfcc84eed5509b591cda07b8034</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>VLBA</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a79993afd8ea5ac8ee2c11b310420d802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>VLBAG</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>af5c6db44720d3efa3d37a50c7ee4be80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>X_YEW</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>acb07f2fbb9533259873c39738992981c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>X_YNS</name>
      <anchorfile>namespacevexpy_1_1vexpy.html</anchorfile>
      <anchor>a475237a6d639f8cdc80109b1467f2319</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal</name>
    <filename>namespacevpal.html</filename>
    <namespace>vpal::ffres2pcp_lib</namespace>
    <namespace>vpal::fourphase_lib</namespace>
    <namespace>vpal::fringe_file_manipulation</namespace>
    <namespace>vpal::pcc_delay_fitting</namespace>
    <namespace>vpal::pcc_plotting_utils</namespace>
    <namespace>vpal::phasecal</namespace>
    <namespace>vpal::processing</namespace>
    <namespace>vpal::proxy_cable_cal</namespace>
    <namespace>vpal::report_lib</namespace>
    <namespace>vpal::utility</namespace>
  </compound>
  <compound kind="namespace">
    <name>vpal::ffres2pcp_lib</name>
    <filename>namespacevpal_1_1ffres2pcp__lib.html</filename>
    <class kind="class">vpal::ffres2pcp_lib::Configuration</class>
    <class kind="class">vpal::ffres2pcp_lib::DefaultChannelDefines</class>
    <class kind="class">vpal::ffres2pcp_lib::ExperimentReportData</class>
    <class kind="class">vpal::ffres2pcp_lib::SingleStationPCPhases</class>
    <member kind="function">
      <type>def</type>
      <name>channel_sort_key</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a7a733f4bb7af241fad3856b166640e52</anchor>
      <arglist>(ch_val_pair)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_final_pcphases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a45476d98f4404467c934a051e9a86e47</anchor>
      <arglist>(apriori_pc_phases, generated_pc_phases)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_vgos_network_reference_station_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a27fbb3356d00d2797310d0ca0e8647d3</anchor>
      <arglist>(single_baseline_pp_collection_obj, network_reference_station, discard_tolerance=15.0, complete_discard_count=5)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_control_file_lines</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a78de69d567ade8910fc0336696303d5d</anchor>
      <arglist>(apriori_pc_phases, generated_pc_phases, frequency_group=&apos;X&apos;, mode=&apos;VGOS&apos;)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_ffres2pcp_control_file</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a48ff7228c7cbb76971a30659d53ccdca</anchor>
      <arglist>(config_obj, output_control_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a9f03081a02f1a4b4887a1337925d2469</anchor>
      <arglist>(config_obj, report_data_obj=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_station_phase_corrections</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a3b780e99a0cea6d46d4fb9a92c49fa50</anchor>
      <arglist>(SingleBaselinePolarizationProductCollection_list, target_station, network_reference_station, dtec_tolerance=1.0, network_reference_station_pol=&apos;X&apos;, discard_tolerance=15, nchannel_discard_threshold=5)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_apriori_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a2914c2633e3fa6c99ca4a07b5fa9ac9c</anchor>
      <arglist>(ffres2pcp_config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>select_collection_subset</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>afe33d9aa7177c071d1dd27f7ee26a18f</anchor>
      <arglist>(SingleBaselinePolarizationProductCollection_list, target_station, network_reference_station, dtec_nom=0.1, max_number_to_select=0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>sum_mean_pc_phases</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>a49b5f4e95debec18598caadaf3d52c33</anchor>
      <arglist>(pcp_obj_a, pcp_obj_b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ffres2pcp_logger</name>
      <anchorfile>namespacevpal_1_1ffres2pcp__lib.html</anchorfile>
      <anchor>aac5853445494e13cfbb95a6b80da5a26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal::fourphase_lib</name>
    <filename>namespacevpal_1_1fourphase__lib.html</filename>
    <class kind="class">vpal::fourphase_lib::Configuration</class>
    <class kind="class">vpal::fourphase_lib::ExperimentReportData</class>
    <class kind="class">vpal::fourphase_lib::MixedModeFourphaseSingleScanProcessor</class>
    <class kind="class">vpal::fourphase_lib::SingleStationPhaseDelayOffsets</class>
    <class kind="class">vpal::fourphase_lib::VGOSFourphaseSingleScanProcessor</class>
    <member kind="function">
      <type>def</type>
      <name>construct_control_file_lines</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a5e1755faa31a038afc0d1d738643ddfb</anchor>
      <arglist>(config_obj, station_delay_phase_results)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_fourphase_control_file</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a70debf6c37b528812b9226537aa5800d</anchor>
      <arglist>(config_obj, output_control_filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_station_phase_delay_corrections</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a7c525675d1cc855fd2e884dda2459995</anchor>
      <arglist>(config_obj, report_data_obj=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>select_fourphase_scans_by_baseline</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a4f165a515ba6c6bb5ea23ff1fd717083</anchor>
      <arglist>(SingleScanBaselineCollection_list, exp_directory, stations, dtec_tolerance=1.0, min_snr=10, dtec_nom=0.1, max_number_to_select=0)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Bar</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>ab2a3fecfe20ce0b0c6d799610f27b7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fourphase_logger</name>
      <anchorfile>namespacevpal_1_1fourphase__lib.html</anchorfile>
      <anchor>a10a802ff3bcf55c9eb9e152299be1ace</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal::fringe_file_manipulation</name>
    <filename>namespacevpal_1_1fringe__file__manipulation.html</filename>
    <class kind="class">vpal::fringe_file_manipulation::FringeFileHandle</class>
    <class kind="class">vpal::fringe_file_manipulation::PhaseResidualData</class>
    <class kind="class">vpal::fringe_file_manipulation::SingleBaselinePolarizationProductCollection</class>
    <class kind="class">vpal::fringe_file_manipulation::SingleScanBaselineCollection</class>
  </compound>
  <compound kind="namespace">
    <name>vpal::pcc_delay_fitting</name>
    <filename>namespacevpal_1_1pcc__delay__fitting.html</filename>
    <class kind="class">vpal::pcc_delay_fitting::BandDelayFitter</class>
    <class kind="class">vpal::pcc_delay_fitting::BasinhoppingStep</class>
    <class kind="class">vpal::pcc_delay_fitting::DelayFitResults</class>
    <class kind="class">vpal::pcc_delay_fitting::PhasorFitData</class>
    <member kind="function">
      <type>def</type>
      <name>calc_delay_phasor</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>a78bd17f46cf88b8bc693aa996aeec4a6</anchor>
      <arglist>(delay, phase_offset, reference_frequency, frequency)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>EPS</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>a171ca57fa57565f1891cfcd7b3f41834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pcc_fit_logger</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>aebe998ae4b0ec8f6296ce8fe1e92af05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>PICOSECOND</name>
      <anchorfile>namespacevpal_1_1pcc__delay__fitting.html</anchorfile>
      <anchor>af1e1a3fc7e7fb5c3e138cbe3e49649c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal::pcc_plotting_utils</name>
    <filename>namespacevpal_1_1pcc__plotting__utils.html</filename>
    <class kind="class">vpal::pcc_plotting_utils::ProxyCableDelayFitPlotter</class>
  </compound>
  <compound kind="namespace">
    <name>vpal::phasecal</name>
    <filename>namespacevpal_1_1phasecal.html</filename>
    <member kind="function">
      <type>def</type>
      <name>mult_corr</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>afd309f5449373301bb1db84aaa930567</anchor>
      <arglist>(Rxx_full, bp_good=None, bad_nans=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>write_numbers</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>af52d271dad0cfa4b6749b94b6fdf9d58</anchor>
      <arglist>(fout, prefix, numbers, bp_good)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>write_title</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>abf7dbc4aa3ee8e009c2a8246ff609d18</anchor>
      <arglist>(fout, title, station, experiment_number, experiment_code, bp_sym, threshold_median)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>write_xcorrmx</name>
      <anchorfile>namespacevpal_1_1phasecal.html</anchorfile>
      <anchor>a980fc0465f23921e78aecc34f128c942</anchor>
      <arglist>(fout, title, Rxx_full, bp_good, station, experiment_number, experiment_code, bp_sym)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal::processing</name>
    <filename>namespacevpal_1_1processing.html</filename>
    <member kind="function">
      <type>def</type>
      <name>apply_fringe_file_cuts</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a392b4bae4c5b82d214e6acf131260fbc</anchor>
      <arglist>(ff_list, control_file_hash, min_snr=0.0, max_snr=1e30, valid_quality_code_list=None, start_scan_limit=&quot;000-0000&quot;, stop_scan_limit=&quot;999-9999&quot;)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_valid_baseline_list</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a4c5105e04b3d2344ce0061688122fc96</anchor>
      <arglist>(directory, network_reference_station, remote_stations, network_reference_baselines_only=False, include_autos=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>construct_valid_mixedmode_baseline_polproduct_dict</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a2e24e42ab9cf7f8f3b24c8ae194b4b9c</anchor>
      <arglist>(directory, legacy_stations, vgos_stations)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>gather_fringe_files</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>aed018211a8141a2d69dc904a5d6a7236</anchor>
      <arglist>(base_directory, control_file, blines, pol_products=[&apos;I&apos;], include_autos=False, exclude_list=None, max_depth=2)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_max_nblines_in_all_collections</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>af3ee367e959258d81a27400186996182</anchor>
      <arglist>(bl_collection_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>group_baseline_collections_by_scan</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>afc2188703b82af1f2ab7716f8192fa1f</anchor>
      <arglist>(bl_collection_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>join_fringes_into_baseline_collection</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a026e42cd5498617ea286acac3b4667d4</anchor>
      <arglist>(exp_directory, fringe_object_list, station_list, include_autos=False, required_polprod_list=None, only_complete=True)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>launch_fourfit_processes_in_parallel</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ab006df80d00443606bbaf56014e7c432</anchor>
      <arglist>(full_arg_list, max_num_processes=1, use_progress_ticker=True, log_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_and_batch_fourfit</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ad4787708eb1a49aa4f4e39391bc7a531</anchor>
      <arglist>(exp_directory, network_reference_station, remote_stations, control_file_path, set_commands, network_reference_baselines_only=True, num_processes=1, start_scan_limit=None, stop_scan_limit=None, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False, use_ionex_file=None, force_run=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_and_batch_fourfit_mixedmode</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ab413db94171adce7b59f6122cc52f7b7</anchor>
      <arglist>(exp_directory, legacy_stations, vgos_stations, control_file_path, set_commands, num_processes=1, start_scan_limit=&quot;000-0000&quot;, stop_scan_limit=&quot;999-9999&quot;, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_batch_cut_and_sort</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ac90ecfbc5461b2108a7b263b94b96e34</anchor>
      <arglist>(exp_directory, network_reference_station, remote_stations, control_file_path, set_commands, min_snr=0, max_snr=1e5, valid_quality_code_list=None, network_reference_baselines_only=True, num_processes=1, start_scan_limit=None, stop_scan_limit=None, only_complete=True, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_batch_cut_and_sort_mixedmode</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ac145c2376fde309d522e19b9f63a0584</anchor>
      <arglist>(exp_directory, network_reference_station, remote_stations, control_file_path, set_commands, min_snr=30, max_snr=500, valid_quality_code_list=None, network_reference_baselines_only=True, num_processes=1, start_scan_limit=&quot;000-0000&quot;, stop_scan_limit=&quot;999-9999&quot;, only_complete=True, pol_products=None, frequency_group=None, use_progress_ticker=True, log_fourfit_processes=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_directory_fringe_files</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a46e57b1c711b9a94d6fb684b663cee48</anchor>
      <arglist>(dir_name, baselines_list, frequency_group=None, include_autos=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>sort_collections_by_baseline</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>ade2902f76a40f5028132a3d3a6ed8f62</anchor>
      <arglist>(baseline_collection_list)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>processing_logger</name>
      <anchorfile>namespacevpal_1_1processing.html</anchorfile>
      <anchor>a57ac38c776fbc387b74e7c4aaa47b4bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal::proxy_cable_cal</name>
    <filename>namespacevpal_1_1proxy__cable__cal.html</filename>
    <class kind="class">vpal::proxy_cable_cal::ChannelToBandMap</class>
    <class kind="class">vpal::proxy_cable_cal::ComplexReImCovarianceMatrix</class>
    <class kind="class">vpal::proxy_cable_cal::ExperimentMultibandDelayAverager</class>
    <class kind="class">vpal::proxy_cable_cal::ExperimentPccBandDelay</class>
    <class kind="class">vpal::proxy_cable_cal::NumericalInterval</class>
    <class kind="class">vpal::proxy_cable_cal::PccConfiguration</class>
    <class kind="class">vpal::proxy_cable_cal::PccDate</class>
    <class kind="class">vpal::proxy_cable_cal::ScanPccBandDelay</class>
    <class kind="class">vpal::proxy_cable_cal::SingleChannelPhasorCollection</class>
    <class kind="class">vpal::proxy_cable_cal::StationExperimentPhasorCollection</class>
    <class kind="class">vpal::proxy_cable_cal::StationScanPhaseCalibrationData</class>
    <member kind="function">
      <type>def</type>
      <name>process_experiment</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a598602a871aee2e4b6b72e5c5296d8f6</anchor>
      <arglist>(pcc_config)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DISCARD_OFFSET</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>aad959a2e063ee7be4e5afa796695f13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAX_CHAN</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a0ffc78af07cfc61e6501f656be0f947c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pcc_logger</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a3a91e83cb84dc4af00213b5829714cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>T309_NACC</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a3fd0247f3b76973b9f4cadbc9a9919f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>T309_NCHAN</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>a7774b24b31310a6d92c79aab00e967da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>TWO31</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>acbaa906280b1cb8011e7f7de0fa5d836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>TWO32</name>
      <anchorfile>namespacevpal_1_1proxy__cable__cal.html</anchorfile>
      <anchor>adaa729b301cee4b10a259ea6945980e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal::report_lib</name>
    <filename>namespacevpal_1_1report__lib.html</filename>
    <class kind="class">vpal::report_lib::JsonSerializableObject</class>
    <member kind="function">
      <type>def</type>
      <name>NestedObjectEncoder</name>
      <anchorfile>namespacevpal_1_1report__lib.html</anchorfile>
      <anchor>acf532a2bf19e44cb42b6fae9a873adaf</anchor>
      <arglist>(an_object)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vpal::utility</name>
    <filename>namespacevpal_1_1utility.html</filename>
    <class kind="class">vpal::utility::Bar</class>
    <class kind="class">vpal::utility::ContinuousQuantityFilter</class>
    <class kind="class">vpal::utility::DiscreteQuantityFilter</class>
    <member kind="function">
      <type>def</type>
      <name>collect_object_value_pairs</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a1921ca6fab6ed3fbdfa70bef123fbae1</anchor>
      <arglist>(obj_list, value_name1, value_name2, sort_items=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>collect_object_values</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a6afb7feafef0ca9683af2d71566629e4</anchor>
      <arglist>(obj_list, value_name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>combined_filter</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a208c5d5b5ce5c061fd01aa86f31fdda3</anchor>
      <arglist>(object_list, filter_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_2d_pareto_front</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a86249ba53c4b8a4ddb0d447ddbaceada</anchor>
      <arglist>(obj_list, par1, par2, maximize1=True, maximize2=True)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>compute_weighted_mean</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a5b68bc9d46993bb3ca373ed1aa16455a</anchor>
      <arglist>(value_list, weight_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>int_to_time</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a6b9ab8ef7435ed16f682f19d841910ac</anchor>
      <arglist>(t)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>limit_periodic_quantity_to_range</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>ab0471e7d0171966218109dc498039040</anchor>
      <arglist>(value_to_limit, low_value=-180.0, high_value=180.0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mad</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a94cfe0afe8214e533e9b16d3c6e29b4f</anchor>
      <arglist>(value_list)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>minimum_angular_difference</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a6e3fe15a7b56e13bc0b65dbcc4f8d331</anchor>
      <arglist>(angle1, angle2, low_value=-180.0, high_value=180.0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_table</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a461b1355980cff62196be7bc0fb434d1</anchor>
      <arglist>(table, n_digits=9)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>sort_objects_by_quantity</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a1faccc291e9c42a667920401d0361e87</anchor>
      <arglist>(object_list, quantity_name, reverse_boolean=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>tabulate</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a35a5bb65b84806282e90a45a2007140d</anchor>
      <arglist>(table, headers=None, n_digits=9, padding=3)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>time_to_int</name>
      <anchorfile>namespacevpal_1_1utility.html</anchorfile>
      <anchor>a03d3cf190b7f5aaad87113ee5281eeb3</anchor>
      <arglist>(year, day, hour, minute, sec)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index.html</filename>
    <docanchor file="index.html" title="Introduction">intro</docanchor>
  </compound>
</tagfile>
