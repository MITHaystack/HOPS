<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structhops_1_1MHO__FFTWTypes_3_01double_01_4" kind="struct" language="C++" prot="public">
    <compoundname>hops::MHO_FFTWTypes&lt; double &gt;</compoundname>
    <includes refid="MHO__FFTWTypes_8hh" local="no">MHO_FFTWTypes.hh</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a40618992c9df543990eb65ffbd29743e" prot="public" static="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>using hops::MHO_FFTWTypes&lt; double &gt;::complex_type =  std::complex&lt; double &gt;</definition>
        <argsstring></argsstring>
        <name>complex_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="97" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a3c683f12ea4165e54a60a7df8a93924f" prot="public" static="no">
        <type>std::complex&lt; double &gt; *</type>
        <definition>using hops::MHO_FFTWTypes&lt; double &gt;::complex_type_ptr =  std::complex&lt; double &gt;*</definition>
        <argsstring></argsstring>
        <name>complex_type_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="98" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a0c2ebb4d489b55908135125be90d092b" prot="public" static="no">
        <type>fftw_complex</type>
        <definition>using hops::MHO_FFTWTypes&lt; double &gt;::fftw_complex_type =  fftw_complex</definition>
        <argsstring></argsstring>
        <name>fftw_complex_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="99" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a642d872433871362ea0c3c4556bc619a" prot="public" static="no">
        <type>fftw_complex *</type>
        <definition>using hops::MHO_FFTWTypes&lt; double &gt;::fftw_complex_type_ptr =  fftw_complex*</definition>
        <argsstring></argsstring>
        <name>fftw_complex_type_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="100" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1ab2076cbcaf6c120e9cc5995da1188ec6" prot="public" static="no">
        <type>fftw_iodim</type>
        <definition>using hops::MHO_FFTWTypes&lt; double &gt;::iodim_type =  fftw_iodim</definition>
        <argsstring></argsstring>
        <name>iodim_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="101" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a911ff92eb19106b080863e268eb6c230" prot="public" static="no">
        <type>fftw_plan</type>
        <definition>using hops::MHO_FFTWTypes&lt; double &gt;::plan_type =  fftw_plan</definition>
        <argsstring></argsstring>
        <name>plan_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="102" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a0cf83c622f4aa28a446d2a35459e9398" prot="public" static="yes" mutable="no">
        <type>decltype(&amp;<ref refid="MHO__FFTWTypes_8hh_1a55e522cd62c817b55ccb8f6232adcdc4" kindref="member">fftw_alignment_of</ref>) const</type>
        <definition>decltype(&amp;) fftw_alignment_of const hops::MHO_FFTWTypes&lt; double &gt;::alignment_of_func</definition>
        <argsstring></argsstring>
        <name>alignment_of_func</name>
        <initializer>= <ref refid="MHO__FFTWTypes_8hh_1a55e522cd62c817b55ccb8f6232adcdc4" kindref="member">fftw_alignment_of</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="106" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1ae4d862b8465892fe5e518c4eb89782f1" prot="public" static="yes" mutable="no">
        <type>decltype(&amp;fftw_alloc_complex) const</type>
        <definition>decltype(&amp;) fftw_alloc_complex const hops::MHO_FFTWTypes&lt; double &gt;::alloc_func</definition>
        <argsstring></argsstring>
        <name>alloc_func</name>
        <initializer>= fftw_alloc_complex</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="108" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a759848876a88244393824ab8d834e8a1" prot="public" static="yes" mutable="no">
        <type>decltype(&amp;fftw_destroy_plan) const</type>
        <definition>decltype(&amp;) fftw_destroy_plan const hops::MHO_FFTWTypes&lt; double &gt;::destroy_plan_func</definition>
        <argsstring></argsstring>
        <name>destroy_plan_func</name>
        <initializer>= fftw_destroy_plan</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="107" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1af1b1bba3bf9165b8efb5730f519e75e7" prot="public" static="yes" mutable="no">
        <type>decltype(&amp;fftw_execute_dft) const</type>
        <definition>decltype(&amp;) fftw_execute_dft const hops::MHO_FFTWTypes&lt; double &gt;::execute_dft_func</definition>
        <argsstring></argsstring>
        <name>execute_dft_func</name>
        <initializer>= fftw_execute_dft</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="105" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1afe9fbe831723dbdf5523cf00a4f97b05" prot="public" static="yes" mutable="no">
        <type>decltype(&amp;fftw_execute) const</type>
        <definition>decltype(&amp;) fftw_execute const hops::MHO_FFTWTypes&lt; double &gt;::execute_func</definition>
        <argsstring></argsstring>
        <name>execute_func</name>
        <initializer>= fftw_execute</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="104" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a0e3ef60fbf791768d4fa1e35fc326198" prot="public" static="yes" mutable="no">
        <type>decltype(&amp;fftw_free) const</type>
        <definition>decltype(&amp;) fftw_free const hops::MHO_FFTWTypes&lt; double &gt;::free_func</definition>
        <argsstring></argsstring>
        <name>free_func</name>
        <initializer>= fftw_free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="109" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a7570f45e81aa469e4bbeafc22fb409e2" prot="public" static="yes" mutable="no">
        <type>decltype(&amp;fftw_plan_guru_dft) const</type>
        <definition>decltype(&amp;) fftw_plan_guru_dft const hops::MHO_FFTWTypes&lt; double &gt;::plan_guru_func</definition>
        <argsstring></argsstring>
        <name>plan_guru_func</name>
        <initializer>= fftw_plan_guru_dft</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="110" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4" kindref="compound">MHO_FFTWTypes&lt;double&gt;</ref> </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>static decltype(&amp;fftw_free) const</label>
      </node>
      <node id="7">
        <label>static decltype(&amp;fftw_execute) const</label>
      </node>
      <node id="2">
        <label>static decltype(&amp;fftw_alignment_of) const</label>
      </node>
      <node id="6">
        <label>static decltype(&amp;fftw_destroy_plan) const</label>
      </node>
      <node id="8">
        <label>static decltype(&amp;fftw_alloc_complex) const</label>
      </node>
      <node id="5">
        <label>static decltype(&amp;fftw_plan_guru_dft) const</label>
      </node>
      <node id="1">
        <label>hops::MHO_FFTWTypes&lt; double &gt;</label>
        <link refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4"/>
        <childnode refid="2" relation="usage">
          <edgelabel>alignment_of_func</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>free_func</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>execute_dft_func</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>plan_guru_func</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>destroy_plan_func</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>execute_func</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>alloc_func</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>static decltype(&amp;fftw_execute_dft) const</label>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" line="95" column="10" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_FFTWTypes.hh" bodystart="96" bodyend="119"/>
    <listofallmembers>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a0cf83c622f4aa28a446d2a35459e9398" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>alignment_of_func</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1ae4d862b8465892fe5e518c4eb89782f1" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>alloc_func</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a40618992c9df543990eb65ffbd29743e" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>complex_type</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a3c683f12ea4165e54a60a7df8a93924f" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>complex_type_ptr</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a759848876a88244393824ab8d834e8a1" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>destroy_plan_func</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1af1b1bba3bf9165b8efb5730f519e75e7" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>execute_dft_func</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1afe9fbe831723dbdf5523cf00a4f97b05" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>execute_func</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a0c2ebb4d489b55908135125be90d092b" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>fftw_complex_type</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a642d872433871362ea0c3c4556bc619a" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>fftw_complex_type_ptr</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a0e3ef60fbf791768d4fa1e35fc326198" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>free_func</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1ab2076cbcaf6c120e9cc5995da1188ec6" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>iodim_type</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a7570f45e81aa469e4bbeafc22fb409e2" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>plan_guru_func</name></member>
      <member refid="structhops_1_1MHO__FFTWTypes_3_01double_01_4_1a911ff92eb19106b080863e268eb6c230" prot="public" virt="non-virtual"><scope>hops::MHO_FFTWTypes&lt; double &gt;</scope><name>plan_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
