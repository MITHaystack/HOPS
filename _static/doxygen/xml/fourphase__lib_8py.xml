<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="fourphase__lib_8py" kind="file" language="Python">
    <compoundname>fourphase_lib.py</compoundname>
    <innerclass refid="classvpal_1_1fourphase__lib_1_1Configuration" prot="public">vpal::fourphase_lib::Configuration</innerclass>
    <innerclass refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData" prot="public">vpal::fourphase_lib::ExperimentReportData</innerclass>
    <innerclass refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor" prot="public">vpal::fourphase_lib::MixedModeFourphaseSingleScanProcessor</innerclass>
    <innerclass refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets" prot="public">vpal::fourphase_lib::SingleStationPhaseDelayOffsets</innerclass>
    <innerclass refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor" prot="public">vpal::fourphase_lib::VGOSFourphaseSingleScanProcessor</innerclass>
    <innernamespace refid="namespacevpal_1_1fourphase__lib">vpal::fourphase_lib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacevpal_1_1fourphase__lib" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;module<sp/>to<sp/>determine<sp/>the<sp/>appropriate<sp/>manual<sp/>phases/delay<sp/>offsets<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">Y-X<sp/>polarization<sp/>signal<sp/>chains<sp/>for<sp/>each<sp/>station<sp/>during<sp/>an<sp/>experiment&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#core<sp/>imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>str</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>object</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>range</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#set<sp/>up<sp/>module<sp/>level<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="17"><highlight class="normal">fourphase_logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#non-core<sp/>imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.stats</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#hops<sp/>package<sp/>python<sp/>libs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ffcontrol</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#local<sp/>imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>processing</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>utility</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>report_lib</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#progress<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>progress.bar<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bar<sp/></highlight><highlight class="comment">#non-core<sp/>import</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Bar<sp/>=<sp/><ref refid="classvpal_1_1utility_1_1Bar" kindref="compound">utility.Bar</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classvpal_1_1fourphase__lib_1_1Configuration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1Configuration" kindref="compound">Configuration</ref>(<ref refid="classvpal_1_1report__lib_1_1JsonSerializableObject" kindref="compound">report_lib.JsonSerializableObject</ref><sp/>):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;configuration<sp/>object<sp/>for<sp/>fourphase&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#default<sp/>values<sp/>for<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1ade925c3d7d072f606e1991070e785ec6" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1ac8e268ede485242d84f6c0a9a7c21953" kindref="member">exp_directory</ref>exp_directory<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#location<sp/>of<sp/>experiment<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1ab63f3467b60cf489ef0fa7b8420ccd9c" kindref="member">network_reference_station</ref>network_reference_station<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#station<sp/>to<sp/>be<sp/>used<sp/>as<sp/>network<sp/>phase<sp/>reference<sp/>(not<sp/>strictly<sp/>needed,<sp/>except<sp/>in<sp/>mixed-mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a67a6a76df9354d65ea3d93959ac1c10e" kindref="member">target_stations</ref>target_stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#list<sp/>of<sp/>VGOS<sp/>stations<sp/>to<sp/>generate<sp/>phase/delay<sp/>offsets<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a2a9719b64ef701c0343e988dc9c0ecfc" kindref="member">control_file</ref>control_file<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#initial_control_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a75990413c1c098db9f35569d77597a34" kindref="member">mode</ref>mode<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;VGOS&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1ac7f3d0b3242952249530451c622183c6" kindref="member">num_proc</ref>num_proc<sp/>=<sp/>1<sp/></highlight><highlight class="comment">#number<sp/>of<sp/>processes<sp/>to<sp/>run<sp/>in<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a556df04a333048e629167d91f4ac7899" kindref="member">verbosity</ref>verbosity<sp/>=<sp/>0<sp/></highlight><highlight class="comment">#verbosity<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1aad6962d592e7ec1318b7b09aa5f90c88" kindref="member">min_snr</ref>min_snr<sp/>=<sp/>8<sp/></highlight><highlight class="comment">#min<sp/>SNR<sp/>allowed,<sp/>but<sp/>is<sp/>this<sp/>ever<sp/>used?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a8749f5d67a1678bc3759664aaff69344" kindref="member">max_snr</ref>max_snr<sp/>=<sp/>1e5<sp/></highlight><highlight class="comment">#max<sp/>SNR<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1abf79db98f2d106ecc81db3d93dfdb04f" kindref="member">min_qcode</ref>min_qcode<sp/>=<sp/>3<sp/></highlight><highlight class="comment">#minimum<sp/>quality<sp/>code<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a17e82eee032576fdc87bb5ae98a2f939" kindref="member">dtec_tolerance</ref>dtec_tolerance<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a4aa6c0f2d5dbb3158bc8b147e1374f9e" kindref="member">start_scan_limit</ref>start_scan_limit<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;000-0000&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#earliest<sp/>scan<sp/>to<sp/>use<sp/>(DOY-HHMM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a416f984edf217a4cb8ce9502f99ccbf8" kindref="member">stop_scan_limit</ref>stop_scan_limit<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;999-9999&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#latest<sp/>scan<sp/>to<sp/>use<sp/>(DOY-HHMM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1aace9bf04acba065c77f3eed42e918f7f" kindref="member">max_number_to_select</ref>max_number_to_select<sp/>=<sp/>0<sp/></highlight><highlight class="comment">#the<sp/>max<sp/>number<sp/>of<sp/>scans<sp/>used<sp/>for<sp/>each<sp/>station<sp/>to<sp/>compute<sp/>the<sp/>delay/phase<sp/>offsets<sp/>(zero<sp/>=<sp/>unlimited)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a3b4a158a7a4cad80c8732bda04f0204b" kindref="member">dtec_nominal_error</ref>dtec_nominal_error<sp/>=<sp/>0.1<sp/></highlight><highlight class="comment">#empirically<sp/>determined<sp/>factor<sp/>for<sp/>search<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a3ab9a202ca0eb0233379fed50ec9f1ba" kindref="member">sigma_cut_factor</ref>sigma_cut_factor<sp/>=<sp/>3.0<sp/></highlight><highlight class="comment">#cut<sp/>delay/phase<sp/>corrections<sp/>which<sp/>are<sp/>further<sp/>from<sp/>the<sp/>mean<sp/>than<sp/>sigma*sigma_cut_factor,<sp/>use<sp/>0.0<sp/>to<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a80475ebd24dfca1f25a91651e0e0cbe7" kindref="member">use_progress_ticker</ref>use_progress_ticker<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1a48f177101726a2b6f3a584a29a1a83c5" kindref="member">frequency_group</ref>frequency_group<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;X&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1Configuration_1aba26d44f328ac32c49a8619a65c19a8b" kindref="member">export_json</ref>(self):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.__dict__</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor" kindref="compound">VGOSFourphaseSingleScanProcessor</ref>(object):</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>simplified<sp/>fourphase<sp/>processor,<sp/>single<sp/>baseline<sp/>values<sp/>(no<sp/>least-squares<sp/>fitting<sp/>involved)</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>we<sp/>just<sp/>average<sp/>the<sp/>results<sp/>of<sp/>this<sp/>processor<sp/>over<sp/>multiple<sp/>scans<sp/>to<sp/>obtain<sp/>results<sp/>for<sp/>each<sp/>station&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1ad7d1504708ae53e873dd66a982cc3f15" kindref="member">__init__</ref>(self,<sp/>config_obj,<sp/>root_file,<sp/>control_file):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a806c0b8ab048b4cd6c20470d578375db" kindref="member">config_obj</ref>config_obj<sp/>=<sp/>config_obj</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a3bab764b4b34f81c941ec9bdc0fe74b1" kindref="member">root_file_path</ref>root_file_path<sp/>=<sp/>os.path.abspath(root_file)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a30799e12f69dff5470831ad2249f79dc" kindref="member">scan_dir</ref>scan_dir<sp/>=<sp/>os.path.dirname(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a3bab764b4b34f81c941ec9bdc0fe74b1" kindref="member">root_file_path</ref>root_file_path)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a17253924bbe15fd84df5aa64b760b59f" kindref="member">exp_dir</ref>exp_dir<sp/>=<sp/>os.path.dirname(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a30799e12f69dff5470831ad2249f79dc" kindref="member">scan_dir</ref>scan_dir)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7dc710f316dbf1fe47d04b6b503386d6" kindref="member">scan_name</ref>scan_name<sp/>=<sp/>os.path.split(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a30799e12f69dff5470831ad2249f79dc" kindref="member">scan_dir</ref>scan_dir)[1]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1abb7c9b2c5e585ec5678e73c4d1f06acd" kindref="member">exp_name</ref>exp_name<sp/>=<sp/>os.path.split(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a17253924bbe15fd84df5aa64b760b59f" kindref="member">exp_dir</ref>exp_dir)[1]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acf8789495b770a6e55ffd920845e8eb1" kindref="member">control_file_path</ref>control_file_path<sp/>=<sp/>os.path.abspath(control_file)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a4e50cf5e4bf088bf4d02cd78432f7b56" kindref="member">ion_search_control_file_path</ref>ion_search_control_file_path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1adc14dbc6f5c41134794beb27ae32147a" kindref="member">ion_fix_control_file_path</ref>ion_fix_control_file_path<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a80facdf050080f9e2255719c5c578bbf" kindref="member">stations</ref>stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1ac3565ec4b7a02acb37f1f1c3f3e971a1" kindref="member">error_condition</ref>error_condition<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a6dabac758ae774203b4e45e821a430a4" kindref="member">pol_products</ref>pol_products<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7075d3257086cdf86b863225b6c647c8" kindref="member">num_proc</ref>num_proc<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a302f7ec014dd8ba0adb812ac55f3718f" kindref="member">dtec_tolerance</ref>dtec_tolerance<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a23d5a07df2d8c401d2833639a438655e" kindref="member">baseline_dtec</ref>baseline_dtec<sp/>=<sp/>dict()<sp/></highlight><highlight class="comment">#filled<sp/>in<sp/>&apos;single<sp/>baseline&apos;<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acaa4904e6275a0aeba21b95e0ee75424" kindref="member">use_progress_ticker</ref>use_progress_ticker<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1ad80e6737754e2547a824f3f8382215c0" kindref="member">set_stations</ref>(self,<sp/>stations=&apos;&apos;):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a80facdf050080f9e2255719c5c578bbf" kindref="member">stations</ref>stations<sp/>=<sp/>stations</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1ac91a6c17727dd95c0f8cbd22dab4cd3b" kindref="member">construct_ionosphere_search_control_file</ref>(self):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;create<sp/>and<sp/>ionosphere<sp/>search<sp/>control<sp/>file<sp/>for<sp/>the<sp/>first<sp/>pass&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#make<sp/>sure<sp/>that<sp/>the<sp/>control<sp/>enforces<sp/>a<sp/>exhaustive<sp/>search<sp/>for<sp/>the<sp/>dTEC<sp/>for<sp/>each<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_ion_name<sp/>=<sp/>os.path.basename(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acf8789495b770a6e55ffd920845e8eb1" kindref="member">control_file_path</ref>control_file_path)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7dc710f316dbf1fe47d04b6b503386d6" kindref="member">scan_name</ref>scan_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-ion-search&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a4e50cf5e4bf088bf4d02cd78432f7b56" kindref="member">ion_search_control_file_path</ref>ion_search_control_file_path<sp/>=<sp/>os.path.join(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a30799e12f69dff5470831ad2249f79dc" kindref="member">scan_dir</ref>scan_dir,<sp/>cf_ion_name)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;ion_npts<sp/>75\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;ion_smooth<sp/>true\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;ion_win<sp/>-100.0<sp/>100.0\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;pc_delay_x<sp/>0.0&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;pc_delay_y<sp/>0.0&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#need<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>remove<sp/>pc_delay<sp/>and<sp/>pc_phase_offset<sp/>lines,<sp/>as<sp/>well<sp/>as<sp/>ionosphere<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement_string_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;pc_delay_&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>pc_delay_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;pc_phase_offset_&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>pc_phase_offset_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;ion_win&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>ion_win&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;ion_npts&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>ion_npts&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>original_string_list.append(&apos;ion_smooth&apos;);<sp/>replacement_string_list.append(&apos;*removed<sp/>by<sp/>fourphase:<sp/>ion_smooth&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;ionosphere&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>ionosphere&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffcontrol.prepend_control_file_with_find_and_replace(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acf8789495b770a6e55ffd920845e8eb1" kindref="member">control_file_path</ref>control_file_path,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a4e50cf5e4bf088bf4d02cd78432f7b56" kindref="member">ion_search_control_file_path</ref>ion_search_control_file_path,<sp/>cf_lines,<sp/>original_string_list,<sp/>replacement_string_list)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ffcontrol.append_control_file_with_find_and_replace(self.control_file_path,<sp/>self.ion_search_control_file_path,<sp/>cf_lines,<sp/>original_string_list,<sp/>replacement_string_list)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a48615b8570a3c3ce886f0eb6b6e3fa7e" kindref="member">determine_ionosphere</ref>(self):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;determine<sp/>the<sp/>dTEC<sp/>for<sp/>each<sp/>baseline&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1ac91a6c17727dd95c0f8cbd22dab4cd3b" kindref="member">construct_ionosphere_search_control_file</ref>construct_ionosphere_search_control_file()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;Determine<sp/>ionosphere&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#fourfit<sp/>all<sp/>pol-products<sp/>on<sp/>each<sp/>baseline<sp/>to<sp/>compute<sp/>the<sp/>SNR-weighted<sp/>dTEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gen_cf_record<sp/>true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blpp_collections<sp/>=<sp/>processing.load_batch_cut_and_sort(<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a17253924bbe15fd84df5aa64b760b59f" kindref="member">exp_dir</ref>exp_dir,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a80facdf050080f9e2255719c5c578bbf" kindref="member">stations</ref>stations[0],<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a80facdf050080f9e2255719c5c578bbf" kindref="member">stations</ref>stations[1:],<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a4e50cf5e4bf088bf4d02cd78432f7b56" kindref="member">ion_search_control_file_path</ref>ion_search_control_file_path,<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands,<sp/>min_snr=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a806c0b8ab048b4cd6c20470d578375db" kindref="member">config_obj</ref>config_obj.min_snr,<sp/>max_snr=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a806c0b8ab048b4cd6c20470d578375db" kindref="member">config_obj</ref>config_obj.max_snr,<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network_reference_baselines_only=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>num_processes=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7075d3257086cdf86b863225b6c647c8" kindref="member">num_proc</ref>num_proc,<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7dc710f316dbf1fe47d04b6b503386d6" kindref="member">scan_name</ref>scan_name,<sp/>stop_scan_limit=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7dc710f316dbf1fe47d04b6b503386d6" kindref="member">scan_name</ref>scan_name,<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_complete=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>pol_products=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a6dabac758ae774203b4e45e821a430a4" kindref="member">pol_products</ref>pol_products,<sp/>use_progress_ticker=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acaa4904e6275a0aeba21b95e0ee75424" kindref="member">use_progress_ticker</ref>use_progress_ticker<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_info<sp/>=<sp/>dict()<sp/></highlight><highlight class="comment">#<sp/>weighted-mean-dtec,<sp/>net-snr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>blc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blpp_collections:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>blc.baseline</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>blc.get_dtec_max_deviation()<sp/>&lt;<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a302f7ec014dd8ba0adb812ac55f3718f" kindref="member">dtec_tolerance</ref>dtec_tolerance:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtec_list<sp/>=<sp/>blc.get_dtec_list()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snr2_list<sp/>=<sp/>[<sp/>x*x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blc.get_snr_list()<sp/>]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wmean_dtec<sp/>=<sp/>utility.compute_weighted_mean(dtec_list,<sp/>snr2_list)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_weight<sp/>=<sp/>math.sqrt(<sp/>math.fsum(snr2_list)<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_info[bl]<sp/>=<sp/>(wmean_dtec,<sp/>net_weight)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#error,<sp/>this<sp/>baseline<sp/>collection<sp/>does<sp/>not<sp/>have<sp/>consistent<sp/>dTEC<sp/>solution<sp/>for<sp/>all<sp/>pols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1ac3565ec4b7a02acb37f1f1c3f3e971a1" kindref="member">error_condition</ref>error_condition<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.debug(<sp/></highlight><highlight class="stringliteral">&apos;\n****<sp/>WARNING<sp/>****<sp/>check<sp/>ionosphere<sp/>fit!<sp/>dtec<sp/>on<sp/>baseline<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>bl<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>differed<sp/>by<sp/>&apos;</highlight><highlight class="normal"><sp/><sp/>+<sp/>str(<sp/>round(blc.get_dtec_max_deviation(),1)<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>TEC<sp/>units<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a302f7ec014dd8ba0adb812ac55f3718f" kindref="member">dtec_tolerance</ref>dtec_tolerance)<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ionosphere<sp/>determined<sp/>separately<sp/>for<sp/>each<sp/>baseline,<sp/>over<sp/>the<sp/>4<sp/>pol-products<sp/>(no<sp/>global<sp/>combined<sp/>fit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a23d5a07df2d8c401d2833639a438655e" kindref="member">baseline_dtec</ref>baseline_dtec<sp/>=<sp/>{<sp/>bl:x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl,<sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(baseline_info.items())<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1aaaaf6c6aded794304f7d45d48d127064" kindref="member">construct_ionosphere_fix_control_file</ref>(self):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;construct<sp/>a<sp/>control<sp/>file<sp/>with<sp/>a<sp/>fixed<sp/>dTEC<sp/>for<sp/>each<sp/>baseline<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#make<sp/>sure<sp/>the<sp/>list<sp/>is<sp/>always<sp/>in<sp/>the<sp/>same<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl_sorted<sp/>=<sp/>sorted(<sp/>set(<sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a23d5a07df2d8c401d2833639a438655e" kindref="member">baseline_dtec</ref>baseline_dtec.keys())<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bl_sorted:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_ion_name<sp/>=<sp/>os.path.basename(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acf8789495b770a6e55ffd920845e8eb1" kindref="member">control_file_path</ref>control_file_path)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7dc710f316dbf1fe47d04b6b503386d6" kindref="member">scan_name</ref>scan_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-ion-fixed-&quot;</highlight><highlight class="normal"><sp/>+<sp/>bl</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1adc14dbc6f5c41134794beb27ae32147a" kindref="member">ion_fix_control_file_path</ref>ion_fix_control_file_path[bl]<sp/>=<sp/>os.path.join(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a30799e12f69dff5470831ad2249f79dc" kindref="member">scan_dir</ref>scan_dir,<sp/>cf_ion_name)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtec<sp/>=<sp/>round(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a23d5a07df2d8c401d2833639a438655e" kindref="member">baseline_dtec</ref>baseline_dtec[bl],<sp/>6)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;if<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>bl[0]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>ion_npts<sp/>1<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>ionosphere<sp/>0.0<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;if<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>bl[1]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>ion_npts<sp/>1<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>ionosphere<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(dtec)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#need<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>remove<sp/>pc_delay<sp/>and<sp/>pc_phase_offset<sp/>lines,<sp/>as<sp/>well<sp/>as<sp/>ionosphere<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement_string_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;pc_delay_&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>pc_delay_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;pc_phase_offset_&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>pc_phase_offset_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;ion_win&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>ion_win&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;ion_npts&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>ion_npts&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>original_string_list.append(&apos;ion_smooth&apos;);<sp/>replacement_string_list.append(&apos;*removed<sp/>by<sp/>fourphase:<sp/>ion_smooth&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_string_list.append(</highlight><highlight class="stringliteral">&apos;ionosphere&apos;</highlight><highlight class="normal">);<sp/>replacement_string_list.append(</highlight><highlight class="stringliteral">&apos;*removed<sp/>by<sp/>fourphase:<sp/>ionosphere&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffcontrol.append_control_file_with_find_and_replace(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acf8789495b770a6e55ffd920845e8eb1" kindref="member">control_file_path</ref>control_file_path,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1adc14dbc6f5c41134794beb27ae32147a" kindref="member">ion_fix_control_file_path</ref>ion_fix_control_file_path[bl],<sp/>cf_lines,<sp/>original_string_list,<sp/>replacement_string_list)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1af1ddddf8a6634d5f2add8c0b7b698561" kindref="member">calculate_delay_phase_offsets</ref>(self):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>compute<sp/>the<sp/>phase/delay<sp/>offsets<sp/>for<sp/>Y-X<sp/>at<sp/>each<sp/>station<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1aaaaf6c6aded794304f7d45d48d127064" kindref="member">construct_ionosphere_fix_control_file</ref>construct_ionosphere_fix_control_file()</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl_sorted<sp/>=<sp/>sorted(<sp/>set(<sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a23d5a07df2d8c401d2833639a438655e" kindref="member">baseline_dtec</ref>baseline_dtec.keys())<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;Fixed<sp/>ionosphere&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#run<sp/>fourfit<sp/>again<sp/>with<sp/>the<sp/>fixed<sp/>ionosphere<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gen_cf_record<sp/>true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blpp_collections<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bl_sorted:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_blpp_collections<sp/>=<sp/>processing.load_batch_cut_and_sort(<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a17253924bbe15fd84df5aa64b760b59f" kindref="member">exp_dir</ref>exp_dir,<sp/>bl[0],<sp/>bl[1],<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1adc14dbc6f5c41134794beb27ae32147a" kindref="member">ion_fix_control_file_path</ref>ion_fix_control_file_path[bl],<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands,<sp/>min_snr=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a806c0b8ab048b4cd6c20470d578375db" kindref="member">config_obj</ref>config_obj.min_snr,<sp/>max_snr=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a806c0b8ab048b4cd6c20470d578375db" kindref="member">config_obj</ref>config_obj.max_snr,<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network_reference_baselines_only=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>num_processes=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7075d3257086cdf86b863225b6c647c8" kindref="member">num_proc</ref>num_proc,<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7dc710f316dbf1fe47d04b6b503386d6" kindref="member">scan_name</ref>scan_name,<sp/>stop_scan_limit=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a7dc710f316dbf1fe47d04b6b503386d6" kindref="member">scan_name</ref>scan_name,<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_complete=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>pol_products=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a6dabac758ae774203b4e45e821a430a4" kindref="member">pol_products</ref>pol_products,<sp/>use_progress_ticker=self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1acaa4904e6275a0aeba21b95e0ee75424" kindref="member">use_progress_ticker</ref>use_progress_ticker<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blpp_collections.extend(temp_blpp_collections)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#loop<sp/>over<sp/>station-pol-product-baseline<sp/>collections,<sp/>extracting<sp/>mbd<sp/>and<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results_table<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_stations<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_baselines<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>blc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blpp_collections:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>blc.baseline</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>blc.get_min_snr()<sp/>&gt;<sp/>15.0<sp/>and<sp/>blc.get_mean_snr()<sp/>&gt;<sp/>25.0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snr_cut1<sp/>=<sp/><ref refid="max555_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(10.0,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a806c0b8ab048b4cd6c20470d578375db" kindref="member">config_obj</ref>config_obj.min_snr)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snr_cut2<sp/>=<sp/><ref refid="max555_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(15.0,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a806c0b8ab048b4cd6c20470d578375db" kindref="member">config_obj</ref>config_obj.min_snr)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>blc.get_min_snr()<sp/>&gt;<sp/>snr_cut1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>blc.get_mean_snr()<sp/>&gt;<sp/>snr_cut2:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#SNR<sp/>ok,<sp/>include<sp/>this<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_baselines.add(bl)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_stations.add(bl[0])</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_stations.add(bl[1])</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a6dabac758ae774203b4e45e821a430a4" kindref="member">pol_products</ref>pol_products:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff<sp/>=<sp/>blc.get_fringe_object(pp)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>(<sp/>ff.snr,<sp/>ff.sbdelay,<sp/>ff.mbdelay,<sp/>ff.resid_phas,<sp/>ff.dtec,<sp/>ff.amp*10000<sp/>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blpp_key<sp/><sp/>=<sp/>(bl,<sp/>pp)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results_table[blpp_key]<sp/>=<sp/>results</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#not<sp/>enough<sp/>cross<sp/>power<sp/>in<sp/>this<sp/>scan,<sp/>so<sp/>discard<sp/>this<sp/>baseline<sp/>and<sp/>issue<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1ac3565ec4b7a02acb37f1f1c3f3e971a1" kindref="member">error_condition</ref>error_condition<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.debug(<sp/></highlight><highlight class="stringliteral">&apos;\n****<sp/>ERROR<sp/>****<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>bl<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>min<sp/>snr<sp/>of<sp/>only<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/><sp/>str(blc.get_min_snr()<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>and<sp/>mean<sp/>snr<sp/>for<sp/>all<sp/>other<sp/>pol-products<sp/>is<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(blc.get_mean_snr())<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>verbose:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>print_table(results_table)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#loop<sp/>over<sp/>results<sp/>and<sp/>determine<sp/>the<sp/>Y-X<sp/>phase<sp/>and<sp/>delay<sp/>offsets<sp/>for<sp/>each<sp/>station</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays<sp/>=<sp/>{<sp/>st:list()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_stations<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases<sp/>=<sp/>{<sp/>st:list()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_stations<sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#loop<sp/>over<sp/>each<sp/>baseline,<sp/>and<sp/>extract<sp/>the<sp/>station<sp/>y-x<sp/>phase/delays<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_baselines:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#compute<sp/>delay<sp/>offsets<sp/>for<sp/>ref<sp/>and<sp/>rem<sp/>stations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyy_xy<sp/>=<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">)][2]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">)][2]</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyx_xx<sp/>=<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">)][2]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">)][2]</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxx_xy<sp/>=<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">)][2]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">)][2]</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyx_yy<sp/>=<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">)][2]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">)][2]</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays[bl[0]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>dyy_xy,<sp/>bl[1]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays[bl[0]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>dyx_xx,<sp/>bl[1]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays[bl[1]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>dxx_xy,<sp/>bl[0]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays[bl[1]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>dyx_yy,<sp/>bl[0]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#compute<sp/>phase<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyy_xy<sp/>=<sp/>utility.limit_periodic_quantity_to_range(results_table[(bl,</highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">)][3]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">)][3],<sp/>low_value=-180.0,<sp/>high_value=180.0)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyx_xx<sp/>=<sp/>utility.limit_periodic_quantity_to_range(results_table[(bl,</highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">)][3]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">)][3],<sp/>low_value=-180.0,<sp/>high_value=180.0)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxx_xy<sp/>=<sp/>utility.limit_periodic_quantity_to_range(results_table[(bl,</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">)][3]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">)][3],<sp/>low_value=-180.0,<sp/>high_value=180.0)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyx_yy<sp/>=<sp/>utility.limit_periodic_quantity_to_range(results_table[(bl,</highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">)][3]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">)][3],<sp/>low_value=-180.0,<sp/>high_value=180.0)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases[bl[0]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>pyy_xy,<sp/>bl[1]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases[bl[0]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>pyx_xx,<sp/>bl[1]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases[bl[1]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>pxx_xy,<sp/>bl[0]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases[bl[1]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>pyx_yy,<sp/>bl[0]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1aed2f3ce6311222d2778a218c6ed4ec50" kindref="member">get_raw_station_delay_offsets</ref>(self):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a9a90a652655a86432da046d33890767d" kindref="member">get_raw_station_phase_offsets</ref>(self):</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a8020a80f8cfbc3835fa29c86b00924f7" kindref="member">get_mean_station_delay_offsets_and_error</ref>(self):</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_offsets<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_err<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st,<sp/>values<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a52762d6845f53ec958f65e6638791a6c" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays.items()):</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values]</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tmp_val)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_offsets[st]<sp/>=<sp/>np.mean(tmp_val)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_err[st]<sp/>=<sp/>np.std(tmp_val)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st_delay_offsets,<sp/>st_delay_err</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a80de9c62c86e5f83b8c4bb9434bbc825" kindref="member">get_mean_station_phase_offsets_and_error</ref>(self):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_offsets<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_err<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st,<sp/>values<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor_1a396ba225097174b6b2f2851eee042b5d" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases.items()):</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values]</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tmp_val)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_offsets[st]<sp/>=<sp/>scipy.stats.circmean(<sp/>np.asarray(tmp_val),<sp/>low=-180.0,<sp/>high=180.0)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_err[st]<sp/>=<sp/>scipy.stats.circstd(<sp/>np.asarray(tmp_val),<sp/>low=-180.0,<sp/>high=180.0)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st_phase_offsets,<sp/>st_phase_err</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor" kindref="compound">MixedModeFourphaseSingleScanProcessor</ref>(object):</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>simplified<sp/>fourphase<sp/>processor,<sp/>single<sp/>baseline<sp/>values<sp/>(no<sp/>least-squares<sp/>fitting<sp/>involved)</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>we<sp/>just<sp/>average<sp/>the<sp/>results<sp/>of<sp/>this<sp/>processor<sp/>over<sp/>multiple<sp/>scans<sp/>to<sp/>obtain<sp/>results<sp/>for<sp/>each<sp/>station&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a20699fb89c5c925cab5e21083525e283" kindref="member">__init__</ref>(self,<sp/>config_obj,<sp/>root_file,<sp/>control_file,<sp/>frequency_group=&apos;X&apos;):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a04d1c5f498d4004c963cdea61420805f" kindref="member">config_obj</ref>config_obj<sp/>=<sp/>config_obj</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a82c08a3a8188c46203738c1f53133e14" kindref="member">root_file_path</ref>root_file_path<sp/>=<sp/>os.path.abspath(root_file)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ae436cd8411f07595b821a729040889b2" kindref="member">scan_dir</ref>scan_dir<sp/>=<sp/>os.path.dirname(self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a82c08a3a8188c46203738c1f53133e14" kindref="member">root_file_path</ref>root_file_path)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1af4a723c0238339049f84454746c3e4ec" kindref="member">exp_dir</ref>exp_dir<sp/>=<sp/>os.path.dirname(self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ae436cd8411f07595b821a729040889b2" kindref="member">scan_dir</ref>scan_dir)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a1e3b1cb9cf91f08068247ada9c96df29" kindref="member">scan_name</ref>scan_name<sp/>=<sp/>os.path.split(self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ae436cd8411f07595b821a729040889b2" kindref="member">scan_dir</ref>scan_dir)[1]</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a19664773c11b6bfa87bf271d4776b92e" kindref="member">exp_name</ref>exp_name<sp/>=<sp/>os.path.split(self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1af4a723c0238339049f84454746c3e4ec" kindref="member">exp_dir</ref>exp_dir)[1]</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad50f55f52fef006f87cabf48b0132acb" kindref="member">control_file_path</ref>control_file_path<sp/>=<sp/>os.path.abspath(control_file)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a59bed1ca1c30297f75bd4bf85fba9393" kindref="member">frequency_group</ref>frequency_group<sp/>=<sp/>frequency_group</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ace65a7e3d6270eaf0516a3c45162b1ee" kindref="member">legacy_stations</ref>legacy_stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad05fb3f33bc16754f7e064698dffcd45" kindref="member">target_stations</ref>target_stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ade0ca12ed34585366cb4e89d75ed9506" kindref="member">error_condition</ref>error_condition<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a44518149514138bc181e21d82681e381" kindref="member">num_proc</ref>num_proc<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a2a23df40a47422b816ff0cfe87fdf569" kindref="member">min_snr</ref>min_snr<sp/>=<sp/>config_obj.min_snr</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0cd3941d0d74f059982f40bf111bfdf2" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0b0bae9b5e7aeaf25346f31d6595cc21" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a25052a7acb3abe5685a234fda92d8d3a" kindref="member">bl_pol_products</ref>bl_pol_products<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad011719234de5fb4a2a39ca81b36350a" kindref="member">use_progress_ticker</ref>use_progress_ticker<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0b807775cd6fdea7313389788fd691cf" kindref="member">set_stations</ref>(self,<sp/>legacy_stations=&apos;&apos;,<sp/>target_stations=&apos;&apos;):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ace65a7e3d6270eaf0516a3c45162b1ee" kindref="member">legacy_stations</ref>legacy_stations<sp/>=<sp/>legacy_stations.strip()</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad05fb3f33bc16754f7e064698dffcd45" kindref="member">target_stations</ref>target_stations<sp/>=<sp/>target_stations.strip()</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1af66153025bbec2d3b1d94bb644d1176e" kindref="member">calculate_delay_phase_offsets</ref>(self):</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>compute<sp/>the<sp/>phase/delay<sp/>offsets<sp/>for<sp/>Y-X<sp/>at<sp/>each<sp/>station<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leg_st<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ace65a7e3d6270eaf0516a3c45162b1ee" kindref="member">legacy_stations</ref>legacy_stations</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vgos_st<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad05fb3f33bc16754f7e064698dffcd45" kindref="member">target_stations</ref>target_stations</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gen_cf_record<sp/>true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blpp_collections<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl_pp_dict<sp/>=<sp/>processing.construct_valid_mixedmode_baseline_polproduct_dict(self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ae436cd8411f07595b821a729040889b2" kindref="member">scan_dir</ref>scan_dir,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ace65a7e3d6270eaf0516a3c45162b1ee" kindref="member">legacy_stations</ref>legacy_stations,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad05fb3f33bc16754f7e064698dffcd45" kindref="member">target_stations</ref>target_stations)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bl_pp_dict.keys():</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp_list<sp/>=<sp/>bl_pp_dict[bl]</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy_is_ref<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst<sp/>=<sp/>bl[0]</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vst<sp/>=<sp/>bl[1]</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;RX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;RY&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bl[0]<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ace65a7e3d6270eaf0516a3c45162b1ee" kindref="member">legacy_stations</ref>legacy_stations:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy_is_ref<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst<sp/>=<sp/>bl[1]</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vst<sp/>=<sp/>bl[0]</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;XR&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a25052a7acb3abe5685a234fda92d8d3a" kindref="member">bl_pol_products</ref>bl_pol_products[bl]<sp/>=<sp/>pol_products</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_blpp_collections<sp/>=<sp/>processing.load_batch_cut_and_sort_mixedmode(<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1af4a723c0238339049f84454746c3e4ec" kindref="member">exp_dir</ref>exp_dir,<sp/>lst,<sp/>vst,<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad50f55f52fef006f87cabf48b0132acb" kindref="member">control_file_path</ref>control_file_path,<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands,<sp/>min_snr=self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a2a23df40a47422b816ff0cfe87fdf569" kindref="member">min_snr</ref>min_snr,<sp/>network_reference_baselines_only=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>num_processes=self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a44518149514138bc181e21d82681e381" kindref="member">num_proc</ref>num_proc,<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a1e3b1cb9cf91f08068247ada9c96df29" kindref="member">scan_name</ref>scan_name,<sp/>stop_scan_limit=self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a1e3b1cb9cf91f08068247ada9c96df29" kindref="member">scan_name</ref>scan_name,<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_complete=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>pol_products=pol_products,<sp/>frequency_group=self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a59bed1ca1c30297f75bd4bf85fba9393" kindref="member">frequency_group</ref>frequency_group,<sp/>use_progress_ticker=self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ad011719234de5fb4a2a39ca81b36350a" kindref="member">use_progress_ticker</ref>use_progress_ticker<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blpp_collections.extend(temp_blpp_collections)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#loop<sp/>over<sp/>station-pol-product-baseline<sp/>collections,<sp/>extracting<sp/>mbd<sp/>and<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results_table<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printable_results_table<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_stations<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_baselines<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>blc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blpp_collections:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>blc.baseline</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>blc.get_min_snr()<sp/>&gt;<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a2a23df40a47422b816ff0cfe87fdf569" kindref="member">min_snr</ref>min_snr:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#SNR<sp/>ok,<sp/>include<sp/>this<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_baselines.add(bl)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_stations.add(bl[0])</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_stations.add(bl[1])</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a25052a7acb3abe5685a234fda92d8d3a" kindref="member">bl_pol_products</ref>bl_pol_products[bl]:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff<sp/>=<sp/>blc.get_fringe_object(pp)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ff<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>(<sp/>ff.snr,<sp/>ff.sbdelay,<sp/>ff.mbdelay,<sp/>ff.resid_phas,<sp/>ff.dtec,<sp/>ff.amp*10000<sp/>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blpp_key<sp/><sp/>=<sp/>(bl,<sp/>pp)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results_table[blpp_key]<sp/>=<sp/>results</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printable_results_table.append(<sp/>[bl,<sp/>pp,<sp/>ff.snr,<sp/>ff.sbdelay,<sp/>ff.mbdelay,<sp/>ff.resid_phas,<sp/>ff.dtec,<sp/>ff.amp*10000]<sp/>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#not<sp/>enough<sp/>cross<sp/>power<sp/>in<sp/>this<sp/>scan,<sp/>so<sp/>discard<sp/>this<sp/>baseline<sp/>and<sp/>issue<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1ade0ca12ed34585366cb4e89d75ed9506" kindref="member">error_condition</ref>error_condition<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.debug(<sp/></highlight><highlight class="stringliteral">&apos;\n****<sp/>ERROR<sp/>****<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>bl<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>min<sp/>snr<sp/>of<sp/>only<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/><sp/>str(blc.get_min_snr()<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>and<sp/>mean<sp/>snr<sp/>for<sp/>all<sp/>other<sp/>pol-products<sp/>is<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(blc.get_mean_snr())<sp/>)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>verbose:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;results<sp/>table:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;table:<sp/>&quot;,<sp/>results_table)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headers=[</highlight><highlight class="stringliteral">&quot;bl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;snr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mbd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ph&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dtec&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;amp&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(utility.tabulate(printable_results_table,<sp/>headers,<sp/>n_digits=4,<sp/>padding=7))</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#loop<sp/>over<sp/>results<sp/>and<sp/>determine<sp/>the<sp/>Y-X<sp/>phase<sp/>and<sp/>delay<sp/>offsets<sp/>for<sp/>each<sp/>station</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0cd3941d0d74f059982f40bf111bfdf2" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays<sp/>=<sp/>{<sp/>st:list()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_stations<sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0b0bae9b5e7aeaf25346f31d6595cc21" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases<sp/>=<sp/>{<sp/>st:list()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_stations<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#loop<sp/>over<sp/>each<sp/>baseline,<sp/>and<sp/>extract<sp/>the<sp/>station<sp/>y-x<sp/>phase/delays<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_baselines:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#compute<sp/>delay<sp/>and<sp/>phase<sp/>offsets<sp/>for<sp/>ref<sp/>and<sp/>rem<sp/>stations<sp/>from<sp/>this<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bl,</highlight><highlight class="stringliteral">&apos;YR&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>results_table<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(bl,<sp/></highlight><highlight class="stringliteral">&apos;XR&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>results_table:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyr_xr<sp/>=<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;YR&apos;</highlight><highlight class="normal">)][2]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XR&apos;</highlight><highlight class="normal">)][2]</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyr_xr<sp/>=<sp/>utility.limit_periodic_quantity_to_range(results_table[(bl,</highlight><highlight class="stringliteral">&apos;YR&apos;</highlight><highlight class="normal">)][3]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;XR&apos;</highlight><highlight class="normal">)][3],<sp/>low_value=-180.0,<sp/>high_value=180.0)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0cd3941d0d74f059982f40bf111bfdf2" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays[bl[0]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>dyr_xr,<sp/>bl[1]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0b0bae9b5e7aeaf25346f31d6595cc21" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases[bl[0]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>pyr_xr,<sp/>bl[1]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bl,</highlight><highlight class="stringliteral">&apos;RY&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>results_table<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(bl,<sp/></highlight><highlight class="stringliteral">&apos;RX&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>results_table:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#flip<sp/>sign<sp/>when<sp/>taking<sp/>phase/delay<sp/>difference,<sp/>if<sp/>the<sp/>legacy-station<sp/>is<sp/>the<sp/>reference<sp/>station<sp/>on<sp/>this<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dry_rx<sp/>=<sp/><sp/>-1.0*(<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;RY&apos;</highlight><highlight class="normal">)][2]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;RX&apos;</highlight><highlight class="normal">)][2]<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pry_rx<sp/>=<sp/>utility.limit_periodic_quantity_to_range(<sp/>-1.0*(<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;RY&apos;</highlight><highlight class="normal">)][3]<sp/>-<sp/>results_table[(bl,</highlight><highlight class="stringliteral">&apos;RX&apos;</highlight><highlight class="normal">)][3]<sp/>),<sp/>low_value=-180.0,<sp/>high_value=180.0)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0cd3941d0d74f059982f40bf111bfdf2" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays[bl[1]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>dry_rx,<sp/>bl[0]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0b0bae9b5e7aeaf25346f31d6595cc21" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases[bl[1]].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(<sp/>(<sp/>pry_rx,<sp/>bl[0]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a7824392b402fa16bc6444fd8c1d3038f" kindref="member">get_raw_station_delay_offsets</ref>(self):</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0cd3941d0d74f059982f40bf111bfdf2" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a7f6785f70b1bd2bf68a10e8bbd3a6d71" kindref="member">get_raw_station_phase_offsets</ref>(self):</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0b0bae9b5e7aeaf25346f31d6595cc21" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a561dca9b81d61f03c784c388dea3d897" kindref="member">get_mean_station_delay_offsets_and_error</ref>(self):</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_offsets<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_err<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st,<sp/>values<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0cd3941d0d74f059982f40bf111bfdf2" kindref="member">station_y_minus_x_delays</ref>station_y_minus_x_delays.items()):</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values]</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tmp_val)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_offsets[st]<sp/>=<sp/>np.mean(tmp_val)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_delay_err[st]<sp/>=<sp/>np.std(tmp_val)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st_delay_offsets,<sp/>st_delay_err</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1aeca3c630ad40f24ad56c17b7b7c7235c" kindref="member">get_mean_station_phase_offsets_and_error</ref>(self):</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_offsets<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_err<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st,<sp/>values<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor_1a0b0bae9b5e7aeaf25346f31d6595cc21" kindref="member">station_y_minus_x_phases</ref>station_y_minus_x_phases.items()):</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values]</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tmp_val)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_offsets[st]<sp/>=<sp/>scipy.stats.circmean(<sp/>np.asarray(tmp_val),<sp/>low=-180.0,<sp/>high=180.0)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_phase_err[st]<sp/>=<sp/>scipy.stats.circstd(<sp/>np.asarray(tmp_val),<sp/>low=-180.0,<sp/>high=180.0)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st_phase_offsets,<sp/>st_phase_err</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets" kindref="compound">SingleStationPhaseDelayOffsets</ref>(<sp/><ref refid="classvpal_1_1report__lib_1_1JsonSerializableObject" kindref="compound">report_lib.JsonSerializableObject</ref><sp/>):</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;container<sp/>object<sp/>for<sp/>the<sp/>y-x<sp/>phase/delay<sp/>offsets<sp/>of<sp/>a<sp/>particular<sp/>station&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1af3ccb9e2cc63878b55f23988891d5a9c" kindref="member">__init__</ref>(self,<sp/>station_id):</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#raw<sp/>data<sp/>is<sp/>indexed<sp/>by<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id<sp/>=<sp/>station_id</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1ad657b37c886fa0cf2beedfc9f7dfa461" kindref="member">used_scans</ref>used_scans<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a91cb5b82ab7756d44aaa3720a82c82aa" kindref="member">add_phase_delay_offsets</ref>(self,<sp/>scan_name,<sp/>delay_offsets,<sp/>phase_offsets):</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;add<sp/>the<sp/>phase/delay<sp/>offsets<sp/>derived<sp/>from<sp/>a<sp/>particular<sp/>scan&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1ad657b37c886fa0cf2beedfc9f7dfa461" kindref="member">used_scans</ref>used_scans.<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(scan_name)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets[scan_name]<sp/>=<sp/>delay_offsets</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets[scan_name]<sp/>=<sp/>phase_offsets</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4370a90a66c896a27c0a23d2952cbd2e" kindref="member">export_json</ref>(self):</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;export<sp/>this<sp/>object<sp/>as<sp/>a<sp/>dict<sp/>for<sp/>json<sp/>export&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;station_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;used_scans&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1ad657b37c886fa0cf2beedfc9f7dfa461" kindref="member">used_scans</ref>used_scans</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;mean_pc_delay_offset&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a78c12b0c2f9e58d59b3bccdf3e4b6a20" kindref="member">get_delay_offset_mean</ref>get_delay_offset_mean()</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;stddev_pc_delay_offset&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acf3e99ae4144cd82fe0e521a541b39f8" kindref="member">get_delay_offset_error</ref>get_delay_offset_error()</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;mean_pc_phase_offset&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1afd79afbab7e0d0a10a9c5ed7bfaa9391" kindref="member">get_phase_offset_mean</ref>get_phase_offset_mean()</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;stddev_pc_phase_offset&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a407f0d88e57295b2ab134fac04b43202" kindref="member">get_phase_offset_error</ref>get_phase_offset_error()</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;pc_delay_offsets&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;pc_phase_offsets&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json_dict</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4dd8781e66ee92f212b7b1fc0c25e18c" kindref="member">use_data_point</ref>(self,<sp/>data_point):</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>quick<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>data<sp/>point<sp/>is<sp/>use-able<sp/>after<sp/>cuts<sp/>are<sp/>applied<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(data_point)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(data_point)<sp/>==<sp/>3:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data_point[2]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a3e68767688be9dea726a48bc647ab0e6" kindref="member">get_n_total_entries</ref>(self):</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>len(val)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a9908c216f234821941e91105e182c369" kindref="member">get_n_used_entries</ref>(self):</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>==<sp/>3:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x[2]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1ab8257238bb138012a0d37f95d02d91f5" kindref="member">get_n_cut_entries</ref>(self):</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>==<sp/>3:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x[2]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a3123c7b8277a5321106e4dc3f884e878" kindref="member">get_all_delay_offset_values</ref>(self):</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val]</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>all_values</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a73ff3e1d64e36df10210acbc0faa781f" kindref="member">get_all_phase_offset_values</ref>(self):</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets.values()):</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val]</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>all_values</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a78c12b0c2f9e58d59b3bccdf3e4b6a20" kindref="member">get_delay_offset_mean</ref>(self):</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4dd8781e66ee92f212b7b1fc0c25e18c" kindref="member">use_data_point</ref>use_data_point(x)]</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(all_values)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.mean(all_values)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.error(<sp/></highlight><highlight class="stringliteral">&apos;Error:<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>no<sp/>useable<sp/>delay<sp/>offset<sp/>data<sp/>to<sp/>compute<sp/>mean<sp/>Y-X<sp/>delay<sp/>offset.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4c8dfc881fbe95bb434136d70a46f3cb" kindref="member">get_delay_offset_median</ref>(self):</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4dd8781e66ee92f212b7b1fc0c25e18c" kindref="member">use_data_point</ref>use_data_point(x)]</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(all_values)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.median(all_values)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.error(<sp/></highlight><highlight class="stringliteral">&apos;Error:<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>no<sp/>useable<sp/>delay<sp/>offset<sp/>data<sp/>to<sp/>compute<sp/>median<sp/>Y-X<sp/>delay<sp/>offset.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1af870e0df0e5f80bbb0041cda57a37168" kindref="member">get_delay_offset_mad</ref>(self):</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4dd8781e66ee92f212b7b1fc0c25e18c" kindref="member">use_data_point</ref>use_data_point(x)]</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(all_values)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utility.mad(all_values)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.error(<sp/></highlight><highlight class="stringliteral">&apos;Error:<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>no<sp/>useable<sp/>delay<sp/>offset<sp/>data<sp/>to<sp/>compute<sp/>Y-X<sp/>delay<sp/>offset<sp/>MAD.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.nan</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acf3e99ae4144cd82fe0e521a541b39f8" kindref="member">get_delay_offset_error</ref>(self):</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets.values()):</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4dd8781e66ee92f212b7b1fc0c25e18c" kindref="member">use_data_point</ref>use_data_point(x)]</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(all_values)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.std(all_values)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.error(<sp/></highlight><highlight class="stringliteral">&apos;Error:<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>no<sp/>useable<sp/>delay<sp/>offset<sp/>data<sp/>to<sp/>compute<sp/>std.<sp/>dev.<sp/>of<sp/>Y-X<sp/>delay<sp/>offset.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.nan</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1afd79afbab7e0d0a10a9c5ed7bfaa9391" kindref="member">get_phase_offset_mean</ref>(self):</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets.values()):</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4dd8781e66ee92f212b7b1fc0c25e18c" kindref="member">use_data_point</ref>use_data_point(x)]</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(all_values)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scipy.stats.circmean(<sp/>np.asarray(all_values),<sp/>low=-180.0,<sp/>high=180.0)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.error(<sp/></highlight><highlight class="stringliteral">&apos;Error:<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>no<sp/>useable<sp/>phase<sp/>offset<sp/>data<sp/>to<sp/>compute<sp/>mean<sp/>Y-X<sp/>phase<sp/>offset.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a407f0d88e57295b2ab134fac04b43202" kindref="member">get_phase_offset_error</ref>(self):</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets.values()):</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>[x[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4dd8781e66ee92f212b7b1fc0c25e18c" kindref="member">use_data_point</ref>use_data_point(x)]</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_values.extend(tmp_val)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(all_values)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scipy.stats.circstd(<sp/>np.asarray(all_values),<sp/>low=-180.0,<sp/>high=180.0)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.error(<sp/></highlight><highlight class="stringliteral">&apos;Error:<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a2aa9d10e58f50750eea859ff4941cf4d" kindref="member">station_id</ref>station_id<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>no<sp/>useable<sp/>phase<sp/>offset<sp/>data<sp/>to<sp/>compute<sp/>std.<sp/>dev<sp/>of<sp/>Y-X<sp/>phase<sp/>offset.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.nan</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1ad387f0ce490443509553f78225a1e2e0" kindref="member">apply_sigma_cut</ref>(self,<sp/>sigma_cut_factor):</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;remove<sp/>data<sp/>points<sp/>which<sp/>are<sp/>more<sp/>then<sp/>sigma_cut_factor*sigma<sp/>away<sp/>from<sp/>the<sp/>mean<sp/>value<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sigma_cut_factor<sp/>!=<sp/>0.0:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_delay<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a78c12b0c2f9e58d59b3bccdf3e4b6a20" kindref="member">get_delay_offset_mean</ref>get_delay_offset_mean()</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stddev_delay<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acf3e99ae4144cd82fe0e521a541b39f8" kindref="member">get_delay_offset_error</ref>get_delay_offset_error()</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_phase<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1afd79afbab7e0d0a10a9c5ed7bfaa9391" kindref="member">get_phase_offset_mean</ref>get_phase_offset_mean()</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stddev_phase<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a407f0d88e57295b2ab134fac04b43202" kindref="member">get_phase_offset_error</ref>get_phase_offset_error()</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>median_delay<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1a4c8dfc881fbe95bb434136d70a46f3cb" kindref="member">get_delay_offset_median</ref>get_delay_offset_median()</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mad_delay<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1af870e0df0e5f80bbb0041cda57a37168" kindref="member">get_delay_offset_mad</ref>get_delay_offset_mad()</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>scan<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1ad657b37c886fa0cf2beedfc9f7dfa461" kindref="member">used_scans</ref>used_scans:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#strip<sp/>delay<sp/>values<sp/>which<sp/>are<sp/>too<sp/>far<sp/>from<sp/>the<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_list<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets[scan]</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_delay_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>delay_list:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>val[0]</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>abs(tmp_val<sp/>-<sp/>median_delay)<sp/>&lt;<sp/>abs(mad_delay*sigma_cut_factor):</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_delay_list.append(<sp/>(val[0],<sp/>val[1],<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_delay_list.append(<sp/>(val[0],<sp/>val[1],<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1acdd9854ef804247a02f3bd2eb57ac83e" kindref="member">pc_delay_offsets</ref>pc_delay_offsets[scan]<sp/>=<sp/>new_delay_list</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#strip<sp/>phase<sp/>values<sp/>which<sp/>are<sp/>too<sp/>far<sp/>from<sp/>the<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_list<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets[scan]</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_phase_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>phase_list:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_val<sp/>=<sp/>val[0]</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>abs(<sp/>utility.minimum_angular_difference(tmp_val,<sp/>mean_phase)<sp/>)<sp/>&lt;<sp/>abs(stddev_phase*sigma_cut_factor):</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_phase_list.append(<sp/>(val[0],<sp/>val[1],<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_phase_list.append(<sp/>(val[0],<sp/>val[1],<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets_1adfa884dae4bc5a45ba11536e26a5342f" kindref="member">pc_phase_offsets</ref>pc_phase_offsets[scan]<sp/>=<sp/>new_phase_list</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData" kindref="compound">ExperimentReportData</ref>(<sp/><ref refid="classvpal_1_1report__lib_1_1JsonSerializableObject" kindref="compound">report_lib.JsonSerializableObject</ref><sp/>):</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;container<sp/>class<sp/>for<sp/>report<sp/>data<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a4f316e1c2664899b225d30d5edd78157" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj<sp/>=<sp/><ref refid="classvpal_1_1fourphase__lib_1_1Configuration" kindref="compound">Configuration</ref>()</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a95362e0283b51b22d28582e96051227b" kindref="member">generated_station_offsets</ref>generated_station_offsets<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1abe5181702672b6c2d8f49400e67e18db" kindref="member">export_json</ref>(self):</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&quot;configuration&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1abe5181702672b6c2d8f49400e67e18db" kindref="member">export_json</ref>()</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generated_offsets_dict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st,<sp/>obj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a95362e0283b51b22d28582e96051227b" kindref="member">generated_station_offsets</ref>generated_station_offsets.items()):</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generated_offsets_dict[st]<sp/>=<sp/>obj.export_json()</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_dict[</highlight><highlight class="stringliteral">&apos;generated_station_phase_delay_offsets&apos;</highlight><highlight class="normal">]<sp/>=<sp/>generated_offsets_dict</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json_dict</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a58af7cd8ca1228231ac00ca0e512ec2f" kindref="member">import_json</ref>(self,<sp/>json_dict):</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(json_dict,<sp/>dict):</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a58af7cd8ca1228231ac00ca0e512ec2f" kindref="member">import_json</ref>(json_dict[</highlight><highlight class="stringliteral">&quot;configuration&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,<sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(json_dict[</highlight><highlight class="stringliteral">&apos;generated_station_phase_delay_offsets&apos;</highlight><highlight class="normal">].items()):</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/><ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets" kindref="compound">SingleStationPhaseDelayOffsets</ref>(key)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.import_json(val)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a95362e0283b51b22d28582e96051227b" kindref="member">generated_station_offsets</ref>generated_station_offsets[key]<sp/>=<sp/>obj</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a0bd27df5304a68bd744f17656eb4a607" kindref="member">create_report</ref>(self,<sp/>report_filename):</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report_file<sp/>=<sp/>os.path.abspath(report_filename)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>=<sp/>open(report_filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.write(json.dumps(self,default=report_lib.NestedObjectEncoder,<sp/>indent=2))</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.close()</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1ab7778a4e37f37386e766f81bbc6205ba" kindref="member">load_report</ref>(self,<sp/>report_filename):</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report_file<sp/>=<sp/>os.path.abspath(report_filename)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(report_file,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>report:</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>json.load(report)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a58af7cd8ca1228231ac00ca0e512ec2f" kindref="member">import_json</ref><ref refid="classvpal_1_1report__lib_1_1JsonSerializableObject_1aa016c5f55c3299e6e7525fb4b31a3377" kindref="member">import_json</ref>import_json(data)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1afe1a627b2588e73449631557a2657ee1" kindref="member">update_config</ref>(self,<sp/>configuration_obj):</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.exp_dir<sp/>=<sp/>configuration_obj.exp_directory</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.config_obj.stations<sp/>=<sp/>configuration_obj.stations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.network_reference_station<sp/>=<sp/>configuration_obj.network_reference_station</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.target_stations<sp/>=<sp/>configuration_obj.target_stations</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.control_file_path<sp/>=<sp/>os.path.abspath(<sp/>configuration_obj.control_file<sp/>)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#force<sp/>all<sp/>fringe<sp/>files<sp/>generated<sp/>to<sp/>save<sp/>the<sp/>control<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#information<sp/>in<sp/>the<sp/>type_222<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.set_commands<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gen_cf_record<sp/>true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.min_snr<sp/>=<sp/>configuration_obj.min_snr</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.max_snr<sp/>=<sp/>configuration_obj.max_snr</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.verbosity<sp/>=<sp/>configuration_obj.verbosity</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.valid_qcodes<sp/>=<sp/>[<sp/>x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(range(configuration_obj.min_qcode,<sp/>10))<sp/>]</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.num_proc<sp/>=<sp/>configuration_obj.num_proc</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.start<sp/>=<sp/>configuration_obj.start_scan_limit</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.stop<sp/>=<sp/>configuration_obj.stop_scan_limit</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.netref_baselines_only<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.only_complete_blc<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.max_num_scans<sp/>=<sp/>configuration_obj.max_number_to_select</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.dtec_nom<sp/>=<sp/>configuration_obj.dtec_nominal_error</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData_1a67c43b9ed02e956b7efe30cff31f1cb1" kindref="member">config_obj</ref>config_obj.dtec_tolerance<sp/>=<sp/>configuration_obj.dtec_tolerance</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1fourphase__lib_1a4f165a515ba6c6bb5ea23ff1fd717083" kindref="member">select_fourphase_scans_by_baseline</ref>(SingleScanBaselineCollection_list,<sp/>exp_directory,<sp/>stations,<sp/>dtec_tolerance=1.0,<sp/>min_snr=10,<sp/>dtec_nom=0.1,<sp/>max_number_to_select=0):</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>given<sp/>a<sp/>list<sp/>of<sp/>SingleScanBaselineCollection&apos;s,<sp/>try<sp/>to<sp/>select<sp/>a<sp/>list<sp/>of<sp/>scans<sp/>which<sp/>will<sp/>provide<sp/>good<sp/>fourphase<sp/>output<sp/>stations<sp/>on<sp/>each<sp/>baseline</highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns<sp/>a<sp/>dictionary<sp/>(indexed<sp/>by<sp/>baseline)<sp/>of<sp/>scans<sp/>collections<sp/>to<sp/>be<sp/>processed&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#we<sp/>want<sp/>to<sp/>go<sp/>through<sp/>the<sp/>given<sp/>list<sp/>of<sp/>scans,<sp/>and<sp/>try<sp/>to<sp/>come<sp/>up<sp/>with<sp/>a<sp/>subset<sp/>of<sp/>scans<sp/>we<sp/>expect<sp/>to<sp/>be<sp/>useful<sp/>for<sp/>each<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#using<sp/>these<sp/>per-baseline<sp/>scan-lists,<sp/>we<sp/>construct<sp/>a<sp/>station-based<sp/>list<sp/>of<sp/>scans,<sp/>and<sp/>then<sp/>we<sp/>eliminate<sp/>duplicates<sp/>to<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#final<sp/>set<sp/>of<sp/>scans<sp/>to<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>blist<sp/>=<sp/>processing.construct_valid_baseline_list(exp_directory,<sp/>stations[0],<sp/>stations[1:])</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_scan_list<sp/>=<sp/>{<sp/>bl:[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blist<sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blist:</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sublist<sp/>=<sp/>[<sp/>ssbc<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ssbc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>SingleScanBaselineCollection_list<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ssbc.get_baselines_present()<sp/>]</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#remove<sp/>all<sp/>of<sp/>the<sp/>scans<sp/>which<sp/>do<sp/>not<sp/>meet<sp/>our<sp/>cut<sp/>criteria<sp/>on<sp/>this<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_sublist<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>scan_collection<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sublist:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blc<sp/>=<sp/>scan_collection.get_collection_for_baseline(bl)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>blc.get_dtec_max_deviation()<sp/>&lt;=<sp/>dtec_tolerance<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>blc.get_min_snr()<sp/>&gt;=<sp/>min_snr:</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_sublist.append(scan_collection)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sublist<sp/>=<sp/>tmp_sublist</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max_number_to_select<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#If<sp/>the<sp/>user<sp/>has<sp/>limited<sp/>the<sp/>number<sp/>of<sp/>scans<sp/>to<sp/>be<sp/>used<sp/>by<sp/>fourphase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#then<sp/>we<sp/>need<sp/>to<sp/>go<sp/>through<sp/>and<sp/>select<sp/>the<sp/>best<sp/>ones<sp/>we<sp/>can<sp/>find.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#To<sp/>do<sp/>this<sp/>we<sp/>construct<sp/>the<sp/>pareto<sp/>front<sp/>for<sp/>the<sp/>current<sp/>set<sp/>of<sp/>scans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#then<sp/>remove<sp/>the<sp/>&apos;optimal&apos;<sp/>scan<sp/>on<sp/>the<sp/>front<sp/>and<sp/>put<sp/>it<sp/>into<sp/>the<sp/>list<sp/>of<sp/>scans<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#want<sp/>to<sp/>process.<sp/>These<sp/>then<sp/>repeats<sp/>iteratively<sp/>until<sp/>we<sp/>have<sp/>enough<sp/>scans.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(baseline_scan_list[bl])<sp/>&lt;<sp/>max_number_to_select<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(sublist)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#create<sp/>list<sp/>of<sp/>baseline-collections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blc_list<sp/>=<sp/>[<sp/>scan.get_collection_for_baseline(bl)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>scan<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sublist]</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#create<sp/>look-up<sp/>table<sp/>from<sp/>baseline-collection<sp/>to<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blc_to_scan_dict<sp/>=<sp/>{<sp/>scan.get_collection_for_baseline(bl):scan<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>scan<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sublist<sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#find<sp/>the<sp/>pareto<sp/>front<sp/>for<sp/>this<sp/>list<sp/>of<sp/>scans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_pareto<sp/>=<sp/>utility.compute_2d_pareto_front(blc_list,<sp/></highlight><highlight class="stringliteral">&quot;min_snr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dtec_mdev&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_scan<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_score<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>blc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fourphase_pareto:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>abs(<sp/>(blc.get_min_snr()/(blc.get_dtec_max_deviation()<sp/>+<sp/>dtec_nom))<sp/>)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>score<sp/>&gt;<sp/>best_score:</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_score<sp/>=<sp/>score</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_scan<sp/>=<sp/>blc_to_scan_dict[blc]</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>fourphase_scan<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_scan_list[bl].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(fourphase_scan)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sublist.remove(fourphase_scan)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#just<sp/>use<sp/>all<sp/>the<sp/>scans<sp/>which<sp/>pass<sp/>the<sp/>dtec/snr<sp/>cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_scan_list[bl]<sp/>=<sp/>sublist</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseline_scan_list</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1fourphase__lib_1a7c525675d1cc855fd2e884dda2459995" kindref="member">generate_station_phase_delay_corrections</ref>(config_obj,<sp/>report_data_obj=None):</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;run<sp/>the<sp/>fourphase<sp/>algorithm<sp/>to<sp/>generate<sp/>Y-X<sp/>delay/phase<sp/>corrections<sp/>for<sp/>each<sp/>VGOS<sp/>station&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#basic<sp/>process<sp/>is<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#(1)<sp/>fourfit<sp/>the<sp/>experiment<sp/>with<sp/>the<sp/>initial<sp/>control<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#(2)<sp/>collect<sp/>the<sp/>baseline-pol-products<sp/>collections<sp/>into<sp/>scan<sp/>collections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#(3)<sp/>use<sp/>empirical<sp/>search<sp/>to<sp/>locate<sp/>good<sp/>fourphase<sp/>scans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#(4)<sp/>extract<sp/>delay/phase<sp/>offsets<sp/>from<sp/>each<sp/>scan<sp/>for<sp/>each<sp/>station</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#(5)<sp/>return<sp/>station<sp/>delay/phase<sp/>result<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>exp_dir<sp/>=<sp/>config_obj.exp_directory</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>target_stations<sp/>=<sp/>config_obj.target_stations</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>all_stations<sp/>=<sp/>config_obj.network_reference_station<sp/>+<sp/>target_stations</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>control_file_path<sp/>=<sp/>os.path.abspath(<sp/>config_obj.control_file<sp/>)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#force<sp/>all<sp/>fringe<sp/>files<sp/>generated<sp/>to<sp/>save<sp/>the<sp/>control<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#information<sp/>in<sp/>the<sp/>type_222<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>set_commands<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gen_cf_record<sp/>true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>min_snr<sp/>=<sp/>config_obj.min_snr</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>max_snr<sp/>=<sp/>config_obj.max_snr</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>verbosity<sp/>=<sp/>config_obj.verbosity</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>valid_qcodes<sp/>=<sp/>[<sp/>x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(range(config_obj.min_qcode,<sp/>10))<sp/>]</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>num_proc<sp/>=<sp/>config_obj.num_proc</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>config_obj.start_scan_limit</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>config_obj.stop_scan_limit</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>netref_baselines_only<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>only_complete_blc<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>max_num_scans<sp/>=<sp/>config_obj.max_number_to_select</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>dtec_nom<sp/>=<sp/>config_obj.dtec_nominal_error</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>dtec_tolerance<sp/>=<sp/>config_obj.dtec_tolerance</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>pol_products<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;VGOS&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=[</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="comment">#default,<sp/>vgos<sp/>pol<sp/>products</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_complete_blc<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;MIXED_MODE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=[</highlight><highlight class="stringliteral">&apos;RX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;RY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XR&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YR&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="comment">#all<sp/>possible<sp/>mixed-mode<sp/>pol<sp/>products</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_complete_blc<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>fourphase_logger.info(</highlight><highlight class="stringliteral">&quot;generating<sp/>Y-X<sp/>delay/phase<sp/>corrections<sp/>from<sp/>data<sp/>in<sp/>exp_dir:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>exp_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>stations:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>all_stations)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>fourphase_logger.info(</highlight><highlight class="stringliteral">&quot;initial<sp/>control<sp/>file<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>control_file_path)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>log_fourfit_processes=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.verbosity<sp/>&gt;=3:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_fourfit_processes<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#fourfit<sp/>the<sp/>exp_directory<sp/>with<sp/>the<sp/>initial<sp/>control<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>blc_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;VGOS&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blc_list<sp/>=<sp/>processing.load_batch_cut_and_sort(<sp/>\</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp_dir,<sp/>config_obj.network_reference_station,<sp/>target_stations,<sp/>control_file_path,<sp/>set_commands,<sp/>min_snr,<sp/>max_snr,<sp/>\</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_qcodes,<sp/>netref_baselines_only,<sp/>num_proc,<sp/>start,<sp/>stop,<sp/>only_complete_blc,<sp/>pol_products,<sp/>frequency_group=config_obj.frequency_group,<sp/>\</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_progress_ticker=config_obj.use_progress_ticker,<sp/>log_fourfit_processes=log_fourfit_processes<sp/>\</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;MIXED_MODE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blc_list<sp/>=<sp/>processing.load_batch_cut_and_sort_mixedmode(<sp/>\</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp_dir,<sp/>config_obj.network_reference_station,<sp/>target_stations,<sp/>control_file_path,<sp/>set_commands,<sp/>min_snr,<sp/>max_snr,<sp/>\</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_qcodes,<sp/>netref_baselines_only,<sp/>num_proc,<sp/>start,<sp/>stop,<sp/>only_complete_blc,<sp/>pol_products,<sp/>frequency_group=config_obj.frequency_group,<sp/>\</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_progress_ticker=config_obj.use_progress_ticker,<sp/>log_fourfit_processes=log_fourfit_processes<sp/>\</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#join<sp/>the<sp/>baseline-pol-prod<sp/>collections<sp/>into<sp/>scan<sp/>collections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_blc<sp/>=<sp/>processing.group_baseline_collections_by_scan(blc_list)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#select<sp/>scans<sp/>to<sp/>run<sp/>fourphase<sp/>on<sp/>for<sp/>each<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_indexed_scan_lists<sp/>=<sp/><ref refid="namespacevpal_1_1fourphase__lib_1a4f165a515ba6c6bb5ea23ff1fd717083" kindref="member">select_fourphase_scans_by_baseline</ref>(scan_blc,<sp/>exp_dir,<sp/>all_stations,<sp/>dtec_tolerance,<sp/>min_snr,<sp/>dtec_nom,<sp/>max_num_scans)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#since<sp/>we<sp/>are<sp/>going<sp/>to<sp/>fourphase<sp/>each<sp/>scan<sp/>and<sp/>then<sp/>average<sp/>the<sp/>results,<sp/>we<sp/>can<sp/>just<sp/>collect<sp/>the<sp/>set<sp/>of<sp/>unique<sp/>scans/root<sp/>files<sp/>from<sp/>all<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>root_file_set<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl_list<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(baseline_indexed_scan_lists.values()):</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>scan<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bl_list:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_file_set.add(scan.associated_root_file)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>root_file_set<sp/>=<sp/>list(root_file_set)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>we<sp/>have<sp/>a<sp/>list<sp/>of<sp/>unique<sp/>scans/root-files,<sp/>for<sp/>each<sp/>one<sp/>we<sp/>will<sp/>now<sp/>run<sp/>fourphase,<sp/>and<sp/>collect<sp/>the<sp/>results<sp/>for<sp/>each<sp/>stations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>station_delay_phase_results<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;VGOS&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_delay_phase_results<sp/>=<sp/>{<sp/>st:<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets" kindref="compound">SingleStationPhaseDelayOffsets</ref>(st)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all_stations<sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;MIXED_MODE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_delay_phase_results<sp/>=<sp/>{<sp/>st:<ref refid="classvpal_1_1fourphase__lib_1_1SingleStationPhaseDelayOffsets" kindref="compound">SingleStationPhaseDelayOffsets</ref>(st)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_stations<sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>we<sp/>are<sp/>monitoring<sp/>progress,<sp/>tick<sp/>off<sp/>the<sp/>scans<sp/>we<sp/>have<sp/>fourphase&apos;d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.use_progress_ticker:</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbar<sp/>=<sp/><ref refid="namespacevpal_1_1fourphase__lib_1ab2a3fecfe20ce0b0c6d799610f27b7e1" kindref="member">Bar</ref>(</highlight><highlight class="stringliteral">&apos;Processing:<sp/>&apos;</highlight><highlight class="normal">,<sp/>max=len(root_file_set))</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>root<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_set:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;VGOS&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor<sp/>=<sp/><ref refid="classvpal_1_1fourphase__lib_1_1VGOSFourphaseSingleScanProcessor" kindref="compound">VGOSFourphaseSingleScanProcessor</ref>(config_obj,<sp/>os.path.abspath(root),<sp/>control_file_path)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.use_progress_ticker<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.num_proc<sp/>=<sp/>num_proc</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.set_stations(all_stations)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.determine_ionosphere()</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.calculate_delay_phase_offsets()</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_delays<sp/>=<sp/>scan_processor.get_raw_station_delay_offsets()</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_phases<sp/>=<sp/>scan_processor.get_raw_station_phase_offsets()</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>scan_processor.error_condition<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all_stations:</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>station_delays<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>station_phases:</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_delay_phase_results[st].add_phase_delay_offsets(scan_processor.scan_name,<sp/>station_delays[st],<sp/>station_phases[st])</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;MIXED_MODE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor<sp/>=<sp/><ref refid="classvpal_1_1fourphase__lib_1_1MixedModeFourphaseSingleScanProcessor" kindref="compound">MixedModeFourphaseSingleScanProcessor</ref>(<sp/>config_obj,<sp/>os.path.abspath(root),<sp/>control_file_path,<sp/>frequency_group=config_obj.frequency_group)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.use_progress_ticker<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.num_proc<sp/>=<sp/>num_proc</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.min_snr<sp/>=<sp/>min_snr</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.frequency_group<sp/>=<sp/>config_obj.frequency_group</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.set_stations(legacy_stations=config_obj.network_reference_station,<sp/>target_stations=config_obj.target_stations)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_processor.calculate_delay_phase_offsets()</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_delays<sp/>=<sp/>scan_processor.get_raw_station_delay_offsets()</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_phases<sp/>=<sp/>scan_processor.get_raw_station_phase_offsets()</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>scan_processor.error_condition<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_stations:</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>station_delays<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>station_phases:</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_delay_phase_results[st].add_phase_delay_offsets(scan_processor.scan_name,<sp/>station_delays[st],<sp/>station_phases[st])</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.use_progress_ticker:</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbar.next()</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.use_progress_ticker:</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbar.finish()</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#cut<sp/>outliers<sp/>if<sp/>the<sp/>cut<sp/>factor<sp/>is<sp/>non-zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.sigma_cut_factor<sp/>!=<sp/>0.0:</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st,<sp/>result<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(station_delay_phase_results.items()):</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.apply_sigma_cut(config_obj.sigma_cut_factor)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#look<sp/>at<sp/>the<sp/>amount<sp/>of<sp/>data<sp/>we<sp/>have<sp/>for<sp/>each<sp/>station</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>stdph<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(station_delay_phase_results.values()):</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourphase_logger.info(</highlight><highlight class="stringliteral">&quot;station:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>stdph.station_id<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>had<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(stdph.get_n_total_entries())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>total<sp/>data<sp/>points<sp/>for<sp/>determining<sp/>delay/phase<sp/>offsets<sp/>of<sp/>which<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(stdph.get_n_cut_entries())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>were<sp/>cut&quot;</highlight><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>station_delay_phase_results</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1fourphase__lib_1a5e1755faa31a038afc0d1d738643ddfb" kindref="member">construct_control_file_lines</ref>(config_obj,<sp/>station_delay_phase_results):</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;given<sp/>the<sp/>a-priori<sp/>and<sp/>generated<sp/>phase/delay<sp/>offsets,<sp/>sum<sp/>and<sp/>round<sp/>their<sp/>values</highlight></codeline>
<codeline lineno="855"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>obtain<sp/>the<sp/>corrections<sp/>necessary<sp/>for<sp/>the<sp/>control<sp/>file<sp/>output,<sp/>then<sp/>output<sp/>formatted<sp/>lines<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>cf_lines<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>all_stations<sp/>=<sp/>sorted(<sp/>list(set(station_delay_phase_results.keys())<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>micro_to_nano<sp/>=<sp/>1000.0</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>st<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all_stations:</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>station_delay_phase_results[st]</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>result.get_n_total_entries()<sp/>&gt;=<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>result.get_n_used_entries()<sp/>&gt;=<sp/>1:</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_mean<sp/>=<sp/>result.get_delay_offset_mean()*micro_to_nano</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_err<sp/>=<sp/>result.get_delay_offset_error()*micro_to_nano</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_mean<sp/>=<sp/>result.get_phase_offset_mean()</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_err<sp/>=<sp/>result.get_phase_offset_error()</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config_obj.mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MIXED_MODE&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\nif<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>st<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>and<sp/>f_group<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>config_obj.frequency_group<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\nif<sp/>station<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>st<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>pc_delay_x<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>0.0&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>pc_delay_y<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(round(delay_mean,3))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>*<sp/>(ns)<sp/>estimated<sp/>error<sp/>is<sp/>+/-<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(round(delay_err,3))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>pc_phase_offset_x<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>0.0<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>pc_phase_offset_y<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(round(phase_mean,1))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>*<sp/>(deg)<sp/>estimated<sp/>error<sp/>is<sp/>+/-<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(round(phase_err,1))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf_lines<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;\n*<sp/>Warning:<sp/>this<sp/>control<sp/>file<sp/>was<sp/>generated<sp/>expecting<sp/>input<sp/>for<sp/>station:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>st<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>but<sp/>no<sp/>good<sp/>data<sp/>for<sp/>pc_delay_x/y<sp/>or<sp/>pc_phase_offset_x/y<sp/>generation<sp/>was<sp/>found.<sp/>\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf_lines</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1fourphase__lib_1a70debf6c37b528812b9226537aa5800d" kindref="member">generate_fourphase_control_file</ref>(config_obj,<sp/>output_control_filename):</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;write<sp/>the<sp/>new<sp/>phase/delay<sp/>offset<sp/>lines<sp/>to<sp/>the<sp/>final<sp/>control<sp/>file&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#report<sp/>data<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>report_data<sp/>=<sp/><ref refid="classvpal_1_1fourphase__lib_1_1ExperimentReportData" kindref="compound">ExperimentReportData</ref>()</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>report_data.update_config(config_obj)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#generate<sp/>the<sp/>station<sp/>phase/delay<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>station_delay_phase_results<sp/>=<sp/><ref refid="namespacevpal_1_1fourphase__lib_1a7c525675d1cc855fd2e884dda2459995" kindref="member">generate_station_phase_delay_corrections</ref>(config_obj,<sp/>report_data)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>report_data.generated_station_offsets<sp/>=<sp/>station_delay_phase_results</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#generate<sp/>the<sp/>control<sp/>file<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>cf_lines<sp/>=<sp/><ref refid="namespacevpal_1_1fourphase__lib_1a5e1755faa31a038afc0d1d738643ddfb" kindref="member">construct_control_file_lines</ref>(config_obj,<sp/>station_delay_phase_results)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#create<sp/>the<sp/>new<sp/>control<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>remove_string_list<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;pc_delay_&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>remove_string_list.append(</highlight><highlight class="stringliteral">&apos;pc_phase_offset_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>ffcontrol.remove_lines_and_append_control_file(os.path.abspath(config_obj.control_file),<sp/>os.path.abspath(output_control_filename),<sp/>cf_lines,<sp/>remove_string_list)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#generate<sp/>a<sp/>report<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>date_string<sp/>=<sp/>datetime.datetime.now().strftime(</highlight><highlight class="stringliteral">&apos;%b-%d-%I%M%p-%G&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>report_data.create_report(</highlight><highlight class="stringliteral">&quot;./fourphase-report-&quot;</highlight><highlight class="normal"><sp/>+<sp/>date_string<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.json&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/fourphase_lib.py"/>
  </compounddef>
</doxygen>
