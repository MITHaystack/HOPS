<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ffsearch_8h" kind="file" language="C++">
    <compoundname>ffsearch.h</compoundname>
    <includes refid="vex_8h" local="yes">vex.h</includes>
    <includes refid="mk4__util_8h" local="yes">mk4_util.h</includes>
    <includes refid="refringe_8h" local="yes">refringe.h</includes>
    <includedby refid="fourfit3_8c" local="yes">fourfit3.c</includedby>
    <includedby refid="fringe__search_8c" local="yes">fringe_search.c</includedby>
    <includedby refid="fourfit__libs_2ffsearch_2src_2search_8c" local="yes">search.c</includedby>
    <incdepgraph>
      <node id="10">
        <label>lvex.h</label>
        <link refid="lvex_8h"/>
      </node>
      <node id="12">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>mk4_typedefs.h</label>
        <link refid="mk4__typedefs_8h"/>
      </node>
      <node id="13">
        <label>sys/times.h</label>
      </node>
      <node id="20">
        <label>general.h</label>
        <link refid="general_8h"/>
      </node>
      <node id="21">
        <label>refringe.h</label>
        <link refid="refringe_8h"/>
      </node>
      <node id="11">
        <label>mk4_util.h</label>
        <link refid="mk4__util_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ivex.h</label>
        <link refid="ivex_8h"/>
      </node>
      <node id="14">
        <label>msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ffsearch.h</label>
        <link refid="ffsearch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cvex.h</label>
        <link refid="cvex_8h"/>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>mk4_sizes.h</label>
        <link refid="mk4__sizes_8h"/>
      </node>
      <node id="18">
        <label>fileset.h</label>
        <link refid="fileset_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ovex.h</label>
        <link refid="ovex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vex.h</label>
        <link refid="vex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>evex.h</label>
        <link refid="evex_8h"/>
      </node>
      <node id="17">
        <label>account.h</label>
        <link refid="account_8h"/>
      </node>
      <node id="9">
        <label>svex.h</label>
        <link refid="svex_8h"/>
      </node>
      <node id="16">
        <label>stdio.h</label>
      </node>
      <node id="19">
        <label>fstruct.h</label>
        <link refid="fstruct_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>search.c</label>
        <link refid="fourfit__libs_2ffsearch_2src_2search_8c"/>
      </node>
      <node id="3">
        <label>fringe_search.c</label>
        <link refid="fringe__search_8c"/>
      </node>
      <node id="1">
        <label>ffsearch.h</label>
        <link refid="ffsearch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fourfit3.c</label>
        <link refid="fourfit3_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ffsearch_8h_1afba2a8f64c5ec9ea34a356452fddbbd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apply_filter</definition>
        <argsstring>(struct type_pass *)</argsstring>
        <name>apply_filter</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="18" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/apply_filter.c" bodystart="24" bodyend="233" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="18" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1ab33a758bdd3ca5d1e738acd2e2303202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* check_rflist</definition>
        <argsstring>(char *baseline, int files_index, bsgstruct *base_sgrp)</argsstring>
        <name>check_rflist</name>
        <param>
          <type>char *</type>
          <declname>baseline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>files_index</declname>
        </param>
        <param>
          <type><ref refid="structbsgstruct" kindref="compound">bsgstruct</ref> *</type>
          <declname>base_sgrp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="23" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/check_rflist.c" bodystart="29" bodyend="58" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="23" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a0e417a0b60b40bf9f13ded8fc2b7ce8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delay_rate</definition>
        <argsstring>(struct type_pass *, int, hops_complex rate_spectrum[])</argsstring>
        <name>delay_rate</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="hops__complex_8h_1af7a658adea3e69cd3a77d59ba5183f19" kindref="member">hops_complex</ref></type>
          <declname>rate_spectrum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="16" column="13" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="16" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1ace0dcfa8f38c1ceaf1bce0a14c78fe84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freq_spacing</definition>
        <argsstring>(struct type_pass *)</argsstring>
        <name>freq_spacing</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="14" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/freq_spacing.c" bodystart="33" bodyend="160" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="14" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a6180f5ba8628376745a1d84f9e998fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fringe_search</definition>
        <argsstring>(struct vex *root, struct type_pass *pass)</argsstring>
        <name>fringe_search</name>
        <param>
          <type>struct <ref refid="structvex" kindref="compound">vex</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="24" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/fringe_search.c" bodystart="26" bodyend="144" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="24" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a1a8233988ed2536a5650cb689a086cba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ion_search</definition>
        <argsstring>(struct type_pass *)</argsstring>
        <name>ion_search</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="19" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/ion_search.c" bodystart="21" bodyend="233" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="19" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a757fa21bbd41ff184444429e2888575d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ion_search_smooth</definition>
        <argsstring>(struct type_pass *)</argsstring>
        <name>ion_search_smooth</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="20" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/ion_search.c" bodystart="242" bodyend="436" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="20" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1ad9284e9b9b6ef2058a4744391953d740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void norm_fx</definition>
        <argsstring>(struct type_pass *, struct type_param *, struct type_status *, int, int)</argsstring>
        <name>norm_fx</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__param" kindref="compound">type_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__status" kindref="compound">type_status</ref> *</type>
          <declname>status</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="12" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/norm_fx.c" bodystart="45" bodyend="564" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="12" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a5acd18af346b489d066ac067c7be25a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void norm_xf</definition>
        <argsstring>(struct type_pass *, struct type_param *, struct type_status *, int, int)</argsstring>
        <name>norm_xf</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__param" kindref="compound">type_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__status" kindref="compound">type_status</ref> *</type>
          <declname>status</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="13" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/norm_xf.c" bodystart="76" bodyend="612" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="13" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1ac8dba04edbb3b6308e3d0f94c6f7204d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int organize_data</definition>
        <argsstring>(struct mk4_corel *cdata, struct scan_struct *ovex, struct ivex_struct *ivex, struct mk4_sdata *sdata, struct freq_corel *corel, struct type_param *param, struct type_status *status, struct c_block *cb_head)</argsstring>
        <name>organize_data</name>
        <param>
          <type>struct <ref refid="structmk4__corel" kindref="compound">mk4_corel</ref> *</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>struct <ref refid="structscan__struct" kindref="compound">scan_struct</ref> *</type>
          <declname>ovex</declname>
        </param>
        <param>
          <type>struct <ref refid="structivex__struct" kindref="compound">ivex_struct</ref> *</type>
          <declname>ivex</declname>
        </param>
        <param>
          <type>struct <ref refid="structmk4__sdata" kindref="compound">mk4_sdata</ref> *</type>
          <declname>sdata</declname>
        </param>
        <param>
          <type>struct <ref refid="structfreq__corel" kindref="compound">freq_corel</ref> *</type>
          <declname>corel</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__param" kindref="compound">type_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__status" kindref="compound">type_status</ref> *</type>
          <declname>status</declname>
        </param>
        <param>
          <type>struct <ref refid="structc__block" kindref="compound">c_block</ref> *</type>
          <declname>cb_head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="25" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/organize_data.c" bodystart="25" bodyend="176" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="25" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1ad831fd0be2a54c9d7893f07b05d0642c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parse_cmdline</definition>
        <argsstring>(int argc, char **argv, fstruct **files, bsgstruct **base_sgrp, struct type_param *param)</argsstring>
        <name>parse_cmdline</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="structfstruct" kindref="compound">fstruct</ref> **</type>
          <declname>files</declname>
        </param>
        <param>
          <type><ref refid="structbsgstruct" kindref="compound">bsgstruct</ref> **</type>
          <declname>base_sgrp</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__param" kindref="compound">type_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="21" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/parse_cmdline.c" bodystart="44" bodyend="265" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="21" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a0e74761bc051f9dcafa447e15a5b2d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pcalibrate</definition>
        <argsstring>(struct type_pass *, int)</argsstring>
        <name>pcalibrate</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="9" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/pcalibrate.c" bodystart="27" bodyend="351" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="9" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a601e525e0ba1dd6fe0e2115fac202cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int precorrect</definition>
        <argsstring>(struct scan_struct *, struct type_pass *)</argsstring>
        <name>precorrect</name>
        <param>
          <type>struct <ref refid="structscan__struct" kindref="compound">scan_struct</ref> *</type>
          <declname>ovex</declname>
        </param>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="22" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/precorrect.c" bodystart="27" bodyend="346" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="22" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1ac9311348ec893c33a1d661a20f5a15f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotate_pcal</definition>
        <argsstring>(struct type_pass *pass)</argsstring>
        <name>rotate_pcal</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="10" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/rotate_pcal.c" bodystart="22" bodyend="125" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="10" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1ae2757197ab253fbfd6cfd6dd575fcf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_delays</definition>
        <argsstring>(struct type_pass *pass)</argsstring>
        <name>sampler_delays</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="11" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/sampler_delays.c" bodystart="26" bodyend="92" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="11" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1a3e585a18f0597526054cd1dcaa8520a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void search_windows</definition>
        <argsstring>(struct type_pass *)</argsstring>
        <name>search_windows</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="15" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/src/search_windows.c" bodystart="18" bodyend="140" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="15" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ffsearch_8h_1aef3dabf3648dd41d559a35f74b313247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update</definition>
        <argsstring>(struct type_pass *, int, double, int, int, int)</argsstring>
        <name>update</name>
        <param>
          <type>struct <ref refid="structtype__pass" kindref="compound">type_pass</ref> *</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mbd_cell</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>drate_cell</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" line="17" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffcore/src/update.c" bodystart="13" bodyend="68" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h" declline="17" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>FFSEARCH_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFSEARCH_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vex_8h" kindref="compound">vex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mk4__util_8h" kindref="compound">mk4_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="refringe_8h" kindref="compound">refringe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a0e74761bc051f9dcafa447e15a5b2d29" kindref="member">pcalibrate</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1ac9311348ec893c33a1d661a20f5a15f9" kindref="member">rotate_pcal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref><sp/>*pass);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1ae2757197ab253fbfd6cfd6dd575fcf3f" kindref="member">sampler_delays</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref><sp/>*pass);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1ad9284e9b9b6ef2058a4744391953d740" kindref="member">norm_fx</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__param" kindref="compound">type_param</ref>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__status" kindref="compound">type_status</ref>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a5acd18af346b489d066ac067c7be25a0" kindref="member">norm_xf</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__param" kindref="compound">type_param</ref>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__status" kindref="compound">type_status</ref>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1ace0dcfa8f38c1ceaf1bce0a14c78fe84" kindref="member">freq_spacing</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a3e585a18f0597526054cd1dcaa8520a8" kindref="member">search_windows</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*);</highlight></codeline>
<codeline lineno="16" refid="ffsearch_8h_1a0e417a0b60b40bf9f13ded8fc2b7ce8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a0e417a0b60b40bf9f13ded8fc2b7ce8a" kindref="member">delay_rate</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="hops__complex_8h_1af7a658adea3e69cd3a77d59ba5183f19" kindref="member">hops_complex</ref><sp/>rate_spectrum[]);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1aef3dabf3648dd41d559a35f74b313247" kindref="member">update</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1afba2a8f64c5ec9ea34a356452fddbbd5" kindref="member">apply_filter</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a1a8233988ed2536a5650cb689a086cba" kindref="member">ion_search</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a757fa21bbd41ff184444429e2888575d" kindref="member">ion_search_smooth</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1ad831fd0be2a54c9d7893f07b05d0642c" kindref="member">parse_cmdline</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<ref refid="structfstruct" kindref="compound">fstruct</ref><sp/>**files,<sp/><ref refid="structbsgstruct" kindref="compound">bsgstruct</ref><sp/>**base_sgrp,<sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__param" kindref="compound">type_param</ref><sp/>*<ref refid="fourfit3_8c_1aa665147429eaf1e446ee01b47099af4e" kindref="member">param</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a601e525e0ba1dd6fe0e2115fac202cc6" kindref="member">precorrect</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structscan__struct" kindref="compound">scan_struct</ref>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="ffsearch_8h_1ab33a758bdd3ca5d1e738acd2e2303202" kindref="member">check_rflist</ref><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="fourfit3_8c_1ac49ccefb4c1a75c25992328edc954f98" kindref="member">baseline</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>files_index,<sp/><ref refid="structbsgstruct" kindref="compound">bsgstruct</ref>*<sp/>base_sgrp);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1a6180f5ba8628376745a1d84f9e998fdb" kindref="member">fringe_search</ref><sp/>(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvex" kindref="compound">vex</ref>*<sp/>root,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__pass" kindref="compound">type_pass</ref>*<sp/>pass);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffsearch_8h_1ac8dba04edbb3b6308e3d0f94c6f7204d" kindref="member">organize_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmk4__corel" kindref="compound">mk4_corel</ref><sp/>*<ref refid="fourfit3_8c_1ac338fd2bd47bb64e711c167a64c196a1" kindref="member">cdata</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structscan__struct" kindref="compound">scan_struct</ref><sp/>*ovex,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structivex__struct" kindref="compound">ivex_struct</ref><sp/>*ivex,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmk4__sdata" kindref="compound">mk4_sdata</ref><sp/>*<ref refid="fourfit3_8c_1a67a98e2a5d464ae68b26343d8eebfec2" kindref="member">sdata</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfreq__corel" kindref="compound">freq_corel</ref><sp/>*corel,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__param" kindref="compound">type_param</ref><sp/>*<ref refid="fourfit3_8c_1aa665147429eaf1e446ee01b47099af4e" kindref="member">param</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__status" kindref="compound">type_status</ref><sp/>*<ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structc__block" kindref="compound">c_block</ref><sp/>*<ref refid="fourfit3_8c_1a330b69253c7f98c907b4b3b767f8e0a2" kindref="member">cb_head</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extern<sp/>int<sp/>output<sp/>(struct<sp/>vex*,<sp/>struct<sp/>type_pass*);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/ffsearch.h"/>
  </compounddef>
</doxygen>
