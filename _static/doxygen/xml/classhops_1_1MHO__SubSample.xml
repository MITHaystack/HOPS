<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__SubSample" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_SubSample</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; XArrayType &gt;</basecompoundref>
    <includes refid="MHO__SubSample_8hh" local="no">MHO_SubSample.hh</includes>
    <innerclass refid="classhops_1_1MHO__SubSample_1_1SubSampleAxis" prot="private">hops::MHO_SubSample::SubSampleAxis</innerclass>
    <templateparamlist>
      <param>
        <type>class XArrayType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__SubSample_1a742a7ca3e24d948c1b16fbaec8c9bc7e" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_SubSample&lt; XArrayType &gt;::fDimIndex</definition>
        <argsstring></argsstring>
        <name>fDimIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="304" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__SubSample_1a49d6cabb123e93fc81bffdee90e81875" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hops::MHO_SubSample&lt; XArrayType &gt;::fInitialized</definition>
        <argsstring></argsstring>
        <name>fInitialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="303" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__SubSample_1a1efe989ed2cd7e03c6ef880d16470ab1" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_SubSample&lt; XArrayType &gt;::fStride</definition>
        <argsstring></argsstring>
        <name>fStride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="305" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__SubSample_1ae8d4e1fc666ca318ba8335ee3a952237" prot="private" static="no" mutable="no">
        <type>XArrayType</type>
        <definition>XArrayType hops::MHO_SubSample&lt; XArrayType &gt;::fWorkspace</definition>
        <argsstring></argsstring>
        <name>fWorkspace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="306" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="306" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1a5f417e5f9b0d6a951d52f6d23c5023fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_SubSample&lt; XArrayType &gt;::MHO_SubSample</definition>
        <argsstring>()</argsstring>
        <name>MHO_SubSample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="32" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1af219712267e0c2294cf6cfe9dec10c94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_SubSample&lt; XArrayType &gt;::~MHO_SubSample</definition>
        <argsstring>()</argsstring>
        <name>~MHO_SubSample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="39" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1aa966010d0abf41d0d62843873ec477d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_SubSample&lt; XArrayType &gt;::SetDimensionAndStride</definition>
        <argsstring>(std::size_t dimension_index, std::size_t stride)</argsstring>
        <name>SetDimensionAndStride</name>
        <param>
          <type>std::size_t</type>
          <declname>dimension_index</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
<para>set the axis to sub sample, and the stride at which samples are selected </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dimension_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the dimension to set (must be less than array rank). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride at which samples are selected along the specified dimension. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="47" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="47" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1a56dbd48ab15b0b6e83c574385e95a4e5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_SubSample&lt; XArrayType &gt;::ExecuteInPlace</definition>
        <argsstring>(XArrayType *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type>XArrayType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Executes operation in-place and updates input array from workspace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array to be modified in-place. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status of the execution operation. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="79" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1a9ad20e7b828c02d3380bb3555c58de3f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_SubSample&lt; XArrayType &gt;::ExecuteOutOfPlace</definition>
        <argsstring>(const XArrayType *in, XArrayType *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const XArrayType *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>XArrayType *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Function ExecuteOutOfPlace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XArrayType*) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(XArrayType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (bool) </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="125" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="125" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1a78678095cb7ba42ff8a39263a313aba4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_SubSample&lt; XArrayType &gt;::InitializeInPlace</definition>
        <argsstring>(XArrayType *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type>XArrayType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes in-place execution by calling InitializeOutOfPlace with workspace and returning its result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array of type XArrayType* </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success/failure of initialization </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="70" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1a2047908f076c8bcaf2c0b91a4c7d49bf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_SubSample&lt; XArrayType &gt;::InitializeOutOfPlace</definition>
        <argsstring>(const XArrayType *in, XArrayType *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const XArrayType *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>XArrayType *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes output array out-of-place using input array in. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array of type XArrayType </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output array of type XArrayType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="100" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="100" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1a4ce0a43119aa0e086f0dbee6b6132e8c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_SubSample&lt; XArrayType &gt;::ConditionallyResizeOutput</definition>
        <argsstring>(const std::array&lt; std::size_t, XArrayType::rank::value &gt; &amp;dims, XArrayType *out)</argsstring>
        <name>ConditionallyResizeOutput</name>
        <param>
          <type>const std::array&lt; std::size_t, XArrayType::rank::value &gt; &amp;</type>
          <declname>dims</declname>
        </param>
        <param>
          <type>XArrayType *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Checks and conditionally resizes output array dimensions if they differ from input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dims</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dimension array to compare with current output dimensions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(XArrayType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="214" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="214" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1ae9697244f6fab229ad288fd1267b0fe5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; std::size_t, XArrayType::rank::value &gt;</type>
        <definition>std::array&lt; std::size_t, XArrayType::rank::value &gt; hops::MHO_SubSample&lt; XArrayType &gt;::DetermineOutputDimensions</definition>
        <argsstring>(const XArrayType *in)</argsstring>
        <name>DetermineOutputDimensions</name>
        <param>
          <type>const XArrayType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Calculates output dimensions by dividing the specified dimension index by stride and returning the modified dimension array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input XArrayType object from which to calculate output dimensions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modified dimension array with the specified dimension divided by stride. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="201" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1a9a9005ef64de7475f65e0f5b1654a770" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XArrayType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; !std::is_base_of&lt; <ref refid="classhops_1_1MHO__TableContainerBase" kindref="compound">MHO_TableContainerBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; !std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type hops::MHO_SubSample&lt; XArrayType &gt;::IfTableSubSampleAxis</definition>
        <argsstring>(const XArrayType *, XArrayType *)</argsstring>
        <name>IfTableSubSampleAxis</name>
        <param>
          <type>const XArrayType *</type>
        </param>
        <param>
          <type>XArrayType *</type>
        </param>
        <briefdescription>
<para>Sub-samples a specified axis of an input XArrayType and stores the result in output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>!in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input XArrayType to be sub-sampled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output XArrayType after sub-sampling </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="241" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__SubSample_1ad598d1c327f41b644679101ece50706d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XArrayType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_base_of&lt; <ref refid="classhops_1_1MHO__TableContainerBase" kindref="compound">MHO_TableContainerBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type hops::MHO_SubSample&lt; XArrayType &gt;::IfTableSubSampleAxis</definition>
        <argsstring>(const XArrayType *in, XArrayType *out)</argsstring>
        <name>IfTableSubSampleAxis</name>
        <param>
          <type>const XArrayType *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>XArrayType *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Sub-samples a specified axis of an input XArrayType and stores the result in output uses SFINAE to generate specialization for <ref refid="classhops_1_1MHO__TableContainer" kindref="compound">MHO_TableContainer</ref> types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input XArrayType to be sub-sampled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output XArrayType where results are stored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="253" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="253" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__SubSample" kindref="compound">MHO_SubSample</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Sub-samples an array at the specified stride (e.g. select every-other point) Can only be applied to a single-axis at a time.</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Tue Aug 24 15:18:04 2021 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_SubSample&lt; XArrayType &gt;</label>
        <link refid="classhops_1_1MHO__SubSample"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; XArrayType &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_SubSample&lt; XArrayType &gt;</label>
        <link refid="classhops_1_1MHO__SubSample"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; XArrayType &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" line="29" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_SubSample.hh" bodystart="30" bodyend="307"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__SubSample_1a4ce0a43119aa0e086f0dbee6b6132e8c" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>ConditionallyResizeOutput</name></member>
      <member refid="classhops_1_1MHO__SubSample_1ae9697244f6fab229ad288fd1267b0fe5" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>DetermineOutputDimensions</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_SubSample</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a56dbd48ab15b0b6e83c574385e95a4e5" prot="protected" virt="virtual"><scope>hops::MHO_SubSample</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a9ad20e7b828c02d3380bb3555c58de3f" prot="protected" virt="virtual"><scope>hops::MHO_SubSample</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a742a7ca3e24d948c1b16fbaec8c9bc7e" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>fDimIndex</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a49d6cabb123e93fc81bffdee90e81875" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>fInitialized</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a1efe989ed2cd7e03c6ef880d16470ab1" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>fStride</name></member>
      <member refid="classhops_1_1MHO__SubSample_1ae8d4e1fc666ca318ba8335ee3a952237" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>fWorkspace</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a9a9005ef64de7475f65e0f5b1654a770" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>IfTableSubSampleAxis</name></member>
      <member refid="classhops_1_1MHO__SubSample_1ad598d1c327f41b644679101ece50706d" prot="private" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>IfTableSubSampleAxis</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_SubSample</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a78678095cb7ba42ff8a39263a313aba4" prot="protected" virt="virtual"><scope>hops::MHO_SubSample</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a2047908f076c8bcaf2c0b91a4c7d49bf" prot="protected" virt="virtual"><scope>hops::MHO_SubSample</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__SubSample_1a5f417e5f9b0d6a951d52f6d23c5023fa" prot="public" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>MHO_SubSample</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__SubSample_1aa966010d0abf41d0d62843873ec477d1" prot="public" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>SetDimensionAndStride</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_SubSample</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__SubSample_1af219712267e0c2294cf6cfe9dec10c94" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>~MHO_SubSample</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_SubSample</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
