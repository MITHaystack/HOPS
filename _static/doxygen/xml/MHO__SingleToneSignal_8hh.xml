<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="MHO__SingleToneSignal_8hh" kind="file" language="C++">
    <compoundname>MHO_SingleToneSignal.hh</compoundname>
    <includes refid="MHO__SimulatedSignalGenerator_8hh" local="yes">MHO_SimulatedSignalGenerator.hh</includes>
    <includedby refid="TestSignalFFT_8cc" local="yes">TestSignalFFT.cc</includedby>
    <includedby refid="MHO__SingleToneSignal_8cc" local="yes">MHO_SingleToneSignal.cc</includedby>
    <incdepgraph>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>MHO_SingleToneSignal.hh</label>
        <link refid="MHO__SingleToneSignal_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MHO_SimulatedSignalGenerator.hh</label>
        <link refid="MHO__SimulatedSignalGenerator_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>MHO_SingleToneSignal.cc</label>
        <link refid="MHO__SingleToneSignal_8cc"/>
      </node>
      <node id="1">
        <label>MHO_SingleToneSignal.hh</label>
        <link refid="MHO__SingleToneSignal_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TestSignalFFT.cc</label>
        <link refid="TestSignalFFT_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classhops_1_1MHO__SingleToneSignal" prot="public">hops::MHO_SingleToneSignal</innerclass>
    <innernamespace refid="namespacehops">hops</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MHO_SingleToneSignal_HH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MHO_SingleToneSignal_HH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__SimulatedSignalGenerator_8hh" kindref="compound">MHO_SimulatedSignalGenerator.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehops" kindref="compound">hops</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classhops_1_1MHO__SingleToneSignal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhops_1_1MHO__SingleToneSignal" kindref="compound">MHO_SingleToneSignal</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__SimulatedSignalGenerator" kindref="compound">MHO_SimulatedSignalGenerator</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a128eb8ab63d3c1323d3eebda7e50e430" kindref="member">MHO_SingleToneSignal</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a59593d143231c81c3d6a78fc20c91e78" kindref="member">~MHO_SingleToneSignal</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classhops_1_1MHO__SingleToneSignal_1a00506c9c755bddbdc14108bd43100182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a00506c9c755bddbdc14108bd43100182" kindref="member">SetPhaseOffset</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase_offset)<sp/>{<sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1ac696bbca1aa2aeea927d35cd1a784862" kindref="member">fPhaseOffset</ref><sp/>=<sp/>phase_offset;<sp/>}<sp/></highlight><highlight class="comment">//radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classhops_1_1MHO__SingleToneSignal_1a118a3a3734ebc4e3fe18c410958889f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a118a3a3734ebc4e3fe18c410958889f3" kindref="member">SetToneFrequency</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tone_freq)<sp/>{<sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a84b525edb2ca8a8365a2bfc887b7db49" kindref="member">fToneFrequency</ref><sp/>=<sp/>tone_freq;<sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//implementation<sp/>specific</highlight></codeline>
<codeline lineno="42" refid="classhops_1_1MHO__SingleToneSignal_1a11ba1cd4149e2d3c9cf54263c461e5dd" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a11ba1cd4149e2d3c9cf54263c461e5dd" kindref="member">Initialize</ref>(){};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a4fca3c8f99e4b4f008a0553e931ab334" kindref="member">GenerateSample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>sample)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classhops_1_1MHO__SingleToneSignal_1ac696bbca1aa2aeea927d35cd1a784862" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1ac696bbca1aa2aeea927d35cd1a784862" kindref="member">fPhaseOffset</ref>;</highlight></codeline>
<codeline lineno="56" refid="classhops_1_1MHO__SingleToneSignal_1a84b525edb2ca8a8365a2bfc887b7db49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__SingleToneSignal_1a84b525edb2ca8a8365a2bfc887b7db49" kindref="member">fToneFrequency</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_SingleToneSignal.hh"/>
  </compounddef>
</doxygen>
