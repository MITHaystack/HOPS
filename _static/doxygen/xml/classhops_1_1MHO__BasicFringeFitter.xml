<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__BasicFringeFitter" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_BasicFringeFitter</compoundname>
    <basecompoundref refid="classhops_1_1MHO__FringeFitter" prot="public" virt="non-virtual">hops::MHO_FringeFitter</basecompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__IonosphericFringeFitter" prot="public" virt="non-virtual">hops::MHO_IonosphericFringeFitter</derivedcompoundref>
    <includes refid="MHO__BasicFringeFitter_8hh" local="no">MHO_BasicFringeFitter.hh</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1af144357ab7f675dd33db4d4fe56639a5" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__MBDelaySearch" kindref="compound">MHO_MBDelaySearch</ref> *</type>
        <definition>MHO_MBDelaySearch* hops::MHO_BasicFringeFitter::fMBDSearch</definition>
        <argsstring></argsstring>
        <name>fMBDSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="124" column="27" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1ad26add6d5a71141d21fbf788ee35a183" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__MixedSidebandNormFX" kindref="compound">MHO_MixedSidebandNormFX</ref></type>
        <definition>MHO_MixedSidebandNormFX hops::MHO_BasicFringeFitter::fMSBNormFXOp</definition>
        <argsstring></argsstring>
        <name>fMSBNormFXOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="121" column="33" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1abae171c2eb5e6126f4cfc7d3f3e5e2a1" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__NormFX" kindref="compound">MHO_NormFX</ref> *</type>
        <definition>MHO_NormFX* hops::MHO_BasicFringeFitter::fNormFXOp</definition>
        <argsstring></argsstring>
        <name>fNormFXOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="118" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1a999f27d3dbb9b942ffd2a4321525e743" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__InterpolateFringePeak" kindref="compound">MHO_InterpolateFringePeak</ref></type>
        <definition>MHO_InterpolateFringePeak hops::MHO_BasicFringeFitter::fPeakInterpolator</definition>
        <argsstring></argsstring>
        <name>fPeakInterpolator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="125" column="35" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1a56199bd6e208d520905da430ec734536" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__SingleSidebandNormFX" kindref="compound">MHO_SingleSidebandNormFX</ref></type>
        <definition>MHO_SingleSidebandNormFX hops::MHO_BasicFringeFitter::fSSBNormFXOp</definition>
        <argsstring></argsstring>
        <name>fSSBNormFXOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="122" column="34" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1aff50cce38b630b338bec8e72398b0174" prot="protected" static="no" mutable="no">
        <type><ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref></type>
        <definition>mho_json hops::MHO_BasicFringeFitter::fVexInfo</definition>
        <argsstring></argsstring>
        <name>fVexInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="131" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1a1962234920eff8d92d0d2405d9ed7f21" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
        <definition>visibility_type* hops::MHO_BasicFringeFitter::sbd_data</definition>
        <argsstring></argsstring>
        <name>sbd_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="128" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1a3b2bd519bfdd35cd9c4415f75d88dd80" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
        <definition>visibility_type* hops::MHO_BasicFringeFitter::vis_data</definition>
        <argsstring></argsstring>
        <name>vis_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="126" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BasicFringeFitter_1a1db86be59b250b2e93ed8bbb3eaeafbc" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref> *</type>
        <definition>weight_type* hops::MHO_BasicFringeFitter::wt_data</definition>
        <argsstring></argsstring>
        <name>wt_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="127" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1ad546a616dbb75a88eb3ab2d4a9dc080c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BasicFringeFitter::MHO_BasicFringeFitter</definition>
        <argsstring>(MHO_FringeData *data)</argsstring>
        <name>MHO_BasicFringeFitter</name>
        <param>
          <type><ref refid="classhops_1_1MHO__FringeData" kindref="compound">MHO_FringeData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="33" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1a935459887a073a73247e8538e7c73528" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_BasicFringeFitter::~MHO_BasicFringeFitter</definition>
        <argsstring>()</argsstring>
        <name>~MHO_BasicFringeFitter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="34" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1a84228aca6f75086b00d69fd463034298" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void hops::MHO_BasicFringeFitter::Accept</definition>
        <argsstring>(MHO_FringeFitterVisitor *visitor) override</argsstring>
        <name>Accept</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1a21e99c6584831c290306318c2c1bd073">Accept</reimplements>
        <reimplementedby refid="classhops_1_1MHO__IonosphericFringeFitter_1a00021859be474bc5069fa7522b9c025f">Accept</reimplementedby>
        <param>
          <type><ref refid="classhops_1_1MHO__FringeFitterVisitor" kindref="compound">MHO_FringeFitterVisitor</ref> *</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Accepts and invokes a visitor to visit this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classhops_1_1MHO__FringeFitterVisitor" kindref="compound">MHO_FringeFitterVisitor</ref> used to visit this object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="88" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1ab8d798db7e4134eef77c973b4819e886" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::Configure</definition>
        <argsstring>() override</argsstring>
        <name>Configure</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1a343453167931cbf82cf32a18bfd191d1">Configure</reimplements>
        <briefdescription>
<para>Configures fringe data and initializes operator build manager. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="40" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="55" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1abde2794af1aa53cd2eb1950c39f10b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::Finalize</definition>
        <argsstring>() override</argsstring>
        <name>Finalize</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1a320aa40dd07152a854ed612a9d71bf11">Finalize</reimplements>
        <reimplementedby refid="classhops_1_1MHO__IonosphericFringeFitter_1a32cacaf342c183867d234ca3ff582eec">Finalize</reimplementedby>
        <briefdescription>
<para>Finalizes fringe fitting process by plotting data and executing final operators. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="72" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="316" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1ac06e3fe38f5d31359afc74815a2380b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::Initialize</definition>
        <argsstring>() override</argsstring>
        <name>Initialize</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1a4cd2a20becd9a7d6b540dddb67f11582">Initialize</reimplements>
        <briefdescription>
<para>Initializes fringe search operators and loads necessary data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="46" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="69" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1a4ae3b0c06ea2288aa72486b0ed092f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BasicFringeFitter::IsFinished</definition>
        <argsstring>() override</argsstring>
        <name>IsFinished</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1a35991b53361096592025566e69f3cbeb">IsFinished</reimplements>
        <briefdescription>
<para>Checks if the fringe fitting process is finished. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if finished, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="80" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1a0796e9ac42b8c2371648f30a10d943db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::PostRun</definition>
        <argsstring>() override</argsstring>
        <name>PostRun</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1a1f5d68aca05e2d073a4c0a4e4d2669db">PostRun</reimplements>
        <briefdescription>
<para>Executes user-specified scripts after fringe fitting if not skipped. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="66" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="300" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1ac9a9fb03262d63caef1c47af1a2bee8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::PreRun</definition>
        <argsstring>() override</argsstring>
        <name>PreRun</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1ae7ba8747965b781e1b3513ee66196bb4">PreRun</reimplements>
        <briefdescription>
<para>Executes user-specified scripts before running fringe fitting. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="52" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="263" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1ac9000cc4ccbde299b9255ac5de8b54d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::Run</definition>
        <argsstring>() override</argsstring>
        <name>Run</name>
        <reimplements refid="classhops_1_1MHO__FringeFitter_1a13a538c0e673ada9797bc7571da73573">Run</reimplements>
        <reimplementedby refid="classhops_1_1MHO__IonosphericFringeFitter_1aba56fabb762a4ee3b775fea58c96aec6">Run</reimplementedby>
        <briefdescription>
<para>Runs fringe fitting algorithm if this pass is not finished and not skipped. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="60" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="273" bodyend="298"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1a98689ee536ea0b8bbace549370406160" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::coarse_fringe_search</definition>
        <argsstring>(bool set_windows=true)</argsstring>
        <name>coarse_fringe_search</name>
        <param>
          <type>bool</type>
          <declname>set_windows</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Performs coarse search in delay/delay-rate space for fringe fitting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>set_windows</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to set windows for SBD/MBD/DR searches. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="101" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="371" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1aafa89e0f84923867a37587657f758eab" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BasicFringeFitter::ContainsMixedSideband</definition>
        <argsstring>(visibility_type *vis)</argsstring>
        <name>ContainsMixedSideband</name>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
<para>Checks if visibility data contains mixed sideband channels (USB and LSB). we switch the MHO_NormFX* object depending on the type of freq setup (single or mixed sideband) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vis</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if mixed sidebands are present, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="114" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="499" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BasicFringeFitter_1a9508e0ae3528dc203cf49d30260d8c23" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_BasicFringeFitter::interpolate_peak</definition>
        <argsstring>()</argsstring>
        <name>interpolate_peak</name>
        <briefdescription>
<para>Performs fine interpolation step to search for peak over a 5x5x5 grid around the peak. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="106" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_BasicFringeFitter.cc" bodystart="458" bodyend="497"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__BasicFringeFitter" kindref="compound">MHO_BasicFringeFitter</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>basic single-baseline single-polproduct (or sum) fringe fitter, no bells or whistles basic run scheme: configure, init, then: while(!IsFinished() ){ pre-run, run, post-run }</para>
<para><simplesect kind="author"><para>J. Barrettj - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Wed Sep 20 15:37:46 2023 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_IonosphericFringeFitter</label>
        <link refid="classhops_1_1MHO__IonosphericFringeFitter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_FringeFitter</label>
        <link refid="classhops_1_1MHO__FringeFitter"/>
      </node>
      <node id="1">
        <label>hops::MHO_BasicFringeFitter</label>
        <link refid="classhops_1_1MHO__BasicFringeFitter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="37">
        <label>hops::MHO_InspectingOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__InspectingOperator"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="71">
        <label>hops::MHO_NDArrayWrapper&lt; XValueType, 1 &gt;</label>
        <link refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>size_t</label>
      </node>
      <node id="64">
        <label>std::map&lt; std::size_t, std::size_t &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>elements</edgelabel>
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>hops::MHO_Axis&lt; double &gt;</label>
        <link refid="classhops_1_1MHO__Axis"/>
        <childnode refid="68" relation="public-inheritance">
        </childnode>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>hops::MHO_TableContainer&lt; visibility_element_type, baseline_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>uint_fast32_t</label>
      </node>
      <node id="43">
        <label>hops::MHO_MultidimensionalFastFourierTransformInterface&lt; XArgType &gt;</label>
        <link refid="classhops_1_1MHO__MultidimensionalFastFourierTransformInterface"/>
        <childnode refid="41" relation="usage">
          <edgelabel>fAxesToXForm</edgelabel>
          <edgelabel>fForward</edgelabel>
          <edgelabel>fInitialized</edgelabel>
          <edgelabel>fIsValid</edgelabel>
          <edgelabel>fTransformAxisLabels</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>fDimensionSize</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>hops::MHO_NormFX</label>
        <link refid="classhops_1_1MHO__NormFX"/>
        <childnode refid="81" relation="public-inheritance">
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>fWeights</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::map&lt; hops::MHO_UUID, std::string &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>MHO_MD5HashGeneratorBasicTypes</label>
        <link refid="classhops_1_1MHO__MD5HashGeneratorMultiType"/>
      </node>
      <node id="65">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="56" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>hops::MHO_ContainerDictionary</label>
        <link refid="classhops_1_1MHO__ContainerDictionary"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>hops::MHO_BinaryOperator&lt; visibility_type, weight_type, sbd_type &gt;</label>
        <link refid="classhops_1_1MHO__BinaryOperator"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>_picohash_md5_ctx_t</label>
        <link refid="struct__picohash__md5__ctx__t"/>
        <childnode refid="23" relation="usage">
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>a</edgelabel>
          <edgelabel>b</edgelabel>
          <edgelabel>block</edgelabel>
          <edgelabel>c</edgelabel>
          <edgelabel>d</edgelabel>
          <edgelabel>hi</edgelabel>
          <edgelabel>lo</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>hops::MHO_InspectingOperator&lt; XArgType &gt;</label>
        <link refid="classhops_1_1MHO__InspectingOperator"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>fArg</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>hops::MHO_TableContainerBase</label>
        <link refid="classhops_1_1MHO__TableContainerBase"/>
      </node>
      <node id="62">
        <label>hops::MHO_TableContainer&lt; weight_element_type, baseline_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>std::map&lt; std::string, hops::MHO_UUID &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>hops::MHO_ParameterStore</label>
        <link refid="classhops_1_1MHO__ParameterStore"/>
      </node>
      <node id="75">
        <label>hops::MHO_UnaryOperator&lt; MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>hops::MHO_AxisBase</label>
        <link refid="classhops_1_1MHO__AxisBase"/>
      </node>
      <node id="20">
        <label>hops::MHO_ClassIdentityMap</label>
        <link refid="classhops_1_1MHO__ClassIdentityMap"/>
        <childnode refid="21" relation="usage">
          <edgelabel>fJSONConverterMap</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>fMD5Generator</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>fFactoryMap</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>fUUID2ClassName</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>fClassName2UUID</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>std::map&lt; hops::MHO_UUID, hops::MHO_JSONConverter * &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>hops::MHO_VectorContainerBase</label>
        <link refid="classhops_1_1MHO__VectorContainerBase"/>
      </node>
      <node id="6">
        <label>json</label>
      </node>
      <node id="14">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="54">
        <label>hops::MHO_Taggable</label>
        <link refid="classhops_1_1MHO__Taggable"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>mbd_axis_pack</label>
        <link refid="classhops_1_1MHO__AxisPack"/>
        <childnode refid="53" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>hops::MHO_MD5HashGenerator</label>
        <link refid="classhops_1_1MHO__MD5HashGenerator"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>fHashStruct</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>fDigest</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>tuple&lt; XArgType * &gt;</label>
      </node>
      <node id="69">
        <label>hops::MHO_VectorContainer&lt; XValueType &gt;</label>
        <link refid="classhops_1_1MHO__VectorContainer"/>
        <childnode refid="70" relation="public-inheritance">
        </childnode>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>hops::MHO_TableContainer&lt; double, mbd_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;</label>
        <link refid="classhops_1_1MHO__NDArrayWrapper"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>hops::MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>key_pair</label>
      </node>
      <node id="24">
        <label>int</label>
      </node>
      <node id="16">
        <label>hops::MHO_UUID</label>
        <link refid="classhops_1_1MHO__UUID"/>
        <childnode refid="17" relation="usage">
          <edgelabel>fBytes</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>hops::MHO_ExtremaSearch&lt; MHO_TableContainer&lt; double, mbd_axis_pack &gt; &gt;</label>
        <link refid="classhops_1_1MHO__ExtremaSearch"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>std::set&lt; std::string &gt;</label>
        <childnode refid="13" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>double</label>
      </node>
      <node id="40">
        <label>tuple&lt; const XArgType *, XArgType * &gt;</label>
      </node>
      <node id="2">
        <label>hops::MHO_FringeFitter</label>
        <link refid="classhops_1_1MHO__FringeFitter"/>
        <childnode refid="3" relation="usage">
          <edgelabel>fOperatorBuildManager</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fParameterStore</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>fFringeData</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>fOperatorToolbox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>fScanStore</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>fContainerStore</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>hops::MHO_ExtensibleElement</label>
        <link refid="classhops_1_1MHO__ExtensibleElement"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>fExtensions</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>uint8_t</label>
      </node>
      <node id="51">
        <label>std::vector&lt; hops::MHO_Element * &gt;</label>
        <childnode refid="50" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>hops::MHO_ScanDataStore</label>
        <link refid="classhops_1_1MHO__ScanDataStore"/>
      </node>
      <node id="63">
        <label>hops::MHO_UniformGridPointsCalculator</label>
        <link refid="classhops_1_1MHO__UniformGridPointsCalculator"/>
        <childnode refid="56" relation="usage">
          <edgelabel>fAbsEps</edgelabel>
          <edgelabel>fAverageLocation</edgelabel>
          <edgelabel>fEpsilon</edgelabel>
          <edgelabel>fMaxSpacing</edgelabel>
          <edgelabel>fMinSpacing</edgelabel>
          <edgelabel>fNGridPoints</edgelabel>
          <edgelabel>fSpacing</edgelabel>
          <edgelabel>fSpread</edgelabel>
          <edgelabel>fStart</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>fDefaultGridPoints</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>fSpacingError</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>fIndexMap</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>fPoints</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>hops::MHO_IndexLabelInterface</label>
        <link refid="classhops_1_1MHO__IndexLabelInterface"/>
      </node>
      <node id="30">
        <label>std::map&lt; hops::MHO_UUID, hops::MHO_SerializableObjectFactory * &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>hops::MHO_JSONWrapper</label>
        <link refid="classhops_1_1MHO__JSONWrapper"/>
        <childnode refid="6" relation="usage">
          <edgelabel>fObject</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>hops::MHO_OperatorBuilderManager</label>
        <link refid="classhops_1_1MHO__OperatorBuilderManager"/>
      </node>
      <node id="50">
        <label>hops::MHO_Element</label>
        <link refid="classhops_1_1MHO__Element"/>
      </node>
      <node id="53">
        <label>std::tuple&lt; XAxisTypeS... &gt;</label>
      </node>
      <node id="9">
        <label>std::map&lt; hops::MHO_Serializable *, key_pair &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>hops::MHO_DelayRate</label>
        <link refid="classhops_1_1MHO__DelayRate"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>hops::MHO_SerializableObjectFactory</label>
        <link refid="classhops_1_1MHO__SerializableObjectFactory"/>
      </node>
      <node id="8">
        <label>hops::MHO_ContainerStore</label>
        <link refid="classhops_1_1MHO__ContainerStore"/>
        <childnode refid="9" relation="usage">
          <edgelabel>fObjectsToIds</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>fShortNameSet</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>fShortNameToIds</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>fIdsToObjects</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>fDictionary</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_BasicFringeFitter</label>
        <link refid="classhops_1_1MHO__BasicFringeFitter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>fPeakInterpolator</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>fMBDSearch</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>sbd_data</edgelabel>
          <edgelabel>vis_data</edgelabel>
          <edgelabel>wt_data</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>fSSBNormFXOp</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>fVexInfo</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>fNormFXOp</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>fMSBNormFXOp</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>hops::MHO_TableContainer&lt; XValueType, XAxisPackType &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>hops::MHO_JSONConverter</label>
        <link refid="classhops_1_1MHO__JSONConverter"/>
        <childnode refid="23" relation="usage">
          <edgelabel>fRawData</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>fJSON</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>fLOD</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fRawDataDescriptor</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>fRank</edgelabel>
          <edgelabel>fRawByteSize</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>XAxisPackType</label>
        <link refid="classXAxisPackType"/>
      </node>
      <node id="38">
        <label>hops::MHO_MultidimensionalFastFourierTransform&lt; mbd_type &gt;</label>
        <link refid="classhops_1_1MHO__MultidimensionalFastFourierTransform"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>hops::MHO_OperatorToolbox</label>
        <link refid="classhops_1_1MHO__OperatorToolbox"/>
      </node>
      <node id="39">
        <label>hops::MHO_UnaryOperator&lt; XArgType &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>fOutOfPlaceArgs</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>fInPlace</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>fInPlaceArgs</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>hops::MHO_CyclicRotator&lt; MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt; &gt;</label>
        <link refid="classhops_1_1MHO__CyclicRotator"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>bool</label>
      </node>
      <node id="34">
        <label>hops::MHO_InterpolateFringePeak</label>
        <link refid="classhops_1_1MHO__InterpolateFringePeak"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>std::map&lt; key_pair, hops::MHO_Serializable * &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>hops::MHO_IntervalLabelInterface</label>
        <link refid="classhops_1_1MHO__IntervalLabelInterface"/>
      </node>
      <node id="82">
        <label>hops::MHO_MixedSidebandNormFX</label>
        <link refid="classhops_1_1MHO__MixedSidebandNormFX"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>hops::MHO_Serializable</label>
        <link refid="classhops_1_1MHO__Serializable"/>
      </node>
      <node id="78">
        <label>const XArgType *</label>
      </node>
      <node id="60">
        <label>hops::MHO_NDArrayWrapper&lt; XValueType, XAxisPackType::NAXES::value &gt;</label>
        <link refid="classhops_1_1MHO__NDArrayWrapper"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>char</label>
      </node>
      <node id="5">
        <label>hops::MHO_FringeData</label>
        <link refid="classhops_1_1MHO__FringeData"/>
        <childnode refid="6" relation="usage">
          <edgelabel>fControlFormat</edgelabel>
          <edgelabel>fControlStatements</edgelabel>
          <edgelabel>fPlotData</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fParameterStore</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>fScanStore</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>fContainerStore</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>hops::MHO_MBDelaySearch</label>
        <link refid="classhops_1_1MHO__MBDelaySearch"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>fFFTEngine</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>fDelayRateCalc</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>fSBDDrWorkspace</edgelabel>
          <edgelabel>sbd_dr_data</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>fAverageFreq</edgelabel>
          <edgelabel>fCoarseDR</edgelabel>
          <edgelabel>fCoarseMBD</edgelabel>
          <edgelabel>fCoarseSBD</edgelabel>
          <edgelabel>fDRBinSep</edgelabel>
          <edgelabel>fDRWin</edgelabel>
          <edgelabel>fGridSpace</edgelabel>
          <edgelabel>fGridStart</edgelabel>
          <edgelabel>fMBDBinSep</edgelabel>
          <edgelabel>fMBDWin</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>fMBDAmpWorkspace</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>fWeights</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>fWeightsWorkspace</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>fGridCalc</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>fDRMaxBin</edgelabel>
          <edgelabel>fMBDMaxBin</edgelabel>
          <edgelabel>fSBDMaxBin</edgelabel>
          <edgelabel>fSBDStart</edgelabel>
          <edgelabel>fSBDStop</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>fMBDWorkspace</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>fDRWinSet</edgelabel>
          <edgelabel>fInitialized</edgelabel>
          <edgelabel>fMBDWinSet</edgelabel>
          <edgelabel>fSBDWinSet</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>fDRAxis</edgelabel>
          <edgelabel>fMBDAxis</edgelabel>
          <edgelabel>fSBDAxis</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>fCyclicRotator</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>fChannelIndexToFreqPointIndex</edgelabel>
          <edgelabel>fMBDBinMap</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>fMaxSearch</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>fNDR</edgelabel>
          <edgelabel>fNDRSP</edgelabel>
          <edgelabel>fNGridPoints</edgelabel>
          <edgelabel>fNSBD</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>fChannelFreqs</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>hops::MHO_SingleSidebandNormFX</label>
        <link refid="classhops_1_1MHO__SingleSidebandNormFX"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>baseline_axis_pack</label>
        <link refid="classhops_1_1MHO__AxisPack"/>
        <childnode refid="53" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::string</label>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" line="29" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_BasicFringeFitter.hh" bodystart="30" bodyend="132"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a84228aca6f75086b00d69fd463034298" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>Accept</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a98689ee536ea0b8bbace549370406160" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>coarse_fringe_search</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1ab8d798db7e4134eef77c973b4819e886" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>Configure</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1aafa89e0f84923867a37587657f758eab" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>ContainsMixedSideband</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1aa4580b5aa98be362d47e3c129e54faf7" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fContainerStore</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1ad1f65ef397a9cff8b4d872a423749bd2" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fFringeData</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1abde2794af1aa53cd2eb1950c39f10b5b" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>Finalize</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1af144357ab7f675dd33db4d4fe56639a5" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fMBDSearch</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1ad26add6d5a71141d21fbf788ee35a183" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fMSBNormFXOp</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1abae171c2eb5e6126f4cfc7d3f3e5e2a1" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fNormFXOp</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1af371c83cf40e1af3fa107add1c71d93c" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fOperatorBuildManager</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1aaef44b932e0307763af9c34434c8c26d" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fOperatorToolbox</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1a8951c59f3173889011daa7d1b2c8559d" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fParameterStore</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a999f27d3dbb9b942ffd2a4321525e743" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fPeakInterpolator</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1af4ab8b86d04c19c9fbf75e40a687827e" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fScanStore</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a56199bd6e208d520905da430ec734536" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fSSBNormFXOp</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1aff50cce38b630b338bec8e72398b0174" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>fVexInfo</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1ac4cc8797119c1bee457f7cd53924c656" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>GetContainerStore</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1abc4e20c014e1965893d8f16d6910b563" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>GetFringeData</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1a98cf7c10488ba6d56220a6201f4dd85d" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>GetOperatorBuildManager</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1a6972deb4fd4b1222d96ef6ac2ec74968" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>GetOperatorToolbox</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1a7701f5590db669ada24ca98edd1ee1f5" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>GetParameterStore</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1a04586e3a58829593cf13861a7300b690" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>GetScanDataStore</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1a8aeb838821d38d1aa026b5a764a0fcce" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>GetVex</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1ac06e3fe38f5d31359afc74815a2380b0" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a9508e0ae3528dc203cf49d30260d8c23" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>interpolate_peak</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a4ae3b0c06ea2288aa72486b0ed092f5c" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>IsFinished</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1ad546a616dbb75a88eb3ab2d4a9dc080c" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>MHO_BasicFringeFitter</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1aa4bd1d0f589a6a609e46b1de3aa98113" prot="public" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>MHO_FringeFitter</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a0796e9ac42b8c2371648f30a10d943db" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>PostRun</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1ac9a9fb03262d63caef1c47af1a2bee8a" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>PreRun</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1ac9000cc4ccbde299b9255ac5de8b54d4" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>Run</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a1962234920eff8d92d0d2405d9ed7f21" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>sbd_data</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a3b2bd519bfdd35cd9c4415f75d88dd80" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>vis_data</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a1db86be59b250b2e93ed8bbb3eaeafbc" prot="protected" virt="non-virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>wt_data</name></member>
      <member refid="classhops_1_1MHO__BasicFringeFitter_1a935459887a073a73247e8538e7c73528" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>~MHO_BasicFringeFitter</name></member>
      <member refid="classhops_1_1MHO__FringeFitter_1abcd7ed34a3de70814ba93d8c1c336fac" prot="public" virt="virtual"><scope>hops::MHO_BasicFringeFitter</scope><name>~MHO_FringeFitter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
