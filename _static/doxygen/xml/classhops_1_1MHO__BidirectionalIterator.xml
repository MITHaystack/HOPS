<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__BidirectionalIterator" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_BidirectionalIterator</compoundname>
    <includes refid="MHO__BidirectionalIterator_8hh" local="no">MHO_BidirectionalIterator.hh</includes>
    <templateparamlist>
      <param>
        <type>typename XValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIterator_1a82c1e03aff4bbc1bf0f6dc1d1cdd3471" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using hops::MHO_BidirectionalIterator&lt; XValueType &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="36" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIterator_1a7ff97c8b811646672762733f93876ab1" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>using hops::MHO_BidirectionalIterator&lt; XValueType &gt;::iterator_category =  std::bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="35" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" prot="public" static="no">
        <type>XValueType *</type>
        <definition>using hops::MHO_BidirectionalIterator&lt; XValueType &gt;::pointer =  XValueType*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="34" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIterator_1ad8650d6f44ced4c8eb2581e850fdec99" prot="public" static="no">
        <type>XValueType &amp;</type>
        <definition>using hops::MHO_BidirectionalIterator&lt; XValueType &gt;::reference =  XValueType&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="33" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">MHO_BidirectionalIterator</ref></type>
        <definition>using hops::MHO_BidirectionalIterator&lt; XValueType &gt;::self_type =  MHO_BidirectionalIterator</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="31" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIterator_1a6e547df5d61006d025bb49fdf032a09f" prot="public" static="no">
        <type>XValueType</type>
        <definition>using hops::MHO_BidirectionalIterator&lt; XValueType &gt;::value_type =  XValueType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="32" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIterator_1adbc352bbc35af42e0b26fef39ada271b" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIterator&lt; XValueType &gt;::fBegin</definition>
        <argsstring></argsstring>
        <name>fBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="131" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIterator_1ac11d5430651bb0123cb337e86f0feae4" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalIterator&lt; XValueType &gt;::fLength</definition>
        <argsstring></argsstring>
        <name>fLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="133" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIterator_1a70f930ca78fd47179d3f999f808e2aa4" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIterator&lt; XValueType &gt;::fPtr</definition>
        <argsstring></argsstring>
        <name>fPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="132" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a143d391134837cab5ea1181afab41f9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalIterator&lt; XValueType &gt;::MHO_BidirectionalIterator</definition>
        <argsstring>(const self_type &amp;copy)</argsstring>
        <name>MHO_BidirectionalIterator</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="41" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1aa9874c470d571ca9f047c8baed706f20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalIterator&lt; XValueType &gt;::MHO_BidirectionalIterator</definition>
        <argsstring>(pointer begin_ptr, pointer ptr, std::size_t length)</argsstring>
        <name>MHO_BidirectionalIterator</name>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
          <declname>begin_ptr</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="38" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a7a47cd39151e2f150ae974e9deff261b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_BidirectionalIterator&lt; XValueType &gt;::~MHO_BidirectionalIterator</definition>
        <argsstring>()</argsstring>
        <name>~MHO_BidirectionalIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="43" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a4b8f071f7e2e3754c77f363665cffe1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalIterator&lt; XValueType &gt;::GetOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="126" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1ac8771f2c400e68bdbd7384c324edd0c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIterator&lt; XValueType &gt;::GetPtr</definition>
        <argsstring>()</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="122" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1adb1049efc68ad62fb5b623e2a0814ecf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalIterator&lt; XValueType &gt;::GetPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="124" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1ab2c6f89d19df6bda42a2a53cd035b20f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalIterator&lt; XValueType &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="128" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1aca35ffcd29193661db5a1408c90721ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator!=</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="120" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1af73db05f0aae18502d778becc48396e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1ad8650d6f44ced4c8eb2581e850fdec99" kindref="member">reference</ref></type>
        <definition>reference hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="100" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1ad53321e2bc1fb11dc65454028bc7e7dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1ad8650d6f44ced4c8eb2581e850fdec99" kindref="member">reference</ref></type>
        <definition>const reference hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="102" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a6a12cee225b1b67fa16a6e76a0a60ff1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator+</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="85" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a554e7e21049c10a94e709790f732afc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="45" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a6b78afb5bfbcef00eee1049073523e92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="57" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1ab940ec7f53a17a2802fa0dfe45c9b213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator+=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="73" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a11061374a9cbbb5b8630bc4916c627b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1a82c1e03aff4bbc1bf0f6dc1d1cdd3471" kindref="member">difference_type</ref></type>
        <definition>difference_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const self_type &amp;iter)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="71" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a5c2747524b6579bcd5ff360722d69bd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="92" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1ae63c62e5d55635c73545bb43d7b938b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="51" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a3fa495a3b6b34bbd7b7e75927f5dc22a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="64" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1aa56cab1b3cef4b1d66b0cd29fe982bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator-=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="79" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a38d3250db9671718e2c99c183932204f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="104" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a28f19df670562eb7caeb3c31591b4933" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="106" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1a0a060db94f23628115f01f7ec7bff080" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator=</definition>
        <argsstring>(const self_type &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="108" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIterator_1afd54766ea1e5858491a0af7472ab71aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalIterator&lt; XValueType &gt;::operator==</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="118" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="118" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">MHO_BidirectionalIterator</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>provides an iterator over a object in either increasing or decreasing index direction</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Sat Oct 2 04:34:18 2021 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>size_t</label>
      </node>
      <node id="1">
        <label>hops::MHO_BidirectionalIterator&lt; XValueType &gt;</label>
        <link refid="classhops_1_1MHO__BidirectionalIterator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fBegin</edgelabel>
          <edgelabel>fPtr</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fLength</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>XValueType *</label>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="21" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="22" bodyend="134"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a82c1e03aff4bbc1bf0f6dc1d1cdd3471" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>difference_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1adbc352bbc35af42e0b26fef39ada271b" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>fBegin</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1ac11d5430651bb0123cb337e86f0feae4" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>fLength</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a70f930ca78fd47179d3f999f808e2aa4" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>fPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a4b8f071f7e2e3754c77f363665cffe1b" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>GetOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1ac8771f2c400e68bdbd7384c324edd0c3" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1adb1049efc68ad62fb5b623e2a0814ecf" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1ab2c6f89d19df6bda42a2a53cd035b20f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>IsValid</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a7ff97c8b811646672762733f93876ab1" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>iterator_category</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1aa9874c470d571ca9f047c8baed706f20" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>MHO_BidirectionalIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a143d391134837cab5ea1181afab41f9d" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>MHO_BidirectionalIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1aca35ffcd29193661db5a1408c90721ea" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator!=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1af73db05f0aae18502d778becc48396e8" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1ad53321e2bc1fb11dc65454028bc7e7dc" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a6a12cee225b1b67fa16a6e76a0a60ff1" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator+</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a554e7e21049c10a94e709790f732afc2" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a6b78afb5bfbcef00eee1049073523e92" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1ab940ec7f53a17a2802fa0dfe45c9b213" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator+=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a11061374a9cbbb5b8630bc4916c627b4" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a5c2747524b6579bcd5ff360722d69bd0" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1ae63c62e5d55635c73545bb43d7b938b3" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a3fa495a3b6b34bbd7b7e75927f5dc22a" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1aa56cab1b3cef4b1d66b0cd29fe982bc4" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator-=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a38d3250db9671718e2c99c183932204f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a28f19df670562eb7caeb3c31591b4933" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a0a060db94f23628115f01f7ec7bff080" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1afd54766ea1e5858491a0af7472ab71aa" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>operator==</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1af7c4fa0fca0d58cb7ee0e4f7e075faf0" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>pointer</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1ad8650d6f44ced4c8eb2581e850fdec99" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>reference</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1aacee08fdc0342a723acf734e8afb2331" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>self_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a6e547df5d61006d025bb49fdf032a09f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>value_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIterator_1a7a47cd39151e2f150ae974e9deff261b" prot="public" virt="virtual"><scope>hops::MHO_BidirectionalIterator</scope><name>~MHO_BidirectionalIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
