<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__CircularFieldRotationCorrection" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_CircularFieldRotationCorrection</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; visibility_type &gt;</basecompoundref>
    <includes refid="MHO__CircularFieldRotationCorrection_8hh" local="no">MHO_CircularFieldRotationCorrection.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a59e2c9a5052b2a2b9c16ef41f4f20f22" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_CircularFieldRotationCorrection::fFourfitRefTimeString</definition>
        <argsstring></argsstring>
        <name>fFourfitRefTimeString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="155" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1aee10a4c4f310f37c306691b387aa0777" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; hops::MHO_CircularFieldRotationCorrection::fPolProductSet</definition>
        <argsstring></argsstring>
        <name>fPolProductSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="148" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a2a9a83f5cb078d407c22b6aa83f28a51" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref> *</type>
        <definition>station_coord_type* hops::MHO_CircularFieldRotationCorrection::fRefData</definition>
        <argsstring></argsstring>
        <name>fRefData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="160" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a0a6a44a4e27fa2da481b87b05c9993c6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_CircularFieldRotationCorrection::fRefElevation</definition>
        <argsstring></argsstring>
        <name>fRefElevation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="152" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1abf7c443534979757d1a498c75c641f33" prot="private" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__StationModel" kindref="compound">MHO_StationModel</ref></type>
        <definition>MHO_StationModel hops::MHO_CircularFieldRotationCorrection::fRefModel</definition>
        <argsstring></argsstring>
        <name>fRefModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="163" column="26" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1aee5e0d4fd43c81ee85a84c5da38df95f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_CircularFieldRotationCorrection::fRefMountType</definition>
        <argsstring></argsstring>
        <name>fRefMountType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="157" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a1b17d3c14bb34fa81805eb74abd86175" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_CircularFieldRotationCorrection::fRefParAngle</definition>
        <argsstring></argsstring>
        <name>fRefParAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="150" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a2f06529813f598d60587cb591e524601" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref> *</type>
        <definition>station_coord_type* hops::MHO_CircularFieldRotationCorrection::fRemData</definition>
        <argsstring></argsstring>
        <name>fRemData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="161" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a5c30e131dd04714e8da5d6ed4e620e02" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_CircularFieldRotationCorrection::fRemElevation</definition>
        <argsstring></argsstring>
        <name>fRemElevation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="153" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a000c6d1d0ebaaeadcfb8c06228426fd7" prot="private" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__StationModel" kindref="compound">MHO_StationModel</ref></type>
        <definition>MHO_StationModel hops::MHO_CircularFieldRotationCorrection::fRemModel</definition>
        <argsstring></argsstring>
        <name>fRemModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="164" column="26" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a4f132af1c8e08484167baf7b5a3eca4c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_CircularFieldRotationCorrection::fRemMountType</definition>
        <argsstring></argsstring>
        <name>fRemMountType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="158" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a3219912e1dbaca69a3502e20e518ad16" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_CircularFieldRotationCorrection::fRemParAngle</definition>
        <argsstring></argsstring>
        <name>fRemParAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="151" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1ac0d7038c3706ef1dca5f8e11423173e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_CircularFieldRotationCorrection::MHO_CircularFieldRotationCorrection</definition>
        <argsstring>()</argsstring>
        <name>MHO_CircularFieldRotationCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="37" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1aef5e2565ac44d77f4877bba6ef4120a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_CircularFieldRotationCorrection::~MHO_CircularFieldRotationCorrection</definition>
        <argsstring>()</argsstring>
        <name>~MHO_CircularFieldRotationCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="38" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1ab76049f3fe01ac9e7f688677a93604d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_CircularFieldRotationCorrection::SetFourfitReferenceTimeVexString</definition>
        <argsstring>(std::string frt_vex_string)</argsstring>
        <name>SetFourfitReferenceTimeVexString</name>
        <param>
          <type>std::string</type>
          <declname>frt_vex_string</declname>
        </param>
        <briefdescription>
<para>Setter for fourfit reference time vex string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frt_vex_string</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vex string representing reference time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="52" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a82f66bdd4ce802528daa8e626f67a07e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_CircularFieldRotationCorrection::SetPolProductSet</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;pp_vec)</argsstring>
        <name>SetPolProductSet</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>pp_vec</declname>
        </param>
        <briefdescription>
<para>Setter for pol product set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pp_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a vector of strings representing pol product set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="45" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1ac091f6bfb5ccb38a8f4e874291dcf0f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_CircularFieldRotationCorrection::SetReferenceMountType</definition>
        <argsstring>(std::string mt)</argsstring>
        <name>SetReferenceMountType</name>
        <param>
          <type>std::string</type>
          <declname>mt</declname>
        </param>
        <briefdescription>
<para>Setter for reference station mount type {&quot;no_mount&quot;, &quot;cassegrain&quot;, &quot;nasmythleft&quot;, or &quot;nasmythright&quot;}. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mt</parametername>
</parameternamelist>
<parameterdescription>
<para>reference mount type as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="78" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1ac844e1dcae51fdc26034362131bd0fb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_CircularFieldRotationCorrection::SetReferenceStationCoordinateData</definition>
        <argsstring>(station_coord_type *ref_data)</argsstring>
        <name>SetReferenceStationCoordinateData</name>
        <param>
          <type><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref> *</type>
          <declname>ref_data</declname>
        </param>
        <briefdescription>
<para>Setter for reference station coordinate data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input pointer to station_coord_type structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
these data objects (station coords) are not yet used to the fullest extent, but they could be if we want to apply a time-dependant corrections to the pol-product pre-factors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="64" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a65483a422cf28b300f02c6af3012f123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_CircularFieldRotationCorrection::SetRemoteMountType</definition>
        <argsstring>(std::string mt)</argsstring>
        <name>SetRemoteMountType</name>
        <param>
          <type>std::string</type>
          <declname>mt</declname>
        </param>
        <briefdescription>
<para>Setter for remote station mount type {&quot;no_mount&quot;, &quot;cassegrain&quot;, &quot;nasmythleft&quot;, or &quot;nasmythright&quot;}. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mt</parametername>
</parameternamelist>
<parameterdescription>
<para>remote mount type as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="85" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a1e181a268ee4f6ecbd0be90465cfe93b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_CircularFieldRotationCorrection::SetRemoteStationCoordinateData</definition>
        <argsstring>(station_coord_type *rem_data)</argsstring>
        <name>SetRemoteStationCoordinateData</name>
        <param>
          <type><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref> *</type>
          <declname>rem_data</declname>
        </param>
        <briefdescription>
<para>Setter for remote station coordinate data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rem_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to station_coord_type structure containing remote station coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="71" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="71" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1a73ef3165a46616d5b21582ee6b643b2e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_CircularFieldRotationCorrection::ExecuteInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Applies a circular field rotation correction to visibility data in-place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type* data to be corrected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool indicating successful execution. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="113" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1ae3a9747e8a0a11f34376ebe5e8062322" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_CircularFieldRotationCorrection::ExecuteOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Copies input visibility data and applies pre-multiplication, returning success. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const reference to input visibility_type data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to output visibility_type data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating successful execution </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="122" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1af871825e3a280e76ef01617ccdd41d6f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_CircularFieldRotationCorrection::InitializeInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes in-place visibility_type pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type pointer to initialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="95" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1ae787c27574eeed7972ca2261d96fa47c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_CircularFieldRotationCorrection::InitializeOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes out-of-place visibility data from input data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const pointer to input visibility_type data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success (always true in current implementation). </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="104" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1adab473f9beff23b2c67ea6365c14543c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hops::MHO_CircularFieldRotationCorrection::DetermineMountCode</definition>
        <argsstring>(const std::string &amp;mount) const</argsstring>
        <name>DetermineMountCode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>mount</declname>
        </param>
        <briefdescription>
<para>Determines mount type from given string and returns corresponding code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mount</parametername>
</parameternamelist>
<parameterdescription>
<para>Input mount type as a string {&quot;no_mount&quot;, &quot;cassegrain&quot;, &quot;nasmythleft&quot;, &quot;nasmythright&quot;}. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mount type code (NO_MOUNT_TYPE, CASSEGRAIN, NASMYTHLEFT, NASMYTHRIGHT) or NO_MOUNT_TYPE if unknown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="131" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="142" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1aa00291dcdf7f5b88101b7a2715757997" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; hops::MHO_CircularFieldRotationCorrection::GetPrefactor</definition>
        <argsstring>(std::string pp_label)</argsstring>
        <name>GetPrefactor</name>
        <param>
          <type>std::string</type>
          <declname>pp_label</declname>
        </param>
        <briefdescription>
<para>Get prefactor based on polarization product. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pp_label</parametername>
</parameternamelist>
<parameterdescription>
<para>Input polarization product label to retrieve its corresponding prefactor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Complex prefactor value associated with the input polarization product label </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="146" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="168" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__CircularFieldRotationCorrection_1abf0b5c40cf8b123967e771836981f93d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_CircularFieldRotationCorrection::PreMultiply</definition>
        <argsstring>(visibility_type *in)</argsstring>
        <name>PreMultiply</name>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Multiplies each polarization product by an appropriate pre-factor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type pointer to be multiplied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="138" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_CircularFieldRotationCorrection.cc" bodystart="115" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__CircularFieldRotationCorrection" kindref="compound">MHO_CircularFieldRotationCorrection</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Wed Feb 7 23:58:10 2024 -0500 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_CircularFieldRotationCorrection</label>
        <link refid="classhops_1_1MHO__CircularFieldRotationCorrection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_CircularFieldRotationCorrection</label>
        <link refid="classhops_1_1MHO__CircularFieldRotationCorrection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" line="34" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_CircularFieldRotationCorrection.hh" bodystart="35" bodyend="165"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1adab473f9beff23b2c67ea6365c14543c" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>DetermineMountCode</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a73ef3165a46616d5b21582ee6b643b2e" prot="protected" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1ae3a9747e8a0a11f34376ebe5e8062322" prot="protected" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a59e2c9a5052b2a2b9c16ef41f4f20f22" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fFourfitRefTimeString</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1aee10a4c4f310f37c306691b387aa0777" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fPolProductSet</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a2a9a83f5cb078d407c22b6aa83f28a51" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRefData</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a0a6a44a4e27fa2da481b87b05c9993c6" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRefElevation</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1abf7c443534979757d1a498c75c641f33" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRefModel</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1aee5e0d4fd43c81ee85a84c5da38df95f" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRefMountType</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a1b17d3c14bb34fa81805eb74abd86175" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRefParAngle</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a2f06529813f598d60587cb591e524601" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRemData</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a5c30e131dd04714e8da5d6ed4e620e02" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRemElevation</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a000c6d1d0ebaaeadcfb8c06228426fd7" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRemModel</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a4f132af1c8e08484167baf7b5a3eca4c" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRemMountType</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a3219912e1dbaca69a3502e20e518ad16" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>fRemParAngle</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1aa00291dcdf7f5b88101b7a2715757997" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>GetPrefactor</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1af871825e3a280e76ef01617ccdd41d6f" prot="protected" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1ae787c27574eeed7972ca2261d96fa47c" prot="protected" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1ac0d7038c3706ef1dca5f8e11423173e3" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>MHO_CircularFieldRotationCorrection</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1abf0b5c40cf8b123967e771836981f93d" prot="private" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>PreMultiply</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1ab76049f3fe01ac9e7f688677a93604d8" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetFourfitReferenceTimeVexString</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a82f66bdd4ce802528daa8e626f67a07e" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetPolProductSet</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1ac091f6bfb5ccb38a8f4e874291dcf0f9" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetReferenceMountType</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1ac844e1dcae51fdc26034362131bd0fb8" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetReferenceStationCoordinateData</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a65483a422cf28b300f02c6af3012f123" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetRemoteMountType</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1a1e181a268ee4f6ecbd0be90465cfe93b" prot="public" virt="non-virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>SetRemoteStationCoordinateData</name></member>
      <member refid="classhops_1_1MHO__CircularFieldRotationCorrection_1aef5e2565ac44d77f4877bba6ef4120a0" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>~MHO_CircularFieldRotationCorrection</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_CircularFieldRotationCorrection</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
