<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__NDArrayWrapper" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_NDArrayWrapper</compoundname>
    <basecompoundref refid="classhops_1_1MHO__ExtensibleElement" prot="public" virt="non-virtual">hops::MHO_ExtensibleElement</basecompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; double, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; visibility_element_type, mbd_dr_axis_pack &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; double, mbd_axis_pack &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; pcal_phasor_type, multitone_pcal_axis_type &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; weight_element_type, baseline_axis_pack &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; std::complex&lt; double &gt;, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; std::complex&lt; double &gt;, pcal_axis_pack &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__TableContainer" prot="public" virt="non-virtual">hops::MHO_TableContainer&lt; visibility_element_type, baseline_axis_pack &gt;</derivedcompoundref>
    <includes refid="MHO__NDArrayWrapper_8hh" local="no">MHO_NDArrayWrapper.hh</includes>
    <templateparamlist>
      <param>
        <type>typename XValueType</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>RANK</declname>
        <defname>RANK</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">MHO_BidirectionalConstIterator</ref>&lt; XValueType &gt;</type>
        <definition>using hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::const_iterator =  MHO_BidirectionalConstIterator&lt; XValueType &gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="625" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">MHO_BidirectionalConstStrideIterator</ref>&lt; XValueType &gt;</type>
        <definition>using hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::const_stride_iterator =  MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;</definition>
        <argsstring></argsstring>
        <name>const_stride_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="626" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" prot="public" static="no">
        <type>std::array&lt; std::size_t, RANK &gt;</type>
        <definition>using hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::index_type =  std::array&lt; std::size_t, RANK &gt;</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="45" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">MHO_BidirectionalIterator</ref>&lt; XValueType &gt;</type>
        <definition>using hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::iterator =  MHO_BidirectionalIterator&lt; XValueType &gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="622" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__NDArrayWrapper_1a141382b44659721f53439ab6f5f090b7" prot="public" static="no">
        <type>std::integral_constant&lt; std::size_t, RANK &gt;</type>
        <definition>typedef std::integral_constant&lt; std::size_t, RANK &gt; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::rank</definition>
        <argsstring></argsstring>
        <name>rank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="46" column="40" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">MHO_BidirectionalStrideIterator</ref>&lt; XValueType &gt;</type>
        <definition>using hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::stride_iterator =  MHO_BidirectionalStrideIterator&lt; XValueType &gt;</definition>
        <argsstring></argsstring>
        <name>stride_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="623" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__NDArrayWrapper_1a56edb371b3b550d1ed4ac66f350d0570" prot="public" static="no">
        <type>XValueType</type>
        <definition>using hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::value_type =  XValueType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="44" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__NDArrayWrapper_1ab32714f5aad751803a6ec1cd20a2c953" prot="private" static="no" mutable="no">
        <type>std::vector&lt; XValueType &gt;</type>
        <definition>std::vector&lt; XValueType &gt; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::fData</definition>
        <argsstring></argsstring>
        <name>fData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="568" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__NDArrayWrapper_1ad7a977174d12731a4fed8c65f59ff8a4" prot="private" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::fDims</definition>
        <argsstring></argsstring>
        <name>fDims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="569" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__NDArrayWrapper_1ac5fa0ae3485c8534642035f7f8d2ce23" prot="private" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::fStrides</definition>
        <argsstring></argsstring>
        <name>fStrides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="570" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__NDArrayWrapper_1ac9c89f5f5ad768dfc5836459580dbd95" prot="private" static="no" mutable="yes">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::fTmp</definition>
        <argsstring></argsstring>
        <name>fTmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="571" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="571" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a10c4d9ae788a0da022e078bcc5131655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::MHO_NDArrayWrapper</definition>
        <argsstring>()</argsstring>
        <name>MHO_NDArrayWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="50" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a9722a0044a9e00d23cc8b3b605788ac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::MHO_NDArrayWrapper</definition>
        <argsstring>(const MHO_NDArrayWrapper &amp;obj)</argsstring>
        <name>MHO_NDArrayWrapper</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="59" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ae09476aea6805570b9cbe77119b680e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::MHO_NDArrayWrapper</definition>
        <argsstring>(const std::size_t *dim)</argsstring>
        <name>MHO_NDArrayWrapper</name>
        <param>
          <type>const std::size_t *</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="53" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ab2158a0b07c120c2b59e6fc0948264c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::MHO_NDArrayWrapper</definition>
        <argsstring>(XValueType *ptr, const std::size_t *dim)</argsstring>
        <name>MHO_NDArrayWrapper</name>
        <param>
          <type>XValueType *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const std::size_t *</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="56" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aee9301fd354a61b9ee7e0397b123e8d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::~MHO_NDArrayWrapper</definition>
        <argsstring>()</argsstring>
        <name>~MHO_NDArrayWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="67" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a86345bc1efef3142303161022e00a492" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>XIndexTypeS</declname>
            <defname>XIndexTypeS</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
        <definition>std::enable_if&lt; (sizeof...(XIndexTypeS) == RANK), XValueType&amp; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::at</definition>
        <argsstring>(XIndexTypeS... idx)</argsstring>
        <name>at</name>
        <param>
          <type>XIndexTypeS...</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para><ref refid="classhops_1_1MHO__NDArrayWrapper_1a86345bc1efef3142303161022e00a492" kindref="member">at()</ref>: same as operator(...) but with bounds checking with bounds checking </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>uses std::enable_if to do a compile-time check that the number of arguments is the same as the rank of the array <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>varargs The variable arguments (integers) representing the data element indexes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the element at the specified indexes,throws exception if it doesn&apos;t exist </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="224" column="40" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="224" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ad4127abd78c85338cfe57b89c955e255" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>XIndexTypeS</declname>
            <defname>XIndexTypeS</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
        <definition>std::enable_if&lt; (sizeof...(XIndexTypeS) == RANK), const XValueType&amp; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::at</definition>
        <argsstring>(XIndexTypeS... idx) const</argsstring>
        <name>at</name>
        <param>
          <type>XIndexTypeS...</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para><ref refid="classhops_1_1MHO__NDArrayWrapper_1a86345bc1efef3142303161022e00a492" kindref="member">at()</ref>: same as const operator(...) but with bounds checking with bounds checking </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>uses std::enable_if to do a compile-time check that the number of arguments is the same as the rank of the array <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>varargs The variable arguments (integers) representing the data element indexes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a const reference to element at the specified indexes, throws exception if it doesn&apos;t exist </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="245" column="40" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="245" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a25a966b995be2638bb9efbdf469ce463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" kindref="member">iterator</ref></type>
        <definition>iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="628" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="628" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a7ab32f2b9da4b4c686195f37371b322a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" kindref="member">const_iterator</ref></type>
        <definition>const_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="637" column="24" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="637" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ab7cce5b792a946e3318873b8c6e4505d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" kindref="member">const_iterator</ref></type>
        <definition>const_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="639" column="24" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="639" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a169c2e70750de3e520aeedf8c12567af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::CheckIndexValidity</definition>
        <argsstring>(const index_type &amp;idx) const</argsstring>
        <name>CheckIndexValidity</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="552" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="552" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ac2305ae95b3df2288e7ff313670e918b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" kindref="member">const_iterator</ref></type>
        <definition>const_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::citerator_at</definition>
        <argsstring>(std::size_t offset) const</argsstring>
        <name>citerator_at</name>
        <param>
          <type>std::size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="641" column="24" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="641" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a31e8e4d499f86c9e0299057c20f4bb29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> *</type>
        <definition>MHO_NDArrayWrapper* hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <briefdescription>
<para>clone functionality - creates a deep copy of this <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> instance containing a clone of this object&apos;s data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="74" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aa977a1dc4a490d4cd49583de27d06353" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::Copy</definition>
        <argsstring>(const MHO_NDArrayView&lt; XValueType, RANK &gt; &amp;rhs)</argsstring>
        <name>Copy</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayView" kindref="compound">MHO_NDArrayView</ref>&lt; XValueType, RANK &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="311" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="311" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ae07fb3f8a2f4b3e36cfdb8bbbed064ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::Copy</definition>
        <argsstring>(const MHO_NDArrayWrapper &amp;rhs)</argsstring>
        <name>Copy</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="301" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="301" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a0165a498f23f924ad95725f5e997e55f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" kindref="member">const_stride_iterator</ref></type>
        <definition>const_stride_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::cstride_begin</definition>
        <argsstring>(std::size_t stride) const</argsstring>
        <name>cstride_begin</name>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="661" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="661" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a5c58d89c845a173e2426b0bb4b1c7c4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" kindref="member">const_stride_iterator</ref></type>
        <definition>const_stride_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::cstride_end</definition>
        <argsstring>(std::size_t stride) const</argsstring>
        <name>cstride_end</name>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="666" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="666" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a8f57bdd0110d192b55d3a6672e62b237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" kindref="member">const_stride_iterator</ref></type>
        <definition>const_stride_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::cstride_iterator_at</definition>
        <argsstring>(std::size_t offset, std::size_t stride) const</argsstring>
        <name>cstride_iterator_at</name>
        <param>
          <type>std::size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="671" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1afa1b4f2d5198f6bce6da0a0d143e7642" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" kindref="member">iterator</ref></type>
        <definition>iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="630" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="630" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a39b2e463d5abc04ca39a1497ca85f06d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>XValueType *</type>
        <definition>XValueType* hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetData</definition>
        <argsstring>()</argsstring>
        <name>GetData</name>
        <briefdescription>
<para>access to underlying data pointer (unsafe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="262" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a58b9a574093a7850e1cbf776947a66e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const XValueType *</type>
        <definition>const XValueType* hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetData</definition>
        <argsstring>() const</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="264" column="26" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1acc4ae2c057a3483b89df4cdc7b3ec877" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetDimension</definition>
        <argsstring>(std::size_t idx) const</argsstring>
        <name>GetDimension</name>
        <param>
          <type>std::size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Getter for dimension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::size_t) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the first element of the dimension array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="154" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="154" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ada0ccecfc1c12a4d94ce3abcb2114912" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetDimensionArray</definition>
        <argsstring>() const</argsstring>
        <name>GetDimensionArray</name>
        <briefdescription>
<para>Getter for dimension array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index_type&amp;: Reference to the dimension array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="146" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a62cfcd1745753c8ad8f910727e7355d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::size_t *</type>
        <definition>const std::size_t* hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetDimensions</definition>
        <argsstring>() const</argsstring>
        <name>GetDimensions</name>
        <briefdescription>
<para>get the dimensions/shape of the array </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to std::size_t array representing dimensions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="126" column="27" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a345838021c44594b3774f9c3190a0361" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetDimensions</definition>
        <argsstring>(std::size_t *dim) const</argsstring>
        <name>GetDimensions</name>
        <param>
          <type>std::size_t *</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Getter for dimensions, fills passed array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to std::size_t array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="133" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ae2bc7c227bd2de2ae6edc3e3d1c6bf29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetIndicesForOffset</definition>
        <argsstring>(std::size_t offset)</argsstring>
        <name>GetIndicesForOffset</name>
        <param>
          <type>std::size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>invert (memory) offset into array to indexes of the associated element </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="329" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="329" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ae37f0c04e981b6bd7f361252d3fc6917" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetOffsetForIndices</definition>
        <argsstring>(const std::size_t *index)</argsstring>
        <name>GetOffsetForIndices</name>
        <param>
          <type>const std::size_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>compute (memory) offset into array from a set of indexes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="321" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="321" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a026be1a2ce52d4a80ff04ed96aa19991" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetRank</definition>
        <argsstring>() const</argsstring>
        <name>GetRank</name>
        <briefdescription>
<para>Getter for the rank (dimensionality) of the array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::size_t representing the rank of the array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="112" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a0074f7e71474cd03305a7201b02c98e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>get the total size of the array </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of elements in the data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="119" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1adf798630798e2a060eef0bd8388a612c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetStride</definition>
        <argsstring>(std::size_t idx) const</argsstring>
        <name>GetStride</name>
        <param>
          <type>std::size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="188" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a2648fbe1709d5cf3c589094ed16f570f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetStrideArray</definition>
        <argsstring>() const</argsstring>
        <name>GetStrideArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="186" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a98c9989309fb32106c8aa2dd08ecce3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::size_t *</type>
        <definition>const std::size_t* hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetStrides</definition>
        <argsstring>() const</argsstring>
        <name>GetStrides</name>
        <briefdescription>
<para>Getter for element strides (along each dimension) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to the first element of fStrides array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="171" column="27" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a126c37428e5c7ba6d99e4f4672cc974d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::GetStrides</definition>
        <argsstring>(std::size_t *strd) const</argsstring>
        <name>GetStrides</name>
        <param>
          <type>std::size_t *</type>
          <declname>strd</declname>
        </param>
        <briefdescription>
<para>Getter for strides (along each dimension), fills passed array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to std::size_t array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="178" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a532158cedcaba648043e892771ef6f89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" kindref="member">iterator</ref></type>
        <definition>iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::iterator_at</definition>
        <argsstring>(std::size_t offset)</argsstring>
        <name>iterator_at</name>
        <param>
          <type>std::size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="632" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="632" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a1214865d6bfa04ed3ff53a1cafc2c26d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>XIndexTypeS</declname>
            <defname>XIndexTypeS</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), XValueType &amp; &gt;::type</type>
        <definition>std::enable_if&lt; (sizeof...(XIndexTypeS) == RANK), XValueType&amp; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator()</definition>
        <argsstring>(XIndexTypeS... idx)</argsstring>
        <name>operator()</name>
        <param>
          <type>XIndexTypeS...</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>access operator, accepts multiple indices (,,...,) but does no bounds checking </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>uses std::enable_if to do a compile-time check that the number of arguments is the same as the rank of the array <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>varargs The variable arguments (integers) representing the data element indexes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the element at the specified indexes </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="197" column="40" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aab97957bf2e3d5ebd8c3d12ac8924710" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>XIndexTypeS</declname>
            <defname>XIndexTypeS</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), const XValueType &amp; &gt;::type</type>
        <definition>std::enable_if&lt; (sizeof...(XIndexTypeS) == RANK), const XValueType&amp; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator()</definition>
        <argsstring>(XIndexTypeS... idx) const</argsstring>
        <name>operator()</name>
        <param>
          <type>XIndexTypeS...</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>const reference access operator, accepts multiple indices (,,...,) but does no bounds checking </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>uses std::enable_if to do a compile-time check that the number of arguments is the same as the rank of the array <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>varargs The variable arguments (integers) representing the data element indexes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a const reference to element at the specified indexes </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="211" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ac2a845d7480eaf996823c1736327f1d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
        <definition>MHO_NDArrayWrapper&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator*=</definition>
        <argsstring>(const MHO_NDArrayWrapper &amp;anArray)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
          <declname>anArray</declname>
        </param>
        <briefdescription>
<para>operator*= in place point-wise multiplication by another array </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="503" column="35" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="503" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ac97397a9b7bf11058fab28db8997ae73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::<ref refid="structvalue" kindref="compound">value</ref> or std::is_integral&lt; T &gt;::<ref refid="structvalue" kindref="compound">value</ref> or std::is_floating_point&lt; T &gt;::<ref refid="structvalue" kindref="compound">value</ref>, <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp; &gt;::type</type>
        <definition>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper&amp; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator*=</definition>
        <argsstring>(T aScalar)</argsstring>
        <name>operator*=</name>
        <param>
          <type>T</type>
          <declname>aScalar</declname>
        </param>
        <briefdescription>
<para>operator*= in place multiplication by a scalar factor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="456" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="456" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1acd0add8ffe16229e22988cb2d9fa18e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
        <definition>MHO_NDArrayWrapper&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator+=</definition>
        <argsstring>(const MHO_NDArrayWrapper &amp;anArray)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
          <declname>anArray</declname>
        </param>
        <briefdescription>
<para>operator+= in place point-wise addition by another array </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="520" column="35" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="520" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a3182af011c55228158b30f259c018143" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::<ref refid="structvalue" kindref="compound">value</ref> or std::is_integral&lt; T &gt;::<ref refid="structvalue" kindref="compound">value</ref> or std::is_floating_point&lt; T &gt;::<ref refid="structvalue" kindref="compound">value</ref>, <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp; &gt;::type</type>
        <definition>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper&amp; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator+=</definition>
        <argsstring>(T aScalar)</argsstring>
        <name>operator+=</name>
        <param>
          <type>T</type>
          <declname>aScalar</declname>
        </param>
        <briefdescription>
<para>operator+= in place addition by a scalar amount </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="473" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="473" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a55d921915d40d2944a94b3932259b084" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
        <definition>MHO_NDArrayWrapper&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator-=</definition>
        <argsstring>(const MHO_NDArrayWrapper &amp;anArray)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
          <declname>anArray</declname>
        </param>
        <briefdescription>
<para>operator-= in place point-wise subtraction by another array </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="538" column="35" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="538" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a6f43188195639734e28613ce42a0d615" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::<ref refid="structvalue" kindref="compound">value</ref> or std::is_integral&lt; T &gt;::<ref refid="structvalue" kindref="compound">value</ref> or std::is_floating_point&lt; T &gt;::<ref refid="structvalue" kindref="compound">value</ref>, <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp; &gt;::type</type>
        <definition>std::enable_if&lt; std::is_same&lt; XValueType, T &gt;::value or std::is_integral&lt; T &gt;::value or std::is_floating_point&lt; T &gt;::value, MHO_NDArrayWrapper&amp; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator-=</definition>
        <argsstring>(T aScalar)</argsstring>
        <name>operator-=</name>
        <param>
          <type>T</type>
          <declname>aScalar</declname>
        </param>
        <briefdescription>
<para>operator+= in place addition by a scalar amount </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="490" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="490" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a4a5403ca4bcf160b1cf26829b098258c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
        <definition>MHO_NDArrayWrapper&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator=</definition>
        <argsstring>(const MHO_NDArrayWrapper &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="274" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="274" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ae08ecbd9e766174fbbf64f6816754a17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>XValueType &amp;</type>
        <definition>XValueType&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator[]</definition>
        <argsstring>(std::size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="269" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ae7743032f686b99d2036dec6023a1316" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const XValueType &amp;</type>
        <definition>const XValueType&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="271" column="26" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a94df84a1c5370b0f73404e8f1e0da570" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::Resize</definition>
        <argsstring>(const std::size_t *dim)</argsstring>
        <name>Resize</name>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__TableContainer_1a296d158a9afa689ada830cc24759e86f">Resize</reimplementedby>
        <param>
          <type>const std::size_t *</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Destroys contents and resizes using passed dimensions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to external dimension array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="83" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aa8d20352642f23564ae9c5e2c0fa6ce0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>XDimSizeTypeS</declname>
            <defname>XDimSizeTypeS</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(sizeof...(XDimSizeTypeS)==RANK), void &gt;::type</type>
        <definition>std::enable_if&lt; (sizeof...(XDimSizeTypeS) == RANK), void &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::Resize</definition>
        <argsstring>(XDimSizeTypeS... dim)</argsstring>
        <name>Resize</name>
        <param>
          <type>XDimSizeTypeS...</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Resize function that destroys contents and resizes according to dimension arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XDimSizeTypeS</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XDimSizeTypeS </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dimensions as variadic template XDimSizeTypeS... </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="93" column="40" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a9c221f6c4b64086be626754eb2913d88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::SetArray</definition>
        <argsstring>(const XValueType &amp;obj)</argsstring>
        <name>SetArray</name>
        <param>
          <type>const XValueType &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>set all elements in the array to a certain value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="287" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="287" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1af6af1398e46295e3b5df58d03b6eea24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::SetExternalData</definition>
        <argsstring>(XValueType *ptr, const std::size_t *dim)</argsstring>
        <name>SetExternalData</name>
        <param>
          <type>XValueType *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const std::size_t *</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>set data pointer to externally managed array with associated dimensions </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to externally managed XValueType array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of dimension sizes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="105" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1acef2af404b1e035a34f100ea2fbd542d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>XIndexTypeS</declname>
            <defname>XIndexTypeS</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(sizeof...(XIndexTypeS)==RANK), <ref refid="classhops_1_1MHO__NDArrayView" kindref="compound">MHO_NDArrayView</ref>&lt; XValueType, <ref refid="structhops_1_1count__instances__of__type" kindref="compound">count_instances_of_type</ref>&lt; const char *, sizeof...(XIndexTypeS) - 1, XIndexTypeS... &gt;::<ref refid="structvalue" kindref="compound">value</ref> &gt; &gt;::type</type>
        <definition>std::enable_if&lt; (sizeof...(XIndexTypeS) == RANK), MHO_NDArrayView&lt; XValueType, count_instances_of_type&lt; const char*, sizeof...(XIndexTypeS) - 1, XIndexTypeS... &gt;::value &gt; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::SliceView</definition>
        <argsstring>(XIndexTypeS... idx)</argsstring>
        <name>SliceView</name>
        <param>
          <type>XIndexTypeS...</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>creates a slice-view of the array (given n &lt; RANK indexes), return the remaining chunk of the array with freely spanning indexes the placeholder for the free-spanning indexes is the character &quot;:&quot; for example: a ndarray X of RANK=3, and sizes [4,12,32], then SliceView(&quot;:&quot;,3,&quot;:&quot;) returns an <ref refid="classhops_1_1MHO__NDArrayView" kindref="compound">MHO_NDArrayView</ref> of RANK=2, and dimensions [4,32] starting at the location of X(0,3,0), and spanning the data covered by X(&quot;:&quot;,3,&quot;:&quot;) Data of the slice-view points to data owned by original array X </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>value</para>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="381" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="381" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aaf1d901b144e261cd9c7ab83d337d625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" kindref="member">stride_iterator</ref></type>
        <definition>stride_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::stride_begin</definition>
        <argsstring>(std::size_t stride)</argsstring>
        <name>stride_begin</name>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="646" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="646" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ad36853c2a7f4c224e8eef6fe2bf8fff2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" kindref="member">stride_iterator</ref></type>
        <definition>stride_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::stride_end</definition>
        <argsstring>(std::size_t stride)</argsstring>
        <name>stride_end</name>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="651" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="651" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aacdd7954156fc6e121fd9d929c74c9ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" kindref="member">stride_iterator</ref></type>
        <definition>stride_iterator hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::stride_iterator_at</definition>
        <argsstring>(std::size_t offset, std::size_t stride)</argsstring>
        <name>stride_iterator_at</name>
        <param>
          <type>std::size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="656" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="656" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aed809d9fc71513abea9394d3d2bedcfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>XIndexTypeS</declname>
            <defname>XIndexTypeS</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(sizeof...(XIndexTypeS)&lt; RANK), <ref refid="classhops_1_1MHO__NDArrayView" kindref="compound">MHO_NDArrayView</ref>&lt; XValueType, RANK -(sizeof...(XIndexTypeS)) &gt; &gt;::type</type>
        <definition>std::enable_if&lt; (sizeof...(XIndexTypeS) &lt; RANK), MHO_NDArrayView&lt; XValueType, RANK - (sizeof...(XIndexTypeS)) &gt; &gt;::type hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::SubView</definition>
        <argsstring>(XIndexTypeS... idx)</argsstring>
        <name>SubView</name>
        <param>
          <type>XIndexTypeS...</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>creates a sub-view of the array (given n &lt; RANK leading indexes), return the remaining chunk of the array with freely spanning indexes for example: a ndarray X of RANK=3, and sizes [4,12,32], then SubView(2) returns an <ref refid="classhops_1_1MHO__NDArrayView" kindref="compound">MHO_NDArrayView</ref> of RANK=2, and dimensions [12,32] starting at the location of X(2,0,0). Data of the subview points to data owned by X </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="347" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="347" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1a96759a6fc3a3fb947fbadf05891bb5ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>XValueType &amp;</type>
        <definition>XValueType&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::ValueAt</definition>
        <argsstring>(const index_type &amp;idx)</argsstring>
        <name>ValueAt</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="557" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="557" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ab253fae68f9dc32b00828842e0a2b37b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const XValueType &amp;</type>
        <definition>const XValueType&amp; hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::ValueAt</definition>
        <argsstring>(const index_type &amp;idx) const</argsstring>
        <name>ValueAt</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="562" column="26" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1aa8c5dd06d0440052d4cbc8ceada33ef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::ZeroArray</definition>
        <argsstring>()</argsstring>
        <name>ZeroArray</name>
        <briefdescription>
<para>set all elements in the array to zero </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="298" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="298" bodyend="298"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ac7483f201a067e2131c7a55a3919fa60" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::ComputeStrides</definition>
        <argsstring>()</argsstring>
        <name>ComputeStrides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="604" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="604" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NDArrayWrapper_1ad9fb57b986cd5ce52b1576dff7e9fac8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;::Construct</definition>
        <argsstring>(XValueType *ptr, const std::size_t *dim)</argsstring>
        <name>Construct</name>
        <param>
          <type>XValueType *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const std::size_t *</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="573" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="573" bodyend="602"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref> is a class to represent a n-dimensional array (implemented around a 1-d memory array)</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Mon May 11 15:51:26 2020 -0400</para>
</simplesect>
Thu 13 Aug 2020 02:53:11 PM EDT </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="12">
        <label>hops::MHO_TableContainer&lt; visibility_element_type, baseline_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>hops::MHO_TableContainer&lt; weight_element_type, baseline_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>hops::MHO_TableContainer&lt; visibility_element_type, mbd_dr_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>hops::MHO_TableContainer&lt; pcal_phasor_type, multitone_pcal_axis_type &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>hops::MHO_TableContainer&lt; std::complex&lt; double &gt;, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>hops::MHO_TableContainer&lt; double, mbd_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;</label>
        <link refid="classhops_1_1MHO__NDArrayWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>hops::MHO_TableContainer&lt; visibility_element_type, mbd_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_ExtensibleElement</label>
        <link refid="classhops_1_1MHO__ExtensibleElement"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>hops::MHO_Element</label>
        <link refid="classhops_1_1MHO__Element"/>
      </node>
      <node id="11">
        <label>hops::MHO_TableContainer&lt; std::complex&lt; double &gt;, pcal_axis_pack &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>hops::MHO_TableContainer&lt; double, MHO_AxisPack&lt; MHO_Axis&lt; double &gt; &gt; &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hops::MHO_NDArrayWrapper&lt; XValueType, RANK &gt;</label>
        <link refid="classhops_1_1MHO__NDArrayWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_ExtensibleElement</label>
        <link refid="classhops_1_1MHO__ExtensibleElement"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fExtensions</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; hops::MHO_Element * &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>hops::MHO_Element</label>
        <link refid="classhops_1_1MHO__Element"/>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" line="40" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper.hh" bodystart="42" bodyend="675"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__ExtensibleElement_1a6196efd2aa51a40c710979222c924a7a" prot="public" virt="virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>Accept</name></member>
      <member refid="classhops_1_1MHO__ExtensibleElement_1a19a425cc45fb610c718c5d2b0dbb667b" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>AsExtension</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a86345bc1efef3142303161022e00a492" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>at</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ad4127abd78c85338cfe57b89c955e255" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>at</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a25a966b995be2638bb9efbdf469ce463" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>begin</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a7ab32f2b9da4b4c686195f37371b322a" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>cbegin</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ab7cce5b792a946e3318873b8c6e4505d" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>cend</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a169c2e70750de3e520aeedf8c12567af" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>CheckIndexValidity</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ac2305ae95b3df2288e7ff313670e918b" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>citerator_at</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a31e8e4d499f86c9e0299057c20f4bb29" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>Clone</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ac7483f201a067e2131c7a55a3919fa60" prot="private" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>ComputeStrides</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>const_iterator</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>const_stride_iterator</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ad9fb57b986cd5ce52b1576dff7e9fac8" prot="private" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>Construct</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ae07fb3f8a2f4b3e36cfdb8bbbed064ee" prot="public" virt="virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>Copy</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aa977a1dc4a490d4cd49583de27d06353" prot="public" virt="virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>Copy</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a0165a498f23f924ad95725f5e997e55f" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>cstride_begin</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a5c58d89c845a173e2426b0bb4b1c7c4d" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>cstride_end</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a8f57bdd0110d192b55d3a6672e62b237" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>cstride_iterator_at</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1afa1b4f2d5198f6bce6da0a0d143e7642" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>end</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ab32714f5aad751803a6ec1cd20a2c953" prot="private" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>fData</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ad7a977174d12731a4fed8c65f59ff8a4" prot="private" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>fDims</name></member>
      <member refid="classhops_1_1MHO__ExtensibleElement_1ac7053fbca67e03532f14b4f47e0a6b49" prot="protected" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>fExtensions</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ac5fa0ae3485c8534642035f7f8d2ce23" prot="private" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>fStrides</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ac9c89f5f5ad768dfc5836459580dbd95" prot="private" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>fTmp</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a39b2e463d5abc04ca39a1497ca85f06d" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetData</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a58b9a574093a7850e1cbf776947a66e3" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetData</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1acc4ae2c057a3483b89df4cdc7b3ec877" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetDimension</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ada0ccecfc1c12a4d94ce3abcb2114912" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetDimensionArray</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a62cfcd1745753c8ad8f910727e7355d6" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetDimensions</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a345838021c44594b3774f9c3190a0361" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetDimensions</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ae2bc7c227bd2de2ae6edc3e3d1c6bf29" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetIndicesForOffset</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ae37f0c04e981b6bd7f361252d3fc6917" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetOffsetForIndices</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a026be1a2ce52d4a80ff04ed96aa19991" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetRank</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a0074f7e71474cd03305a7201b02c98e1" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetSize</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1adf798630798e2a060eef0bd8388a612c" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetStride</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a2648fbe1709d5cf3c589094ed16f570f" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetStrideArray</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a98c9989309fb32106c8aa2dd08ecce3c" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetStrides</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a126c37428e5c7ba6d99e4f4672cc974d" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>GetStrides</name></member>
      <member refid="classhops_1_1MHO__ExtensibleElement_1a838927fa3c01474e519efe61e4edf6ca" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>HasExtension</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>index_type</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>iterator</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a532158cedcaba648043e892771ef6f89" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>iterator_at</name></member>
      <member refid="classhops_1_1MHO__ExtensibleElement_1afe17d8f32b77738b06ff188eea23aeac" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>MakeExtension</name></member>
      <member refid="classhops_1_1MHO__Element_1a8457a2bfa206699701a2163585b6cc5f" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>MHO_Element</name></member>
      <member refid="classhops_1_1MHO__ExtensibleElement_1a08e0ac36b7baa0b3d4f5d3390d636816" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>MHO_ExtensibleElement</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a10c4d9ae788a0da022e078bcc5131655" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>MHO_NDArrayWrapper</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ae09476aea6805570b9cbe77119b680e1" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>MHO_NDArrayWrapper</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ab2158a0b07c120c2b59e6fc0948264c4" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>MHO_NDArrayWrapper</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a9722a0044a9e00d23cc8b3b605788ac8" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>MHO_NDArrayWrapper</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a1214865d6bfa04ed3ff53a1cafc2c26d" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator()</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aab97957bf2e3d5ebd8c3d12ac8924710" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator()</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ac97397a9b7bf11058fab28db8997ae73" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator*=</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ac2a845d7480eaf996823c1736327f1d4" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator*=</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a3182af011c55228158b30f259c018143" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator+=</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1acd0add8ffe16229e22988cb2d9fa18e0" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator+=</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a6f43188195639734e28613ce42a0d615" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator-=</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a55d921915d40d2944a94b3932259b084" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator-=</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a4a5403ca4bcf160b1cf26829b098258c" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator=</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ae08ecbd9e766174fbbf64f6816754a17" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator[]</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ae7743032f686b99d2036dec6023a1316" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>operator[]</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a141382b44659721f53439ab6f5f090b7" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>rank</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a94df84a1c5370b0f73404e8f1e0da570" prot="public" virt="virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>Resize</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aa8d20352642f23564ae9c5e2c0fa6ce0" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>Resize</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a9c221f6c4b64086be626754eb2913d88" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>SetArray</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1af6af1398e46295e3b5df58d03b6eea24" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>SetExternalData</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1acef2af404b1e035a34f100ea2fbd542d" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>SliceView</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aaf1d901b144e261cd9c7ab83d337d625" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>stride_begin</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ad36853c2a7f4c224e8eef6fe2bf8fff2" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>stride_end</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>stride_iterator</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aacdd7954156fc6e121fd9d929c74c9ec" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>stride_iterator_at</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aed809d9fc71513abea9394d3d2bedcfb" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>SubView</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a56edb371b3b550d1ed4ac66f350d0570" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>value_type</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1a96759a6fc3a3fb947fbadf05891bb5ce" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>ValueAt</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1ab253fae68f9dc32b00828842e0a2b37b" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>ValueAt</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aa8c5dd06d0440052d4cbc8ceada33ef0" prot="public" virt="non-virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>ZeroArray</name></member>
      <member refid="classhops_1_1MHO__Element_1aea329679a16385ae6ac6986128360887" prot="public" virt="virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>~MHO_Element</name></member>
      <member refid="classhops_1_1MHO__ExtensibleElement_1a3ebd5b1b0bf0726ac545354cab4d3dff" prot="public" virt="virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>~MHO_ExtensibleElement</name></member>
      <member refid="classhops_1_1MHO__NDArrayWrapper_1aee9301fd354a61b9ee7e0397b123e8d6" prot="public" virt="virtual"><scope>hops::MHO_NDArrayWrapper</scope><name>~MHO_NDArrayWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
