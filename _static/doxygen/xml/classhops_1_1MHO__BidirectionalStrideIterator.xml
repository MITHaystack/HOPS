<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__BidirectionalStrideIterator" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_BidirectionalStrideIterator</compoundname>
    <includes refid="MHO__BidirectionalStrideIterator_8hh" local="no">MHO_BidirectionalStrideIterator.hh</includes>
    <templateparamlist>
      <param>
        <type>typename XValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalStrideIterator_1a397d6853d00035c9993c4231d8bc39d9" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="29" column="32" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalStrideIterator_1a22a3310e7a7d2b81d718001374f45d51" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>typedef std::bidirectional_iterator_tag hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="28" column="49" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" prot="public" static="no">
        <type>XValueType *</type>
        <definition>typedef XValueType* hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="27" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalStrideIterator_1a0859fe0b1bbcae94a52cc42dbc190529" prot="public" static="no">
        <type>XValueType &amp;</type>
        <definition>typedef XValueType&amp; hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="26" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">MHO_BidirectionalStrideIterator</ref></type>
        <definition>typedef MHO_BidirectionalStrideIterator hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::self_type</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="24" column="49" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalStrideIterator_1a9a8692deafed4319971d5457005ea86d" prot="public" static="no">
        <type>XValueType</type>
        <definition>typedef XValueType hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="25" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalStrideIterator_1a1076712d97aad75ca03391a9151797e4" prot="private" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::fBegin</definition>
        <argsstring></argsstring>
        <name>fBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="125" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalStrideIterator_1a73523bcede785689e294b781f8f1847c" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::fLength</definition>
        <argsstring></argsstring>
        <name>fLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="127" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalStrideIterator_1a20b11b3138be8b9cdc113ccc13ffa930" prot="private" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::fPtr</definition>
        <argsstring></argsstring>
        <name>fPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="126" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalStrideIterator_1abe78163d68537fd195316e2a90444ee6" prot="private" static="no" mutable="no">
        <type>ptrdiff_t</type>
        <definition>ptrdiff_t hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::fStride</definition>
        <argsstring></argsstring>
        <name>fStride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="128" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1abc24cb1161b492c9d80e28329eefac74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::MHO_BidirectionalStrideIterator</definition>
        <argsstring>(const self_type &amp;copy)</argsstring>
        <name>MHO_BidirectionalStrideIterator</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="34" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1ae274174e4ba5a959c70e0ead8eca95b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::MHO_BidirectionalStrideIterator</definition>
        <argsstring>(pointer begin_ptr, pointer ptr, std::size_t length, std::size_t stride)</argsstring>
        <name>MHO_BidirectionalStrideIterator</name>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
          <declname>begin_ptr</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="31" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1ad21945f21542c4a5f704efbdc4892b26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::GetOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="120" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1ab75ae062e53f2aa1ee8bcc53a5f56407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::GetPtr</definition>
        <argsstring>()</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="116" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a49c58d43d9de709758775fc23df138cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::GetPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="118" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a81de647102a33a0ab1c46b527299cf4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="122" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1ac4b5b5ad62337e9c7a7a3fbe4f13a462" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator!=</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="114" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a8198c3fe42e78b13d358ef38b116587e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1a0859fe0b1bbcae94a52cc42dbc190529" kindref="member">reference</ref></type>
        <definition>reference hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="92" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1aeeadc669076d2845659e23e951233246" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1a0859fe0b1bbcae94a52cc42dbc190529" kindref="member">reference</ref></type>
        <definition>const reference hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="94" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a434bff0a6d5064480ab6c7ead5328986" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator+</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="77" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a27d15552f438da1d364618c5d8907e67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="37" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a69ee0ae179e3d568329e5529ab4bedaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="49" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1ab3d685c5e4c52a0057546480ba08f8d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator+=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="65" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1acadd1fa84b3691303e69c16414d2c2a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ptrdiff_t</type>
        <definition>std::ptrdiff_t hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const self_type &amp;iter)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="63" column="24" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1ad94eaa109a2623809cf65906d4e6d498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="84" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a600cff2def0ca8224ee570c648249136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="43" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a157c320a24e4a07097ab401264c9700a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="56" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1abeb18f4e87c450a88886861ef27afa1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator-=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="71" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1aef5a72b3c38ec91336a9748eef6e8fff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="96" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a7554f0edae14b225376785ad8ac6aa23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="98" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a193c50cfbb5678820bd08e5042deb20f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator=</definition>
        <argsstring>(const self_type &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="100" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="100" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalStrideIterator_1a4e528bfe3925d39dacf09ae17e49d8e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalStrideIterator&lt; XValueType &gt;::operator==</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="112" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="112" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">MHO_BidirectionalStrideIterator</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>provides an iterator over a object in either increasing or decreasing index direction, with strided access</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Sat Oct 2 04:34:18 2021 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="21" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="22" bodyend="129"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a397d6853d00035c9993c4231d8bc39d9" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>difference_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a1076712d97aad75ca03391a9151797e4" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>fBegin</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a73523bcede785689e294b781f8f1847c" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>fLength</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a20b11b3138be8b9cdc113ccc13ffa930" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>fPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1abe78163d68537fd195316e2a90444ee6" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>fStride</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1ad21945f21542c4a5f704efbdc4892b26" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>GetOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1ab75ae062e53f2aa1ee8bcc53a5f56407" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a49c58d43d9de709758775fc23df138cc" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a81de647102a33a0ab1c46b527299cf4f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>IsValid</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a22a3310e7a7d2b81d718001374f45d51" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>iterator_category</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1ae274174e4ba5a959c70e0ead8eca95b5" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>MHO_BidirectionalStrideIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1abc24cb1161b492c9d80e28329eefac74" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>MHO_BidirectionalStrideIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1ac4b5b5ad62337e9c7a7a3fbe4f13a462" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator!=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a8198c3fe42e78b13d358ef38b116587e" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1aeeadc669076d2845659e23e951233246" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a434bff0a6d5064480ab6c7ead5328986" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator+</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a27d15552f438da1d364618c5d8907e67" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a69ee0ae179e3d568329e5529ab4bedaa" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1ab3d685c5e4c52a0057546480ba08f8d2" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator+=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1acadd1fa84b3691303e69c16414d2c2a5" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1ad94eaa109a2623809cf65906d4e6d498" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a600cff2def0ca8224ee570c648249136" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a157c320a24e4a07097ab401264c9700a" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1abeb18f4e87c450a88886861ef27afa1c" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator-=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1aef5a72b3c38ec91336a9748eef6e8fff" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a7554f0edae14b225376785ad8ac6aa23" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a193c50cfbb5678820bd08e5042deb20f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a4e528bfe3925d39dacf09ae17e49d8e3" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>operator==</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1af9683993836338bb74eb8214352c6ed1" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>pointer</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a0859fe0b1bbcae94a52cc42dbc190529" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>reference</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1aa4d080cf9c5a5f3cda4b74474271b4c1" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>self_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalStrideIterator_1a9a8692deafed4319971d5457005ea86d" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalStrideIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
