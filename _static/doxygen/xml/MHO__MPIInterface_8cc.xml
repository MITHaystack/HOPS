<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="MHO__MPIInterface_8cc" kind="file" language="C++">
    <compoundname>MHO_MPIInterface.cc</compoundname>
    <includes refid="MHO__MPIInterface_8hh" local="yes">MHO_MPIInterface.hh</includes>
    <incdepgraph>
      <node id="15">
        <label>atomic</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="19">
        <label>MHO_Profiler.hh</label>
        <link refid="MHO__Profiler_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="4">
        <label>MHO_Message.hh</label>
        <link refid="MHO__Message_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ostream</label>
      </node>
      <node id="2">
        <label>MHO_MPIInterface.hh</label>
        <link refid="MHO__MPIInterface_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>MHO_TestAssertions.hh</label>
        <link refid="MHO__TestAssertions_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ctime</label>
      </node>
      <node id="22">
        <label>MHO_Timer.hh</label>
        <link refid="MHO__Timer_8hh"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>MHO_SelfName.hh</label>
        <link refid="MHO__SelfName_8hh"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>MHO_MPIInterface.cc</label>
        <link refid="MHO__MPIInterface_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>mutex</label>
      </node>
      <node id="3">
        <label>mpi.h</label>
      </node>
      <node id="16">
        <label>thread</label>
      </node>
      <node id="10">
        <label>set</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="20">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehops">hops</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="MHO__MPIInterface_8cc_1a7cb9bc6ca6e3775c84241637dc46766d" prot="public" static="no">
        <name>HOPS_MPI_SIZE_T</name>
        <initializer>MPI_UNSIGNED_CHAR</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" line="18" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__MPIInterface_8cc_1a7b2d4bae5dd1ad1dc5c4bcba2a97e4c2" prot="public" static="no">
        <name>HOST_DETERMINATION_TAG</name>
        <initializer>998</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" line="13" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__MPIInterface_8cc_1afdda3abc919250e1e4a526a868f2dba8" prot="public" static="no">
        <name>LOCALID_DETERMINATION_TAG</name>
        <initializer>997</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" line="14" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__MPIInterface_8cc_1ae9267a3d267c54be2838a541b186af20" prot="public" static="no">
        <name>MSG_TAG</name>
        <initializer>999</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" line="12" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__MPIInterface_8hh" kindref="compound">MHO_MPIInterface.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LOCAL_RANK_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hostname<sp/>utils,<sp/>should<sp/>be<sp/>available<sp/>on<sp/>on<sp/>POSIX<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_TAG<sp/>999</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HOST_DETERMINATION_TAG<sp/>998</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCALID_DETERMINATION_TAG<sp/>997</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//deal<sp/>with<sp/>the<sp/>discrepancy<sp/>in<sp/>size<sp/>between<sp/>size_t<sp/>and<sp/>unsigned<sp/>int<sp/>in<sp/>MPI<sp/>comms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SIZE_MAX<sp/>==<sp/>UCHAR_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HOPS_MPI_SIZE_T<sp/>MPI_UNSIGNED_CHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZE_MAX<sp/>==<sp/>USHRT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HOPS_MPI_SIZE_T<sp/>MPI_UNSIGNED_SHORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZE_MAX<sp/>==<sp/>UINT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HOPS_MPI_SIZE_T<sp/>MPI_UNSIGNED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZE_MAX<sp/>==<sp/>ULONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HOPS_MPI_SIZE_T<sp/>MPI_UNSIGNED_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZE_MAX<sp/>==<sp/>ULLONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HOPS_MPI_SIZE_T<sp/>MPI_UNSIGNED_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>&quot;Cannot<sp/>determine<sp/>size<sp/>of<sp/>size_t<sp/>for<sp/>MPI<sp/>Comms.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehops" kindref="compound">hops</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">MHO_MPIInterface*<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ae18f46995f832fe47d11bfb41501cd27" kindref="member">MHO_MPIInterface::fMPIInterface</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="classhops_1_1MHO__MPIInterface_1aab52f6718fe26c8caf3612f754789be1" kindref="member">MHO_MPIInterface::MHO_MPIInterface</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a63cd737749bc018be1eb5e36d2d76d1f" kindref="member">fLocalProcessID</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a87eb0cd69f58963f23bf14e0852a61f3" kindref="member">fSubGroupRank</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1af8b6f1fcaaeab595c39a1044b5f56499" kindref="member">fNSubGroupProcesses</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a37d2f9144bda63c583fc088a2a9a7469" kindref="member">fPartnerProcessID</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ace6bcf5d716aae5301c68e161344f4bf" kindref="member">fSplitMode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classhops_1_1MHO__MPIInterface_1a8dfeca2754a801ff12b18bb93798b75a" kindref="member">MHO_MPIInterface::~MHO_MPIInterface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ac05d746a41145a038e35a3cb78571019" kindref="member">MHO_MPIInterface::Initialize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>argv,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split_mode)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Initialized(&amp;initialized);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!initialized)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Init(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//global<sp/>rank/ID<sp/>of<sp/>this<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_rank(MPI_COMM_WORLD,<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>out<sp/>how<sp/>many<sp/>processes<sp/>are<sp/>being<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_size(MPI_COMM_WORLD,<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1a1f24dc78f2cec992c3a9752db555b06d" kindref="member">msg_warn</ref>(</highlight><highlight class="stringliteral">&quot;mpi_interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>MPI<sp/>processes<sp/>found,<sp/>not<sp/>running<sp/>in<sp/>an<sp/>MPI<sp/>context.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!initialized)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1a70d2a69334c19db04365eb32a1d26447" kindref="member">msg_info</ref>(</highlight><highlight class="stringliteral">&quot;mpi_interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>MPI,<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>processes.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>determine<sp/>the<sp/>local<sp/>rank<sp/>of<sp/>this<sp/>process<sp/>(indexed<sp/>from<sp/>zero)<sp/>on<sp/>the<sp/>local<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>example,<sp/>if<sp/>processes<sp/>(0,2,5)<sp/>are<sp/>running<sp/>on<sp/>host<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>processes<sp/>(1,3,4)<sp/>are<sp/>running<sp/>on<sp/>host<sp/>B,<sp/>then<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//local<sp/>rank<sp/>of<sp/>process<sp/>3<sp/>is<sp/>1,<sp/>and<sp/>the<sp/>local<sp/>rank<sp/>of<sp/>process<sp/>5<sp/>is<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>useful<sp/>for<sp/>when<sp/>cooperative<sp/>tasks<sp/>need<sp/>to<sp/>be<sp/>completed<sp/>on<sp/>a<sp/>local<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ae22eb4418d99e36c32339b5c3eff0599" kindref="member">DetermineLocalRank</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ace6bcf5d716aae5301c68e161344f4bf" kindref="member">fSplitMode</ref><sp/>=<sp/>split_mode;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//construct<sp/>groups/communicators<sp/>to<sp/>evenly<sp/>split<sp/>up<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1adae0399d810bb8df980c1bd5ddc9f844" kindref="member">SetupSubGroups</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cannot<sp/>make<sp/>a<sp/>valid<sp/>even/odd<sp/>split,<sp/>so<sp/>revert<sp/>to<sp/>standard<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classhops_1_1MHO__MPIInterface_1a05173d87213b0e0d78f69c1596d6c2c0" kindref="member">fValidSplit</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ace6bcf5d716aae5301c68e161344f4bf" kindref="member">fSplitMode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a8e733880f5796665aa38c8a47aeaf697" kindref="member">MHO_MPIInterface::Finalize</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//shut<sp/>down<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finalized<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Finalized(&amp;finalized);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!finalized)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Finalize();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">MHO_MPIInterface*<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a6b58a044628cbeda3a8d36764579d9b7" kindref="member">MHO_MPIInterface::GetInstance</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//singleton<sp/>interface<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ae18f46995f832fe47d11bfb41501cd27" kindref="member">fMPIInterface</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ae18f46995f832fe47d11bfb41501cd27" kindref="member">fMPIInterface</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1aab52f6718fe26c8caf3612f754789be1" kindref="member">MHO_MPIInterface</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ae18f46995f832fe47d11bfb41501cd27" kindref="member">fMPIInterface</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a59de15aba08cbc766b8b70ee52c3a4af" kindref="member">MHO_MPIInterface::BeginSequentialProcess</ref>()</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a8b8297ee16e54d52ad181841cceccbe2" kindref="member">GlobalBarrier</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Recv(&amp;flag,<sp/>1,<sp/>MPI_INT,<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>-<sp/>1,<sp/>50,<sp/>MPI_COMM_WORLD,<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1a47e02e7096c5ea79e668b3d27466ebfe" kindref="member">fStatus</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a4fdae43146158a3072e71ecbdc4137af" kindref="member">MHO_MPIInterface::EndSequentialProcess</ref>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>&lt;<sp/>(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Send(&amp;flag,<sp/>1,<sp/>MPI_INT,<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>+<sp/>1,<sp/>50,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a8b8297ee16e54d52ad181841cceccbe2" kindref="member">GlobalBarrier</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a2d22dffe4baccdc47ef2718cd399f94c" kindref="member">MHO_MPIInterface::PrintMessage</ref>(std::string<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref><sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;mpi_interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MPI<sp/>failed<sp/>to<sp/>initialize.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;mpi_interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>was:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>n_char<sp/>=<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>.size();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::size_t<sp/>&gt;<sp/>in_msg_sizes;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::size_t<sp/>&gt;<sp/>out_msg_sizes;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>in_msg_sizes.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>out_msg_sizes.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>in_msg_sizes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]<sp/>=<sp/>n_char;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//obtain<sp/>the<sp/>message<sp/>sizes<sp/>from<sp/>all<sp/>of<sp/>the<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allreduce(&amp;(in_msg_sizes[0]),<sp/>&amp;(out_msg_sizes[0]),<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/><ref refid="MHO__MPIInterface_8cc_1a7cb9bc6ca6e3775c84241637dc46766d" kindref="member">HOPS_MPI_SIZE_T</ref>,<sp/>MPI_SUM,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//compute<sp/>the<sp/>total<sp/>message<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>total_msg_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::size_t<sp/>&gt;<sp/>msg_start_indexes;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_start_indexes.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_msg_size<sp/>+=<sp/>out_msg_sizes[i];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>j++)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_start_indexes[i]<sp/>+=<sp/>out_msg_sizes[j];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>buffers<sp/>to<sp/>reduce<sp/>all<sp/>of<sp/>the<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>char<sp/>&gt;<sp/>buf;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>buf.resize(total_msg_size);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>the<sp/>appropriate<sp/>section<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[msg_start_indexes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]<sp/>+<sp/>i]<sp/>=<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>.at(i);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Status<sp/><ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Recv(&amp;(buf[msg_start_indexes[i]]),<sp/>out_msg_sizes[i],<sp/>MPI_CHAR,<sp/>i,<sp/><ref refid="MHO__MPIInterface_8cc_1ae9267a3d267c54be2838a541b186af20" kindref="member">MSG_TAG</ref>,<sp/>MPI_COMM_WORLD,<sp/>&amp;<ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Send(&amp;(buf[msg_start_indexes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]]),<sp/>out_msg_sizes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>],<sp/>MPI_CHAR,<sp/>0,<sp/><ref refid="MHO__MPIInterface_8cc_1ae9267a3d267c54be2838a541b186af20" kindref="member">MSG_TAG</ref>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>to<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>final_output;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>:<sp/>buf)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_output<sp/>&lt;&lt;<sp/>c;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>full_message<sp/>=<sp/>final_output.str();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//split<sp/>the<sp/>messages<sp/>into<sp/>separate<sp/>lines<sp/>so<sp/>we<sp/>can<sp/>correctly<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>lines;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/>prev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((pos<sp/>=<sp/>full_message.find(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>prev))<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.push_back(full_message.substr(prev,<sp/>pos<sp/>-<sp/>prev));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>pos<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lines.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//message<sp/>has<sp/>no<sp/>newline<sp/>characters,<sp/>so<sp/>push<sp/>the<sp/>whole<sp/>message<sp/>into<sp/>one<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.push_back(full_message);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>message<sp/>one<sp/>line<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lines.size();<sp/>i++)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1a70d2a69334c19db04365eb32a1d26447" kindref="member">msg_info</ref>(</highlight><highlight class="stringliteral">&quot;mpi_interface&quot;</highlight><highlight class="normal">,<sp/>lines[i]<sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a8308c741d05fd1a474b273d67fcb12e3" kindref="member">MHO_MPIInterface::BroadcastString</ref>(std::string&amp;<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>are<sp/>the<sp/>root/master<sp/>process,<sp/>figure<sp/>out<sp/>the<sp/>size<sp/>of<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>msg_size<sp/>=<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>.size();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>broadcast<sp/>size<sp/>of<sp/>the<sp/>message<sp/>to<sp/>the<sp/>other<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Bcast(&amp;msg_size,<sp/>1,<sp/>MPI_UNSIGNED,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>some<sp/>buffer<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>buf;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>buf.resize(msg_size);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>broadcast<sp/>the<sp/>message<sp/>contents<sp/>to<sp/>all<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Bcast(&amp;(buf[0]),<sp/>msg_size,<sp/>MPI_CHAR,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>every<sp/>process<sp/>should<sp/>have<sp/>the<sp/>root/master&apos;s<sp/>msg<sp/>in<sp/>the<sp/>buffer,<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref><sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ae22eb4418d99e36c32339b5c3eff0599" kindref="member">MHO_MPIInterface::DetermineLocalRank</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LOCAL_RANK_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>machine&apos;s<sp/>hostname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>host_name[256];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_val<sp/>=<sp/>gethostname(host_name,<sp/>256);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret_val<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1abe5a333c46f4dfc7cd3601865c9252d4" kindref="member">msg_fatal</ref>(</highlight><highlight class="stringliteral">&quot;mpi_interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;host<sp/>name<sp/>retrieval<sp/>error,<sp/>MPI<sp/>cannot<sp/>be<sp/>used&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a6b58a044628cbeda3a8d36764579d9b7" kindref="member">MHO_MPIInterface::GetInstance</ref>()-&gt;<ref refid="classhops_1_1MHO__MPIInterface_1a8e733880f5796665aa38c8a47aeaf697" kindref="member">Finalize</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::exit(1);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>hostname_ss;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname_ss<sp/>&lt;&lt;<sp/>host_name[count];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(host_name[count]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>count<sp/>&lt;<sp/>256);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>hostname<sp/>=<sp/>hostname_ss.str();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a4293b8ca683fba3de489f4f0ecd598c4" kindref="member">fHostName</ref><sp/>=<sp/>hostname;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>we<sp/>have<sp/>to<sp/>collect<sp/>all<sp/>of<sp/>the<sp/>hostnames<sp/>that<sp/>are<sp/>running<sp/>a<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>n_char<sp/>=<sp/>hostname.size();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::size_t<sp/>&gt;<sp/>in_msg_sizes;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::size_t<sp/>&gt;<sp/>out_msg_sizes;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>in_msg_sizes.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>out_msg_sizes.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>in_msg_sizes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]<sp/>=<sp/>n_char;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//obtain<sp/>the<sp/>message<sp/>sizes<sp/>from<sp/>all<sp/>of<sp/>the<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allreduce(&amp;(in_msg_sizes[0]),<sp/>&amp;(out_msg_sizes[0]),<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/><ref refid="MHO__MPIInterface_8cc_1a7cb9bc6ca6e3775c84241637dc46766d" kindref="member">HOPS_MPI_SIZE_T</ref>,<sp/>MPI_SUM,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//compute<sp/>the<sp/>total<sp/>message<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>total_msg_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::size_t<sp/>&gt;<sp/>msg_start_indexes;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_start_indexes.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_msg_size<sp/>+=<sp/>out_msg_sizes[i];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>j++)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_start_indexes[i]<sp/>+=<sp/>out_msg_sizes[j];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>buffers<sp/>to<sp/>reduce<sp/>all<sp/>of<sp/>the<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>char<sp/>&gt;<sp/>buf;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>buf.resize(total_msg_size);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>the<sp/>appropriate<sp/>section<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hostname.size();<sp/>i++)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[msg_start_indexes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]<sp/>+<sp/>i]<sp/>=<sp/>hostname.at(i);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reduce<sp/>the<sp/>buffer<sp/>across<sp/>all<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Status<sp/><ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Recv(&amp;(buf[msg_start_indexes[i]]),<sp/>out_msg_sizes[i],<sp/>MPI_CHAR,<sp/>i,<sp/><ref refid="MHO__MPIInterface_8cc_1a7b2d4bae5dd1ad1dc5c4bcba2a97e4c2" kindref="member">HOST_DETERMINATION_TAG</ref>,<sp/>MPI_COMM_WORLD,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>root_rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Send(&amp;(buf[msg_start_indexes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]]),<sp/>out_msg_sizes[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>],<sp/>MPI_CHAR,<sp/>root_rank,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__MPIInterface_8cc_1a7b2d4bae5dd1ad1dc5c4bcba2a97e4c2" kindref="member">HOST_DETERMINATION_TAG</ref>,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>broadcast<sp/>the<sp/>complete<sp/>list<sp/>of<sp/>hostnames<sp/>to<sp/>all<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Bcast(&amp;(buf[0]),<sp/>total_msg_size,<sp/>MPI_CHAR,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>every<sp/>node<sp/>has<sp/>a<sp/>list<sp/>of<sp/>all<sp/>host<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>now<sp/>need<sp/>to<sp/>figure<sp/>out<sp/>how<sp/>many<sp/>other<sp/>processes<sp/>are<sp/>also<sp/>running<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>same<sp/>host,<sp/>and<sp/>how<sp/>many<sp/>devices<sp/>are<sp/>available<sp/>on<sp/>this<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//then<sp/>we<sp/>can<sp/>distribute<sp/>the<sp/>processes<sp/>equitably<sp/>to<sp/>each<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>hostname_list;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>hostname_list.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname_list[i]<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>out_msg_sizes[i];<sp/>j++)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostname_list[i].push_back(buf[msg_start_indexes[i]<sp/>+<sp/>j]);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//collect<sp/>all<sp/>the<sp/>process<sp/>ids<sp/>of<sp/>all<sp/>the<sp/>process<sp/>running<sp/>on<sp/>this<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ac3709bb544193b8e87a90345ceb6cecd" kindref="member">fCoHostedProcessIDs</ref>.clear();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hostname<sp/>==<sp/>hostname_list[i])</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1ac3709bb544193b8e87a90345ceb6cecd" kindref="member">fCoHostedProcessIDs</ref>.push_back(i);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//determine<sp/>the<sp/>&apos;local&apos;<sp/>rank<sp/>of<sp/>this<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ac3709bb544193b8e87a90345ceb6cecd" kindref="member">fCoHostedProcessIDs</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ac3709bb544193b8e87a90345ceb6cecd" kindref="member">fCoHostedProcessIDs</ref>[i]<sp/>==<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a63cd737749bc018be1eb5e36d2d76d1f" kindref="member">fLocalProcessID</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__MPIInterface_1adae0399d810bb8df980c1bd5ddc9f844" kindref="member">MHO_MPIInterface::SetupSubGroups</ref>()</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LOCAL_RANK_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>retrieve<sp/>the<sp/>local<sp/>rank<sp/>from<sp/>each<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>make<sp/>a<sp/>associative<sp/>map<sp/>betweek<sp/>global-rank<sp/>and<sp/>local-rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>local_ranks;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>local_ranks.resize(<ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>local_ranks[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]<sp/>=<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a63cd737749bc018be1eb5e36d2d76d1f" kindref="member">fLocalProcessID</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reduce<sp/>the<sp/>buffer<sp/>across<sp/>all<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Status<sp/><ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Recv(&amp;(local_ranks[i]),<sp/>1,<sp/>MPI_INT,<sp/>i,<sp/><ref refid="MHO__MPIInterface_8cc_1afdda3abc919250e1e4a526a868f2dba8" kindref="member">LOCALID_DETERMINATION_TAG</ref>,<sp/>MPI_COMM_WORLD,<sp/>&amp;<ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>root_rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Send(&amp;(local_ranks[<ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref>]),<sp/>1,<sp/>MPI_INT,<sp/>root_rank,<sp/><ref refid="MHO__MPIInterface_8cc_1afdda3abc919250e1e4a526a868f2dba8" kindref="member">LOCALID_DETERMINATION_TAG</ref>,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>broadcast<sp/>the<sp/>complete<sp/>list<sp/>of<sp/>hostnames<sp/>to<sp/>all<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Bcast(&amp;(local_ranks[0]),<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>,<sp/>MPI_INT,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>every<sp/>process<sp/>has<sp/>a<sp/>list<sp/>of<sp/>the<sp/>local<sp/>rank<sp/>associated<sp/>with<sp/>every<sp/>other<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>we<sp/>can<sp/>proceed<sp/>to<sp/>determine<sp/>which<sp/>group<sp/>they<sp/>below<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>even_members;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>odd_members;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(local_ranks[i]<sp/>%<sp/>2<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>even_members.push_back(i);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odd_members.push_back(i);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a05173d87213b0e0d78f69c1596d6c2c0" kindref="member">fValidSplit</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(even_members.size()<sp/>==<sp/>odd_members.size())</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a05173d87213b0e0d78f69c1596d6c2c0" kindref="member">fValidSplit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>world<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Group<sp/>world;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_group(MPI_COMM_WORLD,<sp/>&amp;world);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>we<sp/>go<sp/>ahead<sp/>and<sp/>construct<sp/>the<sp/>groups<sp/>and<sp/>communicators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Group_incl(world,<sp/>even_members.size(),<sp/>&amp;(even_members[0]),<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1a04b9f780e842b7eb95b8e969420d8f03" kindref="member">fEvenGroup</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Group_incl(world,<sp/>odd_members.size(),<sp/>&amp;(odd_members[0]),<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1a0a899309139f6ae77cfde64e56edcaa1" kindref="member">fOddGroup</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_create(MPI_COMM_WORLD,<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a04b9f780e842b7eb95b8e969420d8f03" kindref="member">fEvenGroup</ref>,<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1a89e1e29fa863e9e68024dea5d19ee470" kindref="member">fEvenCommunicator</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_create(MPI_COMM_WORLD,<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0a899309139f6ae77cfde64e56edcaa1" kindref="member">fOddGroup</ref>,<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1add803dfef098f24187e6e612d6823ada" kindref="member">fOddCommunicator</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>we<sp/>set<sp/>things<sp/>up<sp/>for<sp/>this<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1a63cd737749bc018be1eb5e36d2d76d1f" kindref="member">fLocalProcessID</ref><sp/>%<sp/>2<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a14f226d03f901258997c78cafa89ed22" kindref="member">fIsEvenGroupMember</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Comm_rank(<ref refid="classhops_1_1MHO__MPIInterface_1a89e1e29fa863e9e68024dea5d19ee470" kindref="member">fEvenCommunicator</ref>,<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1a87eb0cd69f58963f23bf14e0852a61f3" kindref="member">fSubGroupRank</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1af8b6f1fcaaeab595c39a1044b5f56499" kindref="member">fNSubGroupProcesses</ref><sp/>=<sp/>even_members.size();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a14f226d03f901258997c78cafa89ed22" kindref="member">fIsEvenGroupMember</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Comm_rank(<ref refid="classhops_1_1MHO__MPIInterface_1add803dfef098f24187e6e612d6823ada" kindref="member">fOddCommunicator</ref>,<sp/>&amp;<ref refid="classhops_1_1MHO__MPIInterface_1a87eb0cd69f58963f23bf14e0852a61f3" kindref="member">fSubGroupRank</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1af8b6f1fcaaeab595c39a1044b5f56499" kindref="member">fNSubGroupProcesses</ref><sp/>=<sp/>odd_members.size();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//finally,<sp/>if<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>split<sp/>(equal<sp/>numbers<sp/>of<sp/>even<sp/>and<sp/>odd<sp/>process)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>can<sp/>pair<sp/>up<sp/>processes<sp/>so<sp/>they<sp/>can<sp/>exchange<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1a05173d87213b0e0d78f69c1596d6c2c0" kindref="member">fValidSplit</ref>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1ac3709bb544193b8e87a90345ceb6cecd" kindref="member">fCoHostedProcessIDs</ref>.size()<sp/>%<sp/>2<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Allreduce(&amp;<ref refid="fourfit3_8c_1a4accbc719f15b3ee9e12175b99ffe53b" kindref="member">status</ref>,<sp/>&amp;result,<sp/>1,<sp/>MPI_INT,<sp/>MPI_SUM,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>make<sp/>things<sp/>faster<sp/>we<sp/>first<sp/>try<sp/>to<sp/>pair<sp/>up<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//which<sp/>share<sp/>the<sp/>same<sp/>node/host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>==<sp/><ref refid="classhops_1_1MHO__MPIInterface_1a0dc7ec2fc5b288b6d07565937f1acab4" kindref="member">fNProcesses</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>can<sp/>because<sp/>each<sp/>host<sp/>has<sp/>an<sp/>even<sp/>number<sp/>of<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1a14f226d03f901258997c78cafa89ed22" kindref="member">fIsEvenGroupMember</ref>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a37d2f9144bda63c583fc088a2a9a7469" kindref="member">fPartnerProcessID</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ac3709bb544193b8e87a90345ceb6cecd" kindref="member">fCoHostedProcessIDs</ref>[<ref refid="classhops_1_1MHO__MPIInterface_1a63cd737749bc018be1eb5e36d2d76d1f" kindref="member">fLocalProcessID</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a37d2f9144bda63c583fc088a2a9a7469" kindref="member">fPartnerProcessID</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ac3709bb544193b8e87a90345ceb6cecd" kindref="member">fCoHostedProcessIDs</ref>[<ref refid="classhops_1_1MHO__MPIInterface_1a63cd737749bc018be1eb5e36d2d76d1f" kindref="member">fLocalProcessID</ref><sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>isn&apos;t<sp/>possible<sp/>so<sp/>we<sp/>have<sp/>to<sp/>pair<sp/>up<sp/>processes<sp/>across<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classhops_1_1MHO__MPIInterface_1a14f226d03f901258997c78cafa89ed22" kindref="member">fIsEvenGroupMember</ref>)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a37d2f9144bda63c583fc088a2a9a7469" kindref="member">fPartnerProcessID</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__MPIInterface_1a37d2f9144bda63c583fc088a2a9a7469" kindref="member">fPartnerProcessID</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__MPIInterface_1ad236f1e94d3e73a674ef867d6857736f" kindref="member">fGlobalProcessID</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hops</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_MPIInterface.cc"/>
  </compounddef>
</doxygen>
