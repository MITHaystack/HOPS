<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="julian_8c" kind="file" language="C++">
    <compoundname>julian.c</compoundname>
    <includes refid="julian_8h" local="yes">julian.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="3">
        <label>time_float_type.h</label>
        <link refid="time__float__type_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>julian.c</label>
        <link refid="julian_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>julian.h</label>
        <link refid="julian_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>hops_config.h</label>
      </node>
      <node id="6">
        <label>ctype.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmonth" prot="public">month</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="julian_8c_1aa2d59aa707464d38fd3c531f1e564c75" prot="public" static="no">
        <name>ITOA</name>
        <param><defname>s</defname></param>
        <param><defname>i</defname></param>
        <initializer>sprintf(s, &quot;%d&quot;, i)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="24" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="julian_8c_1a4a9a1642d81917a657708ea18c9c075c" prot="public" static="no">
        <name>NSTAT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="35" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="julian_8c_1a6bb7a09d1931dfbdd6d373cfe6e23357" prot="public" static="no">
        <name>SC</name>
        <initializer>static</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="43" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="julian_8c_1a10b2d890d871e1489bb02b7e70d9bdfb" prot="public" static="no">
        <name>STATIC</name>
        <initializer>static</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="42" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="julian_8c_1a6cb18a0862d27ff31e4afada7d9f9c06" prot="public" static="no" mutable="no">
        <type><ref refid="julian_8c_1a10b2d890d871e1489bb02b7e70d9bdfb" kindref="member">STATIC</ref> struct month</type>
        <definition>STATIC struct month calndr[]</definition>
        <argsstring>[]</argsstring>
        <name>calndr</name>
        <initializer>= {
	{&quot;JAN&quot;,   0}, {&quot;FEB&quot;,  31}, {&quot;MAR&quot;,  59},
	{&quot;APR&quot;,  90}, {&quot;MAY&quot;, 120}, {&quot;JUN&quot;, 151},
	{&quot;JUL&quot;, 181}, {&quot;AUG&quot;, 212}, {&quot;SEP&quot;, 243},
	{&quot;OCT&quot;, 273}, {&quot;NOV&quot;, 304}, {&quot;DEC&quot;, 334}, {(char *) 0, 365}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="54" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="julian_8c_1ad8a9e84d2a10cc7809dce6bf1f8f369f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref></type>
        <definition>HTLdbl atomin</definition>
        <argsstring>(char *string)</argsstring>
        <name>atomin</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="69" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="69" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a8780b294cc62d25b68a83c418503159f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="julian_8c_1a6bb7a09d1931dfbdd6d373cfe6e23357" kindref="member">SC</ref> void</type>
        <definition>SC void cpy0p</definition>
        <argsstring>()</argsstring>
        <name>cpy0p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="63" column="9" declfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" declline="63" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1acc42fb3b93bff7f23c6a6a82afa5de24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="julian_8c_1a10b2d890d871e1489bb02b7e70d9bdfb" kindref="member">STATIC</ref> void</type>
        <definition>STATIC void cpy0p</definition>
        <argsstring>(char *dest, char *src, int n)</argsstring>
        <name>cpy0p</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="104" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="104" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a37d541befafd57ea5ee9799d7dfe5433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int day_of_jd</definition>
        <argsstring>(long int jd)</argsstring>
        <name>day_of_jd</name>
        <param>
          <type>long int</type>
          <declname>jd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="343" column="5" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="343" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a2b6ff79d2b92d8f7de844db6454adf07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** degdms</definition>
        <argsstring>(int pre, HTLdbl x)</argsstring>
        <name>degdms</name>
        <param>
          <type>int</type>
          <declname>pre</declname>
        </param>
        <param>
          <type><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="121" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="121" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1abb86a76f627c2b594da5c227ebd6f39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* jdstr</definition>
        <argsstring>(long int jd)</argsstring>
        <name>jdstr</name>
        <param>
          <type>long int</type>
          <declname>jd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="159" column="6" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="159" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1ae09533a38bd5875e7fc74ddddb0119a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long int</type>
        <definition>long int julday</definition>
        <argsstring>(int y, int m, int d)</argsstring>
        <name>julday</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="396" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="396" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="julian_8c_1a6bb7a09d1931dfbdd6d373cfe6e23357" kindref="member">SC</ref> int</type>
        <definition>SC int leapyr</definition>
        <argsstring>()</argsstring>
        <name>leapyr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="64" column="8" declfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" declline="64" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a0b5e1925a2a09fa6aab202fc2d35c3a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="julian_8c_1a10b2d890d871e1489bb02b7e70d9bdfb" kindref="member">STATIC</ref> int</type>
        <definition>STATIC int leapyr</definition>
        <argsstring>(int y)</argsstring>
        <name>leapyr</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="420" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="420" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a92df59d4d0eefebe0cc3ee7f29fa0007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int month_of_jd</definition>
        <argsstring>(long int jd)</argsstring>
        <name>month_of_jd</name>
        <param>
          <type>long int</type>
          <declname>jd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="291" column="5" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="291" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a222df5c8f8a255c0768cce87a012d789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* stoup</definition>
        <argsstring>(char *string)</argsstring>
        <name>stoup</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="434" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="434" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1a6f3388806f18cdc86b0de9db5de79380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* timstr</definition>
        <argsstring>(HTLdbl m)</argsstring>
        <name>timstr</name>
        <param>
          <type><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="449" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="449" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="julian_8c_1acdb19a7f41485aa533ba824e252ab9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int year_of_jd</definition>
        <argsstring>(long int jd)</argsstring>
        <name>year_of_jd</name>
        <param>
          <type>long int</type>
          <declname>jd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" line="268" column="5" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c" bodystart="268" bodyend="289"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Cribbed<sp/>from<sp/>seesat5<sp/>10/1/99<sp/>jpd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Modified<sp/>to<sp/>avoid<sp/>segfaults<sp/>on<sp/>unreasonable<sp/>dates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">UTIL.C</highlight></codeline>
<codeline lineno="6"><highlight class="comment">Paul<sp/>S.<sp/>Hirose,<sp/>1991<sp/>Dec<sp/>31</highlight></codeline>
<codeline lineno="7"><highlight class="comment">User<sp/>interface<sp/>support<sp/>functions<sp/>for<sp/>SEESAT<sp/>satellite<sp/>tracking<sp/>program.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">This<sp/>file<sp/>is<sp/>in<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">100<sp/>-<sp/>199</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">Library<sp/>functions<sp/>and<sp/>#defines<sp/>used<sp/>in<sp/>this<sp/>file:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">atof,<sp/>atoi,<sp/>isalpha,<sp/>NULL,<sp/>printf,<sp/>strcmp,<sp/>strcpy,<sp/>strlen,<sp/>toupper</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="julian_8h" kindref="compound">julian.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ITOA(s,<sp/>i)<sp/>sprintf(s,<sp/>&quot;%d&quot;</highlight><highlight class="normal">,<sp/>i)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ECOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printf();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strcpy();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref><sp/>atof();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>0<sp/>for<sp/>normal<sp/>operation.<sp/><sp/>Non-zero<sp/>will<sp/>make<sp/>static<sp/>functions<sp/>&amp;<sp/>data</highlight></codeline>
<codeline lineno="34"><highlight class="comment">externally<sp/>visible<sp/>for<sp/>testing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NSTAT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NSTAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>mode<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATIC<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>precedes<sp/>static<sp/>definitions<sp/>of<sp/>functions<sp/>&amp;<sp/>data<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SC<sp/>extern<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>precedes<sp/>declarations<sp/>of<sp/>static<sp/>functions<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normal<sp/>mode<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATIC<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SC<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*##############################<sp/>DATA<sp/>##############################*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">month<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mname;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>month<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>difm;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>days<sp/>in<sp/>full<sp/>months<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="julian_8c_1a10b2d890d871e1489bb02b7e70d9bdfb" kindref="member">STATIC</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">month<sp/><ref refid="julian_8c_1a6cb18a0862d27ff31e4afada7d9f9c06" kindref="member">calndr</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;JAN&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>0},<sp/>{</highlight><highlight class="stringliteral">&quot;FEB&quot;</highlight><highlight class="normal">,<sp/><sp/>31},<sp/>{</highlight><highlight class="stringliteral">&quot;MAR&quot;</highlight><highlight class="normal">,<sp/><sp/>59},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;APR&quot;</highlight><highlight class="normal">,<sp/><sp/>90},<sp/>{</highlight><highlight class="stringliteral">&quot;MAY&quot;</highlight><highlight class="normal">,<sp/>120},<sp/>{</highlight><highlight class="stringliteral">&quot;JUN&quot;</highlight><highlight class="normal">,<sp/>151},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;JUL&quot;</highlight><highlight class="normal">,<sp/>181},<sp/>{</highlight><highlight class="stringliteral">&quot;AUG&quot;</highlight><highlight class="normal">,<sp/>212},<sp/>{</highlight><highlight class="stringliteral">&quot;SEP&quot;</highlight><highlight class="normal">,<sp/>243},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;OCT&quot;</highlight><highlight class="normal">,<sp/>273},<sp/>{</highlight><highlight class="stringliteral">&quot;NOV&quot;</highlight><highlight class="normal">,<sp/>304},<sp/>{</highlight><highlight class="stringliteral">&quot;DEC&quot;</highlight><highlight class="normal">,<sp/>334},<sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>0,<sp/>365}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*################<sp/>FUNCTIONS<sp/>LOCAL<sp/>TO<sp/>THIS<sp/>FILE<sp/>################*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="julian_8c_1a6bb7a09d1931dfbdd6d373cfe6e23357" kindref="member">SC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="julian_8c_1a8780b294cc62d25b68a83c418503159f" kindref="member">cpy0p</ref>();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>strncpy()<sp/>with<sp/>leading<sp/>0<sp/>padding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="julian_8c_1a6bb7a09d1931dfbdd6d373cfe6e23357" kindref="member">SC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" kindref="member">leapyr</ref>();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>returns<sp/>1<sp/>if<sp/>arg<sp/>is<sp/>leap<sp/>year<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*##############################<sp/>CODE<sp/>##############################*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="julian_8c_1ad8a9e84d2a10cc7809dce6bf1f8f369f" kindref="member">atomin</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*string;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>value<sp/>(in<sp/>minutes)<sp/>of<sp/>string<sp/>of<sp/>form<sp/>&quot;hhmm:ss.s...&quot;.<sp/><sp/>Leading</highlight></codeline>
<codeline lineno="72"><highlight class="comment">minus<sp/>sign<sp/>permitted.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref><sp/>time;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr,<sp/>c,<sp/>buf[5];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++string;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>the<sp/>colon<sp/>(or<sp/>terminating<sp/>null<sp/>if<sp/>no<sp/>colon)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*ptr)<sp/><sp/>&amp;&amp;<sp/><sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ptr;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>string<sp/>had<sp/>a<sp/>colon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>atof(ptr<sp/>+<sp/>1)<sp/>/<sp/>60.;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>&apos;:&apos;<sp/>to<sp/>&apos;\0&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="julian_8c_1a8780b294cc62d25b68a83c418503159f" kindref="member">cpy0p</ref>(buf,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>5);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buf[]<sp/>=<sp/>&quot;hhmm&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>+=<sp/>atof(buf<sp/>+<sp/>2);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>minutes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[2]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>hours,<sp/>restore<sp/>sign<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(time<sp/>+<sp/>atof(buf)<sp/>*<sp/>60.)<sp/>*<sp/>sign;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="julian_8c_1a10b2d890d871e1489bb02b7e70d9bdfb" kindref="member">STATIC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="julian_8c_1a8780b294cc62d25b68a83c418503159f" kindref="member">cpy0p</ref>(dest,<sp/>src,<sp/>n)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/>*src;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>n-1<sp/>chars<sp/>from<sp/>src[]<sp/>to<sp/>dest[].<sp/><sp/>If<sp/>src[]<sp/>is<sp/>too<sp/>short,<sp/>pad<sp/>dest[]</highlight></codeline>
<codeline lineno="108"><highlight class="comment">with<sp/>leading<sp/>&apos;0&apos;s.<sp/><sp/>If<sp/>src[]<sp/>is<sp/>too<sp/>long,<sp/>not<sp/>all<sp/>of<sp/>src[]<sp/>will<sp/>be<sp/>copied.<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="comment">dest[]<sp/>will<sp/>always<sp/>receive<sp/>n-1<sp/>chars<sp/>followed<sp/>by<sp/>null<sp/>terminator.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>len;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(src);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>n;<sp/>--i;<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/>(i<sp/>&gt;<sp/>len)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>*src++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="julian_8c_1a2b6ff79d2b92d8f7de844db6454adf07" kindref="member">degdms</ref>(pre,<sp/>x)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pre;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>precision<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref><sp/>x;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Converts<sp/>x<sp/>degrees<sp/>to<sp/>3<sp/>strings<sp/>holding<sp/>degrees,<sp/>minutes,<sp/>seconds.<sp/><sp/>&quot;pre&quot;</highlight></codeline>
<codeline lineno="125"><highlight class="comment">specifies<sp/>rounding<sp/>and<sp/>may<sp/>be<sp/>0<sp/>-<sp/>4:<sp/><sp/>0<sp/>=<sp/>nearest<sp/>deg,<sp/>1<sp/>=<sp/>nearest<sp/>10<sp/>min,<sp/>2</highlight></codeline>
<codeline lineno="126"><highlight class="comment">=<sp/>1<sp/>min,<sp/>3<sp/>=<sp/>10<sp/>sec,<sp/>4<sp/>=<sp/>1<sp/>sec.<sp/><sp/>Domain<sp/>of<sp/>x<sp/>(after<sp/>rounding):<sp/><sp/>-1000<sp/>&lt;<sp/>x<sp/>&lt;</highlight></codeline>
<codeline lineno="127"><highlight class="comment">10000.<sp/><sp/>Returns<sp/>pointer<sp/>to<sp/>dms[].<sp/><sp/>If<sp/>pre<sp/>was<sp/>1<sp/>or<sp/>2,<sp/>s[]<sp/>is<sp/>garbage.<sp/><sp/>Both</highlight></codeline>
<codeline lineno="128"><highlight class="comment">s[]<sp/>&amp;<sp/>m[]<sp/>are<sp/>garbage<sp/>if<sp/>pre<sp/>was<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lx;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mult[]<sp/>=<sp/>{1,<sp/>6,<sp/>60,<sp/>360,<sp/>3600};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[5],<sp/>m[3],<sp/>sec[3],</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dms[]<sp/>=<sp/>{d,<sp/>m,<sp/>sec};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>0.)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-x;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>(long)<sp/>(x<sp/>*<sp/>mult[pre]<sp/>+<sp/>.5)<sp/>*<sp/>(((unsigned)<sp/>pre<sp/>&amp;<sp/>1)<sp/>?<sp/>10<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pre)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="julian_8c_1aa2d59aa707464d38fd3c531f1e564c75" kindref="member">ITOA</ref>(sec,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(lx<sp/>%<sp/>60));<sp/></highlight><highlight class="comment">/*<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lx<sp/>/=<sp/>60;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="julian_8c_1aa2d59aa707464d38fd3c531f1e564c75" kindref="member">ITOA</ref>(m,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(lx<sp/>%<sp/>60));<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>minutes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lx<sp/>/=<sp/>60;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="julian_8c_1aa2d59aa707464d38fd3c531f1e564c75" kindref="member">ITOA</ref>(d,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>lx<sp/>*<sp/>sign);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>degrees<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dms;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="julian_8c_1abb86a76f627c2b594da5c227ebd6f39f" kindref="member">jdstr</ref>(jd)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jd;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Julian<sp/>Date,<sp/>unit<sp/>=<sp/>days<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Converts<sp/>jd<sp/>to<sp/>Gregorian<sp/>calendar<sp/>date.<sp/><sp/>Good<sp/>for<sp/>both<sp/>BC<sp/>&amp;<sp/>AD<sp/>for</highlight></codeline>
<codeline lineno="162"><highlight class="comment">practically<sp/>any<sp/>date<sp/>one<sp/>might<sp/>want.<sp/><sp/>More<sp/>precisely,<sp/>domain<sp/>of<sp/>jd<sp/>is<sp/>limited</highlight></codeline>
<codeline lineno="163"><highlight class="comment">by<sp/>largest/smallest<sp/>year<sp/>an<sp/>int<sp/>can<sp/>hold,<sp/>as<sp/>well<sp/>as<sp/>size<sp/>of<sp/>buffer[].</highlight></codeline>
<codeline lineno="164"><highlight class="comment">Returns<sp/>pointer<sp/>to<sp/>year/month/day<sp/>string,<sp/>e.g.,<sp/>&quot;1990<sp/>JAN<sp/>14&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="fourmer_8c_1ad61f5c480c6c4d03ed512318bb7126c4" kindref="member">buffer</ref>[50];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enough<sp/>to<sp/>convert<sp/>128<sp/>bit<sp/>day<sp/>#<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">month<sp/>*calp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>into<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/>m,<sp/>n;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag;<sp/>1<sp/>=<sp/>leap<sp/>yr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>calc[12]<sp/>=<sp/>{0,<sp/>1,<sp/>-1,<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>4};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*daystr[8]<sp/>=<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;SUN&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MON&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;TUE&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;WED&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;THU&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;FRI&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;SAT&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;???&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dow_year,<sp/>dow_month,<sp/>dow_day;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1721425<sp/>=<sp/>Julian<sp/>Date<sp/>@<sp/>1<sp/>BC<sp/>Dec<sp/>31<sp/>(Gregorian<sp/>calendar),<sp/>12h<sp/>UT.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>365.2425<sp/>=<sp/>days<sp/>per<sp/>year<sp/>(over<sp/>the<sp/>400<sp/>yr<sp/>Gregorian<sp/>cycle).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(jd<sp/>-<sp/>1721425)<sp/>/<sp/>365.2425;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>n<sp/>=<sp/>estimated<sp/>year.<sp/><sp/>Correct<sp/>the<sp/>estimate<sp/>to<sp/>actual<sp/>year.<sp/><sp/>The</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>preceding<sp/>formula<sp/>can<sp/>mistakenly<sp/>yield<sp/>an<sp/>AD<sp/>year<sp/>from<sp/>a<sp/>BC<sp/>jd,<sp/>but</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>reverse<sp/>will<sp/>never<sp/>happen.<sp/><sp/>Therefore,<sp/>we<sp/>need<sp/>only<sp/>guard<sp/>against</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/>n<sp/>being<sp/>DECREMENTED<sp/>to<sp/>0<sp/>(which<sp/>is<sp/>an<sp/>undefined<sp/>year).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>jd<sp/>-<sp/><ref refid="julian_8c_1ae09533a38bd5875e7fc74ddddb0119a9" kindref="member">julday</ref>(n,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leap<sp/>=<sp/><ref refid="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" kindref="member">leapyr</ref>(n);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>leap<sp/>year<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;=<sp/>365<sp/>+<sp/>leap<sp/><sp/>&amp;&amp;<sp/><sp/>d<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>year<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>dow_year<sp/>=<sp/>n;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>year<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="julian_8c_1aa2d59aa707464d38fd3c531f1e564c75" kindref="member">ITOA</ref>(<ref refid="fourmer_8c_1ad61f5c480c6c4d03ed512318bb7126c4" kindref="member">buffer</ref>,<sp/>n);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>year<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/><ref refid="fourmer_8c_1ad61f5c480c6c4d03ed512318bb7126c4" kindref="member">buffer</ref><sp/>+<sp/>strlen(<ref refid="fourmer_8c_1ad61f5c480c6c4d03ed512318bb7126c4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>month.<sp/><sp/>Begin<sp/>by<sp/>moving<sp/>forward<sp/>thru<sp/>the<sp/>calendar<sp/>a</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>month<sp/>at<sp/>a<sp/>time<sp/>(starting<sp/>with<sp/>Feb)<sp/>till<sp/>we<sp/>overshoot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>calp<sp/>=<sp/><ref refid="julian_8c_1a6cb18a0862d27ff31e4afada7d9f9c06" kindref="member">calndr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>Jan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>month<sp/>counter;<sp/>0<sp/>=<sp/>Jan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++calp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>next<sp/>month<sp/>in<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>month<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>calp-&gt;difm;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>leap)<sp/></highlight><highlight class="comment">/*<sp/>March<sp/>or<sp/>later,<sp/>&amp;<sp/>leap<sp/>yr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>n);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;ve<sp/>overshot<sp/>by<sp/>one<sp/>month.<sp/><sp/>Decrement<sp/>calendar<sp/>pointer<sp/>&quot;calp&quot;.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/>Month<sp/>counter<sp/>&quot;m&quot;<sp/>has<sp/>overshot<sp/>too,<sp/>so<sp/>the<sp/>&quot;m<sp/>&gt;=<sp/>3&quot;<sp/>test<sp/>actually</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/>means<sp/>&quot;March<sp/>or<sp/>later&quot;.<sp/><sp/>After<sp/>subtracting<sp/>days<sp/>in<sp/>full<sp/>months,<sp/>d<sp/>=</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/>day<sp/>of<sp/>month.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>-=<sp/>(--calp)-&gt;difm<sp/>+<sp/>(m<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>leap);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>dow_month<sp/>=<sp/>m;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>month<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>dow_day<sp/>=<sp/>d;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>day<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>month<sp/>&amp;<sp/>day<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(cp,<sp/>calp-&gt;mname);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="julian_8c_1aa2d59aa707464d38fd3c531f1e564c75" kindref="member">ITOA</ref>(cp,<sp/>d);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>doesn&apos;t<sp/>work<sp/>for<sp/>BC.<sp/>I<sp/>don&apos;t<sp/>care,<sp/>and</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>don&apos;t<sp/>understand<sp/>backward<sp/>extrapolation<sp/>of<sp/>Gregorian</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>dates<sp/>well<sp/>enough<sp/>to<sp/>fix<sp/>it.<sp/>If<sp/>the<sp/>DOW<sp/>is<sp/>undetermined,</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>use<sp/>&quot;???&quot;<sp/>(the<sp/>original<sp/>code<sp/>just<sp/>crashed).</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>10/8/99<sp/>jpd</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><sp/><sp/><sp/>(<sp/><sp/><sp/>(<sp/><sp/>((dow_year<sp/>-<sp/>1)<sp/>*<sp/>365L)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((dow_year<sp/><sp/>-<sp/>1)<sp/>/<sp/>4)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(<sp/>((dow_year<sp/>-<sp/>1)<sp/>/<sp/>100)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>((dow_year<sp/>-<sp/>1)<sp/>/<sp/>400)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(calc[dow_month<sp/>-<sp/>1]<sp/>+<sp/>((dow_month<sp/>-<sp/>1)<sp/>*<sp/>30))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(<sp/>(<sp/><sp/><sp/>((dow_year<sp/>%<sp/>4<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(dow_year<sp/>%<sp/>100<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(dow_year<sp/>%<sp/>400<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(dow_month<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>+<sp/>dow_day</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>7);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>n<sp/>&lt;<sp/>0<sp/>||<sp/>n<sp/>&gt;<sp/>7<sp/>)<sp/>n<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/><ref refid="fourmer_8c_1ad61f5c480c6c4d03ed512318bb7126c4" kindref="member">buffer</ref><sp/>+<sp/>strlen(<ref refid="fourmer_8c_1ad61f5c480c6c4d03ed512318bb7126c4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(cp,<sp/>daystr[n]);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\000&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fourmer_8c_1ad61f5c480c6c4d03ed512318bb7126c4" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="julian_8c_1acdb19a7f41485aa533ba824e252ab9a1" kindref="member">year_of_jd</ref>(jd)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jd;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/>n;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leap;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(jd<sp/>-<sp/>1721425)<sp/>/<sp/>365.2425;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>jd<sp/>-<sp/><ref refid="julian_8c_1ae09533a38bd5875e7fc74ddddb0119a9" kindref="member">julday</ref>(n,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leap<sp/>=<sp/><ref refid="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" kindref="member">leapyr</ref>(n);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>leap<sp/>year<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;=<sp/>365<sp/>+<sp/>leap<sp/><sp/>&amp;&amp;<sp/><sp/>d<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>year<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="julian_8c_1a92df59d4d0eefebe0cc3ee7f29fa0007" kindref="member">month_of_jd</ref>(jd)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jd;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">month<sp/>*calp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>into<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/>m,<sp/>n;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag;<sp/>1<sp/>=<sp/>leap<sp/>yr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1721425<sp/>=<sp/>Julian<sp/>Date<sp/>@<sp/>1<sp/>BC<sp/>Dec<sp/>31<sp/>(Gregorian<sp/>calendar),<sp/>12h<sp/>UT.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>365.2425<sp/>=<sp/>days<sp/>per<sp/>year<sp/>(over<sp/>the<sp/>400<sp/>yr<sp/>Gregorian<sp/>cycle).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(jd<sp/>-<sp/>1721425)<sp/>/<sp/>365.2425;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>n<sp/>=<sp/>estimated<sp/>year.<sp/><sp/>Correct<sp/>the<sp/>estimate<sp/>to<sp/>actual<sp/>year.<sp/><sp/>The</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>preceding<sp/>formula<sp/>can<sp/>mistakenly<sp/>yield<sp/>an<sp/>AD<sp/>year<sp/>from<sp/>a<sp/>BC<sp/>jd,<sp/>but</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>reverse<sp/>will<sp/>never<sp/>happen.<sp/><sp/>Therefore,<sp/>we<sp/>need<sp/>only<sp/>guard<sp/>against</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>n<sp/>being<sp/>DECREMENTED<sp/>to<sp/>0<sp/>(which<sp/>is<sp/>an<sp/>undefined<sp/>year).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>jd<sp/>-<sp/><ref refid="julian_8c_1ae09533a38bd5875e7fc74ddddb0119a9" kindref="member">julday</ref>(n,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leap<sp/>=<sp/><ref refid="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" kindref="member">leapyr</ref>(n);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>leap<sp/>year<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;=<sp/>365<sp/>+<sp/>leap<sp/><sp/>&amp;&amp;<sp/><sp/>d<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>year<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>month.<sp/><sp/>Begin<sp/>by<sp/>moving<sp/>forward<sp/>thru<sp/>the<sp/>calendar<sp/>a</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/>month<sp/>at<sp/>a<sp/>time<sp/>(starting<sp/>with<sp/>Feb)<sp/>till<sp/>we<sp/>overshoot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>calp<sp/>=<sp/><ref refid="julian_8c_1a6cb18a0862d27ff31e4afada7d9f9c06" kindref="member">calndr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>Jan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>month<sp/>counter;<sp/>0<sp/>=<sp/>Jan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++calp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>next<sp/>month<sp/>in<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>month<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>calp-&gt;difm;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>leap)<sp/></highlight><highlight class="comment">/*<sp/>March<sp/>or<sp/>later,<sp/>&amp;<sp/>leap<sp/>yr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>n);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;ve<sp/>overshot<sp/>by<sp/>one<sp/>month.<sp/><sp/>Decrement<sp/>calendar<sp/>pointer<sp/>&quot;calp&quot;.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/>Month<sp/>counter<sp/>&quot;m&quot;<sp/>has<sp/>overshot<sp/>too,<sp/>so<sp/>the<sp/>&quot;m<sp/>&gt;=<sp/>3&quot;<sp/>test<sp/>actually</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/>means<sp/>&quot;March<sp/>or<sp/>later&quot;.<sp/><sp/>After<sp/>subtracting<sp/>days<sp/>in<sp/>full<sp/>months,<sp/>d<sp/>=</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/>day<sp/>of<sp/>month.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>-=<sp/>(--calp)-&gt;difm<sp/>+<sp/>(m<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>leap);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="julian_8c_1a37d541befafd57ea5ee9799d7dfe5433" kindref="member">day_of_jd</ref>(jd)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jd;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">month<sp/>*calp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>into<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/>m,<sp/>n;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag;<sp/>1<sp/>=<sp/>leap<sp/>yr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1721425<sp/>=<sp/>Julian<sp/>Date<sp/>@<sp/>1<sp/>BC<sp/>Dec<sp/>31<sp/>(Gregorian<sp/>calendar),<sp/>12h<sp/>UT.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/>365.2425<sp/>=<sp/>days<sp/>per<sp/>year<sp/>(over<sp/>the<sp/>400<sp/>yr<sp/>Gregorian<sp/>cycle).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(jd<sp/>-<sp/>1721425)<sp/>/<sp/>365.2425;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>n<sp/>=<sp/>estimated<sp/>year.<sp/><sp/>Correct<sp/>the<sp/>estimate<sp/>to<sp/>actual<sp/>year.<sp/><sp/>The</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/>preceding<sp/>formula<sp/>can<sp/>mistakenly<sp/>yield<sp/>an<sp/>AD<sp/>year<sp/>from<sp/>a<sp/>BC<sp/>jd,<sp/>but</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>reverse<sp/>will<sp/>never<sp/>happen.<sp/><sp/>Therefore,<sp/>we<sp/>need<sp/>only<sp/>guard<sp/>against</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/>n<sp/>being<sp/>DECREMENTED<sp/>to<sp/>0<sp/>(which<sp/>is<sp/>an<sp/>undefined<sp/>year).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>jd<sp/>-<sp/><ref refid="julian_8c_1ae09533a38bd5875e7fc74ddddb0119a9" kindref="member">julday</ref>(n,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leap<sp/>=<sp/><ref refid="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" kindref="member">leapyr</ref>(n);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>leap<sp/>year<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;=<sp/>365<sp/>+<sp/>leap<sp/><sp/>&amp;&amp;<sp/><sp/>d<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>year<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>month.<sp/><sp/>Begin<sp/>by<sp/>moving<sp/>forward<sp/>thru<sp/>the<sp/>calendar<sp/>a</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/>month<sp/>at<sp/>a<sp/>time<sp/>(starting<sp/>with<sp/>Feb)<sp/>till<sp/>we<sp/>overshoot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>calp<sp/>=<sp/><ref refid="julian_8c_1a6cb18a0862d27ff31e4afada7d9f9c06" kindref="member">calndr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>Jan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>month<sp/>counter;<sp/>0<sp/>=<sp/>Jan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++calp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>next<sp/>month<sp/>in<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>month<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>calp-&gt;difm;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>leap)<sp/></highlight><highlight class="comment">/*<sp/>March<sp/>or<sp/>later,<sp/>&amp;<sp/>leap<sp/>yr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>n);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;ve<sp/>overshot<sp/>by<sp/>one<sp/>month.<sp/><sp/>Decrement<sp/>calendar<sp/>pointer<sp/>&quot;calp&quot;.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/>Month<sp/>counter<sp/>&quot;m&quot;<sp/>has<sp/>overshot<sp/>too,<sp/>so<sp/>the<sp/>&quot;m<sp/>&gt;=<sp/>3&quot;<sp/>test<sp/>actually</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/>means<sp/>&quot;March<sp/>or<sp/>later&quot;.<sp/><sp/>After<sp/>subtracting<sp/>days<sp/>in<sp/>full<sp/>months,<sp/>d<sp/>=</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/>day<sp/>of<sp/>month.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>-=<sp/>(--calp)-&gt;difm<sp/>+<sp/>(m<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>leap);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="julian_8c_1ae09533a38bd5875e7fc74ddddb0119a9" kindref="member">julday</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>Julian<sp/>Date<sp/>(unit<sp/>=<sp/>days)<sp/>corresponding<sp/>to<sp/>12h<sp/>UT<sp/>on<sp/>given<sp/>date,</highlight></codeline>
<codeline lineno="398"><highlight class="comment">Gregorian<sp/>calendar.<sp/><sp/>Jan<sp/>=<sp/>month<sp/>0.<sp/><sp/>Use<sp/>-1<sp/>for<sp/>1<sp/>BC,<sp/>etc.<sp/><sp/>Any<sp/>integer</highlight></codeline>
<codeline lineno="399"><highlight class="comment">is<sp/>legal<sp/>for<sp/>d.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bc;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag;<sp/>1<sp/>=<sp/>BC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/>1)<sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>Feb<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>+=<sp/><ref refid="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" kindref="member">leapyr</ref>(y);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>1<sp/>if<sp/>leap<sp/>yr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--y;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-(y<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((bc<sp/>?<sp/>366<sp/>:<sp/>0)<sp/>+<sp/>y*365L<sp/>+<sp/>y/4<sp/>-<sp/>y/100<sp/>+<sp/>y/400)<sp/>*</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(bc<sp/>?<sp/>-1<sp/>:<sp/>1)<sp/>+<sp/><ref refid="julian_8c_1a6cb18a0862d27ff31e4afada7d9f9c06" kindref="member">calndr</ref>[m].difm<sp/>+<sp/>d<sp/>+<sp/>1721425;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1721425<sp/>=<sp/>Julian<sp/>Date<sp/>for<sp/>1<sp/>BC<sp/>Dec<sp/>31<sp/>12h,<sp/>Gregorian<sp/>calendar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><ref refid="julian_8c_1a10b2d890d871e1489bb02b7e70d9bdfb" kindref="member">STATIC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><ref refid="julian_8c_1a2f107fe03e93c062bbfdf733498c352a" kindref="member">leapyr</ref>(y)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>1<sp/>if<sp/>y<sp/>is<sp/>leap<sp/>year<sp/>in<sp/>Gregorian<sp/>calendar,<sp/>0<sp/>otherwise.<sp/><sp/>To</highlight></codeline>
<codeline lineno="423"><highlight class="comment">signify<sp/>BC<sp/>year<sp/>use<sp/>a<sp/>negative<sp/>number,<sp/>e.g.,<sp/>-1<sp/>for<sp/>1<sp/>BC.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>leap<sp/>year<sp/>determination<sp/>purposes,<sp/>1<sp/>BC<sp/>=<sp/>0,<sp/>2<sp/>BC<sp/>=<sp/>-1,<sp/>etc.</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/>Therefore,<sp/>we<sp/>must<sp/>make<sp/>an<sp/>adjustment<sp/>to<sp/>y<sp/>if<sp/>it&apos;s<sp/>BC.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++y;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!(y%4)<sp/>&amp;&amp;<sp/>y%100)<sp/><sp/>||<sp/><sp/>!(y%400);</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><ref refid="julian_8c_1a222df5c8f8a255c0768cce87a012d789" kindref="member">stoup</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*string;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Converts<sp/>&quot;string&quot;<sp/>to<sp/>all<sp/>upper<sp/>case,<sp/>returns<sp/>&quot;string&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;<sp/>(i<sp/>=<sp/>*cp);<sp/>++cp)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalpha(i))</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cp<sp/>=<sp/>toupper(i);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><ref refid="julian_8c_1a6f3388806f18cdc86b0de9db5de79380" kindref="member">timstr</ref>(m)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><ref refid="time__float__type_8h_1af21c891154c6537609687b864f8e9949" kindref="member">HTLdbl</ref><sp/>m;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>minutes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Turns<sp/>m<sp/>into<sp/>a<sp/>string<sp/>of<sp/>format<sp/>&quot;hhmm:ss&quot;<sp/>(or<sp/>&quot;-hhmm:ss&quot;<sp/>if<sp/>m<sp/>is</highlight></codeline>
<codeline lineno="452"><highlight class="comment">negative),<sp/>rounded<sp/>to<sp/>nearest<sp/>second.<sp/><sp/>Be<sp/>sure<sp/>that<sp/>hours<sp/>will<sp/>not<sp/>require</highlight></codeline>
<codeline lineno="453"><highlight class="comment">more<sp/>than<sp/>two<sp/>digits.<sp/><sp/>String<sp/>will<sp/>be<sp/>padded<sp/>with<sp/>zeros<sp/>to<sp/>fill<sp/>out<sp/>all<sp/>six</highlight></codeline>
<codeline lineno="454"><highlight class="comment">digits.<sp/><sp/>Returns<sp/>the<sp/>string.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[9];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp,<sp/>**cpp;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minus;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag;<sp/>1<sp/>=<sp/>negative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>cpp<sp/>=<sp/><ref refid="julian_8c_1a2b6ff79d2b92d8f7de844db6454adf07" kindref="member">degdms</ref>(4,<sp/>m<sp/>/<sp/>60.);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&lt;<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cp++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="julian_8c_1a8780b294cc62d25b68a83c418503159f" kindref="member">cpy0p</ref>(cp,<sp/>cpp[0]<sp/>+<sp/>minus,<sp/>3);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="julian_8c_1a8780b294cc62d25b68a83c418503159f" kindref="member">cpy0p</ref>(cp<sp/>+<sp/>2,<sp/>cpp[1],<sp/>3);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>cp[4]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="julian_8c_1a8780b294cc62d25b68a83c418503159f" kindref="member">cpy0p</ref>(cp<sp/>+<sp/>5,<sp/>cpp[2],<sp/>3);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/c_src/misc/time/julian.c"/>
  </compounddef>
</doxygen>
