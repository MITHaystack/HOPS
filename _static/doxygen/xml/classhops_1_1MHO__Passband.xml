<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__Passband" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_Passband</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; visibility_type &gt;</basecompoundref>
    <includes refid="MHO__Passband_8hh" local="no">MHO_Passband.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1ae2f4d259430c0dd37bcf8c322e2bf5c7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_Passband::fBandwidthKey</definition>
        <argsstring></argsstring>
        <name>fBandwidthKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="117" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1a80ef9068f266e7e5f797dbd3543d2a7d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_Passband::fHigh</definition>
        <argsstring></argsstring>
        <name>fHigh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="115" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1af4d22038b4cea12fb96f9b7db89d6cdd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hops::MHO_Passband::fIsExclusion</definition>
        <argsstring></argsstring>
        <name>fIsExclusion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="113" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1a54b3beeda1450cf3941eb8eee3c72c07" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_Passband::fLow</definition>
        <argsstring></argsstring>
        <name>fLow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="114" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1a30e944d10cc12efd9a68d1b76e7d1a28" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_Passband::fLowerSideband</definition>
        <argsstring></argsstring>
        <name>fLowerSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="119" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1a86d03c91996ec08e4c1fbecd3fe54db5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_Passband::fSidebandLabelKey</definition>
        <argsstring></argsstring>
        <name>fSidebandLabelKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="118" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1a776dc43b81a999f8e5a2b7c5e8a15fb4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_Passband::fUpperSideband</definition>
        <argsstring></argsstring>
        <name>fUpperSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="120" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Passband_1af5e4c960e3fd6adb23366c474b45c08a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref> *</type>
        <definition>weight_type* hops::MHO_Passband::fWeights</definition>
        <argsstring></argsstring>
        <name>fWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="122" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1ab575980f1c27697e1e1f4095edd8a517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_Passband::MHO_Passband</definition>
        <argsstring>()</argsstring>
        <name>MHO_Passband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="34" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_Passband.cc" bodystart="8" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1acc6e7ab1ca6efc266d677af9d15060f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_Passband::~MHO_Passband</definition>
        <argsstring>()</argsstring>
        <name>~MHO_Passband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="35" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_Passband.cc" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1a1c610729a08431aa33915bdfa1a82e14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_Passband::SetPassband</definition>
        <argsstring>(const double &amp;first, const double &amp;second)</argsstring>
        <name>SetPassband</name>
        <param>
          <type>const double &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>second</declname>
        </param>
        <briefdescription>
<para>Setter for passband. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower frequency limit in Hz </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper frequency limit in Hz</para>
</parameterdescription>
</parameteritem>
</parameterlist>
if second &lt; first then this operation is an &apos;exclusion&apos; which tells us this is a chunk of spectrum to cut out, otherwise if first &lt; second, then it is an inclusion, and everything outside will be cut (this is the legacy behavior) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="54" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="54" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1a10a55d284d3be2b8396c5b82db9d92e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_Passband::SetWeights</definition>
        <argsstring>(weight_type *weights)</argsstring>
        <name>SetWeights</name>
        <param>
          <type><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref> *</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
<para>Setter for weights. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Input weight values of type weight_type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="42" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1ac8f28244f84d58f8ac7be66257a301c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_Passband::ExecuteInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Checks and excludes specific passbands within each channel of visibility data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type* containing channel axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool indicating successful exclusion operation. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="101" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_Passband.cc" bodystart="22" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1a5fbeede62e248b954daa49b033fc1bb4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_Passband::ExecuteOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Copies input visibility data and executes in-place processing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type data to be copied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of ExecuteInPlace operation on out parameter. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="110" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_Passband.cc" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1a666875c833da9ea33ece1b85965fb8c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_Passband::InitializeInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes visibility_type pointer in-place and returns true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to visibility_type that will be initialized in-place. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success (always true). </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="83" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_Passband.cc" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Passband_1a7b4754b5342b189eb28af5bde66b6046" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_Passband::InitializeOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes out-of-place visibility data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output visibility_type pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="92" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_Passband.cc" bodystart="197" bodyend="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__Passband" kindref="compound">MHO_Passband</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Selects a chunk of frequency space for inclusion or removal.</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Tue Apr 2 09:41:24 AM EDT 2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_Passband</label>
        <link refid="classhops_1_1MHO__Passband"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_Passband</label>
        <link refid="classhops_1_1MHO__Passband"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" line="31" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_Passband.hh" bodystart="32" bodyend="123"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_Passband</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__Passband_1ac8f28244f84d58f8ac7be66257a301c3" prot="protected" virt="virtual"><scope>hops::MHO_Passband</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__Passband_1a5fbeede62e248b954daa49b033fc1bb4" prot="protected" virt="virtual"><scope>hops::MHO_Passband</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__Passband_1ae2f4d259430c0dd37bcf8c322e2bf5c7" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fBandwidthKey</name></member>
      <member refid="classhops_1_1MHO__Passband_1a80ef9068f266e7e5f797dbd3543d2a7d" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fHigh</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__Passband_1af4d22038b4cea12fb96f9b7db89d6cdd" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fIsExclusion</name></member>
      <member refid="classhops_1_1MHO__Passband_1a54b3beeda1450cf3941eb8eee3c72c07" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fLow</name></member>
      <member refid="classhops_1_1MHO__Passband_1a30e944d10cc12efd9a68d1b76e7d1a28" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fLowerSideband</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__Passband_1a86d03c91996ec08e4c1fbecd3fe54db5" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fSidebandLabelKey</name></member>
      <member refid="classhops_1_1MHO__Passband_1a776dc43b81a999f8e5a2b7c5e8a15fb4" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fUpperSideband</name></member>
      <member refid="classhops_1_1MHO__Passband_1af5e4c960e3fd6adb23366c474b45c08a" prot="private" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>fWeights</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_Passband</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__Passband_1a666875c833da9ea33ece1b85965fb8c5" prot="protected" virt="virtual"><scope>hops::MHO_Passband</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__Passband_1a7b4754b5342b189eb28af5bde66b6046" prot="protected" virt="virtual"><scope>hops::MHO_Passband</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__Passband_1ab575980f1c27697e1e1f4095edd8a517" prot="public" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>MHO_Passband</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__Passband_1a1c610729a08431aa33915bdfa1a82e14" prot="public" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>SetPassband</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__Passband_1a10a55d284d3be2b8396c5b82db9d92e4" prot="public" virt="non-virtual"><scope>hops::MHO_Passband</scope><name>SetWeights</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__Passband_1acc6e7ab1ca6efc266d677af9d15060f2" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>~MHO_Passband</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_Passband</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
