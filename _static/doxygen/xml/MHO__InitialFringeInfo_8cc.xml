<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="MHO__InitialFringeInfo_8cc" kind="file" language="C++">
    <compoundname>MHO_InitialFringeInfo.cc</compoundname>
    <includes refid="MHO__InitialFringeInfo_8hh" local="yes">MHO_InitialFringeInfo.hh</includes>
    <includes refid="MHO__Clock_8hh" local="yes">MHO_Clock.hh</includes>
    <includes refid="MHO__DelayModel_8hh" local="yes">MHO_DelayModel.hh</includes>
    <includes refid="MHO__Reducer_8hh" local="yes">MHO_Reducer.hh</includes>
    <includes refid="MHO__StationModel_8hh" local="yes">MHO_StationModel.hh</includes>
    <includes refid="MHO__UniformGridPointsCalculator_8hh" local="yes">MHO_UniformGridPointsCalculator.hh</includes>
    <incdepgraph>
      <node id="79">
        <label>MHO_FileKey.hh</label>
        <link refid="MHO__FileKey_8hh"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="69">
        <label>MHO_UUIDGenerator.hh</label>
        <link refid="MHO__UUIDGenerator_8hh"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>iomanip</label>
      </node>
      <node id="89">
        <label>legacy_hops_date.hh</label>
        <link refid="legacy__hops__date_8hh"/>
      </node>
      <node id="103">
        <label>limits</label>
      </node>
      <node id="81">
        <label>MHO_NumpyTypeCode.hh</label>
        <link refid="MHO__NumpyTypeCode_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>assert.h</label>
      </node>
      <node id="44">
        <label>iterator</label>
      </node>
      <node id="50">
        <label>MHO_NDArrayView.hh</label>
        <link refid="MHO__NDArrayView_8hh"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MHO_InitialFringeInfo.hh</label>
        <link refid="MHO__InitialFringeInfo_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="92">
        <label>MHO_ElementTypes.hh</label>
        <link refid="MHO__ElementTypes_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>MHO_ClassIdentity.hh</label>
        <link refid="MHO__ClassIdentity_8hh"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>MHO_ContainerStore.hh</label>
        <link refid="MHO__ContainerStore_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>endian.h</label>
      </node>
      <node id="76">
        <label>MHO_ClassIdentityMap.hh</label>
        <link refid="MHO__ClassIdentityMap_8hh"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>stdint.h</label>
      </node>
      <node id="99">
        <label>MHO_UnaryOperator.hh</label>
        <link refid="MHO__UnaryOperator_8hh"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>MHO_StationModel.hh</label>
        <link refid="MHO__StationModel_8hh"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>MHO_JSONHeaderWrapper.hh</label>
        <link refid="MHO__JSONHeaderWrapper_8hh"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>MHO_Clock.hh</label>
        <link refid="MHO__Clock_8hh"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>MHO_Meta.hh</label>
        <link refid="MHO__Meta_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>cmath</label>
      </node>
      <node id="71">
        <label>MHO_Taggable.hh</label>
        <link refid="MHO__Taggable_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdexcept</label>
      </node>
      <node id="32">
        <label>MHO_IntervalLabelInterface.hh</label>
        <link refid="MHO__IntervalLabelInterface_8hh"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>MHO_Profiler.hh</label>
        <link refid="MHO__Profiler_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="56">
        <label>MHO_MD5HashGenerator.hh</label>
        <link refid="MHO__MD5HashGenerator_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>date/date.h</label>
      </node>
      <node id="80">
        <label>MHO_ContainerJSONConverter.hh</label>
        <link refid="MHO__ContainerJSONConverter_8hh"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>cinttypes</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="90">
        <label>MHO_DelayModel.hh</label>
        <link refid="MHO__DelayModel_8hh"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>MHO_Reducer.hh</label>
        <link refid="MHO__Reducer_8hh"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>MHO_Message.hh</label>
        <link refid="MHO__Message_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>MHO_FileStreamer.hh</label>
        <link refid="MHO__FileStreamer_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>MHO_ObjectTags.hh</label>
        <link refid="MHO__ObjectTags_8hh"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>stddef.h</label>
      </node>
      <node id="78">
        <label>MHO_BinaryFileStreamer.hh</label>
        <link refid="MHO__BinaryFileStreamer_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>fstream</label>
      </node>
      <node id="48">
        <label>MHO_NDArrayMath.hh</label>
        <link refid="MHO__NDArrayMath_8hh"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ostream</label>
      </node>
      <node id="60">
        <label>MHO_UUID.hh</label>
        <link refid="MHO__UUID_8hh"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>MHO_NDArrayWrapper_0.hh</label>
        <link refid="MHO__NDArrayWrapper__0_8hh"/>
      </node>
      <node id="74">
        <label>MHO_ScalarContainer.hh</label>
        <link refid="MHO__ScalarContainer_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>MHO_VectorContainer.hh</label>
        <link refid="MHO__VectorContainer_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>MHO_Axis.hh</label>
        <link refid="MHO__Axis_8hh"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>MHO_IndexLabelInterface.hh</label>
        <link refid="MHO__IndexLabelInterface_8hh"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>MHO_NDArrayWrapper_1.hh</label>
        <link refid="MHO__NDArrayWrapper__1_8hh"/>
      </node>
      <node id="77">
        <label>MHO_BinaryFileInterface.hh</label>
        <link refid="MHO__BinaryFileInterface_8hh"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>random</label>
      </node>
      <node id="72">
        <label>MHO_AxisPack.hh</label>
        <link refid="MHO__AxisPack_8hh"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>MHO_TestAssertions.hh</label>
        <link refid="MHO__TestAssertions_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>string.h</label>
      </node>
      <node id="43">
        <label>MHO_BidirectionalIterator.hh</label>
        <link refid="MHO__BidirectionalIterator_8hh"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>MHO_ContainerDictionary.hh</label>
        <link refid="MHO__ContainerDictionary_8hh"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>tuple</label>
      </node>
      <node id="93">
        <label>MHO_AxisTypes.hh</label>
        <link refid="MHO__AxisTypes_8hh"/>
      </node>
      <node id="22">
        <label>ctime</label>
      </node>
      <node id="21">
        <label>MHO_Timer.hh</label>
        <link refid="MHO__Timer_8hh"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="51">
        <label>MHO_BidirectionalIndexedIterator.hh</label>
        <link refid="MHO__BidirectionalIndexedIterator_8hh"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>MHO_CompoundReductions.hh</label>
        <link refid="MHO__CompoundReductions_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>utility</label>
      </node>
      <node id="40">
        <label>array</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>MHO_SelfName.hh</label>
        <link refid="MHO__SelfName_8hh"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>MHO_BidirectionalStrideIterator.hh</label>
        <link refid="MHO__BidirectionalStrideIterator_8hh"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>MHO_ParameterStore.hh</label>
        <link refid="MHO__ParameterStore_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>math.h</label>
      </node>
      <node id="38">
        <label>MHO_NDArrayWrapper.hh</label>
        <link refid="MHO__NDArrayWrapper_8hh"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="31">
        <label>MHO_Tokenizer.hh</label>
        <link refid="MHO__Tokenizer_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>MHO_Operator.hh</label>
        <link refid="MHO__Operator_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="49">
        <label>cstddef</label>
      </node>
      <node id="61">
        <label>MHO_Types.hh</label>
        <link refid="MHO__Types_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>MHO_SerializableObjectFactory.hh</label>
        <link refid="MHO__SerializableObjectFactory_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>MHO_TemplateTypenameDeduction.hh</label>
        <link refid="MHO__TemplateTypenameDeduction_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>mutex</label>
      </node>
      <node id="85">
        <label>chrono</label>
      </node>
      <node id="94">
        <label>MHO_BaselineContainers.hh</label>
        <link refid="MHO__BaselineContainers_8hh"/>
      </node>
      <node id="96">
        <label>MHO_FringeContainers.hh</label>
        <link refid="MHO__FringeContainers_8hh"/>
      </node>
      <node id="15">
        <label>thread</label>
      </node>
      <node id="102">
        <label>MHO_UniformGridPointsCalculator.hh</label>
        <link refid="MHO__UniformGridPointsCalculator_8hh"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>type_traits</label>
      </node>
      <node id="54">
        <label>MHO_Serializable.hh</label>
        <link refid="MHO__Serializable_8hh"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>set</label>
      </node>
      <node id="30">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="34">
        <label>complex</label>
      </node>
      <node id="91">
        <label>MHO_ContainerDefinitions.hh</label>
        <link refid="MHO__ContainerDefinitions_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>date/tz.h</label>
      </node>
      <node id="39">
        <label>algorithm</label>
      </node>
      <node id="62">
        <label>picohash.h</label>
        <link refid="picohash_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="47">
        <label>MHO_ExtensibleElement.hh</label>
        <link refid="MHO__ExtensibleElement_8hh"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cstring</label>
      </node>
      <node id="95">
        <label>MHO_StationContainers.hh</label>
        <link refid="MHO__StationContainers_8hh"/>
      </node>
      <node id="64">
        <label>inttypes.h</label>
      </node>
      <node id="1">
        <label>MHO_InitialFringeInfo.cc</label>
        <link refid="MHO__InitialFringeInfo_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>MHO_TableContainer.hh</label>
        <link refid="MHO__TableContainer_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehops">hops</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__InitialFringeInfo_8hh" kindref="compound">MHO_InitialFringeInfo.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//precalculate_quantities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__Clock_8hh" kindref="compound">MHO_Clock.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__DelayModel_8hh" kindref="compound">MHO_DelayModel.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__Reducer_8hh" kindref="compound">MHO_Reducer.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__StationModel_8hh" kindref="compound">MHO_StationModel.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__UniformGridPointsCalculator_8hh" kindref="compound">MHO_UniformGridPointsCalculator.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehops" kindref="compound">hops</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1ab55d543fcee4cf7571982ca488722773" kindref="member">MHO_InitialFringeInfo::calculate_freq_space</ref>(MHO_ContainerStore*<sp/>conStore,<sp/>MHO_ParameterStore*<sp/>paramStore)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref>*<sp/>vis<sp/>=<sp/>conStore-&gt;GetObject&lt;<sp/><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref><sp/>&gt;(std::string(</highlight><highlight class="stringliteral">&quot;vis&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>frequency<sp/>grid<sp/>used<sp/>in<sp/>the<sp/>MBD<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>MHO_UniformGridPointsCalculator<sp/>fGridCalc;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double&gt;<sp/>in_freq_pts(std::get&lt;CHANNEL_AXIS&gt;(*vis).GetData(),<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;CHANNEL_AXIS&gt;(*vis).GetData()<sp/>+<sp/>std::get&lt;CHANNEL_AXIS&gt;(*vis).GetSize()<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>freq_pts;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq_eps<sp/>=<sp/>1e-4;<sp/></highlight><highlight class="comment">//tolerance<sp/>of<sp/>0.1kHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dsb<sp/>channel<sp/>pairs<sp/>share<sp/>a<sp/>sky_freq<sp/>so<sp/>we<sp/>need<sp/>combine<sp/>them<sp/>at<sp/>the<sp/>same<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>eliminates<sp/>non-unique<sp/>(within<sp/>the<sp/>tolerance)<sp/>adjacent<sp/>frequencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::size_t,<sp/>std::size_t&gt;<sp/>index_map;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>fGridCalc.GetUniquePoints(in_freq_pts,<sp/>freq_eps,<sp/>freq_pts,<sp/>index_map);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>fGridCalc.SetPoints(freq_pts);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>fGridCalc.Calculate();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gridStart<sp/>=<sp/>fGridCalc.GetGridStart();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gridSpace<sp/>=<sp/>fGridCalc.GetGridSpacing();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ambig<sp/>=<sp/>1.0<sp/>/<sp/>gridSpace;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nGridPoints<sp/>=<sp/>fGridCalc.GetNGridPoints();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>averageFreq<sp/>=<sp/>fGridCalc.GetGridAverage();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freqSpread<sp/>=<sp/>fGridCalc.GetSpread();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//correct<sp/>the<sp/>frequency<sp/>spread<sp/>if<sp/>we<sp/>only<sp/>have<sp/>1<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>number<sp/>of<sp/>channels<sp/>present<sp/>after<sp/>cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/config/nchannels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>channel_bandwidth<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/config/channel_bandwidth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nchan<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqSpread<sp/>=<sp/>channel_bandwidth<sp/>/<sp/>std::sqrt(12.0);<sp/></highlight><highlight class="comment">//uniform<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/start_frequency&quot;</highlight><highlight class="normal">,<sp/>gridStart);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/frequency_spacing&quot;</highlight><highlight class="normal">,<sp/>gridSpace);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/ambiguity&quot;</highlight><highlight class="normal">,<sp/>ambig);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/n_frequency_points&quot;</highlight><highlight class="normal">,<sp/>nGridPoints);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/average_frequency&quot;</highlight><highlight class="normal">,<sp/>averageFreq);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/frequency_spread&quot;</highlight><highlight class="normal">,<sp/>freqSpread);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1a685e70718e2d495e1094889d57bc644e" kindref="member">MHO_InitialFringeInfo::calculate_clock_model</ref>(MHO_ParameterStore*<sp/>paramStore)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>frt_string<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/>std::string<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/vex/scan/fourfit_reftime&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>frt_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" kindref="member">hops_clock::from_vex_format</ref>(frt_string);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_offset<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/ref_station/clock_early_offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_rate<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/ref_station/clock_rate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ref_validity_epoch<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/>std::string<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/ref_station/clock_validity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ref_origin_epoch<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/>std::string<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/ref_station/clock_origin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ref_origin_tp<sp/>=<sp/>frt_tp;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ref_origin_epoch<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_origin_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" kindref="member">hops_clock::from_vex_format</ref>(ref_origin_epoch);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rem_offset<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/rem_station/clock_early_offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rem_rate<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/rem_station/clock_rate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rem_validity_epoch<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/>std::string<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/rem_station/clock_validity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rem_origin_epoch<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/>std::string<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/rem_station/clock_origin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rem_origin_tp<sp/>=<sp/>frt_tp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rem_origin_epoch<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem_origin_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" kindref="member">hops_clock::from_vex_format</ref>(rem_origin_epoch);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>ALSO<sp/>ENSURE<sp/>THAT<sp/>THE<sp/>VALIDITY<sp/>EPOCH<sp/>IS<sp/>BEFORE<sp/>THE<sp/>FRT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>refdiff<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ref_rate<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ref_tdiff_duration<sp/>=<sp/>frt_tp<sp/>-<sp/>ref_origin_tp;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refdiff<sp/>=<sp/>std::chrono::duration&lt;<sp/>double<sp/>&gt;(ref_tdiff_duration).count();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(refdiff<sp/>&gt;<sp/>3.0e5)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1a70d2a69334c19db04365eb32a1d26447" kindref="member">msg_info</ref>(</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;reference<sp/>station<sp/>clockrate<sp/>epoch:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classhops_1_1hops__clock_1a49c203d7999ba785360e966637aa696c" kindref="member">hops_clock::to_iso8601_format</ref>(ref_origin_tp)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>is<sp/>highly<sp/>discrepant<sp/>from<sp/>FRT:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classhops_1_1hops__clock_1a49c203d7999ba785360e966637aa696c" kindref="member">hops_clock::to_iso8601_format</ref>(frt_tp)<sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>remdiff<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rem_rate<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rem_tdiff_duration<sp/>=<sp/>frt_tp<sp/>-<sp/>rem_origin_tp;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remdiff<sp/>=<sp/>std::chrono::duration&lt;<sp/>double<sp/>&gt;(rem_tdiff_duration).count();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(remdiff<sp/>&gt;<sp/>3.0e5)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1a70d2a69334c19db04365eb32a1d26447" kindref="member">msg_info</ref>(</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;remote<sp/>station<sp/>clockrate<sp/>epoch:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classhops_1_1hops__clock_1a49c203d7999ba785360e966637aa696c" kindref="member">hops_clock::to_iso8601_format</ref>(rem_origin_tp)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>is<sp/>highly<sp/>discrepant<sp/>from<sp/>FRT:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classhops_1_1hops__clock_1a49c203d7999ba785360e966637aa696c" kindref="member">hops_clock::to_iso8601_format</ref>(frt_tp)<sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_clock<sp/>=<sp/>ref_offset<sp/>+<sp/>(refdiff<sp/>*<sp/>ref_rate)<sp/>*<sp/>1e6;<sp/></highlight><highlight class="comment">//in<sp/>usec!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rem_clock<sp/>=<sp/>rem_offset<sp/>+<sp/>(remdiff<sp/>*<sp/>rem_rate)<sp/>*<sp/>1e6;<sp/></highlight><highlight class="comment">//in<sp/>usec!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/ref_station/clock_offset_at_frt&quot;</highlight><highlight class="normal">,<sp/>ref_clock);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/rem_station/clock_offset_at_frt&quot;</highlight><highlight class="normal">,<sp/>rem_clock);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1a24f2c2267e52522a62aaa0c7f8a1668b" kindref="member">MHO_InitialFringeInfo::compute_total_summed_weights</ref>(MHO_ContainerStore*<sp/>conStore,<sp/>MHO_ParameterStore*<sp/>paramStore)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_ap_frac<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref>*<sp/>wt_data<sp/>=<sp/>conStore-&gt;GetObject&lt;<sp/><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref><sp/>&gt;(std::string(</highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wt_data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;fringe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>weight<sp/>object<sp/>with<sp/>name:<sp/>weight.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//compute<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>data<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref><sp/>temp_weights;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_weights.<ref refid="classhops_1_1MHO__TableContainer_1a9f2c2f7df98f9f9f0cf25dad213ebd5e" kindref="member">Copy</ref>(*wt_data);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MHO_Reducer&lt;<sp/>weight_type,<sp/>MHO_CompoundSum<sp/>&gt;<sp/>wt_reducer;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt_reducer.SetArgs(&amp;temp_weights);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>weight_type::rank::value;<sp/>i++)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt_reducer.ReduceAxis(i);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt_reducer.Initialize();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt_reducer.Execute();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_ap_frac<sp/>=<sp/>temp_weights[0];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt_data-&gt;Insert(</highlight><highlight class="stringliteral">&quot;total_summed_weights&quot;</highlight><highlight class="normal">,<sp/>total_ap_frac);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/total_summed_weights&quot;</highlight><highlight class="normal">,<sp/>total_ap_frac);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1add6e5f79e5cca89a84e52c5308ee2083" kindref="member">MHO_InitialFringeInfo::determine_n_active_channels</ref>(MHO_ContainerStore*<sp/>conStore,<sp/>MHO_ParameterStore*<sp/>paramStore)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//just<sp/>loop<sp/>over<sp/>the<sp/>weights<sp/>and<sp/>count<sp/>the<sp/>number<sp/>of<sp/>channels<sp/>which<sp/>contain<sp/>an<sp/>AP<sp/>with<sp/>weight<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>n_active_channels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref>*<sp/>wt_data<sp/>=<sp/>conStore-&gt;GetObject&lt;<sp/><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref><sp/>&gt;(std::string(</highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wt_data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;fringe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>weight<sp/>object<sp/>with<sp/>name:<sp/>weight.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chan_ax<sp/>=<sp/>&amp;(std::get&lt;<sp/>CHANNEL_AXIS<sp/>&gt;(*wt_data));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>chan_ax-&gt;GetSize();<sp/>ch++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slice<sp/>=<sp/>wt_data-&gt;SliceView(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,<sp/>ch,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>slice.begin();<sp/>it<sp/>!=<sp/>slice.end();<sp/>it++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>*it;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sum<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_active_channels++;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/n_active_channels&quot;</highlight><highlight class="normal">,<sp/>n_active_channels);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1a47756f3954f85c1299f4d232288334b6" kindref="member">MHO_InitialFringeInfo::precalculate_quantities</ref>(MHO_ContainerStore*<sp/>conStore,<sp/>MHO_ParameterStore*<sp/>paramStore)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref>*<sp/>vis_data<sp/>=<sp/>conStore-&gt;GetObject&lt;<sp/><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref><sp/>&gt;(std::string(</highlight><highlight class="stringliteral">&quot;vis&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vis_data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;fringe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>visibility<sp/>object<sp/>with<sp/>name:<sp/>vis.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ap_ax<sp/>=<sp/>&amp;(std::get&lt;<sp/>TIME_AXIS<sp/>&gt;(*vis_data));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ap_ax-&gt;GetSize()<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;fringe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>determine<sp/>AP<sp/>period<sp/>for<sp/>data<sp/>since<sp/>AP<sp/>axis<sp/>is<sp/>of<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ap_ax-&gt;GetSize()<sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>station<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ref_code;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>vis_data-&gt;Retrieve(</highlight><highlight class="stringliteral">&quot;reference_station&quot;</highlight><highlight class="normal">,<sp/>ref_code);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ok)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/reference_station&quot;</highlight><highlight class="normal">,<sp/>ref_code);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rem_code;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>vis_data-&gt;Retrieve(</highlight><highlight class="stringliteral">&quot;remote_station&quot;</highlight><highlight class="normal">,<sp/>rem_code);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ok)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/remote_station&quot;</highlight><highlight class="normal">,<sp/>rem_code);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>root<sp/>code<sp/>from<sp/>the<sp/>visib<sp/>(only<sp/>needed<sp/>if<sp/>we<sp/>export<sp/>to<sp/>mk4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>root_code;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>vis_data-&gt;Retrieve(</highlight><highlight class="stringliteral">&quot;root_code&quot;</highlight><highlight class="normal">,<sp/>root_code);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ok)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;XXXXXX&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/root_code&quot;</highlight><highlight class="normal">,<sp/>root_code);<sp/></highlight><highlight class="comment">//should<sp/>this<sp/>get<sp/>stuffed<sp/>in<sp/>config?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>correlation<sp/>processing<sp/>date<sp/>from<sp/>the<sp/>visibilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>corr_date;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>vis_data-&gt;Retrieve(</highlight><highlight class="stringliteral">&quot;correlation_date&quot;</highlight><highlight class="normal">,<sp/>corr_date);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ok)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corr_date<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/correlation_date&quot;</highlight><highlight class="normal">,<sp/>corr_date);<sp/></highlight><highlight class="comment">//should<sp/>this<sp/>get<sp/>stuffed<sp/>in<sp/>config?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ap_delta<sp/>=<sp/>ap_ax-&gt;at(1)<sp/>-<sp/>ap_ax-&gt;at(0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/ap_period&quot;</highlight><highlight class="normal">,<sp/>ap_delta);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//append<sp/>info<sp/>about<sp/>the<sp/>total<sp/>number<sp/>of<sp/>APs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>naps<sp/>=<sp/>ap_ax-&gt;GetSize();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/total_naps&quot;</highlight><highlight class="normal">,<sp/>naps);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//append<sp/>info<sp/>about<sp/>the<sp/>number<sp/>of<sp/>lags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>freq_ax<sp/>=<sp/>&amp;(std::get&lt;<sp/>FREQ_AXIS<sp/>&gt;(*vis_data));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlags<sp/>=<sp/>2<sp/>*<sp/>freq_ax-&gt;GetSize();<sp/></highlight><highlight class="comment">//factor<sp/>of<sp/>2<sp/>is<sp/>a<sp/>properly<sp/>of<sp/>padding<sp/>used<sp/>in<sp/>the<sp/>normFX<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/nlags&quot;</highlight><highlight class="normal">,<sp/>nlags);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//grab<sp/>the<sp/>channel<sp/>bandwidth<sp/>(assume<sp/>to<sp/>be<sp/>the<sp/>same<sp/>for<sp/>all<sp/>channels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bandwidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chan_ax<sp/>=<sp/>&amp;(std::get&lt;<sp/>CHANNEL_AXIS<sp/>&gt;(*vis_data));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>bandwidthlabelkey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bandwidth&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bwkey_present<sp/>=<sp/>chan_ax-&gt;RetrieveIndexLabelKeyValue(0,<sp/>bandwidthlabelkey,<sp/>bandwidth);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bandwidth<sp/>==<sp/>0<sp/>||<sp/>!bwkey_present)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;fringe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;channel-0<sp/>missing<sp/>bandwidth<sp/>label<sp/>value.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/channel_bandwidth&quot;</highlight><highlight class="normal">,<sp/>bandwidth);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//offset<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start_offset<sp/>=<sp/>ap_ax-&gt;at(0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;start_offset&quot;</highlight><highlight class="normal">,<sp/>start_offset);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//offset<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stop_offset<sp/>=<sp/>ap_ax-&gt;at(ap_ax-&gt;GetSize()<sp/>-<sp/>1)<sp/>+<sp/>ap_delta;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;stop_offset&quot;</highlight><highlight class="normal">,<sp/>stop_offset);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>number<sp/>of<sp/>channels<sp/>present<sp/>after<sp/>cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan<sp/>=<sp/>chan_ax-&gt;GetSize();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/nchannels&quot;</highlight><highlight class="normal">,<sp/>nchan);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//compute<sp/>the<sp/>a<sp/>priori<sp/>delay<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref>*<sp/>ref_data<sp/>=<sp/>conStore-&gt;GetObject&lt;<sp/><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref><sp/>&gt;(std::string(</highlight><highlight class="stringliteral">&quot;ref_sta&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref>*<sp/>rem_data<sp/>=<sp/>conStore-&gt;GetObject&lt;<sp/><ref refid="namespacehops_1a6f27aa7690ad9ea81270e4c98605d9bb" kindref="member">station_coord_type</ref><sp/>&gt;(std::string(</highlight><highlight class="stringliteral">&quot;rem_sta&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>MHO_DelayModel<sp/>delay_model;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>frt_vex_string<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/>std::string<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/vex/scan/fourfit_reftime&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_clockoff<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/ref_station/clock_early_offset&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//usec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_clockrate<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/ref_station/clock_rate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>delay_model.SetFourfitReferenceTimeVexString(frt_vex_string);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>delay_model.SetReferenceStationData(ref_data);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>delay_model.SetRemoteStationData(rem_data);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>delay_model.SetReferenceStationClockOffset(ref_clockoff<sp/>*<sp/>1e-6);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>delay_model.SetReferenceStationClockRate(ref_clockrate);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>delay_model.ComputeModel();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>offset<sp/>to<sp/>the<sp/>reference<sp/>time<sp/>(within<sp/>the<sp/>scan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="createRoot_8c_1a513dfe21d8fdb9359382061550cb2ef6" kindref="member">frt</ref><sp/>=<sp/><ref refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" kindref="member">hops_clock::from_vex_format</ref>(frt_vex_string);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>start_vex_string<sp/>=<sp/>paramStore-&gt;GetAs&lt;<sp/>std::string<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;/vex/scan/start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_time<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" kindref="member">hops_clock::from_vex_format</ref>(start_vex_string);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>offset_to_frt_duration<sp/>=<sp/><ref refid="createRoot_8c_1a513dfe21d8fdb9359382061550cb2ef6" kindref="member">frt</ref><sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frt_offset<sp/>=<sp/>std::chrono::duration&lt;<sp/>double<sp/>&gt;(offset_to_frt_duration).count();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/config/frt_offset&quot;</highlight><highlight class="normal">,<sp/>frt_offset);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>data<sp/>start<sp/>and<sp/>stop<sp/>dates<sp/>(including<sp/>the<sp/>start/stop<sp/>offsets)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classint64__t" kindref="compound">int64_t</ref><sp/>start_offset_ns<sp/>=<sp/>1e9<sp/>*<sp/>start_offset;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classint64__t" kindref="compound">int64_t</ref><sp/>stop_offset_ns<sp/>=<sp/>1e9<sp/>*<sp/>stop_offset;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data_start_tp<sp/>=<sp/>start_time<sp/>+<sp/>std::chrono::nanoseconds(start_offset_ns);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data_stop_tp<sp/>=<sp/>start_time<sp/>+<sp/>std::chrono::nanoseconds(stop_offset_ns);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>data_start_vex<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a8cc7394b4281c10218a3080e34161a40" kindref="member">hops_clock::to_vex_format</ref>(data_start_tp);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>data_stop_vex<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a8cc7394b4281c10218a3080e34161a40" kindref="member">hops_clock::to_vex_format</ref>(data_stop_tp);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/start_date&quot;</highlight><highlight class="normal">,<sp/>data_start_vex);<sp/></highlight><highlight class="comment">//store<sp/>as<sp/>vex<sp/>formatted<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/fringe/stop_date&quot;</highlight><highlight class="normal">,<sp/>data_stop_vex);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>adelay<sp/>=<sp/>delay_model.GetDelay();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arate<sp/>=<sp/>delay_model.GetRate();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aaccel<sp/>=<sp/>delay_model.GetAcceleration();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_adelay<sp/>=<sp/>delay_model.GetRefDelay();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_arate<sp/>=<sp/>delay_model.GetRefRate();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ref_stn_delay<sp/>=<sp/>delay_model.GetRefStationDelay();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//store<sp/>and<sp/><sp/>convert<sp/>to<sp/>microsec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>FIXME<sp/>-<sp/>document<sp/>units<sp/>of<sp/>all<sp/>the<sp/>various<sp/>parameters/quantities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/model/adelay&quot;</highlight><highlight class="normal">,<sp/>1e6<sp/>*<sp/>adelay);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/model/arate&quot;</highlight><highlight class="normal">,<sp/>1e6<sp/>*<sp/>arate);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/model/aaccel&quot;</highlight><highlight class="normal">,<sp/>1e6<sp/>*<sp/>aaccel);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/model/ref_adelay&quot;</highlight><highlight class="normal">,<sp/>1e6<sp/>*<sp/>ref_adelay);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/model/ref_arate&quot;</highlight><highlight class="normal">,<sp/>1e6<sp/>*<sp/>ref_arate);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/model/ref_station_delay&quot;</highlight><highlight class="normal">,<sp/>ref_stn_delay);<sp/></highlight><highlight class="comment">//kept<sp/>in<sp/>units<sp/>of<sp/>sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//figure<sp/>out<sp/>the<sp/>clock<sp/>information<sp/>at<sp/>the<sp/>FRT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1a685e70718e2d495e1094889d57bc644e" kindref="member">calculate_clock_model</ref>(paramStore);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//determines<sp/>properties<sp/>of<sp/>the<sp/>frequency<sp/>grid<sp/>used<sp/>in<sp/>the<sp/>MBD<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1ab55d543fcee4cf7571982ca488722773" kindref="member">calculate_freq_space</ref>(conStore,<sp/>paramStore);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//figure<sp/>out<sp/>the<sp/>reference<sp/>station&apos;s<sp/>coordinates<sp/>(az,<sp/>el,<sp/>par_angle,<sp/>u,<sp/>v,<sp/>w)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//these<sp/>are<sp/>all<sp/>evaluated<sp/>at<sp/>the<sp/>fourfit<sp/>reference<sp/>time...with<sp/>the<sp/>exception<sp/>of<sp/>parallactic_angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>parallactic<sp/>angle<sp/>is<sp/>not<sp/>given<sp/>as<sp/>a<sp/>spline<sp/>(this<sp/>is<sp/>just<sp/>the<sp/>value<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>scan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>MHO_StationModel<sp/>ref_model;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_model.SetEvaluationTimeVexString(frt_vex_string);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_model.SetStationData(ref_data);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_model.ComputeModel();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/ref_station/azimuth&quot;</highlight><highlight class="normal">,<sp/>ref_model.GetAzimuth());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/ref_station/elevation&quot;</highlight><highlight class="normal">,<sp/>ref_model.GetElevation());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/ref_station/parallactic_angle&quot;</highlight><highlight class="normal">,<sp/>ref_model.GetParallacticAngle());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/ref_station/u&quot;</highlight><highlight class="normal">,<sp/>ref_model.GetUCoordinate());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/ref_station/v&quot;</highlight><highlight class="normal">,<sp/>ref_model.GetVCoordinate());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/ref_station/w&quot;</highlight><highlight class="normal">,<sp/>ref_model.GetWCoordinate());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//figure<sp/>out<sp/>the<sp/>remote<sp/>station&apos;s<sp/>coordinates<sp/>(az,<sp/>el,<sp/>par_angle,<sp/>u,<sp/>v,<sp/>w)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>MHO_StationModel<sp/>rem_model;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>rem_model.SetEvaluationTimeVexString(frt_vex_string);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>rem_model.SetStationData(rem_data);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>rem_model.ComputeModel();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/rem_station/azimuth&quot;</highlight><highlight class="normal">,<sp/>rem_model.GetAzimuth());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/rem_station/elevation&quot;</highlight><highlight class="normal">,<sp/>rem_model.GetElevation());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/rem_station/parallactic_angle&quot;</highlight><highlight class="normal">,<sp/>rem_model.GetParallacticAngle());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/rem_station/u&quot;</highlight><highlight class="normal">,<sp/>rem_model.GetUCoordinate());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/rem_station/v&quot;</highlight><highlight class="normal">,<sp/>rem_model.GetVCoordinate());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/rem_station/w&quot;</highlight><highlight class="normal">,<sp/>rem_model.GetWCoordinate());</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1a3662544408b4c57143632cb85c0b1a8e" kindref="member">MHO_InitialFringeInfo::set_default_parameters_minimal</ref>(MHO_ParameterStore*<sp/>paramStore)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//default<sp/>mbd_anchor<sp/>is<sp/>model<sp/>(instead<sp/>of<sp/>sbd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>mbd_anchor<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/control/config/mbd_anchor&quot;</highlight><highlight class="normal">,<sp/>mbd_anchor);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__InitialFringeInfo_1afaaec153e695f74aa40403d89964d81b" kindref="member">MHO_InitialFringeInfo::configure_reference_frequency</ref>(MHO_ContainerStore*<sp/>conStore,<sp/>MHO_ParameterStore*<sp/>paramStore)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>the<sp/>parameter<sp/>store<sp/>already<sp/>has<sp/>a<sp/>reference<sp/>frequency<sp/>set,<sp/>and<sp/>if<sp/>not<sp/>set<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(paramStore-&gt;IsPresent(</highlight><highlight class="stringliteral">&quot;/control/config/ref_freq&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//grab<sp/>the<sp/>visibility<sp/>data,<sp/>so<sp/>we<sp/>can<sp/>determine<sp/>the<sp/>default<sp/>reference<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref>*<sp/>vis_data<sp/>=<sp/>conStore-&gt;GetObject&lt;<sp/><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref><sp/>&gt;(std::string(</highlight><highlight class="stringliteral">&quot;vis&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>first<sp/>frequency<sp/>in<sp/>the<sp/>array<sp/>serves<sp/>as<sp/>the<sp/>reference<sp/>frequency<sp/>if<sp/>this<sp/>value<sp/>remains<sp/>unset<sp/>in<sp/>the<sp/>control<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first_freq<sp/>=<sp/>std::get&lt;<sp/>CHANNEL_AXIS<sp/>&gt;(*vis_data)(0);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramStore-&gt;Set(</highlight><highlight class="stringliteral">&quot;/control/config/ref_freq&quot;</highlight><highlight class="normal">,<sp/>first_freq);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(<sp/>(paramStore-&gt;IsPresent(&quot;ref_freq&quot;)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>double<sp/>ref_freq<sp/>=<sp/>paramStore-&gt;GetAs&lt;double&gt;(&quot;ref_freq&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>paramStore-&gt;Set(&quot;/control/config/ref_freq&quot;,<sp/>ref_freq);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">};</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hops</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_InitialFringeInfo.cc"/>
  </compounddef>
</doxygen>
