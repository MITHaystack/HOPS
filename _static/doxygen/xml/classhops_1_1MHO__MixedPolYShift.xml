<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__MixedPolYShift" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_MixedPolYShift</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; visibility_type &gt;</basecompoundref>
    <includes refid="MHO__MixedPolYShift_8hh" local="no">MHO_MixedPolYShift.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1adb0d1dfc1e493d0f2abbd17883ce2a98" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fChannelLabelKey</definition>
        <argsstring></argsstring>
        <name>fChannelLabelKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="118" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a8ef811b731e8df9fc6d36013e77da9e7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_MixedPolYShift::fDegToRad</definition>
        <argsstring></argsstring>
        <name>fDegToRad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="104" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a0b274e392f4b54bb1ed8fb7d0003a281" prot="private" static="no" mutable="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; hops::MHO_MixedPolYShift::fImagUnit</definition>
        <argsstring></argsstring>
        <name>fImagUnit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="103" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1ab0cee8ebe8b9f39a5c51748a7a471c20" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fLowerSideband</definition>
        <argsstring></argsstring>
        <name>fLowerSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="121" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1ab7a3cc7a4fbb5b9ad074e2c09ab65cdf" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fRefStationKey</definition>
        <argsstring></argsstring>
        <name>fRefStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="115" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a45a95f08db7f8b4071029865a9181979" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fRefStationMk4IDKey</definition>
        <argsstring></argsstring>
        <name>fRefStationMk4IDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="117" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a74f1e2dbe36da1af097e3f3513b270e3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fRemStationKey</definition>
        <argsstring></argsstring>
        <name>fRemStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="114" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a45fb4934835957a6a93617c1c67dea6b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fRemStationMk4IDKey</definition>
        <argsstring></argsstring>
        <name>fRemStationMk4IDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="116" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a0653dc740601d3605a3318fb125c2249" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fSidebandLabelKey</definition>
        <argsstring></argsstring>
        <name>fSidebandLabelKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="120" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1ac33cb8377e8c3ba0d87ac2a3ec538698" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fStationIdentity</definition>
        <argsstring></argsstring>
        <name>fStationIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="107" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a37548d2be5ec2b20751d615b518a3263" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fStationKey</definition>
        <argsstring></argsstring>
        <name>fStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="113" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1aac773c9ce450ac0ac8c6ff8a6be53395" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_MixedPolYShift::fUpperSideband</definition>
        <argsstring></argsstring>
        <name>fUpperSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="122" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__MixedPolYShift_1a45228dfa03692fc8b7f2f6f2298822fd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_MixedPolYShift::fYPolPhaseOffset</definition>
        <argsstring></argsstring>
        <name>fYPolPhaseOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="110" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a92e9c0c0ac515e3b8bc8e0324fa5acc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_MixedPolYShift::MHO_MixedPolYShift</definition>
        <argsstring>()</argsstring>
        <name>MHO_MixedPolYShift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="34" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="6" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a3a29fa025aca2890497ed520d6c0c735" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_MixedPolYShift::~MHO_MixedPolYShift</definition>
        <argsstring>()</argsstring>
        <name>~MHO_MixedPolYShift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="35" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a0865e9b89f91ceffaff642e7d3a38dc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_MixedPolYShift::SetPhaseOffset</definition>
        <argsstring>(const double &amp;offset)</argsstring>
        <name>SetPhaseOffset</name>
        <param>
          <type>const double &amp;</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Setter for phase offset applied to Y pol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase offset value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="45" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="45" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a9e676c22c4c52b0e6b9b32a2acc1ec49" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_MixedPolYShift::ExecuteInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Applies a phase offset for mixed polarization data in-place (to Y-pol). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type object to apply phase offset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful, false if input is nullptr. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="73" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="17" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a3d57db7658553a273a039b1d5a488a04" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_MixedPolYShift::ExecuteOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Copies input visibility data and executes in-place operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const pointer to input visibility_type data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean result of ExecuteInPlace operation on copied output data. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="82" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a798d3c4a44f1711a42e4183ed1dc7f02" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_MixedPolYShift::InitializeInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes in-place for mixed polarization phase shift. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type pointer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="55" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a95dfb72b58e6409b0738fc22059c6e95" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_MixedPolYShift::InitializeOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes out-of-place operation for mixed polarization phase shift operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type data pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output visibility_type data pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="64" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a94c8e7ff6f26b2e902a97ec1e7ef9ff2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_MixedPolYShift::IsApplicable</definition>
        <argsstring>(std::size_t st_idx, std::string polprod)</argsstring>
        <name>IsApplicable</name>
        <param>
          <type>std::size_t</type>
          <declname>st_idx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>polprod</declname>
        </param>
        <briefdescription>
<para>Checks if a mixed linear/circular polarization product is applicable to this data at this station index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>st_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the station (0 for reference, 1 for remote) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polprod</parametername>
</parameternamelist>
<parameterdescription>
<para>Polarization product string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if applicable, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="92" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="88" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a9c7e55c20c2672112a15cd980cb777bb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_MixedPolYShift::IsMixedLinCirc</definition>
        <argsstring>(std::string polprod) const</argsstring>
        <name>IsMixedLinCirc</name>
        <param>
          <type>std::string</type>
          <declname>polprod</declname>
        </param>
        <briefdescription>
<para>determines if this is a (mixed_ pol-product of the form (YR, XR, XL, YL, LX, etc.) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polprod</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::string&amp;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if mixed linear-circular polarization product </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="131" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_MixedPolYShift.cc" bodystart="119" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1aac7bd64ce3115e6b81369604a7288de5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_MixedPolYShift::make_upper</definition>
        <argsstring>(std::string &amp;s)</argsstring>
        <name>make_upper</name>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="134" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__MixedPolYShift_1a1cd1c8a85f6dafc5f80c669ff7d64a79" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_MixedPolYShift::PolMatch</definition>
        <argsstring>(std::size_t station_idx, std::string &amp;polprod)</argsstring>
        <name>PolMatch</name>
        <param>
          <type>std::size_t</type>
          <declname>station_idx</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>polprod</declname>
        </param>
        <briefdescription>
<para>Checks if the polarization matches the polarization product at the given station index [0 = ref, 1 = rem]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>station_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the station for which to check the polarization product. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polprod</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::string&amp;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if polarization product matches fPol at given station index, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="100" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__MixedPolYShift" kindref="compound">MHO_MixedPolYShift</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Fri Oct 11 01:53:13 PM EDT 2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_MixedPolYShift</label>
        <link refid="classhops_1_1MHO__MixedPolYShift"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_MixedPolYShift</label>
        <link refid="classhops_1_1MHO__MixedPolYShift"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" line="31" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_MixedPolYShift.hh" bodystart="32" bodyend="141"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a9e676c22c4c52b0e6b9b32a2acc1ec49" prot="protected" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a3d57db7658553a273a039b1d5a488a04" prot="protected" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1adb0d1dfc1e493d0f2abbd17883ce2a98" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fChannelLabelKey</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a8ef811b731e8df9fc6d36013e77da9e7" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fDegToRad</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a0b274e392f4b54bb1ed8fb7d0003a281" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fImagUnit</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1ab0cee8ebe8b9f39a5c51748a7a471c20" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fLowerSideband</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1ab7a3cc7a4fbb5b9ad074e2c09ab65cdf" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fRefStationKey</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a45a95f08db7f8b4071029865a9181979" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fRefStationMk4IDKey</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a74f1e2dbe36da1af097e3f3513b270e3" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fRemStationKey</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a45fb4934835957a6a93617c1c67dea6b" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fRemStationMk4IDKey</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a0653dc740601d3605a3318fb125c2249" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fSidebandLabelKey</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1ac33cb8377e8c3ba0d87ac2a3ec538698" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fStationIdentity</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a37548d2be5ec2b20751d615b518a3263" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fStationKey</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1aac773c9ce450ac0ac8c6ff8a6be53395" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fUpperSideband</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a45228dfa03692fc8b7f2f6f2298822fd" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>fYPolPhaseOffset</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a798d3c4a44f1711a42e4183ed1dc7f02" prot="protected" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a95dfb72b58e6409b0738fc22059c6e95" prot="protected" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a94c8e7ff6f26b2e902a97ec1e7ef9ff2" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>IsApplicable</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a9c7e55c20c2672112a15cd980cb777bb" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>IsMixedLinCirc</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1aac7bd64ce3115e6b81369604a7288de5" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>make_upper</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a92e9c0c0ac515e3b8bc8e0324fa5acc7" prot="public" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>MHO_MixedPolYShift</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a1cd1c8a85f6dafc5f80c669ff7d64a79" prot="private" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>PolMatch</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a0865e9b89f91ceffaff642e7d3a38dc3" prot="public" virt="non-virtual"><scope>hops::MHO_MixedPolYShift</scope><name>SetPhaseOffset</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__MixedPolYShift_1a3a29fa025aca2890497ed520d6c0c735" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>~MHO_MixedPolYShift</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_MixedPolYShift</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
