<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__LSBOffset" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_LSBOffset</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; visibility_type &gt;</basecompoundref>
    <includes refid="MHO__LSBOffset_8hh" local="no">MHO_LSBOffset.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1acdf88b18f52298bcfa3a61134cc5c187" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fChannelLabelKey</definition>
        <argsstring></argsstring>
        <name>fChannelLabelKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="127" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1ae6f51474493a002b2dc942b1bddc325e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_LSBOffset::fDegToRad</definition>
        <argsstring></argsstring>
        <name>fDegToRad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="113" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1ab696cad30b62540c99dbc38249f73215" prot="private" static="no" mutable="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; hops::MHO_LSBOffset::fImagUnit</definition>
        <argsstring></argsstring>
        <name>fImagUnit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="112" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1ab53d792c69f7bf5a2ea0da6da08b77ca" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fLowerSideband</definition>
        <argsstring></argsstring>
        <name>fLowerSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="130" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1a591b7cea3d955f7b7844f384e0ece12d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_LSBOffset::fLSBPhaseOffset</definition>
        <argsstring></argsstring>
        <name>fLSBPhaseOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="119" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1a3777c38f51efc95d25203234d6b9a21e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fRefStationKey</definition>
        <argsstring></argsstring>
        <name>fRefStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="124" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1aa7a21513c424b29d9fe3be956c95cec8" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fRefStationMk4IDKey</definition>
        <argsstring></argsstring>
        <name>fRefStationMk4IDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="126" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1a8217883fb57e43b8fdc0d7b8c3e699a9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fRemStationKey</definition>
        <argsstring></argsstring>
        <name>fRemStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="123" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1a56cc93c0369363637d14e47f7efba3b2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fRemStationMk4IDKey</definition>
        <argsstring></argsstring>
        <name>fRemStationMk4IDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="125" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1aebce01e5c2e25bb82f0626f262b537e0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fSidebandLabelKey</definition>
        <argsstring></argsstring>
        <name>fSidebandLabelKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="129" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1aa0ead462235fc4cd14f5549dbda90424" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fStationIdentity</definition>
        <argsstring></argsstring>
        <name>fStationIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="116" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1a0f821c012c8e915a8cb7ff01433bd8a9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fStationKey</definition>
        <argsstring></argsstring>
        <name>fStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="122" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LSBOffset_1a322fc161c2ebac73d0f0577474ac3ea7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LSBOffset::fUpperSideband</definition>
        <argsstring></argsstring>
        <name>fUpperSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="131" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1aecb616b4d296b85c1993b42312a7af15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_LSBOffset::MHO_LSBOffset</definition>
        <argsstring>()</argsstring>
        <name>MHO_LSBOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="34" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LSBOffset.cc" bodystart="6" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a04a3fc3103810a5420d87cb05bb40425" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_LSBOffset::~MHO_LSBOffset</definition>
        <argsstring>()</argsstring>
        <name>~MHO_LSBOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="35" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LSBOffset.cc" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a7473fb77ef803e9808d836872347550b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_LSBOffset::SetLSBPhaseOffset</definition>
        <argsstring>(const double &amp;lsb_offset)</argsstring>
        <name>SetLSBPhaseOffset</name>
        <param>
          <type>const double &amp;</type>
          <declname>lsb_offset</declname>
        </param>
        <briefdescription>
<para>set lsb (phase) offset for double-sideband channels </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsb_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>LSB phase offset value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="54" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a18ba4843f6ffb866c303ec350fd9aeef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_LSBOffset::SetStationIdentifier</definition>
        <argsstring>(std::string station_id)</argsstring>
        <name>SetStationIdentifier</name>
        <param>
          <type>std::string</type>
          <declname>station_id</declname>
        </param>
        <briefdescription>
<para>Setter for station identifier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>station_id</parametername>
</parameternamelist>
<parameterdescription>
<para>mk4 id of type std::string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
station_id is treated as follows: 1-char =&gt; mk4 id 2-char =&gt; 2char station code </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="46" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="46" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a14529424d3aa61f5879d68d0ff63d1db" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LSBOffset::ExecuteInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Applies LSB phase offset to appropriate channels in-place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if execution is successful. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="82" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LSBOffset.cc" bodystart="23" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a091c31aacc1940e05d661619f289f34d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LSBOffset::ExecuteOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Copies input visibility data and executes in-place processing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const reference to input visibility_type data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of ExecuteInPlace operation on copied output data. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="91" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LSBOffset.cc" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a6c458e5e0db569bedeefe24da9417585" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LSBOffset::InitializeInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes <ref refid="classhops_1_1MHO__LSBOffset" kindref="compound">MHO_LSBOffset</ref> in-place using provided visibility_type pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to visibility_type for initialization. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="64" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LSBOffset.cc" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a8f27d99ee2eef484f48e06a5e976c7e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LSBOffset::InitializeOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes out-of-place visibility data from input data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const pointer to input visibility_type data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to output visibility_type data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful, false otherwise </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="73" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LSBOffset.cc" bodystart="120" bodyend="123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a7e61285ef2d4d33dd9df1d14e4eaa1ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LSBOffset::IsApplicable</definition>
        <argsstring>(std::size_t st_idx, const visibility_type *in)</argsstring>
        <name>IsApplicable</name>
        <param>
          <type>std::size_t</type>
          <declname>st_idx</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Checks if correction is applicable based on station index and visibility type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>st_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the station </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Visibility type data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating whether correction is applicable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="101" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LSBOffset.cc" bodystart="70" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1aef86f6d8215cf917f4b809e04b2a09b6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_LSBOffset::make_upper</definition>
        <argsstring>(std::string &amp;s)</argsstring>
        <name>make_upper</name>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="134" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LSBOffset_1a5469b519234abc571e8858df392eca47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LSBOffset::PolMatch</definition>
        <argsstring>(std::size_t station_idx, std::string &amp;polprod)</argsstring>
        <name>PolMatch</name>
        <param>
          <type>std::size_t</type>
          <declname>station_idx</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>polprod</declname>
        </param>
        <briefdescription>
<para>Function PolMatch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>station_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::size_t) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polprod</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::string&amp;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (bool) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="109" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__LSBOffset" kindref="compound">MHO_LSBOffset</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Thu Jan 27 10:36:00 2022 -0500 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_LSBOffset</label>
        <link refid="classhops_1_1MHO__LSBOffset"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_LSBOffset</label>
        <link refid="classhops_1_1MHO__LSBOffset"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" line="31" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LSBOffset.hh" bodystart="32" bodyend="141"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_LSBOffset</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a14529424d3aa61f5879d68d0ff63d1db" prot="protected" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a091c31aacc1940e05d661619f289f34d" prot="protected" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1acdf88b18f52298bcfa3a61134cc5c187" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fChannelLabelKey</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1ae6f51474493a002b2dc942b1bddc325e" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fDegToRad</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1ab696cad30b62540c99dbc38249f73215" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fImagUnit</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1ab53d792c69f7bf5a2ea0da6da08b77ca" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fLowerSideband</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a591b7cea3d955f7b7844f384e0ece12d" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fLSBPhaseOffset</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a3777c38f51efc95d25203234d6b9a21e" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fRefStationKey</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1aa7a21513c424b29d9fe3be956c95cec8" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fRefStationMk4IDKey</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a8217883fb57e43b8fdc0d7b8c3e699a9" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fRemStationKey</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a56cc93c0369363637d14e47f7efba3b2" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fRemStationMk4IDKey</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1aebce01e5c2e25bb82f0626f262b537e0" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fSidebandLabelKey</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1aa0ead462235fc4cd14f5549dbda90424" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fStationIdentity</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a0f821c012c8e915a8cb7ff01433bd8a9" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fStationKey</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a322fc161c2ebac73d0f0577474ac3ea7" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>fUpperSideband</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_LSBOffset</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a6c458e5e0db569bedeefe24da9417585" prot="protected" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a8f27d99ee2eef484f48e06a5e976c7e8" prot="protected" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a7e61285ef2d4d33dd9df1d14e4eaa1ca" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>IsApplicable</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1aef86f6d8215cf917f4b809e04b2a09b6" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>make_upper</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1aecb616b4d296b85c1993b42312a7af15" prot="public" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>MHO_LSBOffset</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a5469b519234abc571e8858df392eca47" prot="private" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>PolMatch</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a7473fb77ef803e9808d836872347550b" prot="public" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>SetLSBPhaseOffset</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a18ba4843f6ffb866c303ec350fd9aeef" prot="public" virt="non-virtual"><scope>hops::MHO_LSBOffset</scope><name>SetStationIdentifier</name></member>
      <member refid="classhops_1_1MHO__LSBOffset_1a04a3fc3103810a5420d87cb05bb40425" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>~MHO_LSBOffset</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_LSBOffset</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
