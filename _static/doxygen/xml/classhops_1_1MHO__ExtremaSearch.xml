<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__ExtremaSearch" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_ExtremaSearch</compoundname>
    <basecompoundref refid="classhops_1_1MHO__InspectingOperator" prot="public" virt="non-virtual">hops::MHO_InspectingOperator&lt; XArgType &gt;</basecompoundref>
    <includes refid="MHO__ExtremaSearch_8hh" local="no">MHO_ExtremaSearch.hh</includes>
    <templateparamlist>
      <param>
        <type>class XArgType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__ExtremaSearch_1ab3b042f3905c16d2f399bc82d9bd189a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_ExtremaSearch&lt; XArgType &gt;::fMax</definition>
        <argsstring></argsstring>
        <name>fMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="160" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ExtremaSearch_1a684b08fb152a0694b802b5d3202ca5e9" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_ExtremaSearch&lt; XArgType &gt;::fMaxLocation</definition>
        <argsstring></argsstring>
        <name>fMaxLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="162" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ExtremaSearch_1a060a628d0d3b881dfd89c8f2e01a4652" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_ExtremaSearch&lt; XArgType &gt;::fMin</definition>
        <argsstring></argsstring>
        <name>fMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="161" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ExtremaSearch_1af03c607c19559230ee20851e2e11f37f" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_ExtremaSearch&lt; XArgType &gt;::fMinLocation</definition>
        <argsstring></argsstring>
        <name>fMinLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="163" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1a08f115dea08f28293ed3c57a80888aea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_ExtremaSearch&lt; XArgType &gt;::MHO_ExtremaSearch</definition>
        <argsstring>()</argsstring>
        <name>MHO_ExtremaSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="31" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1abf5d39b92cdb0d2a46fec00a30b20efb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_ExtremaSearch&lt; XArgType &gt;::~MHO_ExtremaSearch</definition>
        <argsstring>()</argsstring>
        <name>~MHO_ExtremaSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="32" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1a6f95ac5bb13a5013f18872307a679366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_ExtremaSearch&lt; XArgType &gt;::GetMax</definition>
        <argsstring>()</argsstring>
        <name>GetMax</name>
        <briefdescription>
<para>Getter for maximum value across the array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current maximum value as a double. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="39" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1a1ed40fb5da893ffafe200ff5d4d4b3d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_ExtremaSearch&lt; XArgType &gt;::GetMaxLocation</definition>
        <argsstring>()</argsstring>
        <name>GetMaxLocation</name>
        <briefdescription>
<para>Getter for max location (offset into the array) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::size_t - Maximum location value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="53" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1a7b09f4ac13c23f74bd4a625a7c95c538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_ExtremaSearch&lt; XArgType &gt;::GetMin</definition>
        <argsstring>()</argsstring>
        <name>GetMin</name>
        <briefdescription>
<para>Getter for minimum value across the. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The minimum value as a double. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="46" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1a009297133270680dbfe38e217f6982b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_ExtremaSearch&lt; XArgType &gt;::GetMinLocation</definition>
        <argsstring>()</argsstring>
        <name>GetMinLocation</name>
        <briefdescription>
<para>Getter for min location (offset into the array) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::size_t representing the minimum location. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="60" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1af5a5428cf156dc834026a21d466e7164" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_ExtremaSearch&lt; XArgType &gt;::ExecuteImpl</definition>
        <argsstring>(const XArgType *in) override</argsstring>
        <name>ExecuteImpl</name>
        <reimplements refid="classhops_1_1MHO__InspectingOperator_1ae00b4e9b7c1fb8897e0ddf5e87867acc">ExecuteImpl</reimplements>
        <param>
          <type>const XArgType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Executes search operation using input argument and returns true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input argument of type const XArgType* for search operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean value indicating successful execution. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="79" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1ac7208445491db4e7d29116d711861a8b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_ExtremaSearch&lt; XArgType &gt;::InitializeImpl</definition>
        <argsstring>(const XArgType *) override</argsstring>
        <name>InitializeImpl</name>
        <reimplements refid="classhops_1_1MHO__InspectingOperator_1aded8287bb457abddd135814ea95c417d">InitializeImpl</reimplements>
        <param>
          <type>const XArgType *</type>
        </param>
        <briefdescription>
<para>Initializes the operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>!in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to constant XArgType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="70" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="70" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1a5f7912bb82534bfc1fa1ae8247c65614" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>typename XArgType::value_type</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_floating_point&lt; XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_floating_point&lt; XCheckType &gt;::value, void &gt;::type hops::MHO_ExtremaSearch&lt; XArgType &gt;::Search</definition>
        <argsstring>(const XArgType *in)</argsstring>
        <name>Search</name>
        <param>
          <type>const XArgType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Function Search - does the actual min/max search, templated on value type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XArgType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (typename XCheckType &gt;<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="95" column="41" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="95" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ExtremaSearch_1a02c8c0991bed610e30b25fd76f737567" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>typename XArgType::value_type</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="structhops_1_1is__complex" kindref="compound">is_complex</ref>&lt; XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; is_complex&lt; XCheckType &gt;::value, void &gt;::type hops::MHO_ExtremaSearch&lt; XArgType &gt;::Search</definition>
        <argsstring>(const XArgType *in)</argsstring>
        <name>Search</name>
        <param>
          <type>const XArgType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Function Search - does the actual min/max search for abs() (magnitude) of complex types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XArgType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (typename is_complex&lt; XCheckType &gt;::value, void &gt;::type) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="132" column="41" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="132" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__ExtremaSearch" kindref="compound">MHO_ExtremaSearch</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Thu Jan 5 09:13:09 2023 -0500 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_ExtremaSearch&lt; XArgType &gt;</label>
        <link refid="classhops_1_1MHO__ExtremaSearch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_InspectingOperator&lt; XArgType &gt;</label>
        <link refid="classhops_1_1MHO__InspectingOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_ExtremaSearch&lt; XArgType &gt;</label>
        <link refid="classhops_1_1MHO__ExtremaSearch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_InspectingOperator&lt; XArgType &gt;</label>
        <link refid="classhops_1_1MHO__InspectingOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fArg</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>const XArgType *</label>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" line="28" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_ExtremaSearch.hh" bodystart="29" bodyend="164"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__InspectingOperator_1a2b4643b0fa8840e2cd9c563ff94b7b09" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1af5a5428cf156dc834026a21d466e7164" prot="protected" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>ExecuteImpl</name></member>
      <member refid="classhops_1_1MHO__InspectingOperator_1a5f6eb3f05738ed013a1ae555399caa07" prot="protected" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>fArg</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1ab3b042f3905c16d2f399bc82d9bd189a" prot="private" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>fMax</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a684b08fb152a0694b802b5d3202ca5e9" prot="private" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>fMaxLocation</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a060a628d0d3b881dfd89c8f2e01a4652" prot="private" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>fMin</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1af03c607c19559230ee20851e2e11f37f" prot="private" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>fMinLocation</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a6f95ac5bb13a5013f18872307a679366" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>GetMax</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a1ed40fb5da893ffafe200ff5d4d4b3d6" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>GetMaxLocation</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a7b09f4ac13c23f74bd4a625a7c95c538" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>GetMin</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a009297133270680dbfe38e217f6982b8" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>GetMinLocation</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__InspectingOperator_1aee87234b1bfcec770ca95db0d527b6ab" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1ac7208445491db4e7d29116d711861a8b" prot="protected" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>InitializeImpl</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a08f115dea08f28293ed3c57a80888aea" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>MHO_ExtremaSearch</name></member>
      <member refid="classhops_1_1MHO__InspectingOperator_1ade9ff5dfb10fd46f60d4b05e388f52e6" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>MHO_InspectingOperator</name></member>
      <member refid="classhops_1_1MHO__Operator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a5f7912bb82534bfc1fa1ae8247c65614" prot="private" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>Search</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1a02c8c0991bed610e30b25fd76f737567" prot="private" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>Search</name></member>
      <member refid="classhops_1_1MHO__InspectingOperator_1a3cea8e96348fc6b912aaf73a39dc0812" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_ExtremaSearch</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__ExtremaSearch_1abf5d39b92cdb0d2a46fec00a30b20efb" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>~MHO_ExtremaSearch</name></member>
      <member refid="classhops_1_1MHO__InspectingOperator_1a02d0f0c0080c0465abafb7594aa2d12c" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>~MHO_InspectingOperator</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_ExtremaSearch</scope><name>~MHO_Operator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
