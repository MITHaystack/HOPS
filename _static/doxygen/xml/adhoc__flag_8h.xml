<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="adhoc__flag_8h" kind="file" language="C++">
    <compoundname>adhoc_flag.h</compoundname>
    <includes local="yes">hops_config.h</includes>
    <includedby refid="adhoc__flag_8c" local="yes">adhoc_flag.c</includedby>
    <includedby refid="norm__fx_8c" local="yes">norm_fx.c</includedby>
    <includedby refid="norm__xf_8c" local="yes">norm_xf.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>adhoc_flag.h</label>
        <link refid="adhoc__flag_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hops_config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>norm_xf.c</label>
        <link refid="norm__xf_8c"/>
      </node>
      <node id="1">
        <label>adhoc_flag.h</label>
        <link refid="adhoc__flag_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>adhoc_flag.c</label>
        <link refid="adhoc__flag_8c"/>
      </node>
      <node id="3">
        <label>norm_fx.c</label>
        <link refid="norm__fx_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="adhoc__flag_8h_1a507740a728a11704ebc9a4e8ca3bbdde" prot="public" static="no">
        <name>ADHOC_FLAG</name>
        <param><defname>PP</defname></param>
        <param><defname>DF</defname></param>
        <param><defname>FR</defname></param>
        <param><defname>AP</defname></param>
        <param><defname>PU</defname></param>
        <param><defname>PL</defname></param>
        <initializer>    do { \
    *(PU) = *(PL) = DF; } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" line="43" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adhoc__flag_8h_1a110550ec7b6ffca7864ebd6107204245" prot="public" static="no">
        <name>HAVE_HSEARCH_R</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" line="19" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adhoc__flag_8h_1a99dcd83b3415ab2975bfbb03a18991c0" prot="public" static="no">
        <name>USE_ADHOC_FLAG</name>
        <initializer><ref refid="adhoc__flag_8h_1a110550ec7b6ffca7864ebd6107204245" kindref="member">HAVE_HSEARCH_R</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" line="24" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="adhoc__flag_8h_1ac70c62917cda5c335ac6c085f2d24966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adhoc_flag</definition>
        <argsstring>(struct type_param *pp, int datum_flag, int fr, int ap, int *uflag, int *lflag)</argsstring>
        <name>adhoc_flag</name>
        <param>
          <type>struct <ref refid="structtype__param" kindref="compound">type_param</ref> *</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>datum_flag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>uflag</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" line="13" column="13" declfile="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h" declline="13" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ADHOC_FLAG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADHOC_FLAG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Machinery<sp/>to<sp/>support<sp/>adhoc_flag()<sp/>capability.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Everything<sp/>hides<sp/>behind<sp/>one<sp/>function,<sp/>adhoc_flag()</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>which<sp/>should<sp/>be<sp/>invoked<sp/>only<sp/>when<sp/>adhoc_flag_file[s]<sp/>are</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>defined.<sp/><sp/>The<sp/>#define&apos;d<sp/>statement<sp/>is<sp/>for<sp/>efficiency<sp/>if<sp/>not.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>struct<sp/>type_param<sp/>defined<sp/>in<sp/>param_struct.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="adhoc__flag_8h_1ac70c62917cda5c335ac6c085f2d24966" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adhoc__flag_8h_1ac70c62917cda5c335ac6c085f2d24966" kindref="member">adhoc_flag</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtype__param" kindref="compound">type_param</ref><sp/>*pp,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>datum_flag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uflag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lflag);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hops_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>hops_config.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_HSEARCH_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="adhoc__flag_8h_1a110550ec7b6ffca7864ebd6107204245" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_HSEARCH_R<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_HSEARCH_R<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>disable<sp/>the<sp/>capability<sp/>for<sp/>testing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_ADHOC_FLAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="adhoc__flag_8h_1a99dcd83b3415ab2975bfbb03a18991c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_ADHOC_FLAG<sp/>HAVE_HSEARCH_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_ADHOC_FLAG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_ADHOC_FLAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*#warning<sp/>&quot;Ad<sp/>Hoc<sp/>Flagging<sp/>enabled&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADHOC_FLAG(PP,<sp/>DF,<sp/>FR,<sp/>AP,<sp/>PU,<sp/>PL)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>int<sp/>once<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(once)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg(&quot;AHF(%s)&quot;</highlight><highlight class="normal">,1,(PP)-&gt;ah_flag_files[0]);\</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg(&quot;AHF(%s)&quot;,1,(PP)-&gt;ah_flag_files[1]);\</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>once<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((PP)-&gt;ah_flag_files[0][0]<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PP)-&gt;ah_flag_files[1][0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adhoc_flag(PP,<sp/>DF,<sp/>FR,<sp/>AP,<sp/>PU,<sp/>PL);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(PU)<sp/>=<sp/>*(PL)<sp/>=<sp/>DF;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>USE_ADHOC_FLAG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*#warning<sp/>&quot;Ad<sp/>Hoc<sp/>Flagging<sp/>disabled&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="adhoc__flag_8h_1a507740a728a11704ebc9a4e8ca3bbdde" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADHOC_FLAG(PP,<sp/>DF,<sp/>FR,<sp/>AP,<sp/>PU,<sp/>PL)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(PU)<sp/>=<sp/>*(PL)<sp/>=<sp/>DF;<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_ADHOC_FLAG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>eof</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/c_src/fourfit_libs/ffsearch/include/adhoc_flag.h"/>
  </compounddef>
</doxygen>
