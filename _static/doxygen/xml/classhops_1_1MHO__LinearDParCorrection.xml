<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__LinearDParCorrection" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_LinearDParCorrection</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; visibility_type &gt;</basecompoundref>
    <includes refid="MHO__LinearDParCorrection_8hh" local="no">MHO_LinearDParCorrection.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__LinearDParCorrection_1a83e9721c4e0bc125aabb33a1987f414d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; hops::MHO_LinearDParCorrection::fPolProductSet</definition>
        <argsstring></argsstring>
        <name>fPolProductSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="124" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LinearDParCorrection_1a8e050ef3de62e5ef69cba92c2ad6952f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LinearDParCorrection::fRefMountType</definition>
        <argsstring></argsstring>
        <name>fRefMountType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="128" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LinearDParCorrection_1ad0684d9c780a13517acf7a7d3b786924" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_LinearDParCorrection::fRefParAngle</definition>
        <argsstring></argsstring>
        <name>fRefParAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="126" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LinearDParCorrection_1a4c4b0fe8d4ac145c34fcb4b1607ca479" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_LinearDParCorrection::fRemMountType</definition>
        <argsstring></argsstring>
        <name>fRemMountType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="129" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__LinearDParCorrection_1a063d7deb0817c61ecc16de0381b4d483" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_LinearDParCorrection::fRemParAngle</definition>
        <argsstring></argsstring>
        <name>fRemParAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="127" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a3143c5144d763688ba59c363a98a6659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_LinearDParCorrection::MHO_LinearDParCorrection</definition>
        <argsstring>()</argsstring>
        <name>MHO_LinearDParCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="36" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a4966cdb3c0e15d4c0284f8f708ce8b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_LinearDParCorrection::~MHO_LinearDParCorrection</definition>
        <argsstring>()</argsstring>
        <name>~MHO_LinearDParCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="37" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a5c097dd937c98e7a2ec55a98c5bf6b4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_LinearDParCorrection::SetPolProductSet</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;pp_vec)</argsstring>
        <name>SetPolProductSet</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>pp_vec</declname>
        </param>
        <briefdescription>
<para>Setter for pol product set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pp_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a vector of strings representing the pol product set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="44" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a5d368b72ec61c3bc1c6686a5b6eae3bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_LinearDParCorrection::SetReferenceParallacticAngle</definition>
        <argsstring>(double p)</argsstring>
        <name>SetReferenceParallacticAngle</name>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Setter for reference station parallactic angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>reference station parallactic angle value in degrees </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="57" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1ab611174f5103cba317189e6d9eefc102" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_LinearDParCorrection::SetRemoteParallacticAngle</definition>
        <argsstring>(double p)</argsstring>
        <name>SetRemoteParallacticAngle</name>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Setter for remote station parallactic angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>value for remote station parallactic angle in degrees </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="64" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="64" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1aa538483377fd0451950821f010ce3eb9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LinearDParCorrection::ExecuteInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Applies linear delta-parallactic angle correction to visibility data in-place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type* data to be corrected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True indicating successful application of correction. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="96" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1ae3a2fefde5b98f90fb0ea608a4661f0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LinearDParCorrection::ExecuteOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Copies input visibility data and applies the pre-multiplication operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type data to be copied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True indicating successful execution. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="105" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a2df913e68e9978f1cbc777bd81ca0aa4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LinearDParCorrection::InitializeInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes in-place visibility_type pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to visibility_type object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="78" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a42aed4fcc03bd6a0364b9a688d4c892c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_LinearDParCorrection::InitializeOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes out-of-place visibility data using input visibility_type pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const pointer to input visibility_type data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success of initialization. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="87" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="30" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a5ad9f6fca4373c19108a6cbc8b3f7aed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; hops::MHO_LinearDParCorrection::GetPrefactor</definition>
        <argsstring>(std::string pp_label)</argsstring>
        <name>GetPrefactor</name>
        <param>
          <type>std::string</type>
          <declname>pp_label</declname>
        </param>
        <briefdescription>
<para>Getter for prefactor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pp_label</parametername>
</parameternamelist>
<parameterdescription>
<para>Input polarization label (XX, YY, XY, or YX) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>prefactor as a std::complex&lt;double&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="122" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="49" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__LinearDParCorrection_1a14bbf99541d7776ae47f0f2fa51cd28f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_LinearDParCorrection::PreMultiply</definition>
        <argsstring>(visibility_type *in)</argsstring>
        <name>PreMultiply</name>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Multiplies each pol product in input visibility_type by its appropriate pre-factor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type to be multiplied by pre-factors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="114" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_LinearDParCorrection.cc" bodystart="35" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__LinearDParCorrection" kindref="compound">MHO_LinearDParCorrection</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Wed Feb 7 23:58:10 2024 -0500 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_LinearDParCorrection</label>
        <link refid="classhops_1_1MHO__LinearDParCorrection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_LinearDParCorrection</label>
        <link refid="classhops_1_1MHO__LinearDParCorrection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" line="33" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_LinearDParCorrection.hh" bodystart="34" bodyend="130"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1aa538483377fd0451950821f010ce3eb9" prot="protected" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1ae3a2fefde5b98f90fb0ea608a4661f0c" prot="protected" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a83e9721c4e0bc125aabb33a1987f414d" prot="private" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fPolProductSet</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a8e050ef3de62e5ef69cba92c2ad6952f" prot="private" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fRefMountType</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1ad0684d9c780a13517acf7a7d3b786924" prot="private" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fRefParAngle</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a4c4b0fe8d4ac145c34fcb4b1607ca479" prot="private" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fRemMountType</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a063d7deb0817c61ecc16de0381b4d483" prot="private" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>fRemParAngle</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a5ad9f6fca4373c19108a6cbc8b3f7aed" prot="private" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>GetPrefactor</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a2df913e68e9978f1cbc777bd81ca0aa4" prot="protected" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a42aed4fcc03bd6a0364b9a688d4c892c" prot="protected" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a3143c5144d763688ba59c363a98a6659" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>MHO_LinearDParCorrection</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a14bbf99541d7776ae47f0f2fa51cd28f" prot="private" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>PreMultiply</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a5c097dd937c98e7a2ec55a98c5bf6b4e" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>SetPolProductSet</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a5d368b72ec61c3bc1c6686a5b6eae3bf" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>SetReferenceParallacticAngle</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1ab611174f5103cba317189e6d9eefc102" prot="public" virt="non-virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>SetRemoteParallacticAngle</name></member>
      <member refid="classhops_1_1MHO__LinearDParCorrection_1a4966cdb3c0e15d4c0284f8f708ce8b45" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>~MHO_LinearDParCorrection</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_LinearDParCorrection</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
