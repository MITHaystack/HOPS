<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="vexpy_8py" kind="file" language="Python">
    <compoundname>vexpy.py</compoundname>
    <innerclass refid="classvexpy_1_1vexpy_1_1chan__struct" prot="public">vexpy::vexpy::chan_struct</innerclass>
    <innerclass refid="classvexpy_1_1vexpy_1_1scan__struct" prot="public">vexpy::vexpy::scan_struct</innerclass>
    <innerclass refid="classvexpy_1_1vexpy_1_1source__struct" prot="public">vexpy::vexpy::source_struct</innerclass>
    <innerclass refid="classvexpy_1_1vexpy_1_1station__struct" prot="public">vexpy::vexpy::station_struct</innerclass>
    <innerclass refid="classvexpy_1_1vexpy_1_1vex" prot="public">vexpy::vexpy::vex</innerclass>
    <innerclass refid="classvexpy_1_1vexpy_1_1VexStructureBase" prot="public">vexpy::vexpy::VexStructureBase</innerclass>
    <innernamespace refid="namespacevexpy_1_1vexpy">vexpy::vexpy</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacevexpy_1_1vexpy" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;provides<sp/>python<sp/>access<sp/>to<sp/>vex<sp/>parsing<sp/>library&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#core<sp/>imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#hops<sp/>package<sp/>python<sp/>libs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>mk4io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sky_coord</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>mk4io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>date</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>mk4io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Mk4StructureBase</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>source_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">QUASAR<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="18"><highlight class="normal">STAR<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="19"><highlight class="normal">SATELLITE<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="20"><highlight class="normal">DUMMY<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>position_ref_frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">B1950<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="23"><highlight class="normal">J2000<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>tape_motion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">CONTINUOUS<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="26"><highlight class="normal">START_STOP<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="27"><highlight class="normal">ADAPTIVE<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>site_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">FIXED<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="30"><highlight class="normal">EARTH_ORBIT<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#<sp/>axis_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">EQUATORIAL<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="33"><highlight class="normal">X_YNS<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="34"><highlight class="normal">AZEL<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="35"><highlight class="normal">X_YEW<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>rack_type<sp/>or<sp/>recorder<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Also<sp/>track<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">MARK3A<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="39"><highlight class="normal">MARK4<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="40"><highlight class="normal">VLBA<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="41"><highlight class="normal">VLBAG<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="42"><highlight class="normal">S2<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="43"><highlight class="normal">K4<sp/>=<sp/>6</highlight></codeline>
<codeline lineno="44"><highlight class="normal">MARK5A<sp/>=<sp/>7</highlight></codeline>
<codeline lineno="45"><highlight class="normal">MARK5B<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Modulation<sp/>and<sp/>roll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">ON<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="48"><highlight class="normal">OFF<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;Magic&quot;<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">C_UNDEFINED<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">I_UNDEFINED<sp/>=<sp/>16383</highlight></codeline>
<codeline lineno="52"><highlight class="normal">F_UNDEFINED<sp/>=<sp/>-1.0e30</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">OVEX<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">#max<sp/>number<sp/>of<sp/>channels<sp/>in<sp/>station<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">MAX_CHAN<sp/>=<sp/>128</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classvexpy_1_1vexpy_1_1VexStructureBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1VexStructureBase" kindref="compound">VexStructureBase</ref>(ctypes.Structure):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>vexpy<sp/>base<sp/>class<sp/>which<sp/>implements<sp/>comparison<sp/>operations<sp/>eq<sp/>and<sp/>ne<sp/>and<sp/>a<sp/>print<sp/>summary<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1VexStructureBase_1a977b385c197df406231e1b04697ebe0d" kindref="member">__eq__</ref>(self,<sp/>other):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>field<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._fields_:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>b<sp/>=<sp/>getattr(self,<sp/>field[0]),<sp/>getattr(other,<sp/>field[0])</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(a,<sp/>ctypes.Array):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a[:]<sp/>!=<sp/>b[:]:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a<sp/>!=<sp/>b:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1VexStructureBase_1a11038ebcd0191035b2a7e6620ddd58b1" kindref="member">__ne__</ref>(self,<sp/>other):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>field<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._fields_:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>b<sp/>=<sp/>getattr(self,<sp/>field[0]),<sp/>getattr(other,<sp/>field[0])</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(a,<sp/>ctypes.Array):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a[:]<sp/>!=<sp/>b[:]:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a<sp/>!=<sp/>b:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1VexStructureBase_1af155ab0d05c4c75c206558a0208a5841" kindref="member">printsummary</ref>(self):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>dump<sp/>parsed<sp/>data<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(self.__class__.__name__,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>field<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._fields_:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>getattr(self,<sp/>field[0])</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(a,<sp/>ctypes.Array):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(field[0],<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvexpy_1_1vexpy_1_1VexStructureBase_1a110929a2baeb94c6b38d42e056b0c1af" kindref="member">printarray</ref>printarray(a)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(a,<sp/>VexStructureBase):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(field[0],<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.printsummary()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(a,<sp/>Mk4StructureBase):</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(field[0],<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.printsummary()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a<sp/>!=<sp/>C_UNDEFINED<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a<sp/>!=<sp/>I_UNDEFINED<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a<sp/>!=<sp/>F_UNDEFINED:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(field[0],<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>,<sp/>a)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1VexStructureBase_1a110929a2baeb94c6b38d42e056b0c1af" kindref="member">printarray</ref>(self,a):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(a,<sp/>ctypes.Array):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;<sp/>array<sp/>of<sp/>length:<sp/>&quot;</highlight><highlight class="normal">,<sp/>len(a),<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(x,<sp/>VexStructureBase):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.printsummary()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(x,<sp/>ctypes.Array):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classvexpy_1_1vexpy_1_1VexStructureBase_1a110929a2baeb94c6b38d42e056b0c1af" kindref="member">printarray</ref>printarray(x)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/>!=<sp/>C_UNDEFINED<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>x<sp/>!=<sp/>I_UNDEFINED<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>x<sp/>!=F_UNDEFINED<sp/>:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(x)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classvexpy_1_1vexpy_1_1source__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1source__struct" kindref="compound">source_struct</ref>(<ref refid="classvexpy_1_1vexpy_1_1VexStructureBase" kindref="compound">VexStructureBase</ref>):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>_fields_<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;source_name&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;iau_name&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;source_type&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;calibrator&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;position&apos;</highlight><highlight class="normal">,<sp/>sky_coord<sp/>),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;position_epoch&apos;</highlight><highlight class="normal">,<sp/>date),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;position_ref_frame&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;ra_rate&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;dec_rate&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classvexpy_1_1vexpy_1_1chan__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1chan__struct" kindref="compound">chan_struct</ref>(<ref refid="classvexpy_1_1vexpy_1_1VexStructureBase" kindref="compound">VexStructureBase</ref>):</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>_fields_<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;chan_name&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),<sp/></highlight><highlight class="comment">#<sp/>External<sp/>channel<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;polarization&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char),<sp/></highlight><highlight class="comment">#<sp/>R<sp/>or<sp/>L<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;sky_frequency&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_double),<sp/></highlight><highlight class="comment">#<sp/>Hz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;net_sideband&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char),<sp/></highlight><highlight class="comment">#<sp/>U<sp/>or<sp/>L<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;bandwidth&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_double),<sp/></highlight><highlight class="comment">#<sp/>Hz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;band_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),<sp/></highlight><highlight class="comment">#<sp/>Linkword<sp/>(internal<sp/>use)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;chan_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),<sp/></highlight><highlight class="comment">#<sp/>Linkword<sp/>(internal<sp/>use)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;bbc_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),<sp/><sp/></highlight><highlight class="comment">#<sp/>Linkword<sp/>(internal<sp/>use)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;pcal_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),<sp/></highlight><highlight class="comment">#<sp/>Linkword<sp/>(internal<sp/>use)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;if_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),<sp/></highlight><highlight class="comment">#<sp/>Linkword<sp/>(internal<sp/>use)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;bbc_no&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Physical<sp/>BBC#<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;if_name&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>8),<sp/></highlight><highlight class="comment">#<sp/>Physical<sp/>IF<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;if_total_lo&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_double),<sp/></highlight><highlight class="comment">#<sp/>Hz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;if_sideband&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char),<sp/></highlight><highlight class="comment">#<sp/>U<sp/>or<sp/>L<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;pcal_spacing&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Hz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;pcal_base_freq&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Hz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;pcal_detect&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short<sp/>*<sp/>16),<sp/></highlight><highlight class="comment">#<sp/>Integer<sp/>tone<sp/>#s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;sign_tracks&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short<sp/>*<sp/>4),<sp/></highlight><highlight class="comment">#<sp/>Track<sp/>#s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;sign_headstack&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>1-4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;mag_tracks&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short<sp/>*<sp/>4),<sp/></highlight><highlight class="comment">#<sp/>Track<sp/>#s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;mag_headstack&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short)<sp/></highlight><highlight class="comment">#<sp/>1-4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classvexpy_1_1vexpy_1_1station__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1station__struct" kindref="compound">station_struct</ref>(<ref refid="classvexpy_1_1vexpy_1_1VexStructureBase" kindref="compound">VexStructureBase</ref>):</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>_fields_<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;start_offset&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;stop_offset&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;start_tapepos&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Meters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;tape_motion&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;early_start&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;late_finish&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;tape_gap&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;subpass&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>vex<sp/>meaning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;passno&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>vex<sp/>meaning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;drive_no&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;site_type&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;site_name&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>9),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;site_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>3),<sp/></highlight><highlight class="comment">#<sp/>International<sp/>2<sp/>char<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;mk4_site_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char),<sp/></highlight><highlight class="comment">#<sp/>1-char<sp/>correlator<sp/>alias<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;coordinates&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_double<sp/>*<sp/>3),<sp/></highlight><highlight class="comment">#<sp/>Meters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;coordinate_epoch&apos;</highlight><highlight class="normal">,<sp/>date),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>Mk4<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;site_velocity&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_double<sp/>*<sp/>3),<sp/></highlight><highlight class="comment">#<sp/>Meters/sec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;zenith_atm&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;occucode&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>5),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>4-char<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;axis_type&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;axis_offset&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Meters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;recorder_type&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;rack_type&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;record_density&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/><sp/></highlight><highlight class="comment">#<sp/>Bits/inch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;tape_length&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Meters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;recorder_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Unique<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;clock_early&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;clockrate_epoch&apos;</highlight><highlight class="normal">,<sp/>date),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>Mk4<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;clockrate&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>sec/sec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;tape_id&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>9),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>tape<sp/>label<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;samplerate&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_double),<sp/></highlight><highlight class="comment">#<sp/>Samples/sec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;track_format&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;modulation&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;bits_sample&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>1<sp/>or<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;multiplex_ratio&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>1,<sp/>2<sp/>or<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;pass_direction&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char),<sp/></highlight><highlight class="comment">#<sp/>F<sp/>or<sp/>R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;head_position&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float<sp/>*<sp/>4),<sp/></highlight><highlight class="comment">#<sp/>Meters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;roll&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Defines<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;roll_increment&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;roll_period&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;roll_seq&apos;</highlight><highlight class="normal">,<sp/>(<sp/>(ctypes.c_short<sp/>*<sp/>32)<sp/>*<sp/>34<sp/>)<sp/>*<sp/>5<sp/>),<sp/></highlight><highlight class="comment">#<sp/>Track<sp/>numbers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;channels&apos;</highlight><highlight class="normal">,<sp/>chan_struct<sp/>*<sp/>MAX_CHAN<sp/>)<sp/><sp/></highlight><highlight class="comment">#MAX_CHAN<sp/>is<sp/>defined<sp/>in<sp/>mk4_size.h<sp/>as<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classvexpy_1_1vexpy_1_1scan__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1scan__struct" kindref="compound">scan_struct</ref>(<ref refid="classvexpy_1_1vexpy_1_1VexStructureBase" kindref="compound">VexStructureBase</ref>):</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>_fields_<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;filename&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>256),<sp/></highlight><highlight class="comment">#<sp/>Name<sp/>of<sp/>input<sp/>vex<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;exper_num&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>4-digit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;exper_name&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32<sp/>),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;correlator&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32<sp/>),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;scan_name&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>32),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;start_time&apos;</highlight><highlight class="normal">,<sp/>date),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>Mk4<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;ffit_reftime&apos;</highlight><highlight class="normal">,<sp/>date),<sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>Mk4<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;tai_utc&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),<sp/><sp/></highlight><highlight class="comment">#<sp/>EOP<sp/>parameters<sp/>(global)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;a1_tai&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;neop&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_int),<sp/></highlight><highlight class="comment">#<sp/>Number<sp/>of<sp/>eop<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;eop_reftime&apos;</highlight><highlight class="normal">,<sp/>date),<sp/></highlight><highlight class="comment">#<sp/>Time<sp/>of<sp/>1st<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;eop_interval&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_int),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;ut1_utc&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float<sp/>*<sp/>10<sp/>),<sp/></highlight><highlight class="comment">#<sp/>Seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;x_wobble&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float<sp/>*<sp/>10<sp/>),<sp/></highlight><highlight class="comment">#<sp/>Radians<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;y_wobble&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_float<sp/>*<sp/>10<sp/>),<sp/></highlight><highlight class="comment">#<sp/>Radians<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;src&apos;</highlight><highlight class="normal">,<sp/>source_struct),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;nst&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_short),<sp/><sp/></highlight><highlight class="comment">#<sp/>Number<sp/>of<sp/>st<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;st&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(station_struct))<sp/></highlight><highlight class="comment">#<sp/>array<sp/>of<sp/>lenght<sp/>&apos;nst&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">#this<sp/>class<sp/>contains<sp/>dummy<sp/>entries<sp/>for<sp/>the<sp/>MK4<sp/>correlator<sp/>specific<sp/>vex<sp/>types<sp/>(cvex,<sp/>evex,<sp/>ivex,<sp/>lvex,<sp/>svex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classvexpy_1_1vexpy_1_1vex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvexpy_1_1vexpy_1_1vex" kindref="compound">vex</ref>(<ref refid="classvexpy_1_1vexpy_1_1VexStructureBase" kindref="compound">VexStructureBase</ref>):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>_fields_<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;vextypes&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_int),<sp/></highlight><highlight class="comment">#<sp/>Which<sp/>sects<sp/>are<sp/>filled<sp/>in<sp/>(bitmap)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;filename&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_char<sp/>*<sp/>256),<sp/></highlight><highlight class="comment">#<sp/>Disk-based<sp/>vex<sp/>file<sp/>of<sp/>origin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;ovex&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(scan_struct)),<sp/></highlight><highlight class="comment">#<sp/>Observe<sp/>vex<sp/>written<sp/>by<sp/>sched<sp/>progs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;cvex&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_void_p),<sp/></highlight><highlight class="comment">#unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;evex&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_void_p),<sp/></highlight><highlight class="comment">#unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;ivex&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_void_p),<sp/></highlight><highlight class="comment">#unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;svex&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_void_p),<sp/></highlight><highlight class="comment">#unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;lvex&apos;</highlight><highlight class="normal">,<sp/>ctypes.c_void_p),<sp/></highlight><highlight class="comment">#unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;ovex_src&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(ctypes.c_char)),<sp/></highlight><highlight class="comment">#<sp/>Filtered<sp/>ascii<sp/>vex<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;cvex_src&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(ctypes.c_char)),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;evex_src&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(ctypes.c_char)),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;svex_src&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(ctypes.c_char)),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;ivex_src&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(ctypes.c_char)),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;lvex_src&apos;</highlight><highlight class="normal">,<sp/>ctypes.POINTER(ctypes.c_char))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevexpy_1_1vexpy_1a0ee6e3af2a74d4d8a7c59932b4c9412f" kindref="member">load_vexpy_library</ref>():</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;locate<sp/>and<sp/>load<sp/>the<sp/>vex<sp/>parsing<sp/>c-library&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#first<sp/>try<sp/>to<sp/>find<sp/>the<sp/>library<sp/>using<sp/>LD_LIBRARY_PATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>ld_lib_path<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&apos;LD_LIBRARY_PATH&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>possible_path_list<sp/>=<sp/>ld_lib_path.split(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a_path<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>possible_path_list:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libpath<sp/>=<sp/>os.path.join(a_path,<sp/></highlight><highlight class="stringliteral">&apos;hops&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;libvex.so&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>altlibpath<sp/>=<sp/>os.path.join(a_path,<sp/></highlight><highlight class="stringliteral">&apos;libvex.so&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(libpath):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#found<sp/>the<sp/>library,<sp/>go<sp/>ahead<sp/>and<sp/>load<sp/>it<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vexpy<sp/>=<sp/>ctypes.cdll.LoadLibrary(libpath)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vexpy</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>os.path.isfile(altlibpath):</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#found<sp/>the<sp/>library,<sp/>go<sp/>ahead<sp/>and<sp/>load<sp/>it<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vexpy<sp/>=<sp/>ctypes.cdll.LoadLibrary(altlibpath)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vexpy</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#next<sp/>try<sp/>to<sp/>find<sp/>the<sp/>library<sp/>using<sp/>the<sp/>environmental<sp/>variable<sp/>HOPS_PREFIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&apos;HOPS_PREFIX&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prefix<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.join(prefix,<sp/></highlight><highlight class="stringliteral">&apos;lib&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;hops&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;libvex.so&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(path):</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vexpy<sp/>=<sp/>ctypes.cdll.LoadLibrary(path)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vexpy</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#failing<sp/>that,<sp/>try<sp/>to<sp/>find<sp/>it<sp/>using<sp/>the<sp/>HOPS_ROOT<sp/>and<sp/>HOPS_ARCH<sp/>env&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&apos;HOPS_ROOT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>arch<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&apos;HOPS_ARCH&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>root<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>arch<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.join(root,<sp/>arch,</highlight><highlight class="stringliteral">&apos;lib&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;hops&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;libvex.so&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(path):</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vexpy<sp/>=<sp/>ctypes.cdll.LoadLibrary(path)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vexpy</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#failed<sp/>to<sp/>find<sp/>the<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevexpy_1_1vexpy_1ad7b494f37264544407a3b859bd33c496" kindref="member">get_ovex</ref>(filename):</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Get<sp/>parsed<sp/>ovex<sp/>file<sp/>data.<sp/>WARNING,<sp/>the<sp/>object<sp/>returned<sp/>by<sp/>this<sp/>function<sp/>will<sp/>not<sp/>be<sp/>preserved<sp/>across</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>multiple<sp/>calls<sp/>to<sp/>get_ovex()<sp/>as<sp/>the<sp/>returned<sp/>ovex<sp/>object<sp/>does<sp/>not<sp/>perform<sp/>a<sp/>deep</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>copy<sp/>of<sp/>itself<sp/>and<sp/>the<sp/>underlying<sp/>vex<sp/>library<sp/>is<sp/>not<sp/>re-entrant/thread-safe<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>libvexpy<sp/>=<sp/><ref refid="namespacevexpy_1_1vexpy_1a0ee6e3af2a74d4d8a7c59932b4c9412f" kindref="member">load_vexpy_library</ref>()</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/><ref refid="classvexpy_1_1vexpy_1_1vex" kindref="compound">vex</ref>()</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/>libvexpy.get_vex(<sp/>ctypes.create_string_buffer(filename.encode()),<sp/>OVEX,<sp/>ctypes.create_string_buffer(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.encode()),<sp/>ctypes.byref(root)<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ret_val<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>root.ovex:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root.ovex.contents</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Error,<sp/>parsing<sp/>error<sp/>or<sp/>ovex<sp/>missing<sp/>for<sp/>root<sp/>file:<sp/>&quot;</highlight><highlight class="normal">,filename)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevexpy_1_1vexpy_1a38010bfd85ff86f2e7a2afc0620847bf" kindref="member">get_file_station_polarizations</ref>(ovex_filename):</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>parse<sp/>the<sp/>ovex<sp/>(root)<sp/>file<sp/>of<sp/>a<sp/>particular<sp/>scan<sp/>and<sp/>determine<sp/>the<sp/>polarizations<sp/>associated<sp/>with<sp/>each<sp/>station,<sp/>return<sp/>as<sp/>dict<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>station_id_pol_dict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#retrieve<sp/>ovex<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(ovex_filename):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ovex<sp/>=<sp/>vexpy.get_ovex(ovex_filename)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(range(0,<sp/>ovex.nst)):</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_id<sp/>=<sp/>(<sp/>ovex.st[n].mk4_site_id.decode()<sp/>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_id_pol_dict[station_id]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_set<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(range(0,vexpy.MAX_CHAN)):</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(<sp/>str(ovex.st[n].channels[j].chan_name.decode()<sp/>)<sp/>)<sp/>&gt;=<sp/>0:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_char<sp/>=<sp/>str(<sp/>ovex.st[n].channels[j].polarization.decode()<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p_char<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;R&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;L&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;X&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Y&apos;</highlight><highlight class="normal">]:<sp/><sp/></highlight><highlight class="comment">#vex<sp/>file<sp/>had<sp/>better<sp/>stick<sp/>with<sp/>(R,L)<sp/>or<sp/>(X,Y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_set.add(p_char)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>station_id_pol_dict[station_id]<sp/>=<sp/>list(pol_set)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>station_id_pol_dict</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/python_src/mk4_module/vexpy/vexpy.py"/>
  </compounddef>
</doxygen>
