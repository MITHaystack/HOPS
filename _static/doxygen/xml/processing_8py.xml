<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="processing_8py" kind="file" language="Python">
    <compoundname>processing.py</compoundname>
    <innernamespace refid="namespacevpal_1_1processing">vpal::processing</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacevpal_1_1processing" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;<sp/>some<sp/>useful<sp/>utility<sp/>functions<sp/>for<sp/>data<sp/>processing<sp/>with<sp/>fourfit<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#core<sp/>imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>filter</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>next</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>str</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,<sp/>sys</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#set<sp/>up<sp/>module<sp/>level<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="12"><highlight class="normal">processing_logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#other<sp/>hops<sp/>package<sp/>python<sp/>libs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>hops_test<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ht</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ffcontrol</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>progress.bar<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bar<sp/></highlight><highlight class="comment">#non-core<sp/>import</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bar<sp/></highlight><highlight class="comment">#local<sp/>import</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>combined_filter</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DiscreteQuantityFilter</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ContinuousQuantityFilter</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>fringe_file_manipulation<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ffm</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1a46e57b1c711b9a94d6fb684b663cee48" kindref="member">load_directory_fringe_files</ref>(dir_name,<sp/>baselines_list,<sp/>frequency_group=None,<sp/>include_autos=False):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;find<sp/>and<sp/>load<sp/>all<sp/>fringe<sp/>files<sp/>in<sp/>a<sp/>directory<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>all<sp/>fringe<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>exclude_list=[</highlight><highlight class="stringliteral">&apos;prepass&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;scratch&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;pre_production&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;make_links&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bad_eop&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;setup&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;polconvert&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;scratch&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/>ht.recursive_find_fringe_files(dir_name,<sp/>include_autos,<sp/>exclude_list)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;load<sp/>directory<sp/>fringe<sp/>files<sp/>found:&apos;,<sp/>len(ff_list))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>we<sp/>were<sp/>give<sp/>a<sp/>list<sp/>of<sp/>baselines,<sp/>restrict<sp/>the<sp/>fringe<sp/>files<sp/>to<sp/>these<sp/>baselines<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list2<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(baselines_list)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_list:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffbasename<sp/>=<sp/>os.path.basename(x)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>(<sp/>ffbasename.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>)[0]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baselines_list:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_list2.append(x)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_list2<sp/>=<sp/>ff_list<sp/></highlight><highlight class="comment">#no<sp/>list,<sp/>just<sp/>load<sp/>them<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>print(len(ff_list2),<sp/></highlight><highlight class="stringliteral">&apos;fringe<sp/>files<sp/>after<sp/>baseline<sp/>selection&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>we<sp/>were<sp/>not<sp/>given<sp/>a<sp/>frequency<sp/>group,<sp/>assume<sp/>it<sp/>is<sp/>&apos;X&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list3<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>frequency_group<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency_group<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;X&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_list2:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffbasename<sp/>=<sp/>os.path.basename(x)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fg<sp/>=<sp/>(<sp/>ffbasename.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>)[1]</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>fg<sp/>==<sp/>frequency_group:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_list3.append(x)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;load<sp/>dir<sp/>fringes:<sp/>after<sp/>fgroup<sp/>cuts<sp/>#:&quot;,<sp/>len(ff_list3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#load<sp/>fringes<sp/>into<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>fringe_objects<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ff_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_list3:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_obj<sp/>=<sp/>ffm.FringeFileHandle()</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_obj.load(ff_name)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f_obj.is_valid:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fringe_objects.append(f_obj)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(len(fringe_objects),<sp/>&apos;fringe<sp/>files<sp/>after<sp/>opening<sp/>fringe<sp/>objects&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fringe_objects</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1aed018211a8141a2d69dc904a5d6a7236" kindref="member">gather_fringe_files</ref>(base_directory,<sp/>control_file,<sp/>blines,<sp/>pol_products=[&apos;I&apos;],<sp/>include_autos=False,<sp/>exclude_list=None,<sp/>max_depth=2):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>fringe<sp/>(type2)<sp/>files<sp/>found<sp/>in<sp/>any<sp/>directory<sp/>up<sp/>to<sp/>max_depth<sp/>under<sp/>the<sp/>base_directory</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>a<sp/>typical<sp/>VGOS<sp/>experiment<sp/>directory,<sp/>the<sp/>fringe<sp/>files<sp/>are<sp/>two<sp/>levels<sp/>below<sp/>the<sp/>base_directory<sp/>(the<sp/>first</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>level<sp/>below<sp/>the<sp/>base<sp/>directory<sp/>is<sp/>the<sp/>scan<sp/>name).</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>exp_dir<sp/>is<sp/>expecting<sp/>an<sp/>absolute<sp/>path<sp/>to<sp/>a<sp/>HOPS<sp/>experiment<sp/>number<sp/>directory<sp/>(four-digit<sp/>number)</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>control<sp/>file<sp/>is<sp/>an<sp/>absolute<sp/>path</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Assumes<sp/>fringe<sp/>files<sp/>have<sp/>a<sp/>six-digit<sp/>extension<sp/>with<sp/>three<sp/>&apos;.&apos;<sp/>in<sp/>the<sp/>filename.</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>exclude_list<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclude_list=[</highlight><highlight class="stringliteral">&apos;prepass&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;pre_production&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;make_links&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bad_eop&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;setup&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>exclude<sp/>=<sp/>set(exclude_list)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>os.path.isdir(base_directory)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>fringe_file_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>base_dir<sp/>=<sp/>base_directory.rstrip(os.path.sep)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>num_sep<sp/>=<sp/>base_dir.count(os.path.sep)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>control_file_hash<sp/>=<sp/>ffcontrol.get_control_file_hash(control_file)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>counter=0</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>current_root,<sp/>subdirectories,<sp/>files<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.walk(base_directory,<sp/>topdown=</highlight><highlight class="keyword">True</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>filename<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>apply<sp/>the<sp/>exclude<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any([e<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>current_root<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>e<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>exclude]):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>apply<sp/>the<sp/>max<sp/>depth<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>current_root.count(os.path.sep)<sp/>&gt;<sp/>num_sep+max_depth:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs_filename<sp/>=<sp/>os.path.abspath(filename)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_base<sp/>=<sp/>os.path.split(abs_filename)[1]</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#look<sp/>for<sp/>root<sp/>files<sp/>using<sp/>some<sp/>simple<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>filename_base.count(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>==<sp/>3:<sp/></highlight><highlight class="comment">#check<sp/>that<sp/>there<sp/>are<sp/>three<sp/>dots<sp/>in<sp/>the<sp/>filename<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bline<sp/>=<sp/>filename_base.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(bline)==2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>bline<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blines:<sp/></highlight><highlight class="comment">#make<sp/>sure<sp/>leading<sp/>section<sp/>of<sp/>file<sp/>name<sp/>is<sp/>2-char<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_name<sp/>=<sp/>os.path.join(current_root,<sp/>filename)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(include_autos<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(bline[0]<sp/>!=<sp/>bline[1]):<sp/></highlight><highlight class="comment">#check<sp/>that<sp/>this<sp/>is<sp/>a<sp/>cross<sp/>correlation<sp/>if<sp/>autos<sp/>excluded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extension<sp/>=<sp/>filename_base.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)[3]<sp/></highlight><highlight class="comment">#get<sp/>the<sp/>file<sp/>extension<sp/>(root_id)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(extension)<sp/>==<sp/>6:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#check<sp/>that<sp/>the<sp/>extension<sp/>has<sp/>a<sp/>length<sp/>of<sp/>6<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter+=1</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_cf_hash<sp/>=<sp/>ht.get_control_file_hash_from_fringe(full_name)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>control_file_hash<sp/>==<sp/>ff_cf_hash:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fringe_file_list.append(full_name)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>we<sp/>have<sp/>a<sp/>list<sp/>of<sp/>fringe<sp/>files<sp/>that<sp/>used<sp/>the<sp/>prescribed<sp/>control<sp/>file.<sp/><sp/>Check<sp/>for<sp/>the<sp/>correct<sp/>polproduct:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>apply<sp/>the<sp/>check<sp/>on<sp/>pol<sp/>products</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ff<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fringe_file_list:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_pp_list<sp/>=<sp/>ht.get_file_polarization_product_provisional(ff)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_pp_list:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pol_products:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>that<sp/>we<sp/>are<sp/>sure<sp/>we<sp/>have<sp/>the<sp/>correct<sp/>polproduct,<sp/>create<sp/>a<sp/>FringeFileHandle<sp/>object<sp/>and<sp/>append<sp/>to<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_obj<sp/>=<sp/>ffm.FringeFileHandle()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_obj.load(ff)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_list.append(f_obj)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(base_directory,<sp/>&apos;Number<sp/>of<sp/>fringe<sp/>files<sp/>considered:&apos;,<sp/>counter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ff_list</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1a026e42cd5498617ea286acac3b4667d4" kindref="member">join_fringes_into_baseline_collection</ref>(exp_directory,<sp/>fringe_object_list,<sp/>station_list,<sp/>include_autos=False,<sp/>required_polprod_list=None,<sp/>only_complete=True):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;this<sp/>function<sp/>takes<sp/>individual<sp/>fringe<sp/>files<sp/>(for<sp/>each<sp/>scan,<sp/>baseline,<sp/>and<sp/>polarization<sp/>product)</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>assembles<sp/>the<sp/>polarization<sp/>product<sp/>files<sp/>together<sp/>by<sp/>baseline<sp/>for<sp/>each<sp/>scan<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>baselines<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a4c5105e04b3d2344ce0061688122fc96" kindref="member">construct_valid_baseline_list</ref>(exp_directory,<sp/>station_list[0],<sp/>station_list[1:],<sp/>network_reference_baselines_only=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>include_autos=include_autos)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>required_polprod_list<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required_polprod_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>bline_collection_set<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>categorized_objs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>obj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fringe_object_list:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>obj.baseline<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baselines<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>obj<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>categorized_objs:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sflist<sp/>=<sp/>ffm.SingleBaselinePolarizationProductCollection()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sflist.required_polprod_list<sp/>=<sp/>required_polprod_list</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sflist.add_fringe_object(obj)<sp/></highlight><highlight class="comment">#this<sp/>sets,<sp/>root_id,<sp/>scan_name,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_present<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sfl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bline_collection_set:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sfl<sp/>==<sp/>sflist:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfl.add_fringe_object(obj)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_present<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_present<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bline_collection_set.add(sflist)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>categorized_objs.append(obj)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>ret_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>only_complete<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_list<sp/>=<sp/>[blc<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>blc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bline_collection_set<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>blc.is_complete()<sp/>]</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_list<sp/>=<sp/>list(bline_collection_set)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ret_list:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.init_values()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_list</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1ade2902f76a40f5028132a3d3a6ed8f62" kindref="member">sort_collections_by_baseline</ref>(baseline_collection_list):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>returns<sp/>a<sp/>dict<sp/>of<sp/>lists,<sp/>each<sp/>dict<sp/>value<sp/>contains<sp/>a<sp/>list<sp/>of<sp/>the<sp/>collections<sp/>corresponding<sp/>to<sp/>a<sp/>single<sp/>baseline<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>bline_set<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baseline_collection_list:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>x.baseline</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bline_set.add(bl)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>sorted_collections<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bline_set:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sorted_collections[bl]=<sp/>[]</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bline_set:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baseline_collection_list:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>==<sp/>x.baseline:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sorted_collections[bl].<ref refid="read__control__file_8c_1a6e8445bf8d20289805dd74cc8c79c246" kindref="member">append</ref>(x)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sorted_collections</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1afc2188703b82af1f2ab7716f8192fa1f" kindref="member">group_baseline_collections_by_scan</ref>(bl_collection_list):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>group<sp/>the<sp/>data<sp/>of<sp/>associated<sp/>with<sp/>each<sp/>baseline<sp/>by<sp/>scan<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_id_set<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bl_collection_list:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_id_set.add(x.root_id)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_blc<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc_root_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>scan_id_set:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_blc[sc_root_id]<sp/>=<sp/>ffm.SingleScanBaselineCollection()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>blc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bl_collection_list:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_blc[blc.root_id].add_baseline_collection(blc)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(scan_blc.values()):</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.init_values()</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(scan_blc.values())</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1af3ee367e959258d81a27400186996182" kindref="member">get_max_nblines_in_all_collections</ref>(bl_collection_list):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>get<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>baselines<sp/>in<sp/>any<sp/>single<sp/>observation/scan<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_blc<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1afc2188703b82af1f2ab7716f8192fa1f" kindref="member">group_baseline_collections_by_scan</ref>(<sp/>bl_collection_list<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>max_n_blines<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(scan_blc.values()):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max_n_blines<sp/>&lt;<sp/>sc.get_n_baseline_collections():</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_n_blines<sp/>=<sp/>sc.get_n_baseline_collections()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_n_blines</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1ab006df80d00443606bbaf56014e7c432" kindref="member">launch_fourfit_processes_in_parallel</ref>(full_arg_list,<sp/>max_num_processes=1,<sp/>use_progress_ticker=True,<sp/>log_processes=False):</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>launch<sp/>several<sp/>fourfit<sp/>processes<sp/>in<sp/>parallel<sp/>to<sp/>process<sp/>all<sp/>the<sp/>jobs<sp/>specified<sp/>by<sp/>the<sp/>&apos;full_arg_list&apos;<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>threads<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>generated_fringe_files<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>processed_args_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>arg_list<sp/>=<sp/>full_arg_list</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#generate<sp/>new<sp/>threads,<sp/>and<sp/>monitor<sp/>until<sp/>all<sp/>data<sp/>is<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>use_ticker<sp/>=<sp/>use_progress_ticker<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(arg_list)<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>use_ticker:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbar<sp/>=<sp/><ref refid="classvpal_1_1utility_1_1Bar" kindref="compound">Bar</ref>(</highlight><highlight class="stringliteral">&apos;Processing:<sp/>&apos;</highlight><highlight class="normal">,<sp/>max=len(arg_list))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>threads<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>arg_list:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#spawn<sp/>a<sp/>new<sp/>thread<sp/>if<sp/>we<sp/>are<sp/>not<sp/>using<sp/>the<sp/>max<sp/>number<sp/>of<sp/>processes<sp/>and<sp/>there<sp/>are<sp/>still<sp/>files<sp/>to<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len(threads)<sp/>&lt;<sp/>max_num_processes)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(len(arg_list)<sp/>!=<sp/>0<sp/>):</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_args<sp/>=<sp/>arg_list.pop()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>ht.FourFitThread(target=ht.fourfit_generate_fringe,<sp/>args=t_args)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.setDaemon(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.start()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads.append(t)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#we<sp/>have<sp/>already<sp/>spawned<sp/>the<sp/>max<sp/>number<sp/>of<sp/>process<sp/>(or<sp/>there<sp/>is<sp/>no<sp/>data<sp/>left<sp/>to<sp/>run<sp/>on)<sp/>so<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#monitor<sp/>the<sp/>running<sp/>processes<sp/>and<sp/>remove<sp/>them<sp/>once<sp/>they<sp/>are<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>thread<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>threads:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ht.check_thread_is_alive(thread):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generated_files<sp/>=<sp/>thread.get_return_value()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processed_args=<sp/>thread.get_input_args()</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>log_processes<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.debug(<sp/></highlight><highlight class="stringliteral">&quot;completed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>thread.as_string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>produced:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(<sp/>thread.get_return_value()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generated_fringe_files.extend(<sp/>generated_files<sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processed_args_list.append(<sp/>processed_args<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads.remove(thread)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>use_ticker<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbar.next()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>use_ticker<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbar.finish()</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>generated_fringe_files,<sp/>processed_args_list</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1a4c5105e04b3d2344ce0061688122fc96" kindref="member">construct_valid_baseline_list</ref>(directory,<sp/>network_reference_station,<sp/>remote_stations,<sp/>network_reference_baselines_only=False,<sp/>include_autos=False):</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;construct<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>valid<sp/>baselines<sp/>in<sp/>this<sp/>experiment<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#make<sp/>sure<sp/>there<sp/>are<sp/>no<sp/>duplicates<sp/>in<sp/>the<sp/>station<sp/>lists:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>remote_station_set<sp/>=<sp/>set(remote_stations)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(remote_stations)<sp/>&gt;<sp/>len(remote_station_set):</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remote_stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join(remote_station_set)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>network_reference_station<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>remote_station_set:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remote_station_set.remove(network_reference_station)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remote_stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join(remote_station_set)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#determine<sp/>all<sp/>possible<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>stations<sp/>=<sp/>network_reference_station<sp/>+<sp/>remote_stations</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>all_blist<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s1<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stations:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stations:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>include_autos<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blist.append(s1+s2)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s1<sp/>!=<sp/>s2:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blist.append(s1+s2)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#just<sp/>reference<sp/>station<sp/>blines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_blist<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s1<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>remote_stations:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s1<sp/>!=<sp/>network_reference_station:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_blist.append(network_reference_station+s1)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_blist.append(s1+network_reference_station)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>include_autos<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_blist.append(network_reference_station+network_reference_station)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>locate<sp/>all<sp/>of<sp/>the<sp/>corel/type-1<sp/>files,<sp/>so<sp/>we<sp/>can<sp/>determine<sp/>which<sp/>baselines<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>ffitter<sp/>=<sp/>ht.get_fourfit_cmd()</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>type1_file_list<sp/>=<sp/>list()</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ffitter<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fourfit4&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type1_file_list<sp/>=<sp/>ht.recursive_find_cor_files(os.path.abspath(directory),<sp/>include_autos=include_autos)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type1_file_list<sp/>=<sp/>ht.recursive_find_corel_files(os.path.abspath(directory),<sp/>include_autos=include_autos)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_blines<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>type1_file_list:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_base<sp/>=<sp/>os.path.basename(f)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>filename_base.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(bl)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_blines.add(bl)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#strip<sp/>out<sp/>non-existent<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_set<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>network_reference_baselines_only<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ref_blist:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>unique_blines:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_set.add(bl)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all_blist:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>unique_blines:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_set.add(bl)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(baseline_set)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1a2e24e42ab9cf7f8f3b24c8ae194b4b9c" kindref="member">construct_valid_mixedmode_baseline_polproduct_dict</ref>(directory,<sp/>legacy_stations,<sp/>vgos_stations):</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;construct<sp/>a<sp/>dictionary<sp/>of<sp/>all<sp/>the<sp/>valid<sp/>legacy-vgos<sp/>baselines<sp/>in<sp/>this<sp/>experiment,<sp/>along<sp/>with<sp/>their<sp/>valid<sp/>pol-products<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#make<sp/>sure<sp/>there<sp/>are<sp/>no<sp/>duplicates<sp/>in<sp/>the<sp/>station<sp/>lists:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>legacy_station_set<sp/>=<sp/>set(list(legacy_stations))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>vgos_station_set<sp/>=<sp/>set(list(vgos_stations))</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>legacy_stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join(list(legacy_station_set))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>vgos_stations<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join(list(vgos_station_set))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#determine<sp/>all<sp/>possible<sp/>legacy-vgos<sp/>and<sp/>vgos-legacy<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>all_blist<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lst<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legacy_stations:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vst<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vgos_stations:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lst<sp/>!=<sp/>vst:<sp/></highlight><highlight class="comment">#skip<sp/>autos<sp/>in<sp/>case<sp/>there<sp/>is<sp/>a<sp/>duplicate<sp/>station<sp/>id<sp/>accidentally<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blist.append(lst+vst)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blist.append(vst+lst)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#add<sp/>legacy-legacy<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lst1<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legacy_stations:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lst2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legacy_stations:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lst1<sp/>!=<sp/>lst2:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blist.append(lst1+lst2)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#add<sp/>vgos-vgos<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vst1<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vgos_stations:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vst2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vgos_stations:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>vst1<sp/>!=<sp/>vst2:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blist.append(vst1+vst2)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;all<sp/>blist<sp/>=<sp/>&quot;,<sp/>all_blist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>locate<sp/>all<sp/>of<sp/>the<sp/>corel/type-1<sp/>files,<sp/>so<sp/>we<sp/>can<sp/>determine<sp/>which<sp/>baselines<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>type1_file_list<sp/>=<sp/>ht.recursive_find_corel_files(os.path.abspath(directory),<sp/>include_autos=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_blines<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>type1_file_list:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_base<sp/>=<sp/>os.path.basename(f)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>filename_base.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(bl)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_blines.add(bl)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;unique<sp/>blines<sp/>=<sp/>&quot;,<sp/>unique_blines)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#strip<sp/>out<sp/>non-existent<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_set<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all_blist:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>unique_blines:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_set.add(bl)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;bline<sp/>set<sp/>=<sp/>&quot;,<sp/>baseline_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>valid_baselines_list<sp/>=<sp/>list(baseline_set)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_polproduct_dict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_baselines_list:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/>bl[0]</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem<sp/>=<sp/>bl[1]</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ref<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legacy_stations<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>rem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vgos_stations:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_pol_products<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;RX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;RY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;RX+RY&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_polproduct_dict[bl]<sp/>=<sp/>valid_pol_products</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legacy_stations<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ref<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vgos_stations:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_pol_products<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;XR&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YR&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XR+YR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_polproduct_dict[bl]<sp/>=<sp/>valid_pol_products</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legacy_stations<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ref<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legacy_stations:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_pol_products<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;RR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_polproduct_dict[bl]<sp/>=<sp/>valid_pol_products</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vgos_stations<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ref<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vgos_stations:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_pol_products<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;I&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_polproduct_dict[bl]<sp/>=<sp/>valid_pol_products</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;basline<sp/>polprod<sp/>dict<sp/>=<sp/>&quot;,<sp/>baseline_polproduct_dict)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseline_polproduct_dict</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1a392b4bae4c5b82d214e6acf131260fbc" kindref="member">apply_fringe_file_cuts</ref>(ff_list,<sp/>control_file_hash,<sp/>min_snr=0.0,<sp/>max_snr=1e30,<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_quality_code_list=None,<sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=&quot;000-0000&quot;,<sp/>stop_scan_limit=&quot;999-9999&quot;):</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;convenience<sp/>function<sp/>for<sp/>a<sp/>set<sp/>of<sp/>commonly<sp/>used<sp/>filters<sp/>on<sp/>fringe<sp/>files,</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>default<sp/>values<sp/>for<sp/>this<sp/>function,<sp/>are<sp/>such<sp/>that<sp/>it<sp/>essentially<sp/>only<sp/>filters<sp/>on<sp/>the<sp/>control<sp/>file<sp/>hash<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>valid_quality_code_list<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_quality_code_list=[0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9]</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_list.append(<sp/><ref refid="classvpal_1_1utility_1_1DiscreteQuantityFilter" kindref="compound">DiscreteQuantityFilter</ref>(</highlight><highlight class="stringliteral">&quot;control_file_hash&quot;</highlight><highlight class="normal">,<sp/>[control_file_hash])<sp/>)<sp/></highlight><highlight class="comment">#filter<sp/>on<sp/>control<sp/>file<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_list.append(<sp/><ref refid="classvpal_1_1utility_1_1DiscreteQuantityFilter" kindref="compound">DiscreteQuantityFilter</ref>(</highlight><highlight class="stringliteral">&quot;quality&quot;</highlight><highlight class="normal">,<sp/>valid_quality_code_list)<sp/>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_list.append(<sp/><ref refid="classvpal_1_1utility_1_1ContinuousQuantityFilter" kindref="compound">ContinuousQuantityFilter</ref>(</highlight><highlight class="stringliteral">&quot;scan_name&quot;</highlight><highlight class="normal">,<sp/>start_scan_limit,<sp/>stop_scan_limit)<sp/>)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_list.append(<sp/><ref refid="classvpal_1_1utility_1_1ContinuousQuantityFilter" kindref="compound">ContinuousQuantityFilter</ref>(</highlight><highlight class="stringliteral">&quot;snr&quot;</highlight><highlight class="normal">,<sp/>min_snr,<sp/>max_snr)<sp/>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacevpal_1_1utility_1a208c5d5b5ce5c061fd01aa86f31fdda3" kindref="member">combined_filter</ref>(ff_list,<sp/>filter_list)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1ab413db94171adce7b59f6122cc52f7b7" kindref="member">load_and_batch_fourfit_mixedmode</ref>(exp_directory,<sp/>legacy_stations,<sp/>vgos_stations,<sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control_file_path,<sp/>set_commands,<sp/>num_processes=1,<sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=&quot;000-0000&quot;,<sp/>stop_scan_limit=&quot;999-9999&quot;,<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=None,<sp/>frequency_group=None,<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_progress_ticker=True,<sp/>log_fourfit_processes=False):</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;loads<sp/>any<sp/>pre-existing<sp/>fringe<sp/>files<sp/>which<sp/>match<sp/>the<sp/>criteria<sp/>and<sp/>batch<sp/>fourfits</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>any<sp/>missing<sp/>items,<sp/>then<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>fringe-files&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>frequency_group<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency_group<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;X&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pol_products<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=[</highlight><highlight class="stringliteral">&apos;RX+RY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XR+YR&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;I&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;RR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#first<sp/>check<sp/>if<sp/>the<sp/>stop/start<sp/>scan<sp/>limits<sp/>are<sp/>the<sp/>same...if<sp/>they<sp/>are,<sp/>this<sp/>is<sp/>a<sp/>one-off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#so<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>waste<sp/>time<sp/>searching/loading<sp/>the<sp/>entire<sp/>experiment<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>work_dir<sp/>=<sp/>os.path.abspath(exp_directory)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_scan_limit<sp/>==<sp/>stop_scan_limit:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isdir(os.path.join(work_dir,<sp/>start_scan_limit))<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work_dir<sp/>=<sp/>os.path.join(work_dir,<sp/>start_scan_limit)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#determine<sp/>all<sp/>possible<sp/>(existing)<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_polprod_dict<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a2e24e42ab9cf7f8f3b24c8ae194b4b9c" kindref="member">construct_valid_mixedmode_baseline_polproduct_dict</ref>(<sp/>work_dir,<sp/>legacy_stations,<sp/>vgos_stations)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;blist:<sp/>&quot;</highlight><highlight class="normal">,<sp/>baseline_polprod_dict.keys())</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;blist<sp/>pp<sp/>dict&quot;</highlight><highlight class="normal">,<sp/>baseline_polprod_dict)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#collect<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>root<sp/>files<sp/>that<sp/>are<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>root_file_list<sp/>=<sp/>ht.recursive_find_root_files(work_dir,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>max_depth=1)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>strip<sp/>out<sp/>the<sp/>root<sp/>files<sp/>which<sp/>are<sp/>outside<sp/>of<sp/>the<sp/>specified<sp/>time-range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_root_file_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rf<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_list:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rf_scan_name<sp/>=<sp/>os.path.abspath(rf).split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[-2]</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_scan_limit<sp/>&lt;=<sp/>rf_scan_name<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>rf_scan_name<sp/>&lt;=<sp/>stop_scan_limit:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_root_file_list.append(rf)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_root_file_list<sp/>=<sp/>root_file_list</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>root_file_list<sp/>=<sp/>tmp_root_file_list</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>root<sp/>files<sp/>found<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>len(root_file_list))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit_mixedmode:<sp/>attempting<sp/>to<sp/>load<sp/>cached<sp/>fringe<sp/>files<sp/>from:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>work_dir)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>load<sp/>the<sp/>fringe<sp/>files<sp/>(no-auto-corrs)<sp/>meta<sp/>data<sp/>for<sp/>this<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a46e57b1c711b9a94d6fb684b663cee48" kindref="member">load_directory_fringe_files</ref>(work_dir,<sp/>baseline_polprod_dict.keys(),frequency_group)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#strip<sp/>out<sp/>the<sp/>ones<sp/>which<sp/>do<sp/>not<sp/>match<sp/>the<sp/>control<sp/>file<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#compute<sp/>the<sp/>control<sp/>file<sp/>hash<sp/>so<sp/>we<sp/>know<sp/>which<sp/>fringe<sp/>files<sp/>to<sp/>look<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>control_file_hash<sp/>=<sp/>ffcontrol.get_control_file_hash(control_file_path)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_filter<sp/>=<sp/><ref refid="classvpal_1_1utility_1_1DiscreteQuantityFilter" kindref="compound">DiscreteQuantityFilter</ref>(</highlight><highlight class="stringliteral">&quot;control_file_hash&quot;</highlight><highlight class="normal">,<sp/>[control_file_hash])</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/>list(<ref refid="apply__filter_8c_1ab4ec20cd43e06573475f4a497045983a" kindref="member">filter</ref>(hash_filter.does_object_pass_filter,<sp/>ff_list))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(ff_list)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit_mixedmode:<sp/>loaded<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ff_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>previously<sp/>generated<sp/>fringe-files&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit_mixedmode:<sp/>did<sp/>not<sp/>locate<sp/>any<sp/>previously<sp/>generated<sp/>fringe<sp/>files&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#we<sp/>need<sp/>to<sp/>figure<sp/>out<sp/>which<sp/>scans<sp/>have<sp/>already<sp/>been<sp/>fringe-fitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#with<sp/>the<sp/>pol-products<sp/>and<sp/>baselines<sp/>in<sp/>which<sp/>we<sp/>are<sp/>interested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>root_file_bl_pp_dict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rf<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_list:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_file_bl_pp_dict[os.path.abspath(rf)]<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ff<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_list:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_pp_list<sp/>=<sp/>ht.get_file_polarization_product_provisional(ff.filename,<sp/>mode=</highlight><highlight class="stringliteral">&apos;MIXED_MODE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_bl<sp/>=<sp/>ff.baseline</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_pp_list:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ff.associated_root_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_bl_pp_dict:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pol_products:<sp/></highlight><highlight class="comment">#only<sp/>concern<sp/>ourselves<sp/>with<sp/>pol-products<sp/>in<sp/>our<sp/>to-do<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_file_bl_pp_dict[<sp/>os.path.abspath(ff.associated_root_file)<sp/>].add(<sp/>(ff_bl,<sp/>pp)<sp/>)<sp/></highlight><highlight class="comment">#add<sp/>baseline,<sp/>pol-product<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>construct<sp/>a<sp/>list<sp/>of<sp/>arg<sp/>lists<sp/>for<sp/>each<sp/>process<sp/>we<sp/>need<sp/>to<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#eliminating<sp/>tasks<sp/>corresponding<sp/>to<sp/>fringe<sp/>files<sp/>which<sp/>already<sp/>exist<sp/>as<sp/>we<sp/>go<sp/>along</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>arg_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>root<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tmp_root_file_list:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;root=<sp/>&quot;,<sp/>root)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;bl<sp/>keys<sp/>=<sp/>&quot;,<sp/>baseline_polprod_dict.keys())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>base<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baseline_polprod_dict.keys():</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pol_products:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;pp<sp/>=&quot;,<sp/>pp,<sp/>&quot;pol<sp/>prods<sp/>=<sp/>&quot;,<sp/>baseline_polprod_dict[base])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baseline_polprod_dict[base]:</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;pp<sp/>=<sp/>&quot;,<sp/>pp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base,pp)<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_bl_pp_dict[root]:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#construct<sp/>the<sp/>expected<sp/>corel<sp/>file<sp/>and<sp/>check<sp/>if<sp/>it<sp/>is<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_code<sp/>=<sp/>(<sp/>os.path.basename(root).split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>)[1]</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needed_corel_file<sp/>=<sp/>os.path.join(<sp/>os.path.dirname(<sp/>os.path.abspath(root)<sp/>),<sp/>base<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal"><sp/>+<sp/>root_code<sp/>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(needed_corel_file):</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>we<sp/>check<sp/>to<sp/>make<sp/>sure<sp/>this<sp/>type<sp/>of<sp/>pol-product<sp/>is<sp/>actually<sp/>available<sp/>in<sp/>the<sp/>corel<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#this<sp/>is<sp/>to<sp/>avoid<sp/>problems<sp/>with<sp/>mixed-mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp_present_list<sp/>=<sp/>ht.get_polarization_products_present(needed_corel_file)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required_pp<sp/>=<sp/>ht.get_required_pol_products(pp)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_arg<sp/>=<sp/>base</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>frequency_group<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(frequency_group)<sp/>==<sp/>1:<sp/></highlight><highlight class="comment">#single<sp/>char<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_arg<sp/>=<sp/>base_arg<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>+<sp/>frequency_group</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>set(required_pp).issubset(<sp/>set(pp_present_list)<sp/>):</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_opt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-P<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pp<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print([<sp/>pol_opt,<sp/>base_arg,<sp/>control_file_path,<sp/>root,<sp/>False,<sp/>set_commands,<sp/>False<sp/>]<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_list.append(<sp/>[<sp/>pol_opt,<sp/>base_arg,<sp/>control_file_path,<sp/>root,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>set_commands,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>]<sp/>)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(arg_list)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit_mixedmode:<sp/>will<sp/>run<sp/>a<sp/>total<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(arg_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>fourfit<sp/>processes,<sp/>with<sp/>up<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(num_processes)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>running<sp/>simultaneously&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>print(&quot;load_and_batch_fourfit_mixedmode:<sp/>will<sp/>run<sp/>a<sp/>total<sp/>of<sp/>&quot;<sp/>+<sp/>str(len(arg_list))<sp/>+<sp/>&quot;<sp/>fourfit<sp/>processes,<sp/>with<sp/>up<sp/>to:<sp/>&quot;<sp/>+<sp/>str(num_processes)<sp/>+<sp/>&quot;<sp/>running<sp/>simultaneously&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>print(&quot;arg<sp/>list<sp/>was<sp/>empty!&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#run<sp/>the<sp/>fourfit<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>processed_args_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>generated_fringe_files<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>[generated_fringe_files,<sp/>processed_args_list]<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1ab006df80d00443606bbaf56014e7c432" kindref="member">launch_fourfit_processes_in_parallel</ref>(arg_list,<sp/>num_processes,<sp/>use_progress_ticker=use_progress_ticker,<sp/>log_processes=log_fourfit_processes)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>reload<sp/>the<sp/>fringe<sp/>files<sp/>(no-auto-corrs)<sp/>meta<sp/>data<sp/>for<sp/>this<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a46e57b1c711b9a94d6fb684b663cee48" kindref="member">load_directory_fringe_files</ref>(work_dir,<sp/>baseline_polprod_dict.keys(),<sp/>frequency_group)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;work<sp/>dir<sp/>=&quot;,<sp/>work_dir)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;num<sp/>fringes<sp/>=<sp/>&quot;,<sp/>len(ff_list))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#filter<sp/>by<sp/>control<sp/>file<sp/>and<sp/>time-range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_filtered<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a392b4bae4c5b82d214e6acf131260fbc" kindref="member">apply_fringe_file_cuts</ref>(ff_list,<sp/>control_file_hash,<sp/>start_scan_limit=start_scan_limit,<sp/>stop_scan_limit=stop_scan_limit)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;num<sp/>filtered<sp/>fringes<sp/>=<sp/>&quot;,<sp/>len(ff_filtered))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#finally<sp/>filter<sp/>based<sp/>on<sp/>the<sp/>pol-products<sp/>and<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_filtered2<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ff<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_filtered:</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_pp_list<sp/>=<sp/>ht.get_file_polarization_product_provisional(ff.filename,<sp/>mode=</highlight><highlight class="stringliteral">&quot;MIXED_MODE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_bl<sp/>=<sp/>ff.baseline</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;ff_bl<sp/>=<sp/>&quot;,<sp/>ff_bl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;bl<sp/>list<sp/>=<sp/>&quot;,<sp/>baseline_polprod_dict.keys()<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ff_bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baseline_polprod_dict.keys():</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_this_fringe<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;ff_pp_list<sp/>=<sp/>&quot;<sp/>,<sp/>ff_pp_list)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;pol<sp/>prod<sp/>=<sp/>&quot;,<sp/>pol_products)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_pp_list:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pol_products:<sp/></highlight><highlight class="comment">#only<sp/>concern<sp/>ourselves<sp/>with<sp/>pol-products<sp/>in<sp/>our<sp/>to-do<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_this_fringe<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>add_this_fringe<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_filtered2.append(ff)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;num<sp/>filtered2<sp/>fringes<sp/>=<sp/>&quot;,<sp/>len(ff_filtered2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ff_filtered2</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1ad4787708eb1a49aa4f4e39391bc7a531" kindref="member">load_and_batch_fourfit</ref>(exp_directory,<sp/>network_reference_station,<sp/>remote_stations,<sp/>\</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control_file_path,<sp/>set_commands,<sp/>\</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network_reference_baselines_only=True,<sp/>num_processes=1,<sp/>\</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=None,<sp/>stop_scan_limit=None,<sp/>pol_products=None,<sp/>\</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency_group=None,<sp/>use_progress_ticker=True,<sp/>\</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_fourfit_processes=False,<sp/>use_ionex_file=None,<sp/>force_run=False):</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;loads<sp/>any<sp/>pre-existing<sp/>fringe<sp/>files<sp/>which<sp/>match<sp/>the<sp/>criteria<sp/>and<sp/>batch<sp/>fourfits</highlight></codeline>
<codeline lineno="591"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>any<sp/>missing<sp/>items,<sp/>then<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>fringe-files&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_scan_limit<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;000-0000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stop_scan_limit<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_scan_limit<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;999-9999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pol_products<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=[</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#first<sp/>check<sp/>if<sp/>the<sp/>stop/start<sp/>scan<sp/>limits<sp/>are<sp/>the<sp/>same...if<sp/>they<sp/>are,<sp/>this<sp/>is<sp/>a<sp/>one-off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#so<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>waste<sp/>time<sp/>searching/loading<sp/>the<sp/>entire<sp/>experiment<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>work_dir<sp/>=<sp/>os.path.abspath(exp_directory)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_scan_limit<sp/>==<sp/>stop_scan_limit:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isdir(os.path.join(work_dir,<sp/>start_scan_limit))<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work_dir<sp/>=<sp/>os.path.join(work_dir,<sp/>start_scan_limit)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#determine<sp/>all<sp/>possible<sp/>(existing)<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Finding<sp/>baselines&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a4c5105e04b3d2344ce0061688122fc96" kindref="member">construct_valid_baseline_list</ref>(<sp/>work_dir,<sp/>network_reference_station,<sp/>remote_stations,<sp/>network_reference_baselines_only=network_reference_baselines_only,<sp/>include_autos=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Baselines:<sp/>&apos;</highlight><highlight class="normal">,<sp/>baseline_list)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#collect<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>root<sp/>files<sp/>that<sp/>are<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Finding<sp/>root<sp/>files&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>exclude_list=[</highlight><highlight class="stringliteral">&apos;prepass&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;scratch&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;pre_production&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;make_links&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bad_eop&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;setup&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;polconvert&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>root_file_list<sp/>=<sp/>ht.recursive_find_root_files(work_dir,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>exclude_list=exclude_list,<sp/>max_depth=2)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Found<sp/>&apos;</highlight><highlight class="normal">+str(len(root_file_list))+</highlight><highlight class="stringliteral">&apos;<sp/>root<sp/>files.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>strip<sp/>out<sp/>the<sp/>root<sp/>files<sp/>which<sp/>are<sp/>outside<sp/>of<sp/>the<sp/>specified<sp/>time-range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_scan_limit<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;000-0000&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>stop_scan_limit<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;999-9999&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_root_file_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rf<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_list:</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rf_scan_name<sp/>=<sp/>os.path.abspath(rf).split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[-2]</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_scan_limit<sp/>&lt;=<sp/>rf_scan_name<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>rf_scan_name<sp/>&lt;=<sp/>stop_scan_limit:</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_root_file_list.append(rf)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_root_file_list<sp/>=<sp/>root_file_list</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Have<sp/>&apos;</highlight><highlight class="normal">+str(len(root_file_list))+</highlight><highlight class="stringliteral">&apos;<sp/>root<sp/>files<sp/>left<sp/>after<sp/>time<sp/>cuts.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit:<sp/>attempting<sp/>to<sp/>load<sp/>cached<sp/>fringe<sp/>files<sp/>from:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>work_dir)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>load<sp/>the<sp/>fringe<sp/>files<sp/>(no-auto-corrs)<sp/>meta<sp/>data<sp/>for<sp/>this<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a46e57b1c711b9a94d6fb684b663cee48" kindref="member">load_directory_fringe_files</ref>(work_dir,<sp/>baseline_list)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Found<sp/>&apos;</highlight><highlight class="normal">+str(len(ff_list))+</highlight><highlight class="stringliteral">&apos;<sp/>previously<sp/>generated<sp/>fringe<sp/>files&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#strip<sp/>out<sp/>the<sp/>ones<sp/>which<sp/>do<sp/>not<sp/>match<sp/>the<sp/>control<sp/>file<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#compute<sp/>the<sp/>control<sp/>file<sp/>hash<sp/>so<sp/>we<sp/>know<sp/>which<sp/>fringe<sp/>files<sp/>to<sp/>look<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>control_file_hash<sp/>=<sp/>ffcontrol.get_control_file_hash(control_file_path)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_filter<sp/>=<sp/><ref refid="classvpal_1_1utility_1_1DiscreteQuantityFilter" kindref="compound">DiscreteQuantityFilter</ref>(</highlight><highlight class="stringliteral">&quot;control_file_hash&quot;</highlight><highlight class="normal">,<sp/>[control_file_hash])</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/>list(<ref refid="apply__filter_8c_1ab4ec20cd43e06573475f4a497045983a" kindref="member">filter</ref>(hash_filter.does_object_pass_filter,<sp/>ff_list))</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>print(str(len(ff_list))+</highlight><highlight class="stringliteral">&apos;<sp/>fringe<sp/>files<sp/>remaining<sp/>after<sp/>control<sp/>file<sp/>hash<sp/>filter&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(ff_list)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit:<sp/>loaded<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ff_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>previously<sp/>generated<sp/>fringe-files&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit:<sp/>did<sp/>not<sp/>locate<sp/>any<sp/>previously<sp/>generated<sp/>fringe<sp/>files&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#we<sp/>need<sp/>to<sp/>figure<sp/>out<sp/>which<sp/>scans<sp/>have<sp/>already<sp/>been<sp/>fringe-fitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#with<sp/>the<sp/>pol-products<sp/>and<sp/>baselines<sp/>in<sp/>which<sp/>we<sp/>are<sp/>interested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>root_file_bl_pp_dict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rf<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tmp_root_file_list:</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_file_bl_pp_dict[os.path.abspath(rf)]<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>root_bl_pp_dict_counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ff<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_list:</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(ff.filename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_pp_list<sp/>=<sp/>ht.get_file_polarization_product_provisional(ff.filename)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_bl<sp/>=<sp/>ff.baseline</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_pp_list:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>hack<sp/>to<sp/>fix<sp/>issue<sp/>in<sp/>fringe<sp/>files<sp/>or<sp/>something<sp/>when<sp/>ffm<sp/>reads<sp/>fringe<sp/>files<sp/>that<sp/>replaces<sp/>underscore<sp/>with<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;4C39.25&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff.associated_root_file:</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff.associated_root_file<sp/>=<sp/>ff.associated_root_file.replace(</highlight><highlight class="stringliteral">&apos;4C39.25&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;4C39_25&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ff.associated_root_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_bl_pp_dict:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pol_products:<sp/></highlight><highlight class="comment">#only<sp/>concern<sp/>ourselves<sp/>with<sp/>pol-products<sp/>in<sp/>our<sp/>to-do<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_file_bl_pp_dict[<sp/>os.path.abspath(ff.associated_root_file)<sp/>].add(<sp/>(ff_bl,<sp/>pp)<sp/>)<sp/></highlight><highlight class="comment">#add<sp/>baseline,<sp/>pol-product<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>construct<sp/>a<sp/>list<sp/>of<sp/>arg<sp/>lists<sp/>for<sp/>each<sp/>process<sp/>we<sp/>need<sp/>to<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#eliminating<sp/>tasks<sp/>corresponding<sp/>to<sp/>fringe<sp/>files<sp/>which<sp/>already<sp/>exist<sp/>as<sp/>we<sp/>go<sp/>along</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>arg_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>root<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tmp_root_file_list:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>base<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baseline_list:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pol_products:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base,pp)<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>root_file_bl_pp_dict[root]:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_cmd<sp/>=<sp/>set_commands</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_opt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-P<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pp<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_arg<sp/>=<sp/>base</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>frequency_group<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(frequency_group)<sp/>==<sp/>1:<sp/></highlight><highlight class="comment">#single<sp/>char<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_arg<sp/>=<sp/>base_arg<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>+<sp/>frequency_group</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>use_ionex_file<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>we<sp/>want<sp/>to<sp/>use<sp/>the<sp/>ionex<sp/>dtec<sp/>estimates,<sp/>load<sp/>the<sp/>ionex<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>build<sp/>a<sp/>dict<sp/>matching<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(use_ionex_file):</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#load<sp/>the<sp/>ionex<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(use_ionex_file)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>handle:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tec_dict<sp/>=<sp/>json.load(handle)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rf_scan_name<sp/>=<sp/>os.path.abspath(root).split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[-2]</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(rf_scan_name,<sp/>tec_dict[rf_scan_name],<sp/>base[0],<sp/>base[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>base[0]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tec_dict[rf_scan_name]<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>base[1]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tec_dict[rf_scan_name]:</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtec<sp/>=<sp/>tec_dict[rf_scan_name][base[0]]<sp/>-<sp/>tec_dict[rf_scan_name][base[1]]</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(rf_scan_name,<sp/>tec_dict[rf_scan_name][base[0]],<sp/>tec_dict[rf_scan_name][base[1]],<sp/>dtec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set<sp/>dTEC<sp/>search<sp/>range:<sp/>+/-50<sp/>TECU<sp/>around<sp/>the<sp/>ionex<sp/>prediction,<sp/>or<sp/>30%<sp/>of<sp/>the<sp/>(absolute)<sp/>dTEC<sp/>value,<sp/>whichever<sp/>is<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#dtec_window<sp/>=<sp/>max(50,0.3*abs(dtec))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtec_window<sp/>=<sp/><ref refid="max555_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(100,0.5*abs(dtec))</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_cmd<sp/>=<sp/>set_commands<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>ion_win<sp/>&apos;</highlight><highlight class="normal">+str(dtec-dtec_window)+</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">+str(dtec+dtec_window)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(set_cmd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;IONEX<sp/>file<sp/>does<sp/>not<sp/>exist&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>force_run<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(root,<sp/>pol_opt,<sp/>base)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_list.append(<sp/>[<sp/>pol_opt,<sp/>base_arg,<sp/>control_file_path,<sp/>root,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>set_cmd,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>]<sp/>)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#construct<sp/>the<sp/>expected<sp/>corel<sp/>file<sp/>and<sp/>check<sp/>if<sp/>it<sp/>is<sp/>present,<sp/>only<sp/>run<sp/>if<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_code<sp/>=<sp/>(<sp/>os.path.basename(root).split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>)[1]</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needed_corel_file<sp/>=<sp/>os.path.join(<sp/>os.path.dirname(<sp/>os.path.abspath(root)<sp/>),<sp/>base<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal"><sp/>+<sp/>root_code<sp/>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(needed_corel_file):</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>we<sp/>check<sp/>to<sp/>make<sp/>sure<sp/>this<sp/>type<sp/>of<sp/>pol-product<sp/>is<sp/>actually<sp/>available<sp/>in<sp/>the<sp/>corel<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#this<sp/>is<sp/>to<sp/>avoid<sp/>problems<sp/>with<sp/>mixed-mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp_present_list<sp/>=<sp/>ht.get_polarization_products_present(needed_corel_file)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required_pp<sp/>=<sp/>ht.get_required_pol_products(pp)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>set(required_pp).issubset(<sp/>set(pp_present_list)<sp/>):</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_opt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-P<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pp<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_list.append(<sp/>[<sp/>pol_opt,<sp/>base_arg,<sp/>control_file_path,<sp/>root,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>set_cmd,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>]<sp/>)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(arg_list)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit:<sp/>will<sp/>run<sp/>a<sp/>total<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(arg_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>fourfit<sp/>processes,<sp/>with<sp/>up<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(num_processes)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>running<sp/>simultaneously&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;Number<sp/>of<sp/>root-baseline-pol<sp/>combinations<sp/>in<sp/>the<sp/>list<sp/>of<sp/>found<sp/>fringe<sp/>files:<sp/>&apos;+str(root_bl_pp_dict_counter))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;Number<sp/>of<sp/>combinations<sp/>missing<sp/>from<sp/>the<sp/>fringe<sp/>file<sp/>list,<sp/>with<sp/>the<sp/>needed<sp/>correl<sp/>file:<sp/>&apos;+str(missing_fringe_counter))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit:<sp/>will<sp/>run<sp/>a<sp/>total<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(arg_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>fourfit<sp/>processes,<sp/>with<sp/>up<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(num_processes)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>running<sp/>simultaneously&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(arg_list)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(arg_list[0])</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>ii<sp/>in<sp/>range(len(arg_list)):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>print(arg_list[ii])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#run<sp/>the<sp/>fourfit<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>processed_args_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>generated_fringe_files<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>[generated_fringe_files,<sp/>processed_args_list]<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1ab006df80d00443606bbaf56014e7c432" kindref="member">launch_fourfit_processes_in_parallel</ref>(arg_list,<sp/>num_processes,<sp/>use_progress_ticker=use_progress_ticker,<sp/>log_processes=log_fourfit_processes)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>reload<sp/>the<sp/>fringe<sp/>files<sp/>(no-auto-corrs)<sp/>meta<sp/>data<sp/>for<sp/>this<sp/>directory,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a46e57b1c711b9a94d6fb684b663cee48" kindref="member">load_directory_fringe_files</ref>(work_dir,<sp/>baseline_list)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#filter<sp/>by<sp/>control<sp/>file<sp/>and<sp/>time-range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_filtered<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a392b4bae4c5b82d214e6acf131260fbc" kindref="member">apply_fringe_file_cuts</ref>(ff_list,<sp/>control_file_hash,<sp/>start_scan_limit=start_scan_limit,<sp/>stop_scan_limit=stop_scan_limit)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#finally<sp/>filter<sp/>based<sp/>on<sp/>the<sp/>pol-products<sp/>and<sp/>baselines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_filtered2<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ff<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_filtered:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_pp_list<sp/>=<sp/>ht.get_file_polarization_product_provisional(ff.filename)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_bl<sp/>=<sp/>ff.baseline</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ff_bl<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>baseline_list:</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_this_fringe<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ff_pp_list:</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pol_products:<sp/></highlight><highlight class="comment">#only<sp/>concern<sp/>ourselves<sp/>with<sp/>pol-products<sp/>in<sp/>our<sp/>to-do<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_this_fringe<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>add_this_fringe<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_filtered2.append(ff)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>print(str(len(ff_filtered2))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>fringe<sp/>files<sp/>remaining<sp/>after<sp/>filters.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ff_filtered2</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1ac90ecfbc5461b2108a7b263b94b96e34" kindref="member">load_batch_cut_and_sort</ref>(exp_directory,<sp/>network_reference_station,<sp/>remote_stations,<sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control_file_path,<sp/>set_commands,<sp/>min_snr=0,<sp/>max_snr=1e5,<sp/>\</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_quality_code_list=None,<sp/>\</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network_reference_baselines_only=True,<sp/>num_processes=1,<sp/>\</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=None,<sp/>stop_scan_limit=None,<sp/>only_complete=True,<sp/>\</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=None,<sp/>frequency_group=None,<sp/>use_progress_ticker=True,<sp/>\</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_fourfit_processes=False):</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>convenience<sp/>function<sp/>to<sp/>do<sp/>a<sp/>load-and-batch<sp/>fourfit,<sp/>followed<sp/>by<sp/>some<sp/>filters,</highlight></codeline>
<codeline lineno="776"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>then<sp/>join<sp/>fringe<sp/>files<sp/>associated<sp/>with<sp/>a<sp/>single<sp/>scan-baseline<sp/>into<sp/>collections<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_scan_limit<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;000-0000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stop_scan_limit<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_scan_limit<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;999-9999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>valid_quality_code_list<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_quality_code_list=[3,4,5,6,7,8,9]</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pol_products<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=[</highlight><highlight class="stringliteral">&apos;XX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YX&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;executing<sp/>load_batch_cut_and_sort&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#load<sp/>all<sp/>pre-existing<sp/>fringe<sp/>files<sp/>and<sp/>compute<sp/>any<sp/>missing<sp/>fringe<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1ad4787708eb1a49aa4f4e39391bc7a531" kindref="member">load_and_batch_fourfit</ref>(exp_directory,<sp/>network_reference_station,<sp/>remote_stations,<sp/>control_file_path,<sp/>\</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands,<sp/>network_reference_baselines_only,<sp/>num_processes,<sp/>\</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit,<sp/>stop_scan_limit,<sp/>pol_products,<sp/>frequency_group,<sp/>use_progress_ticker,<sp/>log_fourfit_processes)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.debug(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort:<sp/>collected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ff_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>matching<sp/>fringe<sp/>files<sp/>before<sp/>cuts&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(ff_list)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit()<sp/>using<sp/>the<sp/>control<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>control_file_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>produced<sp/>no<sp/>fringe<sp/>files,<sp/>check<sp/>for<sp/>malformed<sp/>control<sp/>file.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit()<sp/>using<sp/>the<sp/>control<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>control_file_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>produced<sp/>no<sp/>fringe<sp/>files,<sp/>check<sp/>for<sp/>malformed<sp/>control<sp/>file.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#apply<sp/>cuts<sp/>to<sp/>fringe<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>control_file_hash<sp/>=<sp/>ffcontrol.get_control_file_hash(control_file_path)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a392b4bae4c5b82d214e6acf131260fbc" kindref="member">apply_fringe_file_cuts</ref>(ff_list,<sp/>control_file_hash,<sp/>min_snr,<sp/>max_snr,<sp/>valid_quality_code_list,<sp/>start_scan_limit,<sp/>stop_scan_limit)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort:<sp/>collected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ff_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>matching<sp/>fringe<sp/>files&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#collect<sp/>all<sp/>fringe<sp/>files<sp/>into<sp/>baseline<sp/>pol-product<sp/>collections<sp/>(if<sp/>only_complete<sp/>is<sp/>true,<sp/>those<sp/>which<sp/>are<sp/>missing<sp/>any<sp/>of<sp/>the<sp/>4<sp/>pol-products<sp/>will<sp/>be<sp/>discarded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>stations<sp/>=<sp/>network_reference_station<sp/>+<sp/>remote_stations</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>bline_collection_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>only_complete<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bline_collection_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a026e42cd5498617ea286acac3b4667d4" kindref="member">join_fringes_into_baseline_collection</ref>(<sp/>os.path.abspath(exp_directory),<sp/>ff_list,<sp/>stations,<sp/>include_autos=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>required_polprod_list=pol_products,<sp/>only_complete=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort:<sp/>returning<sp/>a<sp/>total<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(bline_collection_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>complete<sp/>baseline<sp/>collections&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bline_collection_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a026e42cd5498617ea286acac3b4667d4" kindref="member">join_fringes_into_baseline_collection</ref>(<sp/>os.path.abspath(exp_directory),<sp/>ff_list,<sp/>stations,<sp/>include_autos=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>required_polprod_list=pol_products,<sp/>only_complete=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort:<sp/>returning<sp/>a<sp/>total<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(bline_collection_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(possibly<sp/>incomplete)<sp/>baseline<sp/>collections&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bline_collection_list</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacevpal_1_1processing_1ac145c2376fde309d522e19b9f63a0584" kindref="member">load_batch_cut_and_sort_mixedmode</ref>(exp_directory,<sp/>network_reference_station,<sp/>remote_stations,<sp/>\</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control_file_path,<sp/>set_commands,<sp/>min_snr=30,<sp/>max_snr=500,<sp/>\</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_quality_code_list=None,<sp/>\</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network_reference_baselines_only=True,<sp/>num_processes=1,<sp/>\</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit=&quot;000-0000&quot;,<sp/>stop_scan_limit=&quot;999-9999&quot;,<sp/>\</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_complete=True,<sp/>pol_products=None,<sp/>frequency_group=None,<sp/>\</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_progress_ticker=True,<sp/>log_fourfit_processes=False):</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>convenience<sp/>function<sp/>to<sp/>do<sp/>a<sp/>load-and-batch<sp/>fourfit,<sp/>followed<sp/>by<sp/>some<sp/>filters,</highlight></codeline>
<codeline lineno="836"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>then<sp/>join<sp/>fringe<sp/>files<sp/>associated<sp/>with<sp/>a<sp/>single<sp/>scan-baseline<sp/>into<sp/>collections<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>valid_quality_code_list<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_quality_code_list=[3,4,5,6,7,8,9]</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pol_products<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pol_products=[</highlight><highlight class="stringliteral">&apos;RX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;RY&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XR&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;YR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;executing<sp/>load_batch_cut_and_sort_mixedmode&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;network<sp/>ref<sp/>=<sp/>&quot;,<sp/>network_reference_station)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#load<sp/>all<sp/>pre-existing<sp/>fringe<sp/>files<sp/>and<sp/>compute<sp/>any<sp/>missing<sp/>fringe<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1ab413db94171adce7b59f6122cc52f7b7" kindref="member">load_and_batch_fourfit_mixedmode</ref>(exp_directory,<sp/>network_reference_station,<sp/>remote_stations,<sp/>control_file_path,<sp/>\</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_commands,<sp/>num_processes,<sp/>\</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_scan_limit,<sp/>stop_scan_limit,<sp/>pol_products,<sp/>frequency_group,<sp/>use_progress_ticker,<sp/>log_fourfit_processes)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.debug(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort_mixedmode:<sp/>collected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ff_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>matching<sp/>fringe<sp/>files<sp/>before<sp/>cuts&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(ff_list)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit()<sp/>using<sp/>the<sp/>control<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>control_file_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>produced<sp/>no<sp/>fringe<sp/>files,<sp/>check<sp/>for<sp/>malformed<sp/>control<sp/>file.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;load_and_batch_fourfit()<sp/>using<sp/>the<sp/>control<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>control_file_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>produced<sp/>no<sp/>fringe<sp/>files,<sp/>check<sp/>for<sp/>malformed<sp/>control<sp/>file.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#apply<sp/>cuts<sp/>to<sp/>fringe<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>control_file_hash<sp/>=<sp/>ffcontrol.get_control_file_hash(control_file_path)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>ff_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a392b4bae4c5b82d214e6acf131260fbc" kindref="member">apply_fringe_file_cuts</ref>(ff_list,<sp/>control_file_hash,<sp/>min_snr,<sp/>max_snr,<sp/>valid_quality_code_list,<sp/>start_scan_limit,<sp/>stop_scan_limit)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort_mixedmode:<sp/>collected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ff_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>matching<sp/>fringe<sp/>files&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#collect<sp/>all<sp/>fringe<sp/>files<sp/>into<sp/>baseline<sp/>pol-product<sp/>collections<sp/>(if<sp/>only_complete<sp/>is<sp/>true,<sp/>those<sp/>which<sp/>are<sp/>missing<sp/>any<sp/>of<sp/>the<sp/>4<sp/>pol-products<sp/>will<sp/>be<sp/>discarded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>stations<sp/>=<sp/>network_reference_station<sp/>+<sp/>remote_stations</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>bline_collection_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>only_complete<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bline_collection_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a026e42cd5498617ea286acac3b4667d4" kindref="member">join_fringes_into_baseline_collection</ref>(<sp/>os.path.abspath(exp_directory),<sp/>ff_list,<sp/>stations,<sp/>include_autos=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>required_polprod_list=pol_products,<sp/>only_complete=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort_mixedmode:<sp/>returning<sp/>a<sp/>total<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(bline_collection_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>complete<sp/>baseline<sp/>collections&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bline_collection_list<sp/>=<sp/><ref refid="namespacevpal_1_1processing_1a026e42cd5498617ea286acac3b4667d4" kindref="member">join_fringes_into_baseline_collection</ref>(<sp/>os.path.abspath(exp_directory),<sp/>ff_list,<sp/>stations,<sp/>include_autos=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>required_polprod_list=pol_products,<sp/>only_complete=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_logger.info(</highlight><highlight class="stringliteral">&quot;load_batch_cut_and_sort_mixedmode:<sp/>returning<sp/>a<sp/>total<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(bline_collection_list))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(possibly<sp/>incomplete)<sp/>baseline<sp/>collections&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bline_collection_list</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/python_src/vpal_module/vpal/processing.py"/>
  </compounddef>
</doxygen>
