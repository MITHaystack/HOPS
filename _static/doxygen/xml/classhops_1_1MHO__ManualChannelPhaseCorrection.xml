<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__ManualChannelPhaseCorrection" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_ManualChannelPhaseCorrection</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; visibility_type &gt;</basecompoundref>
    <includes refid="MHO__ManualChannelPhaseCorrection_8hh" local="no">MHO_ManualChannelPhaseCorrection.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1aa8a097d7660c072c97952a37e449f03f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fChannelLabelKey</definition>
        <argsstring></argsstring>
        <name>fChannelLabelKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="146" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a3b5bf377a63db968888b19340e254dc7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_ManualChannelPhaseCorrection::fDegToRad</definition>
        <argsstring></argsstring>
        <name>fDegToRad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="131" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab45e27cdd57eb6890258a030e7eb5c88" prot="private" static="no" mutable="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt; double &gt; hops::MHO_ManualChannelPhaseCorrection::fImagUnit</definition>
        <argsstring></argsstring>
        <name>fImagUnit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="130" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab6e7bb0f24b76f2dc5e6e1bdda34c909" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fLowerSideband</definition>
        <argsstring></argsstring>
        <name>fLowerSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="148" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab4e9637459c78e6b0329e16951ec5523" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, double &gt;</type>
        <definition>std::map&lt; std::string, double &gt; hops::MHO_ManualChannelPhaseCorrection::fPCMap</definition>
        <argsstring></argsstring>
        <name>fPCMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="138" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a5a48570972e8d77cbd326431160785dd" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fPol</definition>
        <argsstring></argsstring>
        <name>fPol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="135" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1aace945227e6adf9d68f7a711afc56bd2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fRefStationKey</definition>
        <argsstring></argsstring>
        <name>fRefStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="143" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a2d92db3cba08772a4f5214eef4ec78f1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fRefStationMk4IDKey</definition>
        <argsstring></argsstring>
        <name>fRefStationMk4IDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="145" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a827f9d77dad2dae64e8f5f2229678736" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fRemStationKey</definition>
        <argsstring></argsstring>
        <name>fRemStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="142" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ad499cb5fc948d4848378ca69c4c49cd3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fRemStationMk4IDKey</definition>
        <argsstring></argsstring>
        <name>fRemStationMk4IDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="144" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a38b7dc805b4ee4a0c050b54f53fd8536" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fSidebandLabelKey</definition>
        <argsstring></argsstring>
        <name>fSidebandLabelKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="147" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a4471913f67626abd2fd3e1edcbcb6995" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fStationIdentity</definition>
        <argsstring></argsstring>
        <name>fStationIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="134" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a83cdc4ca1620dbb7d6b47ab3893f7516" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fStationKey</definition>
        <argsstring></argsstring>
        <name>fStationKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="141" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a61765e3d7c4a3fee67f2b628834f6c57" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_ManualChannelPhaseCorrection::fUpperSideband</definition>
        <argsstring></argsstring>
        <name>fUpperSideband</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="149" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a383497c33953e459bb8d01f54248738e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_ManualChannelPhaseCorrection::MHO_ManualChannelPhaseCorrection</definition>
        <argsstring>()</argsstring>
        <name>MHO_ManualChannelPhaseCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="34" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="6" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1aea957fff7fe31123bb9538a877f429a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_ManualChannelPhaseCorrection::~MHO_ManualChannelPhaseCorrection</definition>
        <argsstring>()</argsstring>
        <name>~MHO_ManualChannelPhaseCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="35" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ada85ef78d916e37e0d8f7226cedf0a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_ManualChannelPhaseCorrection::SetChannelToPCPhaseMap</definition>
        <argsstring>(const std::map&lt; std::string, double &gt; &amp;map)</argsstring>
        <name>SetChannelToPCPhaseMap</name>
        <param>
          <type>const std::map&lt; std::string, double &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Setter for channel to pc_phase map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Input map of channel labels to phase values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="64" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ac711a8b5e7b385a9dd7168bd351967cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_ManualChannelPhaseCorrection::SetPolarization</definition>
        <argsstring>(const std::string &amp;pol)</argsstring>
        <name>SetPolarization</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>pol</declname>
        </param>
        <briefdescription>
<para>Setter for polarization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pol</parametername>
</parameternamelist>
<parameterdescription>
<para>Input polarization string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="52" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1acaafbcf833ba90a29debc23ca4ce4277" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_ManualChannelPhaseCorrection::SetStationIdentifier</definition>
        <argsstring>(std::string station_id)</argsstring>
        <name>SetStationIdentifier</name>
        <param>
          <type>std::string</type>
          <declname>station_id</declname>
        </param>
        <briefdescription>
<para>Setter for station identifier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>station_id</parametername>
</parameternamelist>
<parameterdescription>
<para>mk4 id of type std::string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
station_id is treated as follows: 1-char =&gt; mk4 id 2-char =&gt; 2char station code </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="45" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="45" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ae69f8123047e45cb5a21b02d9264db93" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_ManualChannelPhaseCorrection::ExecuteInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Applies phase correction to visibility data in-place for reference or remote station. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input visibility_type* containing pol-products and channels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool indicating successful execution. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="92" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="25" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a3d0398b8c8c08bf9d07027f1eb696045" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_ManualChannelPhaseCorrection::ExecuteOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Copies input visibility data and executes in-place correction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const reference to input visibility_type data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of ExecuteInPlace operation on copied output data. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="101" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1aaf99a762bd44019ea51f74c9b64e6462" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_ManualChannelPhaseCorrection::InitializeInPlace</definition>
        <argsstring>(visibility_type *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes in-place visibility_type pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to visibility_type that will be initialized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="74" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab4491ce6409b8bc447e8247200158295" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool hops::MHO_ManualChannelPhaseCorrection::InitializeOutOfPlace</definition>
        <argsstring>(const visibility_type *in, visibility_type *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes out-of-place data from input visibility_type pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Const pointer to input visibility_type data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(visibility_type*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating successful initialization. </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="83" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="200" bodyend="203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1ad8f361bec3722af1a58393cb2d81c291" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_ManualChannelPhaseCorrection::IsApplicable</definition>
        <argsstring>(std::size_t st_idx, const visibility_type *in)</argsstring>
        <name>IsApplicable</name>
        <param>
          <type>std::size_t</type>
          <declname>st_idx</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Checks if a correction is applicable based on station identity and input visibility data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>st_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the station (0 for reference, 1 for remote). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to const visibility_type containing input visibility data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating whether a correction should be applied or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="111" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="104" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a9ebe8df1d989a7a104080b5bd79c35a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_ManualChannelPhaseCorrection::LabelMatch</definition>
        <argsstring>(std::string expected_chan_label, std::string given_chan_label)</argsstring>
        <name>LabelMatch</name>
        <param>
          <type>std::string</type>
          <declname>expected_chan_label</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>given_chan_label</declname>
        </param>
        <briefdescription>
<para>Checks if given channel label matches expected label (considering +/- for LSB/USB halves). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expected_chan_label</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected channel label without +/- for LSB/USB halves </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>given_chan_label</parametername>
</parameternamelist>
<parameterdescription>
<para>Given channel label which may contain +/- for LSB/USB halves </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if given label matches expected after stripping +/- if needed, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="127" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="159" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1acf196296858b9ed8fcc27f76940875b4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_ManualChannelPhaseCorrection::make_upper</definition>
        <argsstring>(std::string &amp;s)</argsstring>
        <name>make_upper</name>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="152" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="152" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ManualChannelPhaseCorrection_1a2b8ded192ca2924320f32b3d38479b92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_ManualChannelPhaseCorrection::PolMatch</definition>
        <argsstring>(std::size_t station_idx, std::string &amp;polprod)</argsstring>
        <name>PolMatch</name>
        <param>
          <type>std::size_t</type>
          <declname>station_idx</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>polprod</declname>
        </param>
        <briefdescription>
<para>Checks if the correction polarization matches the polarization product at the given station index [0 = ref, 1 = rem]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>station_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the station in polprod string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polprod</parametername>
</parameternamelist>
<parameterdescription>
<para>Polarization product string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if match, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="119" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/src/MHO_ManualChannelPhaseCorrection.cc" bodystart="149" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__ManualChannelPhaseCorrection" kindref="compound">MHO_ManualChannelPhaseCorrection</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Thu Jan 27 10:36:00 2022 -0500 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_ManualChannelPhaseCorrection</label>
        <link refid="classhops_1_1MHO__ManualChannelPhaseCorrection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_ManualChannelPhaseCorrection</label>
        <link refid="classhops_1_1MHO__ManualChannelPhaseCorrection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" line="31" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_ManualChannelPhaseCorrection.hh" bodystart="32" bodyend="159"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ae69f8123047e45cb5a21b02d9264db93" prot="protected" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a3d0398b8c8c08bf9d07027f1eb696045" prot="protected" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1aa8a097d7660c072c97952a37e449f03f" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fChannelLabelKey</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a3b5bf377a63db968888b19340e254dc7" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fDegToRad</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab45e27cdd57eb6890258a030e7eb5c88" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fImagUnit</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab6e7bb0f24b76f2dc5e6e1bdda34c909" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fLowerSideband</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab4e9637459c78e6b0329e16951ec5523" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fPCMap</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a5a48570972e8d77cbd326431160785dd" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fPol</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1aace945227e6adf9d68f7a711afc56bd2" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fRefStationKey</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a2d92db3cba08772a4f5214eef4ec78f1" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fRefStationMk4IDKey</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a827f9d77dad2dae64e8f5f2229678736" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fRemStationKey</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ad499cb5fc948d4848378ca69c4c49cd3" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fRemStationMk4IDKey</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a38b7dc805b4ee4a0c050b54f53fd8536" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fSidebandLabelKey</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a4471913f67626abd2fd3e1edcbcb6995" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fStationIdentity</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a83cdc4ca1620dbb7d6b47ab3893f7516" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fStationKey</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a61765e3d7c4a3fee67f2b628834f6c57" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>fUpperSideband</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1aaf99a762bd44019ea51f74c9b64e6462" prot="protected" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ab4491ce6409b8bc447e8247200158295" prot="protected" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ad8f361bec3722af1a58393cb2d81c291" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>IsApplicable</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a9ebe8df1d989a7a104080b5bd79c35a0" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>LabelMatch</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1acf196296858b9ed8fcc27f76940875b4" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>make_upper</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a383497c33953e459bb8d01f54248738e" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>MHO_ManualChannelPhaseCorrection</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1a2b8ded192ca2924320f32b3d38479b92" prot="private" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>PolMatch</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ada85ef78d916e37e0d8f7226cedf0a92" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>SetChannelToPCPhaseMap</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1ac711a8b5e7b385a9dd7168bd351967cb" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>SetPolarization</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1acaafbcf833ba90a29debc23ca4ce4277" prot="public" virt="non-virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>SetStationIdentifier</name></member>
      <member refid="classhops_1_1MHO__ManualChannelPhaseCorrection_1aea957fff7fe31123bb9538a877f429a3" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>~MHO_ManualChannelPhaseCorrection</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_ManualChannelPhaseCorrection</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
