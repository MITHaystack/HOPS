<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__BidirectionalConstIterator" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_BidirectionalConstIterator</compoundname>
    <includes refid="MHO__BidirectionalIterator_8hh" local="no">MHO_BidirectionalIterator.hh</includes>
    <templateparamlist>
      <param>
        <type>typename XValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstIterator_1aa78d5d5c3f5c23c4ef05901c840fcf7d" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="151" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstIterator_1a146b5d23b750a913b8ab27764421e982" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>using hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::iterator_category =  std::bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="150" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" prot="public" static="no">
        <type>const XValueType *</type>
        <definition>using hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::pointer =  const XValueType*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="149" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstIterator_1a7e0076eb399ad7401c2acc9e0b8e31b9" prot="public" static="no">
        <type>const XValueType &amp;</type>
        <definition>using hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::reference =  const XValueType&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="148" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">MHO_BidirectionalConstIterator</ref></type>
        <definition>using hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::self_type =  MHO_BidirectionalConstIterator</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="146" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstIterator_1a3c02532009537732d8bde0a624426f32" prot="public" static="no">
        <type>XValueType</type>
        <definition>using hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::value_type =  XValueType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="147" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalConstIterator_1a8234234129a7ec99573e6774c965db09" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::fBegin</definition>
        <argsstring></argsstring>
        <name>fBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="241" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalConstIterator_1a9e3e56fb2828d5558a89553c4479c43d" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::fLength</definition>
        <argsstring></argsstring>
        <name>fLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="243" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalConstIterator_1abb4f8402bb7371fb5fd13834120f8c59" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::fPtr</definition>
        <argsstring></argsstring>
        <name>fPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="242" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="242" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a318a639f5763f7032197c00bf3b11901" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::MHO_BidirectionalConstIterator</definition>
        <argsstring>(const self_type &amp;copy)</argsstring>
        <name>MHO_BidirectionalConstIterator</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="157" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1ace7a627b10b76dc05a1e59aaa11ed957" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::MHO_BidirectionalConstIterator</definition>
        <argsstring>(pointer begin_ptr, pointer ptr, std::size_t length)</argsstring>
        <name>MHO_BidirectionalConstIterator</name>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" kindref="member">pointer</ref></type>
          <declname>begin_ptr</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="153" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a93723d2a201204fd4a8f904d2ec4f002" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::~MHO_BidirectionalConstIterator</definition>
        <argsstring>()</argsstring>
        <name>~MHO_BidirectionalConstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="159" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a441adba556687c578c05f3ffb419fcbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::GetOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="236" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a74c06aa42f3e38e293d10a2071cf0f57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::GetPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="234" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a27c1b99baf8a8ab378f8e7d9717097f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="238" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a89a1258a0e870113461f7ccf23d76fa8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator!=</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="232" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1ae11426b851e0845a6d0771b0a81429a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7e0076eb399ad7401c2acc9e0b8e31b9" kindref="member">reference</ref></type>
        <definition>reference hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="216" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a9b328fdf969668a7880c2952d127446d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator+</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="201" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a72747fcdc6ead47706efdf76bc97a392" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="161" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a577c3ba5da3da4280461ca5269bfe960" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="173" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1acafc5b7e5da93d81a5ee865704bf18cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator+=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="189" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1ac37d108b9dedf47a17e11eae9291429d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1aa78d5d5c3f5c23c4ef05901c840fcf7d" kindref="member">difference_type</ref></type>
        <definition>difference_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const self_type &amp;iter)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="187" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1ae5d752a67ff52d77ec9d2740ec29574a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="208" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a969c1776b9fcdb24dfa68bf12e6d5819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="167" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1ad337ced10bda7cd2c81128427a883d8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="180" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1ab6c7d980ef8bcb21d5b02ab07deb7789" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator-=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="195" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a43a294b439ecfd4cb667cc045fb7c4b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="218" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a20dd14c7629bd1039a99008190d329cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator=</definition>
        <argsstring>(const self_type &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="220" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="220" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstIterator_1a0a268b18eefe14c0eb4739f64203d455" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;::operator==</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="230" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="230" bodyend="230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">MHO_BidirectionalConstIterator</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>size_t</label>
      </node>
      <node id="3">
        <label>const XValueType *</label>
      </node>
      <node id="2">
        <label>const pointer</label>
      </node>
      <node id="1">
        <label>hops::MHO_BidirectionalConstIterator&lt; XValueType &gt;</label>
        <link refid="classhops_1_1MHO__BidirectionalConstIterator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fBegin</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fPtr</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fLength</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" line="143" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalIterator.hh" bodystart="144" bodyend="244"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1aa78d5d5c3f5c23c4ef05901c840fcf7d" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>difference_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a8234234129a7ec99573e6774c965db09" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>fBegin</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a9e3e56fb2828d5558a89553c4479c43d" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>fLength</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1abb4f8402bb7371fb5fd13834120f8c59" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>fPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a441adba556687c578c05f3ffb419fcbf" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>GetOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a74c06aa42f3e38e293d10a2071cf0f57" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a27c1b99baf8a8ab378f8e7d9717097f6" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>IsValid</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a146b5d23b750a913b8ab27764421e982" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>iterator_category</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1ace7a627b10b76dc05a1e59aaa11ed957" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>MHO_BidirectionalConstIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a318a639f5763f7032197c00bf3b11901" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>MHO_BidirectionalConstIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a89a1258a0e870113461f7ccf23d76fa8" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator!=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1ae11426b851e0845a6d0771b0a81429a9" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a9b328fdf969668a7880c2952d127446d" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator+</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a72747fcdc6ead47706efdf76bc97a392" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a577c3ba5da3da4280461ca5269bfe960" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1acafc5b7e5da93d81a5ee865704bf18cc" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator+=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1ac37d108b9dedf47a17e11eae9291429d" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1ae5d752a67ff52d77ec9d2740ec29574a" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a969c1776b9fcdb24dfa68bf12e6d5819" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1ad337ced10bda7cd2c81128427a883d8d" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1ab6c7d980ef8bcb21d5b02ab07deb7789" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator-=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a43a294b439ecfd4cb667cc045fb7c4b9" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a20dd14c7629bd1039a99008190d329cd" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a0a268b18eefe14c0eb4739f64203d455" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>operator==</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a8d26828f5069ad5440f773ba46ae3383" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>pointer</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a7e0076eb399ad7401c2acc9e0b8e31b9" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>reference</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a7c1e4a6bfd864cc05bfd3633aa4dd951" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>self_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a3c02532009537732d8bde0a624426f32" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>value_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstIterator_1a93723d2a201204fd4a8f904d2ec4f002" prot="public" virt="virtual"><scope>hops::MHO_BidirectionalConstIterator</scope><name>~MHO_BidirectionalConstIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
