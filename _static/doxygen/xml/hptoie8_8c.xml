<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hptoie8_8c" kind="file" language="C++">
    <compoundname>hptoie8.c</compoundname>
    <includes refid="mk4__util_8h" local="yes">mk4_util.h</includes>
    <incdepgraph>
      <node id="12">
        <label>mk4_typedefs.h</label>
        <link refid="mk4__typedefs_8h"/>
      </node>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="4">
        <label>sys/times.h</label>
      </node>
      <node id="11">
        <label>general.h</label>
        <link refid="general_8h"/>
      </node>
      <node id="2">
        <label>mk4_util.h</label>
        <link refid="mk4__util_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>hptoie8.c</label>
        <link refid="hptoie8_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>fileset.h</label>
        <link refid="fileset_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>account.h</label>
        <link refid="account_8h"/>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>fstruct.h</label>
        <link refid="fstruct_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="hptoie8_8c_1ada7be80971d1875e5c4774edd3ecd97d" prot="public" static="no">
        <name>BIT23</name>
        <initializer>0x800000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" line="14" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hptoie8_8c_1a9999fc20f9a0a4263e66f205d449e84f" prot="public" static="no">
        <name>LOW20</name>
        <initializer>0xfffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" line="16" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hptoie8_8c_1a41cd016876940c1b8343cf0b935f12bb" prot="public" static="no">
        <name>LOW23</name>
        <initializer>0x7fffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" line="15" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hptoie8_8c_1ae0ecdc954fe1b295340e7a9e8095df9e" prot="public" static="no">
        <name>LOW7</name>
        <initializer>0x7f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" line="17" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hptoie8_8c_1a3f5141488c5bfd0d81d4b19091fd8497" prot="public" static="no">
        <name>SBIT</name>
        <initializer>0x80000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" line="13" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hptoie8_8c_1a17377e76f98ad3cd1a4db452e7e63eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hptoie8</definition>
        <argsstring>(double *dinput, double *doutput)</argsstring>
        <name>hptoie8</name>
        <param>
          <type>double *</type>
          <declname>dinput</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>doutput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" line="20" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c" bodystart="20" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Converts<sp/>HP1000-series<sp/>double-precision<sp/>floating<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>point<sp/>data<sp/>to<sp/>IEEE<sp/>format.<sp/><sp/>No<sp/>attempt<sp/>is<sp/>made<sp/>to<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>deal<sp/>with<sp/>input<sp/>numbers<sp/>that<sp/>are<sp/>not<sp/>normalized<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Input<sp/>and<sp/>output<sp/>may<sp/>be<sp/>the<sp/>same<sp/>physical<sp/>address<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>0<sp/>on<sp/>success<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CJL<sp/><sp/>April<sp/>16<sp/>1991<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mk4__util_8h" kindref="compound">mk4_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBIT<sp/><sp/>0x80000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT23<sp/>0x800000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW23<sp/>0x7fffff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW20<sp/>0xfffff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW7<sp/><sp/>0x7f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="hptoie8_8c_1a17377e76f98ad3cd1a4db452e7e63eb9" kindref="member">hptoie8</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dinput,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*doutput)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*in,<sp/>out[2],<sp/>sign,<sp/>hp_mant[2];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ieee_exp;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hp_exp;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtemp;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>dtemp<sp/>=<sp/>*dinput;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>copy<sp/>in<sp/>int<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>&amp;dtemp;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in[0]<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>in[1]<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>is<sp/>a<sp/>special<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*doutput<sp/>=<sp/>*dinput;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>in[0]<sp/>&gt;&gt;<sp/>31;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>sign<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>hp_mant[1]<sp/>=<sp/>in[1]<sp/>&gt;&gt;<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Literal<sp/>HP<sp/>mantissa<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>hp_mant[1]<sp/>+=<sp/>in[0]<sp/>&lt;&lt;<sp/>24;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Implied<sp/>and<sp/>sign<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>hp_mant[0]<sp/>=<sp/>(in[0]<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/><ref refid="hptoie8_8c_1a41cd016876940c1b8343cf0b935f12bb" kindref="member">LOW23</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>masked<sp/>out<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign)<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp_mant[1]<sp/>=<sp/>~hp_mant[1]<sp/>+<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Two&apos;s<sp/>complement<sp/>when<sp/>-ve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp_mant[0]<sp/>=<sp/>(~hp_mant[0])<sp/>&amp;<sp/><ref refid="hptoie8_8c_1a41cd016876940c1b8343cf0b935f12bb" kindref="member">LOW23</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hp_mant[1]<sp/>==<sp/>0)<sp/>hp_mant[0]<sp/>+=<sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Carry<sp/>bit<sp/>from<sp/>second<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4-byte<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hp_mant[0]<sp/>&lt;<sp/>4194304)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>normalized!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>hp_exp<sp/>=<sp/>(in[1]<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/><ref refid="hptoie8_8c_1ae0ecdc954fe1b295340e7a9e8095df9e" kindref="member">LOW7</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Literal<sp/>HP<sp/>exponent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in[1]<sp/>&amp;<sp/>1)<sp/>hp_exp<sp/>|=<sp/>0x80;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>into<sp/>signed<sp/>int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ieee_exp<sp/>=<sp/>1022<sp/>+<sp/>hp_exp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>biased<sp/>int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hp_mant[0]<sp/>&amp;<sp/><ref refid="hptoie8_8c_1ada7be80971d1875e5c4774edd3ecd97d" kindref="member">BIT23</ref>)<sp/>ieee_exp<sp/>+=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Spec.<sp/>case<sp/>for<sp/>carry<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>(hp_mant[1]<sp/>&gt;&gt;<sp/>2)<sp/>+<sp/>(hp_mant[0]<sp/>&lt;&lt;<sp/>30);</highlight><highlight class="comment">/*<sp/>Copy<sp/>relevant<sp/>bits<sp/>into<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>(hp_mant[0]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/><ref refid="hptoie8_8c_1a9999fc20f9a0a4263e66f205d449e84f" kindref="member">LOW20</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>out[0]<sp/>+=<sp/>ieee_exp<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign)<sp/>out[0]<sp/>|=<sp/><ref refid="hptoie8_8c_1a3f5141488c5bfd0d81d4b19091fd8497" kindref="member">SBIT</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>in<sp/>sign<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>*doutput<sp/>=<sp/>*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)<sp/>out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>it<sp/>where<sp/>expected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/c_src/mk4util/src/hptoie8.c"/>
  </compounddef>
</doxygen>
