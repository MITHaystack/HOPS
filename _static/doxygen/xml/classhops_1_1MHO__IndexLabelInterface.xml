<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__IndexLabelInterface" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_IndexLabelInterface</compoundname>
    <derivedcompoundref refid="classhops_1_1MHO__Axis" prot="public" virt="non-virtual">hops::MHO_Axis&lt; double &gt;</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__Axis" prot="public" virt="non-virtual">hops::MHO_Axis&lt; XValueType &gt;</derivedcompoundref>
    <includes refid="MHO__IndexLabelInterface_8hh" local="no">MHO_IndexLabelInterface.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__IndexLabelInterface_1a35b0d0531da5cfac5496db3f1ea6d141" prot="private" static="no" mutable="no">
        <type><ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref></type>
        <definition>mho_json hops::MHO_IndexLabelInterface::fDummy</definition>
        <argsstring></argsstring>
        <name>fDummy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="268" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__IndexLabelInterface_1a9baa2647c133a195959e5b4ec5c58443" prot="private" static="no" mutable="no">
        <type><ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> *</type>
        <definition>mho_json* hops::MHO_IndexLabelInterface::fIndexLabelObjectPtr</definition>
        <argsstring></argsstring>
        <name>fIndexLabelObjectPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="267" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1ae70cfe590f07c424c4ad21b922de73bf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_IndexLabelInterface::MHO_IndexLabelInterface</definition>
        <argsstring>()</argsstring>
        <name>MHO_IndexLabelInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="26" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1aba19ad4045001a0ecc36ce2a61913f37" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_IndexLabelInterface::MHO_IndexLabelInterface</definition>
        <argsstring>(const MHO_IndexLabelInterface &amp;copy)</argsstring>
        <name>MHO_IndexLabelInterface</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__IndexLabelInterface" kindref="compound">MHO_IndexLabelInterface</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="31" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a4bb19ee924c552142ef7a0e8505b257d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_IndexLabelInterface::SetIndexLabelObject</definition>
        <argsstring>(mho_json *obj)</argsstring>
        <name>SetIndexLabelObject</name>
        <param>
          <type><ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Setter for index label object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to mho_json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="38" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="38" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a2eb655beb57722eca0a2c912c2091826" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_IndexLabelInterface::~MHO_IndexLabelInterface</definition>
        <argsstring>()</argsstring>
        <name>~MHO_IndexLabelInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="41" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1ad8bcf35f802859a184c95e28a38d5f8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_IndexLabelInterface::ClearIndexLabels</definition>
        <argsstring>()</argsstring>
        <name>ClearIndexLabels</name>
        <briefdescription>
<para>Clears all index labels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="53" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a08141a73a0b3553f7442256bdfe9538c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_IndexLabelInterface::GetIndexLabelSize</definition>
        <argsstring>() const</argsstring>
        <name>GetIndexLabelSize</name>
        <briefdescription>
<para>Getter for index label size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the index label object as std::size_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="48" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a0fc74089c82528a8a39806af92c51e19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> &amp;</type>
        <definition>mho_json&amp; hops::MHO_IndexLabelInterface::GetLabelObject</definition>
        <argsstring>(std::size_t index)</argsstring>
        <name>GetLabelObject</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get a reference to the dictionary object associated with this index </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of type std::size_t used to locate the label object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the mho_json object associated with the given index, or a dummy object if the index label interface is missing. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="161" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="161" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1ac05d112e493ca825ac68ad4a61e4f5f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref></type>
        <definition>mho_json hops::MHO_IndexLabelInterface::GetLabelObject</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>GetLabelObject</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Getter for label object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of type std::size_t for retrieving label object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mho_json reference to label object if found, otherwise dummy object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="181" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="181" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a62fbd7d491a531c2239b482a98c3fcac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; hops::MHO_IndexLabelInterface::GetMatchingIndexes</definition>
        <argsstring>(std::string &amp;key) const</argsstring>
        <name>GetMatchingIndexes</name>
        <param>
          <type>std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>get a vector of indexes which contain a key with the same name </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Input key to search for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of matching indexes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="201" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="201" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a094612bb9c7450bc1aa5145f00f9262b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XValueType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; hops::MHO_IndexLabelInterface::GetMatchingIndexes</definition>
        <argsstring>(std::string &amp;key, const XValueType &amp;value) const</argsstring>
        <name>GetMatchingIndexes</name>
        <param>
          <type>std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const XValueType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get a vector of indexes which contain a key with a value which matches the passed value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XValueType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Input key string to match </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XValueType&amp;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of matching indexes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="231" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="231" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a540c19c418baf902a6ebafa893f9f8f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hops::MHO_IndexLabelInterface::InsertIndexLabelKeyValue</definition>
        <argsstring>(std::size_t index, const std::string &amp;key, const XValueType &amp;value)</argsstring>
        <name>InsertIndexLabelKeyValue</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const XValueType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function InsertIndexLabelKeyValue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XValueType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::size_t) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>(const std::string&amp;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XValueType&amp;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="68" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="68" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a0f7b57ab83164c36d35eca40a290c1ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XValueType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool hops::MHO_IndexLabelInterface::RetrieveIndexLabelKeyValue</definition>
        <argsstring>(std::size_t index, const std::string &amp;key, XValueType &amp;value) const</argsstring>
        <name>RetrieveIndexLabelKeyValue</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>XValueType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves value associated with given key and index from IndexLabelObjectPtr if it exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XValueType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index to retrieve key-value pair for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to search for in IndexLabelObjectPtr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to store retrieved value of type XValueType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if retrieval was successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="100" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="100" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a2fa8e178eb4b672fa1ea7faec3f566e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_IndexLabelInterface::SetLabelObject</definition>
        <argsstring>(mho_json &amp;obj, std::size_t index)</argsstring>
        <name>SetLabelObject</name>
        <param>
          <type><ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get a reference to the dictionary object associated with this index </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>(mho_json&amp;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::size_t) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="124" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="124" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classhops_1_1MHO__IndexLabelInterface_1a038c5c964443758ae210a4e0bdbcebb9" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string hops::MHO_IndexLabelInterface::index2key</definition>
        <argsstring>(const std::size_t &amp;idx)</argsstring>
        <name>index2key</name>
        <param>
          <type>const std::size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Converts an index to a string key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Input index as size_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation of the input index </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="265" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="265" bodyend="265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__IndexLabelInterface" kindref="compound">MHO_IndexLabelInterface</ref> - adds indexes associated with key:value pairs (used by <ref refid="classhops_1_1MHO__Axis" kindref="compound">MHO_Axis</ref>) constructor is protected this class is only intended to provide an interface that derived classes may inherit this interface is to enforce a specific access pattern associated with modifying meta data attached to a vector/axis like object that is in the form of a mho_json::array_t. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>Sun Feb 4 17:21:38 2024 -0500 </para>
</simplesect>
<simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hops::MHO_Axis&lt; double &gt;</label>
        <link refid="classhops_1_1MHO__Axis"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>hops::MHO_Axis&lt; XValueType &gt;</label>
        <link refid="classhops_1_1MHO__Axis"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_IndexLabelInterface</label>
        <link refid="classhops_1_1MHO__IndexLabelInterface"/>
      </node>
    </inheritancegraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" line="22" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_IndexLabelInterface.hh" bodystart="23" bodyend="269"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1ad8bcf35f802859a184c95e28a38d5f8b" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>ClearIndexLabels</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a35b0d0531da5cfac5496db3f1ea6d141" prot="private" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>fDummy</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a9baa2647c133a195959e5b4ec5c58443" prot="private" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>fIndexLabelObjectPtr</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a08141a73a0b3553f7442256bdfe9538c" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>GetIndexLabelSize</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a0fc74089c82528a8a39806af92c51e19" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>GetLabelObject</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1ac05d112e493ca825ac68ad4a61e4f5f9" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>GetLabelObject</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a62fbd7d491a531c2239b482a98c3fcac" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>GetMatchingIndexes</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a094612bb9c7450bc1aa5145f00f9262b" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>GetMatchingIndexes</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a038c5c964443758ae210a4e0bdbcebb9" prot="private" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>index2key</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a540c19c418baf902a6ebafa893f9f8f2" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>InsertIndexLabelKeyValue</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1ae70cfe590f07c424c4ad21b922de73bf" prot="protected" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>MHO_IndexLabelInterface</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1aba19ad4045001a0ecc36ce2a61913f37" prot="protected" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>MHO_IndexLabelInterface</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a0f7b57ab83164c36d35eca40a290c1ca" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>RetrieveIndexLabelKeyValue</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a4bb19ee924c552142ef7a0e8505b257d" prot="protected" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>SetIndexLabelObject</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a2fa8e178eb4b672fa1ea7faec3f566e7" prot="public" virt="non-virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>SetLabelObject</name></member>
      <member refid="classhops_1_1MHO__IndexLabelInterface_1a2eb655beb57722eca0a2c912c2091826" prot="public" virt="virtual"><scope>hops::MHO_IndexLabelInterface</scope><name>~MHO_IndexLabelInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
