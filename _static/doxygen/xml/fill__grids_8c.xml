<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="fill__grids_8c" kind="file" language="C++">
    <compoundname>fill_grids.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="search_8h" local="yes">search.h</includes>
    <incdepgraph>
      <node id="16">
        <label>mk4_typedefs.h</label>
        <link refid="mk4__typedefs_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="9">
        <label>sys/times.h</label>
      </node>
      <node id="15">
        <label>general.h</label>
        <link refid="general_8h"/>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>search.h</label>
        <link refid="search_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>mk4_util.h</label>
        <link refid="mk4__util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>fill_grids.c</label>
        <link refid="fill__grids_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>adata.h</label>
        <link refid="adata_8h"/>
      </node>
      <node id="17">
        <label>mk4_afio.h</label>
        <link refid="mk4__afio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>fileset.h</label>
        <link refid="fileset_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="12">
        <label>account.h</label>
        <link refid="account_8h"/>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="14">
        <label>fstruct.h</label>
        <link refid="fstruct_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fill__grids_8c_1aed3a3eb58de5a56db675a308bc390e6a" prot="public" static="no">
        <name>REMLIMIT</name>
        <initializer>0.10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/fill_grids.c" line="24" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/fill_grids.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fill__grids_8c_1ad8512644399ac6ec00af8f727bb4fac6" prot="public" static="no">
        <name>VERY_BIG</name>
        <initializer>1.0e99</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/fill_grids.c" line="23" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/fill_grids.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fill__grids_8c_1a09e0643b77b12ac11ad80219225902b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fill_grids_orig</definition>
        <argsstring>(struct srchsummary *srchdata)</argsstring>
        <name>fill_grids_orig</name>
        <param>
          <type>struct <ref refid="structsrchsummary" kindref="compound">srchsummary</ref> *</type>
          <declname>srchdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/fill_grids.c" line="27" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/fill_grids.c" bodystart="27" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>routine<sp/>manages<sp/>the<sp/>different<sp/>residual<sp/>rates<sp/>and<sp/>delays<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>single<sp/>scan<sp/>as<sp/>fed<sp/>to<sp/>the<sp/>search<sp/>program.<sp/><sp/>Since<sp/>the<sp/>data<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>are<sp/>sorted<sp/>by<sp/>rate<sp/>and<sp/>delay<sp/>before<sp/>we<sp/>loop<sp/>over<sp/>the<sp/>data,<sp/>all<sp/>we<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>need<sp/>to<sp/>do<sp/>here<sp/>is<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>grid<sp/>is<sp/>regularly<sp/>spaced.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Then<sp/>we<sp/>put<sp/>the<sp/>SNR<sp/>in<sp/>the<sp/>grid,<sp/>and<sp/>tabulate<sp/>the<sp/>axes<sp/>of<sp/>the<sp/>grid.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Inputs:<sp/><sp/><sp/><sp/><sp/>srchdata<sp/><sp/><sp/><sp/>contains<sp/>all<sp/>data<sp/>points<sp/>for<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>scan<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Output:<sp/><sp/><sp/><sp/><sp/>srchdata<sp/><sp/><sp/><sp/>grids<sp/>set<sp/>up<sp/>and<sp/>filled<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>baselines<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Created<sp/>February<sp/>1<sp/>1996<sp/>by<sp/>CJL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="search_8h" kindref="compound">search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERY_BIG<sp/>1.0e99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REMLIMIT<sp/>0.10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="fill__grids_8c_1a09e0643b77b12ac11ad80219225902b1" kindref="member">fill_grids_orig</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsrchsummary" kindref="compound">srchsummary</ref><sp/>*srchdata)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>nrate,<sp/>ndelay,<sp/>rcell,<sp/>dcell,<sp/>uneven;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rate,<sp/>delay,<sp/>min_rate,<sp/>min_delay,<sp/>max_rate,<sp/>max_delay,<sp/>snr;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastrate,<sp/>lastdelay,<sp/>rdiff,<sp/>ddiff,<sp/>rem,<sp/>remlimit;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rinc,<sp/>dinc,<sp/>fp_nrate,<sp/>fp_ndelay,<sp/>fp_rcell,<sp/>fp_dcell;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrchsummary" kindref="compound">srchsummary</ref><sp/>*sb;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rlp<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;HOPS_SEARCH_REMLIMIT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>remlimit<sp/>=<sp/>rlp<sp/>?<sp/>atof(rlp)<sp/>:<sp/><ref refid="fill__grids_8c_1aed3a3eb58de5a56db675a308bc390e6a" kindref="member">REMLIMIT</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>baselines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="search_8h_1a7a13b3753030b4cb66afe362fb37d847" kindref="member">MAX_BNO</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Did<sp/>we<sp/>reach<sp/>the<sp/>end?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srchdata[i].<ref refid="structsrchsummary_1ae09f4a35e6cdb9e41172e9c611cf71b9" kindref="member">datum</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convenience<sp/>ptr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>sb<sp/>=<sp/>srchdata<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>are<sp/>sorted,<sp/>so<sp/>can<sp/>just<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>through<sp/>looking<sp/>for<sp/>smallest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nonzero<sp/>incr.<sp/>in<sp/>rate<sp/>and<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>determine<sp/>grid<sp/>spacing<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>grid<sp/>dimensions<sp/>from<sp/>min/max<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref><sp/>=<sp/><ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref><sp/>=<sp/>lastrate<sp/>=<sp/>sb-&gt;<ref refid="structsrchsummary_1a7e3d0ca8f9e3dca7cd5883b198d1bf28" kindref="member">darray</ref>[0]-&gt;<ref refid="structfringesum_1aa503a9350fb4e10ed59a4b2c210fd8eb" kindref="member">delay_rate</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref><sp/>=<sp/><ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref><sp/>=<sp/>lastdelay<sp/>=<sp/>sb-&gt;<ref refid="structsrchsummary_1a7e3d0ca8f9e3dca7cd5883b198d1bf28" kindref="member">darray</ref>[0]-&gt;<ref refid="structfringesum_1a905741ddb2d293073177724326442ea4" kindref="member">mbdelay</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>rdiff<sp/>=<sp/>ddiff<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>rinc<sp/>=<sp/>dinc<sp/>=<sp/><ref refid="fill__grids_8c_1ad8512644399ac6ec00af8f727bb4fac6" kindref="member">VERY_BIG</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref>(</highlight><highlight class="stringliteral">&quot;Baseline<sp/>%d<sp/>has<sp/>%d<sp/>data&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>i,<sp/>sb-&gt;<ref refid="structsrchsummary_1ade45f7807a10cf2bd0321143c520e9c6" kindref="member">nd</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;sb-&gt;<ref refid="structsrchsummary_1ade45f7807a10cf2bd0321143c520e9c6" kindref="member">nd</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>sb-&gt;<ref refid="structsrchsummary_1a7e3d0ca8f9e3dca7cd5883b198d1bf28" kindref="member">darray</ref>[j]-&gt;<ref refid="structfringesum_1aa503a9350fb4e10ed59a4b2c210fd8eb" kindref="member">delay_rate</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>sb-&gt;<ref refid="structsrchsummary_1a7e3d0ca8f9e3dca7cd5883b198d1bf28" kindref="member">darray</ref>[j]-&gt;<ref refid="structfringesum_1a905741ddb2d293073177724326442ea4" kindref="member">mbdelay</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>delay/rate<sp/>incrs.<sp/>&amp;<sp/>extrema<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-sorted<sp/>data<sp/>makes<sp/>this<sp/>easy,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>but<sp/>must<sp/>still<sp/>beware<sp/>of<sp/>missing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>points<sp/>which<sp/>may<sp/>confuse<sp/>a<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>quick&apos;n&apos;dirty<sp/>look<sp/>@<sp/>start<sp/>&amp;<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdiff<sp/>=<sp/>fabs<sp/>(rate<sp/>-<sp/>lastrate);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddiff<sp/>=<sp/>fabs<sp/>(delay<sp/>-<sp/>lastdelay);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rdiff<sp/>&gt;<sp/>0.0)<sp/>&amp;&amp;<sp/>(rdiff<sp/>&lt;<sp/>rinc))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{rinc<sp/>=<sp/>rdiff;<sp/>printf(</highlight><highlight class="stringliteral">&quot;rinc<sp/>=<sp/>%.9lf\n&quot;</highlight><highlight class="normal">,rinc);}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ddiff<sp/>&gt;<sp/>0.0)<sp/>&amp;&amp;<sp/>(ddiff<sp/>&lt;<sp/>dinc))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{dinc<sp/>=<sp/>ddiff;<sp/>printf(</highlight><highlight class="stringliteral">&quot;dinc<sp/>=<sp/>%.9lf\n&quot;</highlight><highlight class="normal">,dinc);}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extrema<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rate<sp/>&lt;<sp/><ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref>)<sp/><ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref><sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rate<sp/>&gt;<sp/><ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref>)<sp/><ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref><sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay<sp/>&lt;<sp/><ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref>)<sp/><ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref><sp/>=<sp/>delay;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay<sp/>&gt;<sp/><ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref>)<sp/><ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref><sp/>=<sp/>delay;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>next<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastrate<sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastdelay<sp/>=<sp/>delay;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>we<sp/>got<sp/>sensible<sp/>answers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref><sp/>==<sp/><ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>number<sp/>of<sp/>rate<sp/>cells<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;max_rate=%lf<sp/><sp/>min_rate=%lf<sp/><sp/>&quot;</highlight><highlight class="normal">,<ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref>,<ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;rinc<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>rinc);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp_nrate<sp/>=<sp/>(<ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref><sp/>-<sp/><ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref>)<sp/>/<sp/>rinc<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;fp_nrate<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,fp_nrate);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref><sp/>=<sp/>fp_nrate+0.5)<sp/>&gt;<sp/><ref refid="search_8h_1a18279ec0c5f0616352bcfaab2269d526" kindref="member">MAX_NRATE</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>rate<sp/>cells,<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>2,<sp/><ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;nrate<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>it<sp/>was<sp/>integer<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem<sp/>=<sp/>fabs<sp/>(fp_nrate<sp/>-<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;rem<sp/>(rate)<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,rem);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rem<sp/>&gt;<sp/>remlimit)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>fails,<sp/>needs<sp/>replacing<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>(&quot;Rate<sp/>spans<sp/>non-integral<sp/>number<sp/>of<sp/>rate<sp/>increments&quot;,<sp/>2);</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(1);</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Same<sp/>for<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref><sp/>==<sp/><ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>number<sp/>of<sp/>delay<sp/>cells<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;max_delay=%lf<sp/><sp/>min_delay=%lf<sp/><sp/>&quot;</highlight><highlight class="normal">,<ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref>,<ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;dinc<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,dinc);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp_ndelay<sp/>=<sp/>(<ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref><sp/>-<sp/><ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref>)<sp/>/<sp/>dinc<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;fp_ndelay<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,fp_ndelay);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref><sp/>=<sp/>fp_ndelay+0.5)<sp/>&gt;<sp/><ref refid="search_8h_1ab298232e165ac57138d4266f1ddee759" kindref="member">MAX_NDELAY</ref>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>delay<sp/>cells,<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>2,<sp/><ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;ndelay<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>it<sp/>was<sp/>integer<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem<sp/>=<sp/>fabs<sp/>(fp_ndelay<sp/>-<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;rem<sp/>(delay)<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,rem);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rem<sp/>&gt;<sp/>remlimit)</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>(&quot;Delay<sp/>spans<sp/>non-integral<sp/>number<sp/>of<sp/>delay<sp/>increments&quot;,<sp/>2);</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(1);</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Record<sp/>the<sp/>rate/delay<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>of<sp/>grid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref><sp/>=<sp/><ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref><sp/>=<sp/><ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref><sp/>=<sp/><ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref><sp/>=<sp/><ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref><sp/>=<sp/><ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref><sp/>=<sp/><ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>increments<sp/>to<sp/>be<sp/>sure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>rinc<sp/>=<sp/>(<ref refid="structsrchsummary_1a2ff434e5adbfb77d3760d97082224a2a" kindref="member">max_rate</ref><sp/>-<sp/><ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref>)<sp/>/<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="structsrchsummary_1af83f43cf3b77c15508d70fc8a1a8e0e9" kindref="member">nrate</ref><sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>dinc<sp/>=<sp/>(<ref refid="structsrchsummary_1a0992946168b275c99305711179d0207a" kindref="member">max_delay</ref><sp/>-<sp/><ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref>)<sp/>/<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="structsrchsummary_1a9cccffc3455fe6367543f25103175f8a" kindref="member">ndelay</ref><sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ready<sp/>to<sp/>fill<sp/>in<sp/>the<sp/>grid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>uneven<sp/>=<sp/><ref refid="difx2mark4_8h_1ad1c1018b91abe46eaa220d8c979c9e77aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;sb-&gt;<ref refid="structsrchsummary_1ade45f7807a10cf2bd0321143c520e9c6" kindref="member">nd</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>sb-&gt;<ref refid="structsrchsummary_1a7e3d0ca8f9e3dca7cd5883b198d1bf28" kindref="member">darray</ref>[j]-&gt;<ref refid="structfringesum_1aa503a9350fb4e10ed59a4b2c210fd8eb" kindref="member">delay_rate</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>sb-&gt;<ref refid="structsrchsummary_1a7e3d0ca8f9e3dca7cd5883b198d1bf28" kindref="member">darray</ref>[j]-&gt;<ref refid="structfringesum_1a905741ddb2d293073177724326442ea4" kindref="member">mbdelay</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrchsummary_1a6685d1f4dc6239603177fa6d05a12ea7" kindref="member">snr</ref><sp/>=<sp/>sb-&gt;<ref refid="structsrchsummary_1a7e3d0ca8f9e3dca7cd5883b198d1bf28" kindref="member">darray</ref>[j]-&gt;<ref refid="structfringesum_1a770a4bc89d6fce07c812e9e3eac5813a" kindref="member">snr</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>grid<sp/>coords,<sp/>make<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sure<sp/>they<sp/>are<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp_rcell<sp/>=<sp/>(rate<sp/>-<sp/><ref refid="structsrchsummary_1aed6aa91265e0f93e9cb7d33f17322622" kindref="member">min_rate</ref>)<sp/>/<sp/>rinc;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcell<sp/>=<sp/>fp_rcell+0.5;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem<sp/>=<sp/>fabs<sp/>(fp_rcell<sp/>-<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcell);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem<sp/>&gt;<sp/>remlimit)<sp/>uneven<sp/>=<sp/><ref refid="difx2mark4_8h_1ad1c1018b91abe46eaa220d8c979c9e77aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp_dcell<sp/>=<sp/>(delay<sp/>-<sp/><ref refid="structsrchsummary_1afe07e73445959c4ef3b900e8db88799d" kindref="member">min_delay</ref>)<sp/>/<sp/>dinc;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcell<sp/>=<sp/>fp_dcell+0.5;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem<sp/>=<sp/>fabs<sp/>(fp_dcell<sp/>-<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)dcell);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem<sp/>&gt;<sp/>remlimit)<sp/>uneven<sp/>=<sp/><ref refid="difx2mark4_8h_1ad1c1018b91abe46eaa220d8c979c9e77aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>snr<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb-&gt;<ref refid="structsrchsummary_1a6685d1f4dc6239603177fa6d05a12ea7" kindref="member">snr</ref>[rcell][dcell]<sp/>=<sp/><ref refid="structsrchsummary_1a6685d1f4dc6239603177fa6d05a12ea7" kindref="member">snr</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uneven)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Uneven<sp/>delay<sp/>distribution&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="msg_8h_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Set<sp/>HOPS_SEARCH_REMLIMIT<sp/>&gt;<sp/>%g<sp/>if<sp/>you<sp/>are<sp/>desperate&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>remlimit);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/c_src/applications/search/src/fill_grids.c"/>
  </compounddef>
</doxygen>
