<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__Reducer" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_Reducer</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; XArrayType &gt;</basecompoundref>
    <includes refid="MHO__Reducer_8hh" local="no">MHO_Reducer.hh</includes>
    <innerclass refid="classhops_1_1MHO__Reducer_1_1AxisReducer" prot="private">hops::MHO_Reducer::AxisReducer</innerclass>
    <templateparamlist>
      <param>
        <type>typename XArrayType</type>
      </param>
      <param>
        <type>template&lt; typename &gt; class</type>
        <declname>XFunctorType</declname>
        <defname>XFunctorType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__Reducer_1a2044db744327a92d12da824160756f1b" prot="public" static="no">
        <type>typename XArrayType::value_type</type>
        <definition>using hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::XItemType =  typename XArrayType::value_type</definition>
        <argsstring></argsstring>
        <name>XItemType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="33" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__Reducer_1a23fcc65b0eefe590dd62ecc5694109f7" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::fAxesToReduce[XArrayType::rank::value]</definition>
        <argsstring>[XArrayType::rank::value]</argsstring>
        <name>fAxesToReduce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="291" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Reducer_1a32a0e02867471068d0fd112f21fa8005" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::fInitialized</definition>
        <argsstring></argsstring>
        <name>fInitialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="290" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Reducer_1ac0ad04b5f3655deede0b8a9126bf25aa" prot="private" static="no" mutable="no">
        <type>XFunctorType&lt; <ref refid="classhops_1_1MHO__Reducer_1a2044db744327a92d12da824160756f1b" kindref="member">XItemType</ref> &gt;</type>
        <definition>XFunctorType&lt; XItemType &gt; hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::fReductionFunctor</definition>
        <argsstring></argsstring>
        <name>fReductionFunctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="292" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__Reducer_1a7a8554bb0fe2d5d97b3fc8c2db3d4ffa" prot="private" static="no" mutable="no">
        <type>XArrayType</type>
        <definition>XArrayType hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::fWorkspace</definition>
        <argsstring></argsstring>
        <name>fWorkspace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="293" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1a693768aca0eee16b2a548fbd3eca3b4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::MHO_Reducer</definition>
        <argsstring>()</argsstring>
        <name>MHO_Reducer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="35" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1ab147df468d88484e539377c106f2bdec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::~MHO_Reducer</definition>
        <argsstring>()</argsstring>
        <name>~MHO_Reducer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="44" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1a01567a93880a76bb2a085795d16da372" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::ClearAxisSelection</definition>
        <argsstring>()</argsstring>
        <name>ClearAxisSelection</name>
        <briefdescription>
<para>De-selects all axes by setting internal flags and arrays to default values (no reduction) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="75" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1a7b38c2de240bbaaac1c242e3dd1fb074" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::ReduceAxis</definition>
        <argsstring>(std::size_t axis_index)</argsstring>
        <name>ReduceAxis</name>
        <param>
          <type>std::size_t</type>
          <declname>axis_index</declname>
        </param>
        <briefdescription>
<para>Sets axis index for reduction operation. </para>
        </briefdescription>
        <detaileddescription>
<para>set the indices of the axes over which we run the reduction. This must be set before we can initialize/execute for example for a 3D array, if we wanted to reduce along the last axis only we would call this-&gt;ReduceAxis(2), or alternatively if we wanted to reduce along both the first and last axis we would call this-&gt;ReduceAxis(0), this-&gt;ReduceAxis(2) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>axis_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the axis to reduce. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="57" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="57" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1ab3310d77baf34375519ea7b21fe02ff4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::ExecuteInPlace</definition>
        <argsstring>(XArrayType *in) override</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <param>
          <type>XArrayType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Executes operation in-place by calling ExecuteOutOfPlace and copying result back to input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array of type XArrayType* </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status of execution as boolean </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="102" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1ad40f481b9196f56e34d71754e3e4dd24" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::ExecuteOutOfPlace</definition>
        <argsstring>(const XArrayType *in, XArrayType *out) override</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <param>
          <type>const XArrayType *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>XArrayType *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Function ExecuteOutOfPlace - carries out the array reduction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XArrayType*) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(XArrayType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (bool) </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="173" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="173" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1acf71932423cfa494bcf9436d53383b3b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::InitializeInPlace</definition>
        <argsstring>(XArrayType *in) override</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <param>
          <type>XArrayType *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Initializes XArrayType in-place by calling InitializeOutOfPlace with given workspace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to XArrayType object for initialization </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success of initialization </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="93" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1abfd248e20eb5f9a2c0e616f5ec8af1eb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::InitializeOutOfPlace</definition>
        <argsstring>(const XArrayType *in, XArrayType *out) override</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <param>
          <type>const XArrayType *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>XArrayType *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Initializes out-of-place operation using input array and workspace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array of type XArrayType </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output array of type XArrayType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if initialization is successful, false otherwise </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="118" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="118" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1ab3609fea27d9ab6dea106d0cbcad7792" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XArrayType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; !std::is_base_of&lt; <ref refid="classhops_1_1MHO__TableContainerBase" kindref="compound">MHO_TableContainerBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; !std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::IfTableReduceAxis</definition>
        <argsstring>(const XArrayType *, XArrayType *, std::size_t)</argsstring>
        <name>IfTableReduceAxis</name>
        <param>
          <type>const XArrayType *</type>
        </param>
        <param>
          <type>XArrayType *</type>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
<para>Reduces a specified axis in an input XArrayType and stores the result in output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>!in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input XArrayType to reduce </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output XArrayType after reduction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!ax_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the axis to reduce </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="267" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="267" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__Reducer_1a3cc1d882e975a0b9f5396c22a5eb9175" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XArrayType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_base_of&lt; <ref refid="classhops_1_1MHO__TableContainerBase" kindref="compound">MHO_TableContainerBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;::IfTableReduceAxis</definition>
        <argsstring>(const XArrayType *in, XArrayType *out, std::size_t ax_index)</argsstring>
        <name>IfTableReduceAxis</name>
        <param>
          <type>const XArrayType *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>XArrayType *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>ax_index</declname>
        </param>
        <briefdescription>
<para>Reduces a specified axis in an input XArrayType and stores result in output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input XArrayType to reduce </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output XArrayType for reduced data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ax_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the axis to reduce </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="280" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="280" bodyend="288"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__Reducer" kindref="compound">MHO_Reducer</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Reduce a multi-dimensional array via a templated operation (e.g. summation) along the (runtime) specified dimensions. The output array has the same dimensionality (i.e. XArrayType::rank::value). However, the axes over which reduction occured will have a size of 1. The output array will be resized if/as needed.</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Tue Nov 17 16:53:15 2020 -0500 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; XArrayType &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;</label>
        <link refid="classhops_1_1MHO__Reducer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; XArrayType &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hops::MHO_Reducer&lt; XArrayType, XFunctorType &gt;</label>
        <link refid="classhops_1_1MHO__Reducer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" line="30" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_Reducer.hh" bodystart="31" bodyend="294"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__Reducer_1a01567a93880a76bb2a085795d16da372" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>ClearAxisSelection</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_Reducer</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__Reducer_1ab3310d77baf34375519ea7b21fe02ff4" prot="protected" virt="virtual"><scope>hops::MHO_Reducer</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__Reducer_1ad40f481b9196f56e34d71754e3e4dd24" prot="protected" virt="virtual"><scope>hops::MHO_Reducer</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__Reducer_1a23fcc65b0eefe590dd62ecc5694109f7" prot="private" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>fAxesToReduce</name></member>
      <member refid="classhops_1_1MHO__Reducer_1a32a0e02867471068d0fd112f21fa8005" prot="private" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>fInitialized</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__Reducer_1ac0ad04b5f3655deede0b8a9126bf25aa" prot="private" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>fReductionFunctor</name></member>
      <member refid="classhops_1_1MHO__Reducer_1a7a8554bb0fe2d5d97b3fc8c2db3d4ffa" prot="private" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>fWorkspace</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__Reducer_1ab3609fea27d9ab6dea106d0cbcad7792" prot="private" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>IfTableReduceAxis</name></member>
      <member refid="classhops_1_1MHO__Reducer_1a3cc1d882e975a0b9f5396c22a5eb9175" prot="private" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>IfTableReduceAxis</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_Reducer</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__Reducer_1acf71932423cfa494bcf9436d53383b3b" prot="protected" virt="virtual"><scope>hops::MHO_Reducer</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__Reducer_1abfd248e20eb5f9a2c0e616f5ec8af1eb" prot="protected" virt="virtual"><scope>hops::MHO_Reducer</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__Reducer_1a693768aca0eee16b2a548fbd3eca3b4d" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>MHO_Reducer</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__Reducer_1a7b38c2de240bbaaac1c242e3dd1fb074" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>ReduceAxis</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__Reducer_1a2044db744327a92d12da824160756f1b" prot="public" virt="non-virtual"><scope>hops::MHO_Reducer</scope><name>XItemType</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__Reducer_1ab147df468d88484e539377c106f2bdec" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>~MHO_Reducer</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_Reducer</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
