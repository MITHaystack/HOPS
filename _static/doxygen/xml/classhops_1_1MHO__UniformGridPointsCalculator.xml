<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__UniformGridPointsCalculator" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_UniformGridPointsCalculator</compoundname>
    <includes refid="MHO__UniformGridPointsCalculator_8hh" local="no">MHO_UniformGridPointsCalculator.hh</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1a5b6eae191be538bdb29f0e7933aa5d2a" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fAbsEps</definition>
        <argsstring></argsstring>
        <name>fAbsEps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="169" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1ae028e99447573a6da4cb96cb394e1986" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fAverageLocation</definition>
        <argsstring></argsstring>
        <name>fAverageLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="161" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1adc91e2a128c6cf90a77db6612bf80ef4" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int hops::MHO_UniformGridPointsCalculator::fDefaultGridPoints</definition>
        <argsstring></argsstring>
        <name>fDefaultGridPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="167" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1a98930869e62814f24a84557608673910" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fEpsilon</definition>
        <argsstring></argsstring>
        <name>fEpsilon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="156" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1a06a80e16b5a349b404e13296e64548b4" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::size_t, std::size_t &gt;</type>
        <definition>std::map&lt; std::size_t, std::size_t &gt; hops::MHO_UniformGridPointsCalculator::fIndexMap</definition>
        <argsstring></argsstring>
        <name>fIndexMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="165" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1ab7cc11d611a2ae3e38e4acca04802efa" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fMaxSpacing</definition>
        <argsstring></argsstring>
        <name>fMaxSpacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="160" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1afe5ed81bbc50388fc9bce1b0309ced5d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fMinSpacing</definition>
        <argsstring></argsstring>
        <name>fMinSpacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="159" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1a712bfdf89e3ad9963ddb4dbedb364765" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fNGridPoints</definition>
        <argsstring></argsstring>
        <name>fNGridPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="162" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1aeb8e79d80148d273571e017a83767a11" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; hops::MHO_UniformGridPointsCalculator::fPoints</definition>
        <argsstring></argsstring>
        <name>fPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="164" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1abca3b17d018e2ac0ed8c5d22ae06fd93" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fSpacing</definition>
        <argsstring></argsstring>
        <name>fSpacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="158" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1a7bb4f04047e847ae4497c128d1d86bb3" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hops::MHO_UniformGridPointsCalculator::fSpacingError</definition>
        <argsstring></argsstring>
        <name>fSpacingError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="168" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1a7fffbb4133050a708bdccbff7e99e521" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fSpread</definition>
        <argsstring></argsstring>
        <name>fSpread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="163" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__UniformGridPointsCalculator_1ae1f3638efce3c21390d6d170cdb79df4" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::fStart</definition>
        <argsstring></argsstring>
        <name>fStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="157" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a39e36330525d194858468c06cf358db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_UniformGridPointsCalculator::MHO_UniformGridPointsCalculator</definition>
        <argsstring>()</argsstring>
        <name>MHO_UniformGridPointsCalculator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="28" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="11" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a5895e838e73727bd1cb94669de26a23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_UniformGridPointsCalculator::~MHO_UniformGridPointsCalculator</definition>
        <argsstring>()</argsstring>
        <name>~MHO_UniformGridPointsCalculator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="29" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a621d461d1f4449e3e981ff2764581613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::Calculate</definition>
        <argsstring>()</argsstring>
        <name>Calculate</name>
        <briefdescription>
<para>Calculates uniform grid points and adjusts point count until spacing error is resolved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="77" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="69" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a28c57154ba3ce661e1b4f9f9f6c66c8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::GetGridAverage</definition>
        <argsstring>() const</argsstring>
        <name>GetGridAverage</name>
        <briefdescription>
<para>Getter for grid average. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The average point location as a double. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="105" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a58a1275cd58fcd5f35d71b7e54a1ce1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; std::size_t, std::size_t &gt;</type>
        <definition>std::map&lt; std::size_t, std::size_t &gt; hops::MHO_UniformGridPointsCalculator::GetGridIndexMap</definition>
        <argsstring>()</argsstring>
        <name>GetGridIndexMap</name>
        <briefdescription>
<para>Getter for grid index map maps the indexes of the original points to their new locations in the uniform grid array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::pair&lt;std::size_t, std::size_t representing the index mapping. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="136" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a14aeadd8fd6b793f2a719499d2aa5aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::GetGridPoints</definition>
        <argsstring>(std::vector&lt; double &gt; *grid_pts)</argsstring>
        <name>GetGridPoints</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>grid_pts</declname>
        </param>
        <briefdescription>
<para>Getter for grid points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid_pts</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::vector&lt; double &gt;*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="84" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1aee29df2ab7258e6b75229b792d9d5798" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::GetGridSpacing</definition>
        <argsstring>() const</argsstring>
        <name>GetGridSpacing</name>
        <briefdescription>
<para>Getter for grid spacing - the distance between points on the uniform grid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current grid spacing as a double. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="98" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1ad373995fcae740ff6eb5744d8fdb35f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::GetGridStart</definition>
        <argsstring>() const</argsstring>
        <name>GetGridStart</name>
        <briefdescription>
<para>Getter for grid start. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The starting point of the grid as a double. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="91" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1ab1ca7b84725f7a77577b0fb614488126" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_UniformGridPointsCalculator::GetNGridPoints</definition>
        <argsstring>() const</argsstring>
        <name>GetNGridPoints</name>
        <briefdescription>
<para>Getter for the number of points in the uniform grid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of grid points as std::size_t. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="119" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1ac14ea74c6a6d9d9ca3e69206ad40e95f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_UniformGridPointsCalculator::GetSpacingErrorStatus</definition>
        <argsstring>() const</argsstring>
        <name>GetSpacingErrorStatus</name>
        <briefdescription>
<para>Getter for spacing error status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Boolean indicating whether there is a spacing error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="126" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a49b23ffbd8d408830121c3b0c513e2b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_UniformGridPointsCalculator::GetSpread</definition>
        <argsstring>() const</argsstring>
        <name>GetSpread</name>
        <briefdescription>
<para>Getter for spread - the grid spread about the average. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current spread value as a double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="112" column="16" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a24ae957141ae8a5b32213de4bff6e7c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::GetUniquePoints</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;in_pts, double eps, std::vector&lt; double &gt; &amp;out_pts, std::map&lt; std::size_t, std::size_t &gt; &amp;index_map) const</argsstring>
        <name>GetUniquePoints</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>in_pts</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>out_pts</declname>
        </param>
        <param>
          <type>std::map&lt; std::size_t, std::size_t &gt; &amp;</type>
          <declname>index_map</declname>
        </param>
        <briefdescription>
<para>pre-processing step <ndash/> makes sure the points are unique given some epsilon and if not, then provides a std::map&lt;int, int&gt; to map the input vector indices to the output vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_pts</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector of double precision points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>Epsilon value for uniqueness check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_pts</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector of unique points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index_map</parametername>
</parameternamelist>
<parameterdescription>
<para>Map from input index to output index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="55" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="31" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a656f5de5436a91ec991a290b9e97ae5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::SetDefaultGridPoints</definition>
        <argsstring>(std::size_t n)</argsstring>
        <name>SetDefaultGridPoints</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Setter for default grid points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Input number of grid points </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="43" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a461e4b4bd933efe89c451b015c10edee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::SetEpsilon</definition>
        <argsstring>(double eps)</argsstring>
        <name>SetEpsilon</name>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
<para>Setter for epsilon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>Input epsilon value of type double </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="36" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a1617a7161a7a873c5fdacdd2a676d66a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::SetPoints</definition>
        <argsstring>(const double *pts, std::size_t npts)</argsstring>
        <name>SetPoints</name>
        <param>
          <type>const double *</type>
          <declname>pts</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npts</declname>
        </param>
        <briefdescription>
<para>Setter for points - expects points to be given in increasing order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pts</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector of double values representing grid points </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="72" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="59" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a151aed4607a4efbc020477927010cdd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::SetPoints</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;pts)</argsstring>
        <name>SetPoints</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>pts</declname>
        </param>
        <briefdescription>
<para>Setter for points - expects points to be given in increasing order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pts</parametername>
</parameternamelist>
<parameterdescription>
<para>Input points vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="65" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="53" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1ab029e84869ba85de4017575cc4a747f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::Calculate_v1</definition>
        <argsstring>(int max_pts=8192)</argsstring>
        <name>Calculate_v1</name>
        <param>
          <type>int</type>
          <declname>max_pts</declname>
          <defval>8192</defval>
        </param>
        <briefdescription>
<para>Calculates uniform grid points for frequency data up to a maximum number of points. based on original implementation (<ref refid="freq__spacing_8c" kindref="compound">freq_spacing.c</ref>), default max number of points is 8192. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_pts</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of frequency points to consider. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="144" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="89" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a55f2d7a3b21391e484448345bd84c1d8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::Calculate_v2</definition>
        <argsstring>()</argsstring>
        <name>Calculate_v2</name>
        <briefdescription>
<para>Calculates uniform grid points without enforcing power-of-2 size - untested, not used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="149" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="210" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__UniformGridPointsCalculator_1a39b486169c9a3eeec7064e98afa295e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_UniformGridPointsCalculator::FindStartAndMinMaxSpacing</definition>
        <argsstring>()</argsstring>
        <name>FindStartAndMinMaxSpacing</name>
        <briefdescription>
<para>Finds start point and minimum/maximum spacing between points in a list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="154" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/src/MHO_UniformGridPointsCalculator.cc" bodystart="263" bodyend="294"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__UniformGridPointsCalculator" kindref="compound">MHO_UniformGridPointsCalculator</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>size_t</label>
      </node>
      <node id="5">
        <label>std::map&lt; std::size_t, std::size_t &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="2" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>int</label>
      </node>
      <node id="2">
        <label>double</label>
      </node>
      <node id="1">
        <label>hops::MHO_UniformGridPointsCalculator</label>
        <link refid="classhops_1_1MHO__UniformGridPointsCalculator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fAbsEps</edgelabel>
          <edgelabel>fAverageLocation</edgelabel>
          <edgelabel>fEpsilon</edgelabel>
          <edgelabel>fMaxSpacing</edgelabel>
          <edgelabel>fMinSpacing</edgelabel>
          <edgelabel>fNGridPoints</edgelabel>
          <edgelabel>fSpacing</edgelabel>
          <edgelabel>fSpread</edgelabel>
          <edgelabel>fStart</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fDefaultGridPoints</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fSpacingError</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>fIndexMap</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>fPoints</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>bool</label>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" line="25" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Math/include/MHO_UniformGridPointsCalculator.hh" bodystart="26" bodyend="170"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a621d461d1f4449e3e981ff2764581613" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>Calculate</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1ab029e84869ba85de4017575cc4a747f1" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>Calculate_v1</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a55f2d7a3b21391e484448345bd84c1d8" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>Calculate_v2</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a5b6eae191be538bdb29f0e7933aa5d2a" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fAbsEps</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1ae028e99447573a6da4cb96cb394e1986" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fAverageLocation</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1adc91e2a128c6cf90a77db6612bf80ef4" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fDefaultGridPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a98930869e62814f24a84557608673910" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fEpsilon</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a06a80e16b5a349b404e13296e64548b4" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fIndexMap</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a39b486169c9a3eeec7064e98afa295e1" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>FindStartAndMinMaxSpacing</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1ab7cc11d611a2ae3e38e4acca04802efa" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fMaxSpacing</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1afe5ed81bbc50388fc9bce1b0309ced5d" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fMinSpacing</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a712bfdf89e3ad9963ddb4dbedb364765" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fNGridPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1aeb8e79d80148d273571e017a83767a11" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1abca3b17d018e2ac0ed8c5d22ae06fd93" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fSpacing</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a7bb4f04047e847ae4497c128d1d86bb3" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fSpacingError</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a7fffbb4133050a708bdccbff7e99e521" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fSpread</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1ae1f3638efce3c21390d6d170cdb79df4" prot="protected" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>fStart</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a28c57154ba3ce661e1b4f9f9f6c66c8f" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetGridAverage</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a58a1275cd58fcd5f35d71b7e54a1ce1e" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetGridIndexMap</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a14aeadd8fd6b793f2a719499d2aa5aca" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetGridPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1aee29df2ab7258e6b75229b792d9d5798" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetGridSpacing</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1ad373995fcae740ff6eb5744d8fdb35f6" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetGridStart</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1ab1ca7b84725f7a77577b0fb614488126" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetNGridPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1ac14ea74c6a6d9d9ca3e69206ad40e95f" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetSpacingErrorStatus</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a49b23ffbd8d408830121c3b0c513e2b5" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetSpread</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a24ae957141ae8a5b32213de4bff6e7c2" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>GetUniquePoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a39e36330525d194858468c06cf358db4" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>MHO_UniformGridPointsCalculator</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a656f5de5436a91ec991a290b9e97ae5a" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>SetDefaultGridPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a461e4b4bd933efe89c451b015c10edee" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>SetEpsilon</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a151aed4607a4efbc020477927010cdd5" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>SetPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a1617a7161a7a873c5fdacdd2a676d66a" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>SetPoints</name></member>
      <member refid="classhops_1_1MHO__UniformGridPointsCalculator_1a5895e838e73727bd1cb94669de26a23a" prot="public" virt="non-virtual"><scope>hops::MHO_UniformGridPointsCalculator</scope><name>~MHO_UniformGridPointsCalculator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
