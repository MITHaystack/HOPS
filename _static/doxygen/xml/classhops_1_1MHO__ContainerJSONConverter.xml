<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__ContainerJSONConverter" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_ContainerJSONConverter</compoundname>
    <basecompoundref refid="classhops_1_1MHO__JSONConverter" prot="public" virt="non-virtual">hops::MHO_JSONConverter</basecompoundref>
    <includes refid="MHO__ContainerJSONConverter_8hh" local="no">MHO_ContainerJSONConverter.hh</includes>
    <innerclass refid="classhops_1_1MHO__ContainerJSONConverter_1_1AxisDumper" prot="protected">hops::MHO_ContainerJSONConverter::AxisDumper</innerclass>
    <templateparamlist>
      <param>
        <type>typename XContainerType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__ContainerJSONConverter_1a9e774cb49cb7fb032ad86821987f1c73" prot="private" static="no" mutable="no">
        <type>XContainerType *</type>
        <definition>XContainerType* hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::fContainer</definition>
        <argsstring></argsstring>
        <name>fContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="226" column="24" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a8aa02c252a1bbfc49159b5cd5abc6e5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::MHO_ContainerJSONConverter</definition>
        <argsstring>()</argsstring>
        <name>MHO_ContainerJSONConverter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="196" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a64b889fedaa185df5a1f52cc877c2ea5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::MHO_ContainerJSONConverter</definition>
        <argsstring>(MHO_ExtensibleElement *element)</argsstring>
        <name>MHO_ContainerJSONConverter</name>
        <param>
          <type><ref refid="classhops_1_1MHO__ExtensibleElement" kindref="compound">MHO_ExtensibleElement</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="198" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a9fc105a344f6727aaf23620bbf8d8ee8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::~MHO_ContainerJSONConverter</definition>
        <argsstring>()</argsstring>
        <name>~MHO_ContainerJSONConverter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="203" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a9796188e4268fe2968a740701ca5d122" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::ConstructJSONRepresentation</definition>
        <argsstring>()</argsstring>
        <name>ConstructJSONRepresentation</name>
        <reimplements refid="classhops_1_1MHO__JSONConverter_1a89e172de6f0435480bdf7dd6a33e070d">ConstructJSONRepresentation</reimplements>
        <briefdescription>
<para>Constructs a JSON representation if fContainer is not nullptr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="217" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a80ec1f226ae4e00f35ba8f12584231ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::SetObjectToConvert</definition>
        <argsstring>(MHO_Serializable *obj)</argsstring>
        <name>SetObjectToConvert</name>
        <reimplements refid="classhops_1_1MHO__JSONConverter_1a40c1c51cc43b37e9a35a172d4e4c5ca6">SetObjectToConvert</reimplements>
        <param>
          <type><ref refid="classhops_1_1MHO__Serializable" kindref="compound">MHO_Serializable</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Setter for object to convert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an <ref refid="classhops_1_1MHO__Serializable" kindref="compound">MHO_Serializable</ref> object to be converted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="211" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="211" bodyend="211"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1ab1ff35e0a7d93972b2f6de3f39764426" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::ConstructJSON</definition>
        <argsstring>(const XCheckType *obj)</argsstring>
        <name>ConstructJSON</name>
        <param>
          <type>const XCheckType *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Constructs a JSON representation for an object of type XCheckType (unspecialized template doesn&apos;t do much) </para>
        </briefdescription>
        <detaileddescription>
<para>uses SFINAE to generate specialization for the rest of the container types <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the object of type XCheckType. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No return value (void) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="235" column="27" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="235" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a8c88da409c76fcf9b13de8fabad39eb2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XContainerType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_base_of&lt; <ref refid="classhops_1_1MHO__ScalarContainerBase" kindref="compound">MHO_ScalarContainerBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_base_of&lt; MHO_ScalarContainerBase, XCheckType &gt;::value, void &gt;::type hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::ConstructJSON</definition>
        <argsstring>(const XContainerType *obj)</argsstring>
        <name>ConstructJSON</name>
        <param>
          <type>const XContainerType *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Constructs a JSON representation for an XContainerType object (scalar specialization) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to const XContainerType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="257" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="257" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a2980a567a7f2344485316804c5efea52" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XContainerType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;(std::is_base_of&lt; <ref refid="classhops_1_1MHO__VectorContainerBase" kindref="compound">MHO_VectorContainerBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref> &amp;&amp;!std::is_base_of&lt; <ref refid="classhops_1_1MHO__AxisBase" kindref="compound">MHO_AxisBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>), void &gt;::type</type>
        <definition>std::enable_if&lt; (std::is_base_of&lt; MHO_VectorContainerBase, XCheckType &gt;::value &amp;&amp; !std::is_base_of&lt; MHO_AxisBase, XCheckType &gt;::value), void &gt;::type hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::ConstructJSON</definition>
        <argsstring>(const XContainerType *obj)</argsstring>
        <name>ConstructJSON</name>
        <param>
          <type>const XContainerType *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Constructs a JSON representation for an XContainerType object (vector specialization (but not an axis!)). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the const XContainerType object to construct JSON from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="303" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="303" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a6fde1b7f729bfde0dcbfc0f35c0b6501" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XContainerType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_base_of&lt; <ref refid="classhops_1_1MHO__AxisBase" kindref="compound">MHO_AxisBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_base_of&lt; MHO_AxisBase, XCheckType &gt;::value, void &gt;::type hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::ConstructJSON</definition>
        <argsstring>(const XContainerType *obj)</argsstring>
        <name>ConstructJSON</name>
        <param>
          <type>const XContainerType *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Constructs a JSON representation for an XContainerType object (axis specialization) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to const XContainerType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="353" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="353" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__ContainerJSONConverter_1a86d80e4a588eb89acd5a1596c688d51f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XCheckType</type>
            <defval>XContainerType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_base_of&lt; <ref refid="classhops_1_1MHO__TableContainerBase" kindref="compound">MHO_TableContainerBase</ref>, XCheckType &gt;::<ref refid="structvalue" kindref="compound">value</ref>, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_base_of&lt; MHO_TableContainerBase, XCheckType &gt;::value, void &gt;::type hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;::ConstructJSON</definition>
        <argsstring>(const XContainerType *obj)</argsstring>
        <name>ConstructJSON</name>
        <param>
          <type>const XContainerType *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Constructs a JSON representation for the given XContainerType object (table specialization). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>XCheckType</parametername>
</parameternamelist>
<parameterdescription>
<para>Template parameter XCheckType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the const XContainerType object to construct JSON from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="404" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="404" bodyend="455"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__ContainerJSONConverter" kindref="compound">MHO_ContainerJSONConverter</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Converts a given ndarray-based container into a JSON representation this isn&apos;t really intended for data transport/storage, but only as conversion to an ascii-like representation for human inspection/debugging.</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Fri Feb 18 14:17:16 2022 -0500</para>
</simplesect>
the (integer) code specifing the level-of-detail in the output is as follows: 0 = basic quantities (rank, dimensions, etc.) 1 = basic quantities plus tags 2 = basic quantities plus the axes (if the object is a table) 3 = basic quantities plus axes with interval labels 4 = everything including the main data array </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;</label>
        <link refid="classhops_1_1MHO__ContainerJSONConverter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_JSONConverter</label>
        <link refid="classhops_1_1MHO__JSONConverter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hops::MHO_ContainerJSONConverter&lt; XContainerType &gt;</label>
        <link refid="classhops_1_1MHO__ContainerJSONConverter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>size_t</label>
      </node>
      <node id="4">
        <label>json</label>
      </node>
      <node id="7">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="5">
        <label>int</label>
      </node>
      <node id="2">
        <label>hops::MHO_JSONConverter</label>
        <link refid="classhops_1_1MHO__JSONConverter"/>
        <childnode refid="3" relation="usage">
          <edgelabel>fRawData</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fJSON</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>fLOD</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>fRawDataDescriptor</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>fRank</edgelabel>
          <edgelabel>fRawByteSize</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>char</label>
      </node>
      <node id="6">
        <label>std::string</label>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" line="193" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_ContainerJSONConverter.hh" bodystart="194" bodyend="530"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1ab1ff35e0a7d93972b2f6de3f39764426" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>ConstructJSON</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a8c88da409c76fcf9b13de8fabad39eb2" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>ConstructJSON</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a2980a567a7f2344485316804c5efea52" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>ConstructJSON</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a6fde1b7f729bfde0dcbfc0f35c0b6501" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>ConstructJSON</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a86d80e4a588eb89acd5a1596c688d51f" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>ConstructJSON</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a9796188e4268fe2968a740701ca5d122" prot="public" virt="virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>ConstructJSONRepresentation</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a9e774cb49cb7fb032ad86821987f1c73" prot="private" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>fContainer</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a1b8b1d5ecd55fb532bb6e2b12ddb61e0" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>fJSON</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1ad6d7506e0f3676e7478e8a2a89a9bd4d" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>fLOD</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a8f22a55bb2839a2c3a1ae9089f1c11bc" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>fRank</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a38a1137a05406bad9433f80cd572fa6b" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>fRawByteSize</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a3fdd11944532fa4b0f2d3b96fae6f12b" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>fRawData</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a97d45380ecb3702466b67400e32e3bce" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>fRawDataDescriptor</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a9dc281927b4cd50592f68ed39fe00cd1" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>GetJSON</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a137869dcd46904f55e21ae8e54cd52e1" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>GetRank</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a94702a4b65d68f58a323eeac8b0fb51a" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>GetRawByteSize</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1aa5268e7d77a0f649f27ff8b510934a0b" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>GetRawData</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a490a45a64b7c659a78aa024a218dea42" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>GetRawDataDescriptor</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a41cfe939b30f7ece8c16a928a01dfdf5" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>InsertElement</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a04020490e7e2aab8fb08cea08198f7f0" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>InsertElement</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1af960dd80fcf74d1eef5d119bf73f9a9c" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>InsertElement</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1ab3dbf5a5c6bc07a12c0e98ace2af23b5" prot="protected" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>InsertElement</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a8aa02c252a1bbfc49159b5cd5abc6e5c" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>MHO_ContainerJSONConverter</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a64b889fedaa185df5a1f52cc877c2ea5" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>MHO_ContainerJSONConverter</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1a8af9bf1cd29605437f19736094e796c3" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>MHO_JSONConverter</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1aa70831eea197fc617bb6b25d55a7b3ad" prot="public" virt="non-virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>SetLevelOfDetail</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a80ec1f226ae4e00f35ba8f12584231ba" prot="public" virt="virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>SetObjectToConvert</name></member>
      <member refid="classhops_1_1MHO__ContainerJSONConverter_1a9fc105a344f6727aaf23620bbf8d8ee8" prot="public" virt="virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>~MHO_ContainerJSONConverter</name></member>
      <member refid="classhops_1_1MHO__JSONConverter_1ac873741fc2145cbe69b2a5df2d122bf3" prot="public" virt="virtual"><scope>hops::MHO_ContainerJSONConverter</scope><name>~MHO_JSONConverter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
