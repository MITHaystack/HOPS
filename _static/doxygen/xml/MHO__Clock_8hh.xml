<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="MHO__Clock_8hh" kind="file" language="C++">
    <compoundname>MHO_Clock.hh</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="yes">date/date.h</includes>
    <includes local="yes">date/tz.h</includes>
    <includes refid="MHO__Message_8hh" local="yes">MHO_Message.hh</includes>
    <includes refid="MHO__Tokenizer_8hh" local="yes">MHO_Tokenizer.hh</includes>
    <includes refid="legacy__hops__date_8hh" local="yes">legacy_hops_date.hh</includes>
    <includedby refid="MHO__DelayModel_8cc" local="yes">MHO_DelayModel.cc</includedby>
    <includedby refid="MHO__MultitonePhaseCorrection_8cc" local="yes">MHO_MultitonePhaseCorrection.cc</includedby>
    <includedby refid="MHO__PhaseCalibrationTrim_8cc" local="yes">MHO_PhaseCalibrationTrim.cc</includedby>
    <includedby refid="MHO__StationModel_8cc" local="yes">MHO_StationModel.cc</includedby>
    <includedby refid="MHO__DiFXTimeUtilities_8hh" local="yes">MHO_DiFXTimeUtilities.hh</includedby>
    <includedby refid="MHO__DiFXScanProcessor_8cc" local="yes">MHO_DiFXScanProcessor.cc</includedby>
    <includedby refid="MHO__AFileDefinitions_8hh" local="yes">MHO_AFileDefinitions.hh</includedby>
    <includedby refid="MHO__AFileInfoExtractor_8hh" local="yes">MHO_AFileInfoExtractor.hh</includedby>
    <includedby refid="MHO__BasicFringeInfo_8hh" local="yes">MHO_BasicFringeInfo.hh</includedby>
    <includedby refid="MHO__VexInfoExtractor_8hh" local="yes">MHO_VexInfoExtractor.hh</includedby>
    <includedby refid="MHO__InitialFringeInfo_8cc" local="yes">MHO_InitialFringeInfo.cc</includedby>
    <includedby refid="MHO__LegacyDateConverter_8cc" local="yes">MHO_LegacyDateConverter.cc</includedby>
    <incdepgraph>
      <node id="18">
        <label>atomic</label>
      </node>
      <node id="3">
        <label>iomanip</label>
      </node>
      <node id="28">
        <label>legacy_hops_date.hh</label>
        <link refid="legacy__hops__date_8hh"/>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>MHO_Clock.hh</label>
        <link refid="MHO__Clock_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stdexcept</label>
      </node>
      <node id="22">
        <label>MHO_Profiler.hh</label>
        <link refid="MHO__Profiler_8hh"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="7">
        <label>date/date.h</label>
      </node>
      <node id="9">
        <label>MHO_Message.hh</label>
        <link refid="MHO__Message_8hh"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ostream</label>
      </node>
      <node id="20">
        <label>MHO_TestAssertions.hh</label>
        <link refid="MHO__TestAssertions_8hh"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ctime</label>
      </node>
      <node id="25">
        <label>MHO_Timer.hh</label>
        <link refid="MHO__Timer_8hh"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>vector</label>
      </node>
      <node id="5">
        <label>sstream</label>
      </node>
      <node id="17">
        <label>MHO_SelfName.hh</label>
        <link refid="MHO__SelfName_8hh"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="10">
        <label>cstdlib</label>
      </node>
      <node id="27">
        <label>MHO_Tokenizer.hh</label>
        <link refid="MHO__Tokenizer_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>mutex</label>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
      <node id="19">
        <label>thread</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="8">
        <label>date/tz.h</label>
      </node>
      <node id="16">
        <label>stdio.h</label>
      </node>
      <node id="23">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="25">
        <label>MHO_IonosphericFringeFitter.cc</label>
        <link refid="MHO__IonosphericFringeFitter_8cc"/>
      </node>
      <node id="23">
        <label>MHO_BasicFringeFitter.cc</label>
        <link refid="MHO__BasicFringeFitter_8cc"/>
      </node>
      <node id="11">
        <label>TestVexStripper.cc</label>
        <link refid="TestVexStripper_8cc"/>
      </node>
      <node id="19">
        <label>MHO_AFileInfoExtractor.cc</label>
        <link refid="MHO__AFileInfoExtractor_8cc"/>
      </node>
      <node id="1">
        <label>MHO_Clock.hh</label>
        <link refid="MHO__Clock_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>MHO_AFileDefinitions.hh</label>
        <link refid="MHO__AFileDefinitions_8hh"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>MHO_DiFXScanProcessor.cc</label>
        <link refid="MHO__DiFXScanProcessor_8cc"/>
      </node>
      <node id="21">
        <label>MHO_BasicFringeInfo.hh</label>
        <link refid="MHO__BasicFringeInfo_8hh"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>MHO_BasicFringeUtilities.cc</label>
        <link refid="MHO__BasicFringeUtilities_8cc"/>
      </node>
      <node id="26">
        <label>MHO_BasicFringeInfo.cc</label>
        <link refid="MHO__BasicFringeInfo_8cc"/>
      </node>
      <node id="4">
        <label>MHO_PhaseCalibrationTrim.cc</label>
        <link refid="MHO__PhaseCalibrationTrim_8cc"/>
      </node>
      <node id="31">
        <label>MHO_BasicFringeDataConfiguration.cc</label>
        <link refid="MHO__BasicFringeDataConfiguration_8cc"/>
      </node>
      <node id="9">
        <label>MHO_DiFXInterface.hh</label>
        <link refid="MHO__DiFXInterface_8hh"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>alist4.cc</label>
        <link refid="alist4_8cc"/>
      </node>
      <node id="22">
        <label>MHO_BasicFringeUtilities.hh</label>
        <link refid="MHO__BasicFringeUtilities_8hh"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MHO_DelayModel.cc</label>
        <link refid="MHO__DelayModel_8cc"/>
      </node>
      <node id="5">
        <label>MHO_StationModel.cc</label>
        <link refid="MHO__StationModel_8cc"/>
      </node>
      <node id="29">
        <label>MHO_VexInfoExtractor.hh</label>
        <link refid="MHO__VexInfoExtractor_8hh"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>MHO_DiFXTimeUtilities.hh</label>
        <link refid="MHO__DiFXTimeUtilities_8hh"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>MHO_DiFXPCalProcessor.hh</label>
        <link refid="MHO__DiFXPCalProcessor_8hh"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>TestPCalExtraction.cc</label>
        <link refid="TestPCalExtraction_8cc"/>
      </node>
      <node id="28">
        <label>MHO_FringePlotInfo.cc</label>
        <link refid="MHO__FringePlotInfo_8cc"/>
      </node>
      <node id="10">
        <label>difx2hops.cc</label>
        <link refid="difx2hops_8cc"/>
      </node>
      <node id="27">
        <label>MHO_ComputePlotData.cc</label>
        <link refid="MHO__ComputePlotData_8cc"/>
      </node>
      <node id="14">
        <label>MHO_DiFXPCalProcessor.cc</label>
        <link refid="MHO__DiFXPCalProcessor_8cc"/>
      </node>
      <node id="18">
        <label>MHO_AFileDefinitions.cc</label>
        <link refid="MHO__AFileDefinitions_8cc"/>
      </node>
      <node id="35">
        <label>MHO_LegacyDateConverter.cc</label>
        <link refid="MHO__LegacyDateConverter_8cc"/>
      </node>
      <node id="32">
        <label>MHO_FringeControlInitialization.cc</label>
        <link refid="MHO__FringeControlInitialization_8cc"/>
      </node>
      <node id="33">
        <label>MHO_VexInfoExtractor.cc</label>
        <link refid="MHO__VexInfoExtractor_8cc"/>
      </node>
      <node id="8">
        <label>MHO_DiFXScanProcessor.hh</label>
        <link refid="MHO__DiFXScanProcessor_8hh"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>MHO_AFileInfoExtractor.hh</label>
        <link refid="MHO__AFileInfoExtractor_8hh"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>MHO_DiFXBaselineProcessor.cc</label>
        <link refid="MHO__DiFXBaselineProcessor_8cc"/>
      </node>
      <node id="3">
        <label>MHO_MultitonePhaseCorrection.cc</label>
        <link refid="MHO__MultitonePhaseCorrection_8cc"/>
      </node>
      <node id="12">
        <label>MHO_DiFXInterface.cc</label>
        <link refid="MHO__DiFXInterface_8cc"/>
      </node>
      <node id="34">
        <label>MHO_InitialFringeInfo.cc</label>
        <link refid="MHO__InitialFringeInfo_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classhops_1_1hops__clock" prot="public">hops::hops_clock</innerclass>
    <innerclass refid="structhops_1_1hops__clock_1_1vex__date" prot="private">hops::hops_clock::vex_date</innerclass>
    <innernamespace refid="namespacehops">hops</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="MHO__Clock_8hh_1a81e550374ce93284b055e48da70a0990" prot="public" static="no">
        <name>HOPS_TIME_DELIM</name>
        <initializer>&quot;|&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="21" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1aaabd95160a63c85bc1ff95b933d1a036" prot="public" static="no">
        <name>HOPS_TIME_UNIT</name>
        <initializer>&quot;ns&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="22" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1a665f4cfdcb1a37494f301db96131ea00" prot="public" static="no">
        <name>HOPS_TIMESTAMP_PREFIX</name>
        <initializer>&quot;HOPS-<ref refid="ovex_8h_1afd09200b4253bfff7b9a890591e09292" kindref="member">J2000</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="20" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1af2f145e27389a1b0cde64f4f337abd6d" prot="public" static="no">
        <name>HOUR_TO_SEC</name>
        <initializer>3600.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="27" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1a0001ca0d692c9870dab2338f5126f3ca" prot="public" static="no">
        <name>ISO8601_UTC_FORMAT</name>
        <initializer>&quot;%FT%TZ&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="19" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1a330bcf30b1ad9427b6785630e7b2e5a0" prot="public" static="no">
        <name>J2000_TAI_EPOCH</name>
        <initializer>&quot;2000-01-01 11:59:27.816&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="18" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1ad9490f8be7103e4eb3193fcc48ab338a" prot="public" static="no">
        <name>JD_TO_SEC</name>
        <initializer>86400.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="25" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1a44b9c115366d65e7869265266aed127b" prot="public" static="no">
        <name>MINUTE_TO_SEC</name>
        <initializer>60.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="26" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1aaa02606af4eb29405e241248231eeb94" prot="public" static="no">
        <name>NANOSEC_TO_SEC</name>
        <initializer>1e-9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="23" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="MHO__Clock_8hh_1a49797cb2f3ab42b693dba6492ab01d75" prot="public" static="no">
        <name>SEC_TO_NANOSEC</name>
        <initializer>1000000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" line="24" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MHO_Clock_HH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MHO_Clock_HH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//these<sp/>can<sp/>someday<sp/>be<sp/>replaced<sp/>with<sp/>STL<sp/>versions<sp/>in<sp/>C++20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;date/date.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;date/tz.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__Message_8hh" kindref="compound">MHO_Message.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MHO__Tokenizer_8hh" kindref="compound">MHO_Tokenizer.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="legacy__hops__date_8hh" kindref="compound">legacy_hops_date.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="MHO__Clock_8hh_1a330bcf30b1ad9427b6785630e7b2e5a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>J2000_TAI_EPOCH<sp/>&quot;2000-01-01<sp/>11:59:27.816&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="MHO__Clock_8hh_1a0001ca0d692c9870dab2338f5126f3ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISO8601_UTC_FORMAT<sp/>&quot;%FT%TZ&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="MHO__Clock_8hh_1a665f4cfdcb1a37494f301db96131ea00" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HOPS_TIMESTAMP_PREFIX<sp/>&quot;HOPS-J2000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="MHO__Clock_8hh_1a81e550374ce93284b055e48da70a0990" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HOPS_TIME_DELIM<sp/>&quot;|&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="MHO__Clock_8hh_1aaabd95160a63c85bc1ff95b933d1a036" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HOPS_TIME_UNIT<sp/>&quot;ns&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="MHO__Clock_8hh_1aaa02606af4eb29405e241248231eeb94" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NANOSEC_TO_SEC<sp/>1e-9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="MHO__Clock_8hh_1a49797cb2f3ab42b693dba6492ab01d75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEC_TO_NANOSEC<sp/>1000000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="MHO__Clock_8hh_1ad9490f8be7103e4eb3193fcc48ab338a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JD_TO_SEC<sp/>86400.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="MHO__Clock_8hh_1a44b9c115366d65e7869265266aed127b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MINUTE_TO_SEC<sp/>60.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="MHO__Clock_8hh_1af2f145e27389a1b0cde64f4f337abd6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HOUR_TO_SEC<sp/>3600.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehops" kindref="compound">hops</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classhops_1_1hops__clock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhops_1_1hops__clock" kindref="compound">hops_clock</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classhops_1_1hops__clock_1a6910f1e3ed23e39ad22b260945e90e57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a6910f1e3ed23e39ad22b260945e90e57" kindref="member">duration</ref><sp/>=<sp/>std::chrono::nanoseconds;</highlight></codeline>
<codeline lineno="46" refid="classhops_1_1hops__clock_1a7fab44e6a4ae0468fb33d7e5c2599e96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a7fab44e6a4ae0468fb33d7e5c2599e96" kindref="member">rep</ref><sp/>=<sp/>duration::rep;</highlight></codeline>
<codeline lineno="47" refid="classhops_1_1hops__clock_1a130ea45ecf5b5b8d0aa13fb8760e78c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a130ea45ecf5b5b8d0aa13fb8760e78c4" kindref="member">period</ref><sp/>=<sp/>duration::period;</highlight></codeline>
<codeline lineno="48" refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/>=<sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>std::chrono::nanoseconds<sp/>&gt;;</highlight></codeline>
<codeline lineno="49" refid="classhops_1_1hops__clock_1acf18fe6adcf80a2161ff05bcd02c2c68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1acf18fe6adcf80a2161ff05bcd02c2c68" kindref="member">is_steady</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a1c8305ede090e065acbcf4b21dd0fd9b" kindref="member">now</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::utc_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="67" refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="77" refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">from_utc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::utc_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::tai_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="87" refid="classhops_1_1hops__clock_1a1400f337099cdc1e4cdff0dcdbe01fdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1a1400f337099cdc1e4cdff0dcdbe01fdc" kindref="member">to_tai</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="97" refid="classhops_1_1hops__clock_1a660089f4448b21e1270195fd4bd352ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1a660089f4448b21e1270195fd4bd352ad" kindref="member">from_tai</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::tai_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::gps_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="107" refid="classhops_1_1hops__clock_1ac10933a1767b795b7c749aecf96b7a31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1ac10933a1767b795b7c749aecf96b7a31" kindref="member">to_gps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="117" refid="classhops_1_1hops__clock_1ab56fbf51ad88787fd61da0d1d69fa8e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1ab56fbf51ad88787fd61da0d1d69fa8e1" kindref="member">from_gps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::gps_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>std::chrono::system_clock,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="128" refid="classhops_1_1hops__clock_1a40255bc15b164e9a8b42335a87d0842d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1a40255bc15b164e9a8b42335a87d0842d" kindref="member">to_sys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="138" refid="classhops_1_1hops__clock_1a6b0b72452a92ea3b0c552f1957100200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1a6b0b72452a92ea3b0c552f1957100200" kindref="member">from_sys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>std::chrono::system_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::local_t,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="148" refid="classhops_1_1hops__clock_1a45083bcb173dfe30f47800f130674abb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1a45083bcb173dfe30f47800f130674abb" kindref="member">to_local</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="158" refid="classhops_1_1hops__clock_1af4156d76ad2604f15601f412b483ec87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1hops__clock_1af4156d76ad2604f15601f412b483ec87" kindref="member">from_local</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;<sp/>date::local_t,<sp/>Duration<sp/>&gt;&amp;)<sp/>NOEXCEPT;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a713e5a0c6a1d5a2534424d01bedcf883" kindref="member">from_iso8601_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhops_1_1hops__clock_1a49c203d7999ba785360e966637aa696c" kindref="member">to_iso8601_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a6c07ae1c8f2fc5268c71ba5029db4105" kindref="member">from_hops_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhops_1_1hops__clock_1ab1e911b8376b44297585d1167b6cb6ef" kindref="member">to_hops_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1adadc58ccd2e7d3e64898eac85e343a1c" kindref="member">from_legacy_hops_date</ref>(<ref refid="structhops_1_1legacy__hops__date" kindref="compound">legacy_hops_date</ref>&amp;<sp/>ldate);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhops_1_1legacy__hops__date" kindref="compound">legacy_hops_date</ref><sp/><ref refid="classhops_1_1hops__clock_1ad60c4477d2396644e37b5242ed9314a3" kindref="member">to_legacy_hops_date</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a8cb494b245492cc9eb66902058037bc2" kindref="member">from_vdif_format</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_epoch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_seconds);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a13fc6e7eed8278fa613acfb713708945" kindref="member">to_vdif_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_epoch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_second);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1afc9abdc870bc2ce4847a03e36ef9da90" kindref="member">from_mjd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>mjd_epoch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>epoch_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mjd);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a46a24fc77d218a7e0a7aca3a218ff043" kindref="member">to_mjd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>mjd_epoch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>epoch_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" kindref="member">from_vex_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhops_1_1hops__clock_1a8cc7394b4281c10218a3080e34161a40" kindref="member">to_vex_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncate_to_nearest_second<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a553fe032b7143b3588bb83baf7bf7297" kindref="member">from_year_fpday</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>floating_point_days);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1ad846689ae12098cea77e44de47132c09" kindref="member">to_year_fpday</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>year,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>floating_point_days);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classhops_1_1hops__clock_1a0a72be8009d445abb703aeb8caf94700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>date::utc_time&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/><ref refid="classhops_1_1hops__clock_1a0a72be8009d445abb703aeb8caf94700" kindref="member">get_hops_epoch_utc</ref>()</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>frmt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%F<sp/>%T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>j2000<sp/>=<sp/><ref refid="MHO__Clock_8hh_1a330bcf30b1ad9427b6785630e7b2e5a0" kindref="member">J2000_TAI_EPOCH</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>date::tai_time&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/>j2000_tai_epoch;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>ss(j2000);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istream<sp/>stream(ss.rdbuf());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a1fdde9fc3b75f424635db92c8f07f54c" kindref="member">date::from_stream</ref>(stream,<sp/>frmt.c_str(),<sp/>j2000_tai_epoch);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::time_point_cast&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;(date::tai_clock::to_utc(j2000_tai_epoch));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classhops_1_1hops__clock_1a0f0b8bd39563c97fe52d1c8e9d92026c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a0f0b8bd39563c97fe52d1c8e9d92026c" kindref="member">get_hops_epoch</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">from_utc</ref>(<ref refid="classhops_1_1hops__clock_1a0a72be8009d445abb703aeb8caf94700" kindref="member">get_hops_epoch_utc</ref>());<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classhops_1_1hops__clock_1ab8aa1400707003acbe5282b5363dd88c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::chrono::seconds<sp/><ref refid="classhops_1_1hops__clock_1ab8aa1400707003acbe5282b5363dd88c" kindref="member">get_leap_seconds_between</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>t_start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>t_end)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_start_utc<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(t_start);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_end_utc<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(t_end);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lp_info0<sp/>=<sp/>date::get_leap_second_info(t_start_utc);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lp_info1<sp/>=<sp/>date::get_leap_second_info(t_end_utc);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>lp_info1.elapsed.count()<sp/>-<sp/>lp_info0.elapsed.count();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::seconds(delta);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>date::days<sp/>day_of_year(date::sys_days<sp/>sd)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>date::year_month_day{sd}.<ref refid="structdate_1aef68a8508dda64a80f5fe08202e0da4c" kindref="member">year</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sd<sp/>-<sp/>date::sys_days{y<sp/>/<sp/>jan<sp/>/<sp/>0};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>date::sys_days<sp/>get_year_month_day(<ref refid="structdate_1aef68a8508dda64a80f5fe08202e0da4c" kindref="member">date::year</ref><sp/>y,<sp/>date::days<sp/>ord_day)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date::sys_days{y<sp/>/<sp/>jan<sp/>/<sp/>0}<sp/>+<sp/>ord_day;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">vex_date</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day_of_year;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hours;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vex_date<sp/>extract_vex_date(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>vex_date_to_iso8601_string(vex_date<sp/>vdate);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vex_date<sp/>vex_date_from_legacy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>legacy_hops_date&amp;<sp/>legacy_date);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>remove_trailing_zeros(std::string<sp/><ref refid="structvalue" kindref="compound">value</ref>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>nzeros_on_end<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rit<sp/>=<sp/><ref refid="structvalue" kindref="compound">value</ref>.rbegin();<sp/>rit<sp/>!=<sp/><ref refid="structvalue" kindref="compound">value</ref>.rend();<sp/>rit++)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*rit<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzeros_on_end++;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>useful_length<sp/>=<sp/><ref refid="structvalue" kindref="compound">value</ref>.size()<sp/>-<sp/>nzeros_on_end;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ret_val;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>useful_length;<sp/>i++)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val.push_back(<ref refid="structvalue" kindref="compound">value</ref>[i]);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal">};</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time</ref><sp/>=<sp/>std::chrono::time_point&lt;<sp/>hops_clock,<sp/>Duration<sp/>&gt;;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>date::utc_time&lt;<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="396" refid="classhops_1_1hops__clock_1a3b9b84231d51090aa18783cc2421e802" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">hops_clock::to_utc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; Duration &gt;</ref>&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CD<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>date::utc_time&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/>hops_epoch_start<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a0a72be8009d445abb703aeb8caf94700" kindref="member">get_hops_epoch_utc</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date::utc_time&lt;<sp/>CD<sp/>&gt;(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>.time_since_epoch()<sp/>+<sp/>hops_epoch_start.time_since_epoch());</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="412" refid="classhops_1_1hops__clock_1a2040f47f90bcdae7cf62e693ff070fbc" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">hops_clock::from_utc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>date::utc_time&lt;<sp/>Duration<sp/>&gt;&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CD<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>date::utc_time&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/>hops_epoch_start<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a0a72be8009d445abb703aeb8caf94700" kindref="member">get_hops_epoch_utc</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; CD &gt;</ref>(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>.time_since_epoch()<sp/>-<sp/>hops_epoch_start.time_since_epoch());</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>date::tai_time&lt;<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="427" refid="classhops_1_1hops__clock_1abf07beb7b22ce74b8d59e422c5f86f38" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1a1400f337099cdc1e4cdff0dcdbe01fdc" kindref="member">hops_clock::to_tai</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; Duration &gt;</ref>&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date::tai_clock::from_utc(<ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>));</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="440" refid="classhops_1_1hops__clock_1aa6b72ca4a25a69d6e0956948751902cd" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1a660089f4448b21e1270195fd4bd352ad" kindref="member">hops_clock::from_tai</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>date::tai_time&lt;<sp/>Duration<sp/>&gt;&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">from_utc</ref>(date::tai_clock::to_utc(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>));</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>date::gps_time&lt;<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="453" refid="classhops_1_1hops__clock_1a410fba4e0a92fdf868f7b0b385d26e15" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1ac10933a1767b795b7c749aecf96b7a31" kindref="member">hops_clock::to_gps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; Duration &gt;</ref>&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date::gps_clock::from_utc(<ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>));</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="466" refid="classhops_1_1hops__clock_1a4566c9a8390dd4e90de11353e5ccc714" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1ab56fbf51ad88787fd61da0d1d69fa8e1" kindref="member">hops_clock::from_gps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>date::gps_time&lt;<sp/>Duration<sp/>&gt;&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">from_utc</ref>(date::gps_clock::to_utc(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>));</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>date::sys_time&lt;<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="479" refid="classhops_1_1hops__clock_1a1ae1bb7a156bef8cc2e0f9487a6e3e59" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1a40255bc15b164e9a8b42335a87d0842d" kindref="member">hops_clock::to_sys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; Duration &gt;</ref>&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date::utc_clock::to_sys(<ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>));</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="492" refid="classhops_1_1hops__clock_1a5a41602506a33f32326f963641b38a44" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1a6b0b72452a92ea3b0c552f1957100200" kindref="member">hops_clock::from_sys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>date::sys_time&lt;<sp/>Duration<sp/>&gt;&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">from_utc</ref>(date::utc_clock::from_sys(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>));</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="classhops_1_1hops__clock_1a1c8305ede090e065acbcf4b21dd0fd9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a1c8305ede090e065acbcf4b21dd0fd9b" kindref="member">hops_clock::now</ref>()</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">from_utc</ref>(date::utc_clock::now());</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>date::local_time&lt;<sp/>typename<sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="515" refid="classhops_1_1hops__clock_1ad5f1bb94b821435bc44fadd65d7d63d4" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1a45083bcb173dfe30f47800f130674abb" kindref="member">hops_clock::to_local</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; Duration &gt;</ref>&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CD<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>date::utc_time&lt;<sp/>CD<sp/>&gt;<sp/>hops_epoch_start<sp/>=<sp/>std::chrono::time_point_cast&lt;<sp/>CD<sp/>&gt;(<ref refid="classhops_1_1hops__clock_1a0a72be8009d445abb703aeb8caf94700" kindref="member">get_hops_epoch_utc</ref>());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>date::utc_time&lt;<sp/>CD<sp/>&gt;<sp/>ut_time{<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>.time_since_epoch()<sp/>+</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::time_point_cast&lt;<sp/>Duration<sp/>&gt;(hops_epoch_start).time_since_epoch()};</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date::utc_clock::to_local(ut_time);</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; typename std::common_type&lt; Duration, std::chrono::nanoseconds &gt;::type</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="532" refid="classhops_1_1hops__clock_1a05f3ce0943c260a61b40fd1eef9c62e9" refkind="member"><highlight class="normal"><ref refid="classhops_1_1hops__clock_1af4156d76ad2604f15601f412b483ec87" kindref="member">hops_clock::from_local</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>date::local_time&lt;<sp/>Duration<sp/>&gt;&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)<sp/>NOEXCEPT</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CD<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::common_type&lt;<sp/>Duration,<sp/>std::chrono::nanoseconds<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>date::utc_time&lt;<sp/>CD<sp/>&gt;<sp/>t2<sp/>=<sp/>date::utc_clock::from_local(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>date::utc_time&lt;<sp/>CD<sp/>&gt;<sp/>hops_epoch_start<sp/>=<sp/>std::chrono::time_point_cast&lt;<sp/>CD<sp/>&gt;(<ref refid="classhops_1_1hops__clock_1a0a72be8009d445abb703aeb8caf94700" kindref="member">get_hops_epoch_utc</ref>());</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; CD &gt;</ref>{t2.time_since_epoch()<sp/>-</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::time_point_cast&lt;<sp/>Duration<sp/>&gt;(hops_epoch_start).time_since_epoch()};</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CharT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="553" refid="namespacehops_1ae6072705dd8a3df2c27db3e3af380e7a" refkind="member"><highlight class="normal">std::basic_ostream&lt;<sp/>CharT,<sp/>Traits<sp/>&gt;&amp;<sp/><ref refid="namespacehops_1ae6072705dd8a3df2c27db3e3af380e7a" kindref="member">to_stream</ref>(std::basic_ostream&lt;<sp/>CharT,<sp/>Traits<sp/>&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharT*<sp/>fmt,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; Duration &gt;</ref>&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>abbrev(</highlight><highlight class="stringliteral">&quot;HOPS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>CONSTDATA<sp/>std::chrono::seconds<sp/>offset{0};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae6072705dd8a3df2c27db3e3af380e7a" kindref="member">date::to_stream</ref>(os,<sp/>fmt,<sp/><ref refid="classhops_1_1hops__clock_1a45083bcb173dfe30f47800f130674abb" kindref="member">hops_clock::to_local</ref>(<ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>),<sp/>&amp;abbrev,<sp/>&amp;offset);</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CharT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Alloc<sp/>=<sp/>std::allocator&lt;<sp/>CharT<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">std::basic_istream&lt;<sp/>CharT,<sp/>Traits<sp/>&gt;&amp;</highlight></codeline>
<codeline lineno="576" refid="namespacehops_1a1fdde9fc3b75f424635db92c8f07f54c" refkind="member"><highlight class="normal"><ref refid="namespacehops_1a1fdde9fc3b75f424635db92c8f07f54c" kindref="member">from_stream</ref>(std::basic_istream&lt;<sp/>CharT,<sp/>Traits<sp/>&gt;&amp;<sp/>is,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharT*<sp/>fmt,<sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; Duration &gt;</ref>&amp;<sp/>tp,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::basic_string&lt;<sp/>CharT,<sp/>Traits,<sp/>Alloc<sp/>&gt;*<sp/>abbrev<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>std::chrono::minutes*<sp/>offset<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>date::local_time&lt;<sp/>Duration<sp/>&gt;<sp/>lp;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a1fdde9fc3b75f424635db92c8f07f54c" kindref="member">from_stream</ref>(is,<sp/>fmt,<sp/>lp,<sp/>abbrev,<sp/>offset);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!is.fail())</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1af4156d76ad2604f15601f412b483ec87" kindref="member">hops_clock::from_local</ref>(lp);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CharT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Duration<sp/>&gt;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">std::basic_ostream&lt;<sp/>CharT,<sp/>Traits<sp/>&gt;&amp;<sp/><ref refid="namespacehops_1a174940b00c57da6d7b0e8d51ba70e21a" kindref="member">operator&lt;&lt;</ref>(std::basic_ostream&lt;<sp/>CharT,<sp/>Traits<sp/>&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hops_time&lt;<sp/>Duration<sp/>&gt;&amp;<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharT<sp/>fmt[]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">,<sp/>CharT{}};</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehops_1ae6072705dd8a3df2c27db3e3af380e7a" kindref="member">to_stream</ref>(os,<sp/>fmt,<sp/><ref refid="namespacehops__visualization_1_1picking__aedit_1a50488c776a6d29c2e11aab0f907f5a04" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="classhops_1_1hops__clock_1a713e5a0c6a1d5a2534424d01bedcf883" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a713e5a0c6a1d5a2534424d01bedcf883" kindref="member">hops_clock::from_iso8601_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>frmt<sp/>=<sp/><ref refid="MHO__Clock_8hh_1a0001ca0d692c9870dab2338f5126f3ca" kindref="member">ISO8601_UTC_FORMAT</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>ss(timestamp);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istream<sp/>tmp_stream(ss.rdbuf());</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1ae184e4a1cc248eab7c662c73f3817df0" kindref="member">hops_time&lt; std::chrono::nanoseconds &gt;</ref><sp/>hops_tp;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehops_1a1fdde9fc3b75f424635db92c8f07f54c" kindref="member">from_stream</ref>(tmp_stream,<sp/>frmt.c_str(),<sp/>hops_tp);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hops_tp;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="classhops_1_1hops__clock_1a49c203d7999ba785360e966637aa696c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhops_1_1hops__clock_1a49c203d7999ba785360e966637aa696c" kindref="member">hops_clock::to_iso8601_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>tp;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="classhops_1_1hops__clock_1a6c07ae1c8f2fc5268c71ba5029db4105" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a6c07ae1c8f2fc5268c71ba5029db4105" kindref="member">hops_clock::from_hops_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__Tokenizer" kindref="compound">MHO_Tokenizer</ref><sp/>tokenizer;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.<ref refid="classhops_1_1MHO__Tokenizer_1acaa09bc7d82e81eaa5a87933c3c5a8b9" kindref="member">SetDelimiter</ref>(std::string(<ref refid="MHO__Clock_8hh_1a81e550374ce93284b055e48da70a0990" kindref="member">HOPS_TIME_DELIM</ref>));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.<ref refid="classhops_1_1MHO__Tokenizer_1a4138c473b9f7b0e7069adafa6f1be422" kindref="member">SetString</ref>(&amp;timestamp);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.<ref refid="classhops_1_1MHO__Tokenizer_1a46de3362dee2b53c0451e6fe24640730" kindref="member">GetTokens</ref>(&amp;<ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>.size()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>hops_prefix<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[0];</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[1];</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>nanosecond_count<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[2];</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hops_prefix<sp/>==<sp/>std::string(<ref refid="MHO__Clock_8hh_1a665f4cfdcb1a37494f301db96131ea00" kindref="member">HOPS_TIMESTAMP_PREFIX</ref>)<sp/>&amp;&amp;<sp/>unit<sp/>==<sp/>std::string(<ref refid="MHO__Clock_8hh_1aaabd95160a63c85bc1ff95b933d1a036" kindref="member">HOPS_TIME_UNIT</ref>))</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>nanosecond_count;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classint64__t" kindref="compound">int64_t</ref><sp/>ns;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>ns;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>(std::chrono::nanoseconds(ns));</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;utility&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hops<sp/>timestamp<sp/>string<sp/>not<sp/>understood<sp/>or<sp/>supported,<sp/>returning<sp/>epoch<sp/>start.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>(std::chrono::nanoseconds(0));</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="classhops_1_1hops__clock_1ab1e911b8376b44297585d1167b6cb6ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhops_1_1hops__clock_1ab1e911b8376b44297585d1167b6cb6ef" kindref="member">hops_clock::to_hops_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="MHO__Clock_8hh_1a665f4cfdcb1a37494f301db96131ea00" kindref="member">HOPS_TIMESTAMP_PREFIX</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="MHO__Clock_8hh_1a81e550374ce93284b055e48da70a0990" kindref="member">HOPS_TIME_DELIM</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="MHO__Clock_8hh_1aaabd95160a63c85bc1ff95b933d1a036" kindref="member">HOPS_TIME_UNIT</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="MHO__Clock_8hh_1a81e550374ce93284b055e48da70a0990" kindref="member">HOPS_TIME_DELIM</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>tp.time_since_epoch().count();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="classhops_1_1hops__clock_1adadc58ccd2e7d3e64898eac85e343a1c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1adadc58ccd2e7d3e64898eac85e343a1c" kindref="member">hops_clock::from_legacy_hops_date</ref>(<ref refid="structhops_1_1legacy__hops__date" kindref="compound">legacy_hops_date</ref>&amp;<sp/>ldate)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>vex_date<sp/>vdate<sp/>=<sp/>vex_date_from_legacy(ldate);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>vex_as_iso8601<sp/>=<sp/>vex_date_to_iso8601_string(vdate);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a713e5a0c6a1d5a2534424d01bedcf883" kindref="member">hops_clock::from_iso8601_format</ref>(vex_as_iso8601);</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="classhops_1_1hops__clock_1ad60c4477d2396644e37b5242ed9314a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhops_1_1legacy__hops__date" kindref="compound">legacy_hops_date</ref><sp/><ref refid="classhops_1_1hops__clock_1ad60c4477d2396644e37b5242ed9314a3" kindref="member">hops_clock::to_legacy_hops_date</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>time<sp/>point<sp/>to<sp/>sys<sp/>time,<sp/>and<sp/>extract<sp/>the<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sys_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a40255bc15b164e9a8b42335a87d0842d" kindref="member">hops_clock::to_sys</ref>(tp);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dp<sp/>=<sp/>date::sys_days(floor&lt;<sp/>date::days<sp/>&gt;(sys_tp));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>all<sp/>of<sp/>the<sp/>date<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>date::year_month_day<sp/>ymd{dp};</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>year<sp/>=<sp/>ymd.year();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>ordinal<sp/>day<sp/>of<sp/>the<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ordinal_day<sp/>=<sp/>day_of_year(dp);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>date::hh_mm_ss&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/>time{floor&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;(sys_tp<sp/>-<sp/>dp)};</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hours<sp/>=<sp/>time.hours();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mins<sp/>=<sp/>time.minutes();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>secs<sp/>=<sp/>time.seconds();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nanos<sp/>=<sp/>time.subseconds();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhops_1_1legacy__hops__date" kindref="compound">legacy_hops_date</ref><sp/>ldate;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1af8ea39baf3e849a9672f0b0efdfe6a41" kindref="member">year</ref><sp/>=<sp/>(int)year;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1ad6060d245f487b3018ab0c6f10f9667b" kindref="member">day</ref><sp/>=<sp/>ordinal_day.count();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1a196b8358e57bb4c420b2c7934f3c2de0" kindref="member">hour</ref><sp/>=<sp/>hours.count();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1aafdb5961700ec866f7fdfe924f79ff3f" kindref="member">minute</ref><sp/>=<sp/>mins.count();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//note<sp/>there<sp/>may<sp/>be<sp/>loss<sp/>of<sp/>precision<sp/>when<sp/>converting<sp/>to/from<sp/>the<sp/>actual<sp/>legacy<sp/>struct<sp/>(single<sp/>precision)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1af302fe04f95994e28a1f909fc35df889" kindref="member">second</ref><sp/>=<sp/>(double)secs.count()<sp/>+<sp/>((double)(nanos.count()))<sp/>*<sp/><ref refid="MHO__Clock_8hh_1aaa02606af4eb29405e241248231eeb94" kindref="member">NANOSEC_TO_SEC</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ldate;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//needed<sp/>for<sp/>ad_hoc<sp/>flag<sp/>files<sp/>(time-stamps<sp/>are<sp/>given<sp/>in<sp/>floating-point<sp/>days)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="classhops_1_1hops__clock_1a553fe032b7143b3588bb83baf7bf7297" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a553fe032b7143b3588bb83baf7bf7297" kindref="member">hops_clock::from_year_fpday</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>floating_point_days)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_days<sp/>=<sp/>(int)<sp/>floating_point_days;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fractional_day<sp/>=<sp/>floating_point_days<sp/>-<sp/>integer_days;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_hours<sp/>=<sp/>(int)<sp/>24*fractional_day;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fractional_hour<sp/>=<sp/>24*fractional_day<sp/>-<sp/>integer_hours;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_minutes<sp/>=<sp/>(int)<sp/>60*fractional_hour;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fractional_seconds<sp/>=<sp/>(60*fractional_hour<sp/>-<sp/>integer_minutes)*60;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>co-opt<sp/>the<sp/>legacy<sp/>date<sp/>format<sp/>to<sp/>handle<sp/>this<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhops_1_1legacy__hops__date" kindref="compound">legacy_hops_date</ref><sp/>ldate;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1af8ea39baf3e849a9672f0b0efdfe6a41" kindref="member">year</ref><sp/>=<sp/>(short)<sp/>year;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1ad6060d245f487b3018ab0c6f10f9667b" kindref="member">day</ref><sp/>=<sp/>(short)<sp/>integer_days<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//note:<sp/>ordinal<sp/>day<sp/>count<sp/>starts<sp/>at<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1a196b8358e57bb4c420b2c7934f3c2de0" kindref="member">hour</ref><sp/>=<sp/>(short)<sp/>integer_hours;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1aafdb5961700ec866f7fdfe924f79ff3f" kindref="member">minute</ref><sp/>=<sp/>(short)<sp/>integer_minutes;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>ldate.<ref refid="structhops_1_1legacy__hops__date_1af302fe04f95994e28a1f909fc35df889" kindref="member">second</ref><sp/>=<sp/>fractional_seconds;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1adadc58ccd2e7d3e64898eac85e343a1c" kindref="member">from_legacy_hops_date</ref>(ldate);</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="classhops_1_1hops__clock_1ad846689ae12098cea77e44de47132c09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1ad846689ae12098cea77e44de47132c09" kindref="member">hops_clock::to_year_fpday</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref>&amp;<sp/>tp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>year,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>floating_point_days)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>time<sp/>point<sp/>to<sp/>sys<sp/>time,<sp/>and<sp/>extract<sp/>the<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sys_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a40255bc15b164e9a8b42335a87d0842d" kindref="member">hops_clock::to_sys</ref>(tp);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dp<sp/>=<sp/>sys_days(floor&lt;<sp/>date::days<sp/>&gt;(sys_tp));</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>all<sp/>of<sp/>the<sp/>date<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>year_month_day<sp/>ymd{dp};</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>year_value<sp/>=<sp/>ymd.year();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>ordinal<sp/>day<sp/>of<sp/>the<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ordinal_day<sp/>=<sp/>day_of_year(dp);<sp/></highlight><highlight class="comment">//note:<sp/>count<sp/>starts<sp/>at<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_days<sp/>=<sp/>ordinal_day.count()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>time<sp/>and<sp/>convert<sp/>to<sp/>fractional<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>hh_mm_ss&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/>time{floor&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;(sys_tp<sp/>-<sp/>dp)};</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihours<sp/>=<sp/>time.hours().count();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imins<sp/>=<sp/>time.minutes().count();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isecs<sp/>=<sp/>time.seconds().count();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inanos<sp/>=<sp/>time.subseconds().count();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac_day<sp/>=<sp/>(inanos*<ref refid="MHO__Clock_8hh_1aaa02606af4eb29405e241248231eeb94" kindref="member">NANOSEC_TO_SEC</ref><sp/>+<sp/>isecs<sp/>+<sp/><ref refid="MHO__Clock_8hh_1a44b9c115366d65e7869265266aed127b" kindref="member">MINUTE_TO_SEC</ref>*imins<sp/>+<sp/><ref refid="MHO__Clock_8hh_1af2f145e27389a1b0cde64f4f337abd6d" kindref="member">HOUR_TO_SEC</ref>*ihours)/(<ref refid="MHO__Clock_8hh_1ad9490f8be7103e4eb3193fcc48ab338a" kindref="member">JD_TO_SEC</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>floating_point_days<sp/>=<sp/>integer_days<sp/>+<sp/><sp/>frac_day;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="classhops_1_1hops__clock_1afc9abdc870bc2ce4847a03e36ef9da90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1afc9abdc870bc2ce4847a03e36ef9da90" kindref="member">hops_clock::from_mjd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>mjd_epoch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>epoch_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mjd)</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>(mjd<sp/>-<sp/>epoch_offset);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>*=<sp/><ref refid="MHO__Clock_8hh_1ad9490f8be7103e4eb3193fcc48ab338a" kindref="member">JD_TO_SEC</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::duration&lt;<sp/>double<sp/>&gt;<sp/>duration_seconds(delta);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mjd_epoch_utc<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(mjd_epoch);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>utc_time_point<sp/>=<sp/>mjd_epoch_utc<sp/>+<sp/>std::chrono::duration_cast&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;(duration_seconds);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hops_time_point<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1aef12074d911d5a1cf770ded3041ec3b0" kindref="member">from_utc</ref>(utc_time_point);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hops_time_point;</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="classhops_1_1hops__clock_1a46a24fc77d218a7e0a7aca3a218ff043" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a46a24fc77d218a7e0a7aca3a218ff043" kindref="member">hops_clock::to_mjd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>mjd_epoch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>epoch_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mjd_epoch_utc<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(mjd_epoch);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tp_utc<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1afe5644e179f0992dce54a0048f18c14f" kindref="member">to_utc</ref>(tp);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>(tp_utc<sp/>-<sp/>mjd_epoch_utc).count();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>*=<sp/><ref refid="MHO__Clock_8hh_1aaa02606af4eb29405e241248231eeb94" kindref="member">NANOSEC_TO_SEC</ref>;<sp/></highlight><highlight class="comment">//convert<sp/>to<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>/=<sp/><ref refid="MHO__Clock_8hh_1ad9490f8be7103e4eb3193fcc48ab338a" kindref="member">JD_TO_SEC</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>to<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>+=<sp/>epoch_offset;<sp/><sp/><sp/></highlight><highlight class="comment">//subtract<sp/>epoch<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1ab45cd57f0e69c03f868d18626a1f56c1" kindref="member">hops_clock::from_vex_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>vex_date<sp/>vdate<sp/>=<sp/>hops_clock::extract_vex_date(timestamp);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>vex<sp/>date<sp/>info<sp/>to<sp/>an<sp/>ISO-8601-style<sp/>year-month-day<sp/>type<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>vex_as_iso8601<sp/>=<sp/>vex_date_to_iso8601_string(vdate);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a713e5a0c6a1d5a2534424d01bedcf883" kindref="member">hops_clock::from_iso8601_format</ref>(vex_as_iso8601);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="classhops_1_1hops__clock_1a8cc7394b4281c10218a3080e34161a40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhops_1_1hops__clock_1a8cc7394b4281c10218a3080e34161a40" kindref="member">hops_clock::to_vex_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncate_to_nearest_second)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>time<sp/>point<sp/>to<sp/>sys<sp/>time,<sp/>and<sp/>extract<sp/>the<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sys_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a40255bc15b164e9a8b42335a87d0842d" kindref="member">hops_clock::to_sys</ref>(tp);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dp<sp/>=<sp/>sys_days(floor&lt;<sp/>date::days<sp/>&gt;(sys_tp));</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>all<sp/>of<sp/>the<sp/>date<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>year_month_day<sp/>ymd{dp};</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>year<sp/>=<sp/>ymd.year();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>month<sp/>=<sp/>ymd.month();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>day<sp/>=<sp/>ymd.day();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>ordinal<sp/>day<sp/>of<sp/>the<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ordinal_day<sp/>=<sp/>day_of_year(dp);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>hh_mm_ss&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/>time{floor&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;(sys_tp<sp/>-<sp/>dp)};</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hours<sp/>=<sp/>time.hours();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mins<sp/>=<sp/>time.minutes();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>secs<sp/>=<sp/>time.seconds();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nanos<sp/>=<sp/>time.subseconds();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>year,<sp/>day-of-year,<sp/>hour,<sp/>minute,<sp/>and<sp/>integer<sp/>sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//are<sp/>all<sp/>preprended<sp/>with<sp/>the<sp/>proper<sp/>number<sp/>of<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>year;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(3)<sp/>&lt;&lt;<sp/>ordinal_day.count();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>hours.count();</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>mins.count();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>secs.count();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!truncate_to_nearest_second)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>nss;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(9)<sp/>&lt;&lt;<sp/>nanos.count();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>snano_sec;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nss<sp/>&gt;&gt;<sp/>snano_sec;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>trimmed_nanosec<sp/>=<sp/>remove_trailing_zeros(snano_sec);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trimmed_nanosec.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>trimmed_nanosec;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854" refid="classhops_1_1hops__clock_1a13fc6e7eed8278fa613acfb713708945" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a13fc6e7eed8278fa613acfb713708945" kindref="member">hops_clock::to_vdif_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">time_point</ref>&amp;<sp/>tp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_epoch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_seconds)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>time<sp/>point<sp/>to<sp/>sys<sp/>time,<sp/>and<sp/>extract<sp/>the<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sys_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a40255bc15b164e9a8b42335a87d0842d" kindref="member">hops_clock::to_sys</ref>(tp);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dp<sp/>=<sp/>sys_days(floor&lt;<sp/>date::days<sp/>&gt;(sys_tp));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>all<sp/>of<sp/>the<sp/>date<sp/>information<sp/>so<sp/>we<sp/>can<sp/>figure<sp/>out<sp/>the<sp/>epoch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>year_month_day<sp/>ymd{dp};</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>year<sp/>=<sp/>ymd.year();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>month<sp/>=<sp/>ymd.month();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>ymd.day();</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(we<sp/>have<sp/>two<sp/>6<sp/>month<sp/>epochs<sp/>per<sp/>year,<sp/>and<sp/>count<sp/>from<sp/>start<sp/>of<sp/>century)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iyear<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(year);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imonth<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(month);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>epoch<sp/>=<sp/>(iyear<sp/>%<sp/>100)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>figure<sp/>out<sp/>if<sp/>we<sp/>are<sp/>using<sp/>the<sp/>Jan<sp/>1st<sp/>epoch,<sp/>or<sp/>the<sp/>July<sp/>1st<sp/>epoch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(imonth<sp/>&lt;<sp/>7)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imonth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epoch<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imonth<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>day<sp/>to<sp/>the<sp/>first<sp/>of<sp/>the<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>day<sp/>=<sp/><ref refid="structdate_1aad570045b0c46ad2ec1333516b19d826" kindref="member">date::day</ref>(1);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hours<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>figure<sp/>out<sp/>the<sp/>epoch<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//may<sp/>want<sp/>to<sp/>eliminate<sp/>string<sp/>conversion<sp/>in<sp/>favor<sp/>of<sp/>something<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>iyear;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>imonth;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(&apos;0&apos;)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>static_cast&lt;<sp/>unsigned<sp/>int<sp/>&gt;(day);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>hours;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>minutes;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>integer_sec;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>epoch_iso8601<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>epoch_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a713e5a0c6a1d5a2534424d01bedcf883" kindref="member">from_iso8601_format</ref>(epoch_iso8601);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secs<sp/>=<sp/>std::chrono::duration_cast&lt;<sp/>std::chrono::seconds<sp/>&gt;(tp<sp/>-<sp/>epoch_tp).count();</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>vdif_epoch<sp/>=<sp/>epoch;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>vdif_seconds<sp/>=<sp/>secs;</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913" refid="classhops_1_1hops__clock_1a8cb494b245492cc9eb66902058037bc2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1hops__clock_1a21a513378bd0cfabf00044b8546c0e35" kindref="member">hops_clock::time_point</ref><sp/><ref refid="classhops_1_1hops__clock_1a8cb494b245492cc9eb66902058037bc2" kindref="member">hops_clock::from_vdif_format</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_epoch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>vdif_seconds)</highlight></codeline>
<codeline lineno="914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_year<sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_years<sp/>=<sp/>std::floor(vdif_epoch<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iyear<sp/>=<sp/>start_year<sp/>+<sp/>n_years;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;n_years<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n_years<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>iyear<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iyear<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imonth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vdif_epoch<sp/>%<sp/>2<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imonth<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//second<sp/>half<sp/>of<sp/>the<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iday<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hours<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>figure<sp/>out<sp/>the<sp/>epoch<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//may<sp/>want<sp/>to<sp/>eliminate<sp/>string<sp/>conversion<sp/>in<sp/>favor<sp/>of<sp/>something<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>iyear;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>imonth;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>iday;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>hours;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>minutes;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>integer_sec;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>epoch_iso8601<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;epoch<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>epoch_iso8601<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>epoch_tp<sp/>=<sp/><ref refid="classhops_1_1hops__clock_1a713e5a0c6a1d5a2534424d01bedcf883" kindref="member">from_iso8601_format</ref>(epoch_iso8601);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tp<sp/>=<sp/>epoch_tp<sp/>+<sp/>std::chrono::seconds(vdif_seconds);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tp;</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>hops_clock::vex_date<sp/>hops_clock::extract_vex_date(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>timestamp)</highlight></codeline>
<codeline lineno="957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>vex_date<sp/>vdate;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timestamp.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="MHO__Message_8hh_1acd8d50c6722941e40e21c59ffba48011" kindref="member">msg_error</ref>(</highlight><highlight class="stringliteral">&quot;utilities&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>extract<sp/>vex<sp/>date<sp/>from<sp/>empty<sp/>string.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eom);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vdate;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>MHO_Tokenizer<sp/>tokenizer;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rest;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>syear,<sp/>sord_day,<sp/>shour,<sp/>smin,<sp/>ssec;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetDelimiter(std::string(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetString(&amp;timestamp);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.GetTokens(&amp;<ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>syear<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[0];</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>syear;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>vdate.year;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>rest<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[1];</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetDelimiter(std::string(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetString(&amp;rest);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.GetTokens(&amp;<ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>sord_day<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[0];</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str(std::string());</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.clear();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>sord_day;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>vdate.day_of_year;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>rest<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[1];</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetDelimiter(std::string(</highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetString(&amp;rest);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.GetTokens(&amp;<ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>shour<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[0];</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str(std::string());</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.clear();</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>shour;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>vdate.hours;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>rest<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[1];</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetDelimiter(std::string(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetString(&amp;rest);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.GetTokens(&amp;<ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>smin<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[0];</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str(std::string());</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.clear();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>smin;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>vdate.minutes;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>rest<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[1];</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetDelimiter(std::string(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.SetString(&amp;rest);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer.GetTokens(&amp;<ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>ssec<sp/>=<sp/><ref refid="parse__control__file_8c_1a5fa05140bf6690c8fea8250127dd3336" kindref="member">tokens</ref>[0];</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str(std::string());</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.clear();</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setprecision(15)<sp/>&lt;&lt;<sp/>ssec;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>vdate.seconds;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vdate;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>hops_clock::vex_date_to_iso8601_string(hops_clock::vex_date<sp/>vdate)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structdate" kindref="compound">date</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>vdate.<ref refid="structdate_1aef68a8508dda64a80f5fe08202e0da4c" kindref="member">year</ref>;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdate_1aef68a8508dda64a80f5fe08202e0da4c" kindref="member">date::year</ref><sp/>y(vdate.year);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>date::days<sp/>ord_day(vdate.day_of_year);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>date::sys_days<sp/>ymd<sp/>=<sp/>get_year_month_day(y,<sp/>ord_day);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>day-of-year<sp/>to<sp/>month-day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>month<sp/>=<sp/>date::year_month_day{ymd}.month();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mday<sp/>=<sp/>date::year_month_day{ymd}.day();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>(unsigned)month;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>(unsigned)mday;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>vdate.hours;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>vdate.minutes;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nss<sp/>&lt;&lt;<sp/>std::setprecision(9)<sp/>&lt;&lt;<sp/>vdate.seconds;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intpart;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac<sp/>=<sp/>modf(vdate.seconds,<sp/>&amp;intpart);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_sec<sp/>=<sp/>intpart;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>integer_sec;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>convert<sp/>the<sp/>fraction<sp/>part<sp/>into<sp/>integer<sp/>nano<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_nanosec<sp/>=<sp/>frac<sp/>*<sp/><ref refid="MHO__Clock_8hh_1a49797cb2f3ab42b693dba6492ab01d75" kindref="member">SEC_TO_NANOSEC</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>nss;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>nss<sp/>&lt;&lt;<sp/>integer_nanosec;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>nanoseconds_value<sp/>=<sp/>nss.str();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>trimmed_int_nanosec<sp/>=<sp/>remove_trailing_zeros(nanoseconds_value);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trimmed_int_nanosec.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>trimmed_int_nanosec;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>hops_clock::vex_date<sp/>hops_clock::vex_date_from_legacy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>legacy_hops_date&amp;<sp/>legacy_date)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>hops_clock::vex_date<sp/>vdate;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>vdate.year<sp/>=<sp/>legacy_date.year;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>vdate.day_of_year<sp/>=<sp/>legacy_date.day;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>vdate.hours<sp/>=<sp/>legacy_date.hour;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>vdate.minutes<sp/>=<sp/>legacy_date.minute;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>vdate.seconds<sp/>=<sp/>legacy_date.second;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vdate;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_Clock.hh"/>
  </compounddef>
</doxygen>
