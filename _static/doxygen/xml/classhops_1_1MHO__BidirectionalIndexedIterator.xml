<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__BidirectionalIndexedIterator" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_BidirectionalIndexedIterator</compoundname>
    <includes refid="MHO__BidirectionalIndexedIterator_8hh" local="no">MHO_BidirectionalIndexedIterator.hh</includes>
    <templateparamlist>
      <param>
        <type>typename XValueType</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>RANK</declname>
        <defname>RANK</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ac706751563a347f9ea4f75005f3a53d7" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="33" column="32" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIndexedIterator_1adef3ea859730968e1e6757c71e59d270" prot="public" static="no">
        <type>std::array&lt; std::size_t, RANK &gt;</type>
        <definition>typedef std::array&lt; std::size_t, RANK &gt; hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::index_type</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="34" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ab8123ac647d8f8caf6f2c70d2cdaef2c" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>typedef std::bidirectional_iterator_tag hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="32" column="49" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" prot="public" static="no">
        <type>XValueType *</type>
        <definition>typedef XValueType* hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="31" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a6f4322c7a7dbb142fce1e51ab0b8646f" prot="public" static="no">
        <type>XValueType &amp;</type>
        <definition>typedef XValueType&amp; hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="30" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator" kindref="compound">MHO_BidirectionalIndexedIterator</ref></type>
        <definition>typedef MHO_BidirectionalIndexedIterator hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::self_type</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="28" column="50" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a1435c09ae0f158e66787a1292aba98cc" prot="public" static="no">
        <type>XValueType</type>
        <definition>typedef XValueType hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="29" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a9c2ce9b9141c8cc2825cb7df2b5a630d" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fBegin</definition>
        <argsstring></argsstring>
        <name>fBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="190" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a851a32f4e2242f936dadf38943dd499e" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1adef3ea859730968e1e6757c71e59d270" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fDimensions</definition>
        <argsstring></argsstring>
        <name>fDimensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="191" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ab9b387e30baefa59179f5157391269f6" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1adef3ea859730968e1e6757c71e59d270" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fIdx</definition>
        <argsstring></argsstring>
        <name>fIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="199" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ae456289eff1a51b3c6a4bdd9c1685a4e" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fLength</definition>
        <argsstring></argsstring>
        <name>fLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="193" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a4ecabe0572ee3ab0b3e3bbe3caaef05a" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fMemoryOffset</definition>
        <argsstring></argsstring>
        <name>fMemoryOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="198" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1af9c51ffb06a9faac388467b696839bff" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fPositionOffset</definition>
        <argsstring></argsstring>
        <name>fPositionOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="197" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1aff9cdb97a0d4ca25f09dbafe9b8a4759" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fPtr</definition>
        <argsstring></argsstring>
        <name>fPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="196" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ad83d4ef971bdaa1fa1835e1d46260662" prot="protected" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1adef3ea859730968e1e6757c71e59d270" kindref="member">index_type</ref></type>
        <definition>index_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::fStrides</definition>
        <argsstring></argsstring>
        <name>fStrides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="192" column="20" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a37c361c39a03beb17fd20958119e22a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::MHO_BidirectionalIndexedIterator</definition>
        <argsstring>(const self_type &amp;copy)</argsstring>
        <name>MHO_BidirectionalIndexedIterator</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="50" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="50" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ae6f1568faf674647f585f0a8b9a95363" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::MHO_BidirectionalIndexedIterator</definition>
        <argsstring>(pointer begin_ptr, std::size_t position_offset, const std::size_t *dims, const std::size_t *strides)</argsstring>
        <name>MHO_BidirectionalIndexedIterator</name>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" kindref="member">pointer</ref></type>
          <declname>begin_ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>position_offset</declname>
        </param>
        <param>
          <type>const std::size_t *</type>
          <declname>dims</declname>
        </param>
        <param>
          <type>const std::size_t *</type>
          <declname>strides</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="36" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="36" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ada9132c0497b19ae67b54cc8182773f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::~MHO_BidirectionalIndexedIterator</definition>
        <argsstring>()</argsstring>
        <name>~MHO_BidirectionalIndexedIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="63" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1aac36e3ec54ed2385f0152dfdb5764a4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ac706751563a347f9ea4f75005f3a53d7" kindref="member">difference_type</ref></type>
        <definition>difference_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::GetMemoryOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetMemoryOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="184" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a4ca06a658c109ccb36d876b4e2699d91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ac706751563a347f9ea4f75005f3a53d7" kindref="member">difference_type</ref></type>
        <definition>difference_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::GetPositionOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetPositionOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="182" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a619c9891d17d4a6eadd88e5736803866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::GetPtr</definition>
        <argsstring>()</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="178" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ad3d9d3fccb5fb44cfac359a48ef6a920" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::GetPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="180" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ac68e2b839a8dc65c0bece4a7b2e777fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="186" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a844dfcc2078b15b615d75382788d90b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator!=</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="176" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a77a54defb9045fd99b090618e902a29b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a6f4322c7a7dbb142fce1e51ab0b8646f" kindref="member">reference</ref></type>
        <definition>reference hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="147" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1acec652f0d87bf7b55d70fb9e03503a5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a6f4322c7a7dbb142fce1e51ab0b8646f" kindref="member">reference</ref></type>
        <definition>reference hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="151" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a4c5722e2e64658479fcb3f43c690c562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator+</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="132" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a5778979566da92842f2784ac4e28375c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="65" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="65" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1ab60f6d3c7d9327f103739960fef5ccb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="100" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1abbeb37e90fcc15a3fc29315e22712c0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator+=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="116" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="116" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1af94c37ca7ce26c6fd13f75278a256f1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ac706751563a347f9ea4f75005f3a53d7" kindref="member">difference_type</ref></type>
        <definition>difference_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator-</definition>
        <argsstring>(const self_type &amp;iter)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="114" column="25" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a16130c45d7aff9d1e3c1391a2f5269c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator-</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="139" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1aa87ad74b22a9f23cff99493f3d6aa290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="82" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="82" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1aff2d48085c94029d748c9b9d7b860c9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="107" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1aa073e6d8a49ae9968364ed7b3ac44712" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator-=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="124" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a22878fa43d6a1cf2fed905891eaf0d56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="149" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a46bd97924d1439c166acd37b58b71a3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="153" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a662a44cab380e508931b1e29eada84dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator=</definition>
        <argsstring>(const self_type &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="155" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="155" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1a6739d672800377b0b2f2f8143feb6925" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::operator==</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="174" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="174" bodyend="174"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalIndexedIterator_1af81641de0dd840c5f5d14430570c9ab8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;::CalculateOffsets</definition>
        <argsstring>()</argsstring>
        <name>CalculateOffsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="201" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="201" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__BidirectionalIndexedIterator" kindref="compound">MHO_BidirectionalIndexedIterator</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>This is an iterator for more complicated n-darrays (primarily array &quot;slices&quot;). Because we cannot guarantee that adjacent elements (in index space) are contiguous in memory for an array slice, we need to ensure that the proper strided access takes place.</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Tue Mar 29 21:13:12 2022 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>size_t</label>
      </node>
      <node id="2">
        <label>std::array&lt; std::size_t, RANK &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>XValueType *</label>
      </node>
      <node id="1">
        <label>hops::MHO_BidirectionalIndexedIterator&lt; XValueType, RANK &gt;</label>
        <link refid="classhops_1_1MHO__BidirectionalIndexedIterator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fDimensions</edgelabel>
          <edgelabel>fIdx</edgelabel>
          <edgelabel>fStrides</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fBegin</edgelabel>
          <edgelabel>fPtr</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fLength</edgelabel>
          <edgelabel>fMemoryOffset</edgelabel>
          <edgelabel>fPositionOffset</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" line="25" column="15" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_BidirectionalIndexedIterator.hh" bodystart="26" bodyend="219"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1af81641de0dd840c5f5d14430570c9ab8" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>CalculateOffsets</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ac706751563a347f9ea4f75005f3a53d7" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>difference_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a9c2ce9b9141c8cc2825cb7df2b5a630d" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fBegin</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a851a32f4e2242f936dadf38943dd499e" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fDimensions</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ab9b387e30baefa59179f5157391269f6" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fIdx</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae456289eff1a51b3c6a4bdd9c1685a4e" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fLength</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a4ecabe0572ee3ab0b3e3bbe3caaef05a" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fMemoryOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1af9c51ffb06a9faac388467b696839bff" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fPositionOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1aff9cdb97a0d4ca25f09dbafe9b8a4759" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ad83d4ef971bdaa1fa1835e1d46260662" prot="protected" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>fStrides</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1aac36e3ec54ed2385f0152dfdb5764a4e" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>GetMemoryOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a4ca06a658c109ccb36d876b4e2699d91" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>GetPositionOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a619c9891d17d4a6eadd88e5736803866" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ad3d9d3fccb5fb44cfac359a48ef6a920" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1adef3ea859730968e1e6757c71e59d270" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>index_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ac68e2b839a8dc65c0bece4a7b2e777fe" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>IsValid</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ab8123ac647d8f8caf6f2c70d2cdaef2c" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>iterator_category</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae6f1568faf674647f585f0a8b9a95363" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>MHO_BidirectionalIndexedIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a37c361c39a03beb17fd20958119e22a2" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>MHO_BidirectionalIndexedIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a844dfcc2078b15b615d75382788d90b0" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator!=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a77a54defb9045fd99b090618e902a29b" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1acec652f0d87bf7b55d70fb9e03503a5a" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a4c5722e2e64658479fcb3f43c690c562" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator+</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a5778979566da92842f2784ac4e28375c" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ab60f6d3c7d9327f103739960fef5ccb9" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1abbeb37e90fcc15a3fc29315e22712c0e" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator+=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1af94c37ca7ce26c6fd13f75278a256f1e" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a16130c45d7aff9d1e3c1391a2f5269c8" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1aa87ad74b22a9f23cff99493f3d6aa290" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1aff2d48085c94029d748c9b9d7b860c9b" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1aa073e6d8a49ae9968364ed7b3ac44712" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator-=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a22878fa43d6a1cf2fed905891eaf0d56" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a46bd97924d1439c166acd37b58b71a3f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a662a44cab380e508931b1e29eada84dc" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a6739d672800377b0b2f2f8143feb6925" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>operator==</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ae5f13b24ffd17d8287e2535d8dd2f788" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>pointer</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a6f4322c7a7dbb142fce1e51ab0b8646f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>reference</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a26fd551bfdc8f327d2a3f4e732bd3816" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>self_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1a1435c09ae0f158e66787a1292aba98cc" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>value_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalIndexedIterator_1ada9132c0497b19ae67b54cc8182773f5" prot="public" virt="virtual"><scope>hops::MHO_BidirectionalIndexedIterator</scope><name>~MHO_BidirectionalIndexedIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
