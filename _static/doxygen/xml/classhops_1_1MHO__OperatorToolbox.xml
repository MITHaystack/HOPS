<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__OperatorToolbox" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_OperatorToolbox</compoundname>
    <includes refid="MHO__OperatorToolbox_8hh" local="no">MHO_OperatorToolbox.hh</includes>
    <innerclass refid="classhops_1_1MHO__OperatorToolbox_1_1operator__predicate" prot="private">hops::MHO_OperatorToolbox::operator_predicate</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__OperatorToolbox_1a6f64c4f66f7b325de0ccbc09ef70d974" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; std::string, <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> * &gt;</type>
        <definition>std::multimap&lt; std::string, MHO_Operator* &gt; hops::MHO_OperatorToolbox::fCategoryToOperatorMap</definition>
        <argsstring></argsstring>
        <name>fCategoryToOperatorMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="237" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__OperatorToolbox_1a8c6fec4421da77482ee4b8747b1b06e3" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> * &gt;</type>
        <definition>std::map&lt; std::string, MHO_Operator* &gt; hops::MHO_OperatorToolbox::fNameToOperatorMap</definition>
        <argsstring></argsstring>
        <name>fNameToOperatorMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="234" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__OperatorToolbox_1a6e7aae752d3cbb05aa44f0ee240d256c" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> * &gt;</type>
        <definition>std::set&lt; MHO_Operator* &gt; hops::MHO_OperatorToolbox::fOperators</definition>
        <argsstring></argsstring>
        <name>fOperators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="231" column="18" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a1d73fbc335c5896fc566dc15bd3104bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_OperatorToolbox::MHO_OperatorToolbox</definition>
        <argsstring>()</argsstring>
        <name>MHO_OperatorToolbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="28" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1aa90f9bf2ecedf367ddbf15fb9dc43073" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_OperatorToolbox::~MHO_OperatorToolbox</definition>
        <argsstring>()</argsstring>
        <name>~MHO_OperatorToolbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="30" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a8e3e76f459d0a295d3ddae9d58cd3840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_OperatorToolbox::AddOperator</definition>
        <argsstring>(MHO_Operator *op, const std::string &amp;name, const std::string &amp;category, bool replace_duplicate=true)</argsstring>
        <name>AddOperator</name>
        <param>
          <type><ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replace_duplicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Adds an operator to the toolbox with optional replacement if duplicate name exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the operator (duplicate names can be replaced) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>Category under which the operator will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replace_duplicate</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether to replace duplicate operators by name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="41" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="41" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a55079c6a855fc8543bbe54c0ff9c9193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> * &gt;</type>
        <definition>std::vector&lt; MHO_Operator* &gt; hops::MHO_OperatorToolbox::GetAllOperators</definition>
        <argsstring>()</argsstring>
        <name>GetAllOperators</name>
        <briefdescription>
<para>Getter for all operators (vector of pointers) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::vector&lt;MHO_Operator* sorted list of operators </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="115" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="115" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a9516641a40b239ad5e0989c9bb749391" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_OperatorToolbox::GetNOperators</definition>
        <argsstring>()</argsstring>
        <name>GetNOperators</name>
        <briefdescription>
<para>Getter for number of operators. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of fOperators vector as std::size_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="107" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a2c7705b35836af014e7de4c50d2bdfe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> *</type>
        <definition>MHO_Operator* hops::MHO_OperatorToolbox::GetOperator</definition>
        <argsstring>(const char *name)</argsstring>
        <name>GetOperator</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Getter for an operator by name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Operator name to search for in the map </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> or nullptr if not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="79" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a794faa6ae429d6e114d87bfd0ea23c38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> *</type>
        <definition>MHO_Operator* hops::MHO_OperatorToolbox::GetOperator</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>GetOperator</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Getter for operator - retrieval by name as generic operator, returns nullptr if missing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Operator name to search for in the map </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> or nullptr if not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="62" column="22" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="62" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1aa9fbc1345af67c37c2c32f91b704a3f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename XOperatorType</type>
          </param>
        </templateparamlist>
        <type>XOperatorType *</type>
        <definition>XOperatorType* hops::MHO_OperatorToolbox::GetOperatorAs</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>GetOperatorAs</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Getter for operator, retrieval by name, with cast to specified type (XOperatorType), if missing returns nullptr. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Operator name to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to operator cast as XOperatorType or nullptr if not found/cannot be cast </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="91" column="36" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a7f5dc11b8cef782119a055317e90d42a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> * &gt;</type>
        <definition>std::vector&lt; MHO_Operator* &gt; hops::MHO_OperatorToolbox::GetOperatorsByCategory</definition>
        <argsstring>(const std::string &amp;category)</argsstring>
        <name>GetOperatorsByCategory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <briefdescription>
<para>Getter for operators by category. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>The category of operators to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector of <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> pointers sorted by priority. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="159" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="159" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1aa5060ff11564fcbb644ce756eecf7389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> * &gt;</type>
        <definition>std::vector&lt; MHO_Operator* &gt; hops::MHO_OperatorToolbox::GetOperatorsByPriorityRange</definition>
        <argsstring>(double lower_limit, double upper_limit)</argsstring>
        <name>GetOperatorsByPriorityRange</name>
        <param>
          <type>double</type>
          <declname>lower_limit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upper_limit</declname>
        </param>
        <briefdescription>
<para>Getter for operators by priority range - get all operators within the priority range [low,high) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lower_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower bound of priority range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upper_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper bound of priority range </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> pointers sorted by priority </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="135" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="135" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a47cecdcb336150a0c725937bcfd0b22d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_OperatorToolbox::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clears the current collection of operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="218" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__OperatorToolbox_1a77680c0020af5f9e40fd488fdf9190ba" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_OperatorToolbox::RemoveOperator</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>RemoveOperator</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Function RemoveOperator - removes operator from the toolbox. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>(const std::string&amp;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="184" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="184" bodyend="213"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__OperatorToolbox" kindref="compound">MHO_OperatorToolbox</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>The toolbox class stores all operator objects as points to the <ref refid="classhops_1_1MHO__Operator" kindref="compound">MHO_Operator</ref> base class.</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Sun Jun 4 17:43:54 2023 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" line="25" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Operators/include/MHO_OperatorToolbox.hh" bodystart="26" bodyend="251"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a8e3e76f459d0a295d3ddae9d58cd3840" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>AddOperator</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a47cecdcb336150a0c725937bcfd0b22d" prot="private" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>Clear</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a6f64c4f66f7b325de0ccbc09ef70d974" prot="private" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>fCategoryToOperatorMap</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a8c6fec4421da77482ee4b8747b1b06e3" prot="private" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>fNameToOperatorMap</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a6e7aae752d3cbb05aa44f0ee240d256c" prot="private" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>fOperators</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a55079c6a855fc8543bbe54c0ff9c9193" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>GetAllOperators</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a9516641a40b239ad5e0989c9bb749391" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>GetNOperators</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a794faa6ae429d6e114d87bfd0ea23c38" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>GetOperator</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a2c7705b35836af014e7de4c50d2bdfe8" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>GetOperator</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1aa9fbc1345af67c37c2c32f91b704a3f4" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>GetOperatorAs</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a7f5dc11b8cef782119a055317e90d42a" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>GetOperatorsByCategory</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1aa5060ff11564fcbb644ce756eecf7389" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>GetOperatorsByPriorityRange</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a1d73fbc335c5896fc566dc15bd3104bb" prot="public" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>MHO_OperatorToolbox</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1a77680c0020af5f9e40fd488fdf9190ba" prot="private" virt="non-virtual"><scope>hops::MHO_OperatorToolbox</scope><name>RemoveOperator</name></member>
      <member refid="classhops_1_1MHO__OperatorToolbox_1aa90f9bf2ecedf367ddbf15fb9dc43073" prot="public" virt="virtual"><scope>hops::MHO_OperatorToolbox</scope><name>~MHO_OperatorToolbox</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
