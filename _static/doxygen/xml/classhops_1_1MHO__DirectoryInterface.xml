<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__DirectoryInterface" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_DirectoryInterface</compoundname>
    <includes refid="MHO__DirectoryInterface_8hh" local="no">MHO_DirectoryInterface.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__DirectoryInterface_1a00eb0da99d4fd49666a0f0d10c71dc45" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::fCurrentDirectoryFullPath</definition>
        <argsstring></argsstring>
        <name>fCurrentDirectoryFullPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="229" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__DirectoryInterface_1a09d34426513e6191b5903dcfd8c7f259" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; hops::MHO_DirectoryInterface::fCurrentFileList</definition>
        <argsstring></argsstring>
        <name>fCurrentFileList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="235" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__DirectoryInterface_1a0b7dd48817aefd147aca6899d89eaa68" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::fCurrentParentFullPath</definition>
        <argsstring></argsstring>
        <name>fCurrentParentFullPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="230" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__DirectoryInterface_1a8103d139154a036c5bb1c4600d34eb53" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; hops::MHO_DirectoryInterface::fCurrentSubDirectoryList</definition>
        <argsstring></argsstring>
        <name>fCurrentSubDirectoryList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="236" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__DirectoryInterface_1a8f42394cb660c7941bbe208170496386" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hops::MHO_DirectoryInterface::fDirectoryIsSet</definition>
        <argsstring></argsstring>
        <name>fDirectoryIsSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="232" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__DirectoryInterface_1a994a4426f8e0a0a0f3300bd68f5532e6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hops::MHO_DirectoryInterface::fHaveReadDirectory</definition>
        <argsstring></argsstring>
        <name>fHaveReadDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="233" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__DirectoryInterface_1a1c251bba2bfc4bc6142778745d955062" prot="private" static="no" mutable="yes">
        <type><ref refid="classhops_1_1MHO__Tokenizer" kindref="compound">MHO_Tokenizer</ref></type>
        <definition>MHO_Tokenizer hops::MHO_DirectoryInterface::fTokenizer</definition>
        <argsstring></argsstring>
        <name>fTokenizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="238" column="31" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a1f1b21448319f5e1960267f7c23d26ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_DirectoryInterface::MHO_DirectoryInterface</definition>
        <argsstring>()</argsstring>
        <name>MHO_DirectoryInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="26" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1ad8e28e2ecf6311cfda2d674ca923b8de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hops::MHO_DirectoryInterface::~MHO_DirectoryInterface</definition>
        <argsstring>()</argsstring>
        <name>~MHO_DirectoryInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="27" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a3d83b85b4acb982093d180cf36afc9f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_DirectoryInterface::CreateDirectory</definition>
        <argsstring>(const std::string &amp;dirname) const</argsstring>
        <name>CreateDirectory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
<para>Creates a directory with given name and owner permissions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirname</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the directory to create. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if directory creation was successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="89" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="127" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a6e78f1dfbf85701ff458acd283a71ace" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetCorelFiles</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;files, std::vector&lt; std::string &gt; &amp;corel_files) const</argsstring>
        <name>GetCorelFiles</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>corel_files</declname>
        </param>
        <briefdescription>
<para>extracts legacy mk4 corel files from list of files </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="185" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="419" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a6b737613af0e011ac15170279afe6773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::GetCurrentDirectory</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentDirectory</name>
        <briefdescription>
<para>Getter for current directory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The full path of the current directory as a std::string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="103" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1ab73ad71779918e1f9e8b161a1c82a3df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::GetCurrentParentDirectory</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentParentDirectory</name>
        <briefdescription>
<para>Getter for current parent directory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current parent directory as a std::string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="110" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a820399b3f9f8f0a4fc06e60827bc8612" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetFileList</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aFileList) const</argsstring>
        <name>GetFileList</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aFileList</declname>
        </param>
        <briefdescription>
<para>Getter for file list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFileList</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter: vector of strings to store file list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="124" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="149" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a354a43b098a57cc6e64d2f8b132d3147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetFilesMatchingExtention</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aFileList, const char *anExt) const</argsstring>
        <name>GetFilesMatchingExtention</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aFileList</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>anExt</declname>
        </param>
        <briefdescription>
<para>Getter for files matching extention. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFileList</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector to store matching file names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anExt</parametername>
</parameternamelist>
<parameterdescription>
<para>Extension to match against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="147" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="311" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a6abcd719c24808dc368b68ffe4513195" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetFilesMatchingExtention</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aFileList, const std::string &amp;anExt) const</argsstring>
        <name>GetFilesMatchingExtention</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aFileList</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>anExt</declname>
        </param>
        <briefdescription>
<para>Getter for files matching extention. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFileList</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector to store matching file names. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anExt</parametername>
</parameternamelist>
<parameterdescription>
<para>Extension pattern to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="139" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="291" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1abf4c8f52ee0dd0fea7a608cfb73d5721" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetFilesMatchingPrefix</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aFileList, const char *aPrefix) const</argsstring>
        <name>GetFilesMatchingPrefix</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aFileList</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>aPrefix</declname>
        </param>
        <briefdescription>
<para>Getter for files matching prefix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFileList</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector of matching file names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPrefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input string prefix to match against file names </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="163" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="332" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1af768f08a35629a5a2a8efc498ee9b2ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetFilesMatchingPrefix</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aFileList, const std::string &amp;aPrefix) const</argsstring>
        <name>GetFilesMatchingPrefix</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aFileList</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>aPrefix</declname>
        </param>
        <briefdescription>
<para>Getter for files matching prefix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFileList</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector of matching file names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPrefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input string prefix to match against file names </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="155" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="317" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1aa1390bb5c58466a0fca3ffc07a717d78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetFringeFiles</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;files, std::vector&lt; std::string &gt; &amp;fringe_files, int &amp;max_sequence_num) const</argsstring>
        <name>GetFringeFiles</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>fringe_files</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max_sequence_num</declname>
        </param>
        <briefdescription>
<para>extracts legacy mk4 fringe files from list of files </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="196" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="472" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1ad9bc29e620e0df94dfbcd9661146b0e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetRootFile</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;files, std::string &amp;root_file) const</argsstring>
        <name>GetRootFile</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>root_file</declname>
        </param>
        <briefdescription>
<para>extracts legacy mk4 root file from list of files </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="179" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="375" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1ad2b5b40052930008b4d92f4cc662a535" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetStationFiles</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;files, std::vector&lt; std::string &gt; &amp;station_files) const</argsstring>
        <name>GetStationFiles</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>station_files</declname>
        </param>
        <briefdescription>
<para>extracts legacy mk4 station files from list of files </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="190" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="444" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a4acfd40de7e23538df39def6e1ee41fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetSubDirectoriesMatchingExtention</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aDirList, const char *anExt) const</argsstring>
        <name>GetSubDirectoriesMatchingExtention</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aDirList</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>anExt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="172" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="359" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1aa3367bd0e3a22935912a4e71c891a2cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetSubDirectoriesMatchingExtention</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aDirList, const std::string &amp;anExt) const</argsstring>
        <name>GetSubDirectoriesMatchingExtention</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aDirList</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>anExt</declname>
        </param>
        <briefdescription>
<para>Getter for sub directories matching extention. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aDirList</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector to store matching directories </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anExt</parametername>
</parameternamelist>
<parameterdescription>
<para>Extension to match for filtering directories </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="171" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="338" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1ad3f9c2bc6efbc93b1d160153dfdb2d1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::GetSubDirectoryList</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;aSubDirList) const</argsstring>
        <name>GetSubDirectoryList</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>aSubDirList</declname>
        </param>
        <briefdescription>
<para>Getter for sub directory list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aSubDirList</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter: vector to store subdirectory list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="131" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="158" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a9e50bef0928027b1163c029f042905e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_DirectoryInterface::ReadCurrentDirectory</definition>
        <argsstring>()</argsstring>
        <name>ReadCurrentDirectory</name>
        <briefdescription>
<para>Checks if current directory exists and reads its files and directories. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool indicating success/failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="117" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="167" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a2223b8b3ac1045084e927ea561b7f5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::SetCurrentDirectory</definition>
        <argsstring>(const std::string &amp;dirname)</argsstring>
        <name>SetCurrentDirectory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
<para>Setter for current directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirname</parametername>
</parameternamelist>
<parameterdescription>
<para>The new directory path to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="96" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="140" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a326e7329132696f46e184a82e7baae74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::SplitCorelFileBasename</definition>
        <argsstring>(const std::string &amp;corel_basename, std::string &amp;st_pair, std::string &amp;root_code) const</argsstring>
        <name>SplitCorelFileBasename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>corel_basename</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>st_pair</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>root_code</declname>
        </param>
        <briefdescription>
<para>splits out baseline and root code from basename of a legacy mk4 corel file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="203" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="516" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a58722d61a4f11f8e84252ea9be204435" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_DirectoryInterface::SplitStationFileBasename</definition>
        <argsstring>(const std::string &amp;station_basename, std::string &amp;st, std::string &amp;root_code) const</argsstring>
        <name>SplitStationFileBasename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>station_basename</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>root_code</declname>
        </param>
        <briefdescription>
<para>splits out station char and root code from basename of a legacy mk4 station file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="208" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="532" bodyend="545"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a0d4014887a8d80ba1cad3eeafa9bf711" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_DirectoryInterface::DoesDirectoryExist</definition>
        <argsstring>(const std::string &amp;dirname)</argsstring>
        <name>DoesDirectoryExist</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
<para>Checks if a directory exists by attempting to open it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirname</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the directory to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the directory exists and can be opened, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="54" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="65" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1ae8f0219d1a4777df278df0eb1eea10f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::GetBasename</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>GetBasename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>gets the file name from a path to a file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="213" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="245" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a4e8abe866f1901ccfee6271ad93dae83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::GetDirectoryFullPath</definition>
        <argsstring>(const std::string &amp;dirname)</argsstring>
        <name>GetDirectoryFullPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
<para>Getter for directory full path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirname</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory name to resolve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The full absolute path as a string. </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="36" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="25" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a37bb8f6f15eb6c74a09519f7c5c280c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::GetDirectoryFullPathPreserveSymlinks</definition>
        <argsstring>(const std::string &amp;dirname)</argsstring>
        <name>GetDirectoryFullPathPreserveSymlinks</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
<para>Getter for directory full path preserve symlinks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirname</parametername>
</parameternamelist>
<parameterdescription>
<para>Input directory name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Full path of the directory as a string </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="45" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="42" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1abd23a147a9ea5f21a80a777bec836571" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::GetFileModifcationTime</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>GetFileModifcationTime</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Getter for file modifcation time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to retrieve modification time for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string representing the modification time of the file in timestamp format. </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="81" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="107" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a62ee16c945afdc00a4b38e4acd635358" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::GetPrefix</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>GetPrefix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>gets the directory prefix from a full path to a file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="218" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="260" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a8ecfabe548ad07c7d6c4b1b350e74106" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_DirectoryInterface::IsDirectory</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>IsDirectory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks if a given path is a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if it&apos;s a directory, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="63" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="80" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a9207de634650857db5d2c169eaa59ded" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_DirectoryInterface::IsFile</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>IsFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks if a given path is a regular file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to check as std::string&amp;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if it&apos;s a regular file, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="72" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="93" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a716e41bea8d463cfef9fcd60dbe31fb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hops::MHO_DirectoryInterface::StripExtensionFromBasename</definition>
        <argsstring>(const std::string &amp;file_basename)</argsstring>
        <name>StripExtensionFromBasename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_basename</declname>
        </param>
        <briefdescription>
<para>removes the extention (anything after last &apos;.&apos;) from a file (base) name </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="223" column="28" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="275" bodyend="289"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhops_1_1MHO__DirectoryInterface_1a21f74d8e2c539e424d16ee46c4062f28" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_DirectoryInterface::count_number_of_matches</definition>
        <argsstring>(const std::string &amp;aString, char elem) const</argsstring>
        <name>count_number_of_matches</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aString</declname>
        </param>
        <param>
          <type>char</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="227" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/src/MHO_DirectoryInterface.cc" bodystart="547" bodyend="558"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__DirectoryInterface" kindref="compound">MHO_DirectoryInterface</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>implements utility functions to access a directory and locate files</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Tue Jun 1 16:14:04 2021 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" line="23" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_DirectoryInterface.hh" bodystart="24" bodyend="239"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a21f74d8e2c539e424d16ee46c4062f28" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>count_number_of_matches</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a3d83b85b4acb982093d180cf36afc9f3" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>CreateDirectory</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a0d4014887a8d80ba1cad3eeafa9bf711" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>DoesDirectoryExist</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a00eb0da99d4fd49666a0f0d10c71dc45" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>fCurrentDirectoryFullPath</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a09d34426513e6191b5903dcfd8c7f259" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>fCurrentFileList</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a0b7dd48817aefd147aca6899d89eaa68" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>fCurrentParentFullPath</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a8103d139154a036c5bb1c4600d34eb53" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>fCurrentSubDirectoryList</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a8f42394cb660c7941bbe208170496386" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>fDirectoryIsSet</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a994a4426f8e0a0a0f3300bd68f5532e6" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>fHaveReadDirectory</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a1c251bba2bfc4bc6142778745d955062" prot="private" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>fTokenizer</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1ae8f0219d1a4777df278df0eb1eea10f4" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetBasename</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a6e78f1dfbf85701ff458acd283a71ace" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetCorelFiles</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a6b737613af0e011ac15170279afe6773" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetCurrentDirectory</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1ab73ad71779918e1f9e8b161a1c82a3df" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetCurrentParentDirectory</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a4e8abe866f1901ccfee6271ad93dae83" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetDirectoryFullPath</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a37bb8f6f15eb6c74a09519f7c5c280c5" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetDirectoryFullPathPreserveSymlinks</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a820399b3f9f8f0a4fc06e60827bc8612" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetFileList</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1abd23a147a9ea5f21a80a777bec836571" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetFileModifcationTime</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a6abcd719c24808dc368b68ffe4513195" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetFilesMatchingExtention</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a354a43b098a57cc6e64d2f8b132d3147" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetFilesMatchingExtention</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1af768f08a35629a5a2a8efc498ee9b2ad" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetFilesMatchingPrefix</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1abf4c8f52ee0dd0fea7a608cfb73d5721" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetFilesMatchingPrefix</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1aa1390bb5c58466a0fca3ffc07a717d78" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetFringeFiles</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a62ee16c945afdc00a4b38e4acd635358" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetPrefix</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1ad9bc29e620e0df94dfbcd9661146b0e4" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetRootFile</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1ad2b5b40052930008b4d92f4cc662a535" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetStationFiles</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1aa3367bd0e3a22935912a4e71c891a2cb" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetSubDirectoriesMatchingExtention</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a4acfd40de7e23538df39def6e1ee41fc" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetSubDirectoriesMatchingExtention</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1ad3f9c2bc6efbc93b1d160153dfdb2d1d" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>GetSubDirectoryList</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a8ecfabe548ad07c7d6c4b1b350e74106" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>IsDirectory</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a9207de634650857db5d2c169eaa59ded" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>IsFile</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a1f1b21448319f5e1960267f7c23d26ca" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>MHO_DirectoryInterface</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a9e50bef0928027b1163c029f042905e1" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>ReadCurrentDirectory</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a2223b8b3ac1045084e927ea561b7f5ff" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>SetCurrentDirectory</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a326e7329132696f46e184a82e7baae74" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>SplitCorelFileBasename</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a58722d61a4f11f8e84252ea9be204435" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>SplitStationFileBasename</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1a716e41bea8d463cfef9fcd60dbe31fb1" prot="public" virt="non-virtual"><scope>hops::MHO_DirectoryInterface</scope><name>StripExtensionFromBasename</name></member>
      <member refid="classhops_1_1MHO__DirectoryInterface_1ad8e28e2ecf6311cfda2d674ca923b8de" prot="public" virt="virtual"><scope>hops::MHO_DirectoryInterface</scope><name>~MHO_DirectoryInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
