<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="MHO__NDArrayWrapper__1_8hh" kind="file" language="C++">
    <compoundname>MHO_NDArrayWrapper_1.hh</compoundname>
    <includedby refid="MHO__NDArrayWrapper_8hh" local="yes">MHO_NDArrayWrapper.hh</includedby>
    <invincdepgraph>
      <node id="103">
        <label>MHO_FringePlotInfo.hh</label>
        <link refid="MHO__FringePlotInfo_8hh"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>MHO_ChannelLabelerBuilder.cc</label>
        <link refid="MHO__ChannelLabelerBuilder_8cc"/>
      </node>
      <node id="28">
        <label>MHO_IonosphericFringeFitter.cc</label>
        <link refid="MHO__IonosphericFringeFitter_8cc"/>
      </node>
      <node id="156">
        <label>MHO_MinWeight.cc</label>
        <link refid="MHO__MinWeight_8cc"/>
      </node>
      <node id="94">
        <label>hops2hdf5.cc</label>
        <link refid="hops2hdf5_8cc"/>
      </node>
      <node id="140">
        <label>MHO_EstimatePCManual.cc</label>
        <link refid="MHO__EstimatePCManual_8cc"/>
      </node>
      <node id="79">
        <label>MHO_PyFringeDataInterface.hh</label>
        <link refid="MHO__PyFringeDataInterface_8hh"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>MHO_BasicFringeFitter.cc</label>
        <link refid="MHO__BasicFringeFitter_8cc"/>
      </node>
      <node id="163">
        <label>MHO_NormFX.hh</label>
        <link refid="MHO__NormFX_8hh"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>MHO_DoubleSidebandChannelLabeler.hh</label>
        <link refid="MHO__DoubleSidebandChannelLabeler_8hh"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>MHO_MK4FringeExport.cc</label>
        <link refid="MHO__MK4FringeExport_8cc"/>
      </node>
      <node id="22">
        <label>MHO_FringeData.cc</label>
        <link refid="MHO__FringeData_8cc"/>
      </node>
      <node id="208">
        <label>MHO_OpenCLFastFourierTransformPlan.cc</label>
        <link refid="MHO__OpenCLFastFourierTransformPlan_8cc"/>
      </node>
      <node id="200">
        <label>MHO_SelectRepack.hh</label>
        <link refid="MHO__SelectRepack_8hh"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>MHO_MK4FringeExport.hh</label>
        <link refid="MHO__MK4FringeExport_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>MHO_MultidimensionalFastFourierTransformFFTW.hh</label>
        <link refid="MHO__MultidimensionalFastFourierTransformFFTW_8hh"/>
      </node>
      <node id="104">
        <label>MHO_InitialFringeInfo.hh</label>
        <link refid="MHO__InitialFringeInfo_8hh"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>TestVexStripper.cc</label>
        <link refid="TestVexStripper_8cc"/>
      </node>
      <node id="227">
        <label>MHO_OpenCLBatchedMultidimensionalFastFourierTransform.hh</label>
        <link refid="MHO__OpenCLBatchedMultidimensionalFastFourierTransform_8hh"/>
      </node>
      <node id="98">
        <label>MHO_ContainerStore.cc</label>
        <link refid="MHO__ContainerStore_8cc"/>
      </node>
      <node id="196">
        <label>MHO_MK4StationInterface.cc</label>
        <link refid="MHO__MK4StationInterface_8cc"/>
      </node>
      <node id="228">
        <label>MHO_OpenCLScalarMultiply.hh</label>
        <link refid="MHO__OpenCLScalarMultiply_8hh"/>
      </node>
      <node id="45">
        <label>MHO_LinearDParCorrectionBuilder.cc</label>
        <link refid="MHO__LinearDParCorrectionBuilder_8cc"/>
      </node>
      <node id="220">
        <label>MHO_FastFourierTransform.hh</label>
        <link refid="MHO__FastFourierTransform_8hh"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>MHO_WeightChannelizer.cc</label>
        <link refid="MHO__WeightChannelizer_8cc"/>
      </node>
      <node id="97">
        <label>MHO_ContainerStore.hh</label>
        <link refid="MHO__ContainerStore_8hh"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>MHO_MixedPolYShift.cc</label>
        <link refid="MHO__MixedPolYShift_8cc"/>
      </node>
      <node id="165">
        <label>MHO_SingleSidebandNormFX.cc</label>
        <link refid="MHO__SingleSidebandNormFX_8cc"/>
      </node>
      <node id="33">
        <label>MHO_DefaultPythonPlotVisitor.cc</label>
        <link refid="MHO__DefaultPythonPlotVisitor_8cc"/>
      </node>
      <node id="110">
        <label>MHO_ClassIdentityMap.hh</label>
        <link refid="MHO__ClassIdentityMap_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>MHO_MixedPolYShiftBuilder.hh</label>
        <link refid="MHO__MixedPolYShiftBuilder_8hh"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>MHO_PyGenericOperator.hh</label>
        <link refid="MHO__PyGenericOperator_8hh"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>MHO_MK4StationInterface.hh</label>
        <link refid="MHO__MK4StationInterface_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>MHO_HDF5Attributes.hh</label>
        <link refid="MHO__HDF5Attributes_8hh"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>MHO_ManualPolDelayCorrectionBuilder.cc</label>
        <link refid="MHO__ManualPolDelayCorrectionBuilder_8cc"/>
      </node>
      <node id="153">
        <label>MHO_ManualPolPhaseCorrection.hh</label>
        <link refid="MHO__ManualPolPhaseCorrection_8hh"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>MHO_HDF5Datasets.hh</label>
        <link refid="MHO__HDF5Datasets_8hh"/>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>MHO_LinearDParCorrectionBuilder.hh</label>
        <link refid="MHO__LinearDParCorrectionBuilder_8hh"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>MHO_AFileInfoExtractor.cc</label>
        <link refid="MHO__AFileInfoExtractor_8cc"/>
      </node>
      <node id="82">
        <label>MHO_ScanDataStore.cc</label>
        <link refid="MHO__ScanDataStore_8cc"/>
      </node>
      <node id="185">
        <label>MHO_InterpolateFringePeak.cc</label>
        <link refid="MHO__InterpolateFringePeak_8cc"/>
      </node>
      <node id="179">
        <label>MHO_StationModel.hh</label>
        <link refid="MHO__StationModel_8hh"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>MHO_CircularFieldRotationCorrection.cc</label>
        <link refid="MHO__CircularFieldRotationCorrection_8cc"/>
      </node>
      <node id="144">
        <label>MHO_LinearDParCorrection.cc</label>
        <link refid="MHO__LinearDParCorrection_8cc"/>
      </node>
      <node id="30">
        <label>MHO_FringeFitterFactory.hh</label>
        <link refid="MHO__FringeFitterFactory_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>MHO_DelayRate.hh</label>
        <link refid="MHO__DelayRate_8hh"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>MHO_DiFXVisibilityProcessor.hh</label>
        <link refid="MHO__DiFXVisibilityProcessor_8hh"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>MHO_ChannelLabeler.hh</label>
        <link refid="MHO__ChannelLabeler_8hh"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>MHO_PyTableContainer.hh</label>
        <link refid="MHO__PyTableContainer_8hh"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>MHO_StationDelayCorrection.cc</label>
        <link refid="MHO__StationDelayCorrection_8cc"/>
      </node>
      <node id="116">
        <label>MHO_DiFXScanProcessor.cc</label>
        <link refid="MHO__DiFXScanProcessor_8cc"/>
      </node>
      <node id="206">
        <label>MHO_MultidimensionalFastFourierTransformInterface.hh</label>
        <link refid="MHO__MultidimensionalFastFourierTransformInterface_8hh"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>MHO_ComputePlotData.hh</label>
        <link refid="MHO__ComputePlotData_8hh"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>MHO_LSBOffset.hh</label>
        <link refid="MHO__LSBOffset_8hh"/>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>MHO_ManualPolPhaseCorrectionBuilder.hh</label>
        <link refid="MHO__ManualPolPhaseCorrectionBuilder_8hh"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>MHO_ContainerHDF5Converter.hh</label>
        <link refid="MHO__ContainerHDF5Converter_8hh"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>TestSignalFFT.cc</label>
        <link refid="TestSignalFFT_8cc"/>
      </node>
      <node id="3">
        <label>MHO_VisibilityChannelizer.hh</label>
        <link refid="MHO__VisibilityChannelizer_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>MHO_NDArrayTypeCastFunctor.hh</label>
        <link refid="MHO__NDArrayTypeCastFunctor_8hh"/>
      </node>
      <node id="91">
        <label>MHO_BasicFringeUtilities.cc</label>
        <link refid="MHO__BasicFringeUtilities_8cc"/>
      </node>
      <node id="43">
        <label>MHO_DCBlockBuilder.cc</label>
        <link refid="MHO__DCBlockBuilder_8cc"/>
      </node>
      <node id="88">
        <label>MHO_PyScanStoreInterface.hh</label>
        <link refid="MHO__PyScanStoreInterface_8hh"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>MHO_PassbandBuilder.cc</label>
        <link refid="MHO__PassbandBuilder_8cc"/>
      </node>
      <node id="157">
        <label>MHO_MixedPolYShift.hh</label>
        <link refid="MHO__MixedPolYShift_8hh"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>MHO_PolProductSummation.cc</label>
        <link refid="MHO__PolProductSummation_8cc"/>
      </node>
      <node id="46">
        <label>MHO_LSBOffsetBuilder.hh</label>
        <link refid="MHO__LSBOffsetBuilder_8hh"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>MHO_ContainerJSONConverter.hh</label>
        <link refid="MHO__ContainerJSONConverter_8hh"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>MHO_MultidimensionalFastFourierTransform.hh</label>
        <link refid="MHO__MultidimensionalFastFourierTransform_8hh"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>MHO_PyFringeFitterInstance.hh</label>
        <link refid="MHO__PyFringeFitterInstance_8hh"/>
      </node>
      <node id="216">
        <label>MHO_PyUnaryTableOperator.hh</label>
        <link refid="MHO__PyUnaryTableOperator_8hh"/>
      </node>
      <node id="129">
        <label>MHO_DelayModel.hh</label>
        <link refid="MHO__DelayModel_8hh"/>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>MHO_MultitonePhaseCorrection.hh</label>
        <link refid="MHO__MultitonePhaseCorrection_8hh"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>MHO_Reducer.hh</label>
        <link refid="MHO__Reducer_8hh"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>MHO_MinWeightBuilder.hh</label>
        <link refid="MHO__MinWeightBuilder_8hh"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>MHO_ContainerFileInterface.hh</label>
        <link refid="MHO__ContainerFileInterface_8hh"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>MHO_PhaseCalibrationTrim.cc</label>
        <link refid="MHO__PhaseCalibrationTrim_8cc"/>
      </node>
      <node id="148">
        <label>MHO_ManualChannelDelayCorrection.cc</label>
        <link refid="MHO__ManualChannelDelayCorrection_8cc"/>
      </node>
      <node id="67">
        <label>MHO_BasicFringeDataConfiguration.cc</label>
        <link refid="MHO__BasicFringeDataConfiguration_8cc"/>
      </node>
      <node id="159">
        <label>MHO_MixedSidebandNormFX.hh</label>
        <link refid="MHO__MixedSidebandNormFX_8hh"/>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>MHO_ManualPolDelayCorrection.cc</label>
        <link refid="MHO__ManualPolDelayCorrection_8cc"/>
      </node>
      <node id="223">
        <label>MHO_AbsoluteValue.hh</label>
        <link refid="MHO__AbsoluteValue_8hh"/>
      </node>
      <node id="119">
        <label>MHO_HDF5ConverterDictionary.cc</label>
        <link refid="MHO__HDF5ConverterDictionary_8cc"/>
      </node>
      <node id="51">
        <label>MHO_ManualChannelPhaseCorrectionBuilder.cc</label>
        <link refid="MHO__ManualChannelPhaseCorrectionBuilder_8cc"/>
      </node>
      <node id="139">
        <label>MHO_EstimatePCManual.hh</label>
        <link refid="MHO__EstimatePCManual_8hh"/>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>MHO_IonosphericFringeFitter.hh</label>
        <link refid="MHO__IonosphericFringeFitter_8hh"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>MHO_MK4CorelInterfaceReversed.hh</label>
        <link refid="MHO__MK4CorelInterfaceReversed_8hh"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>MHO_MK4CorelInterfaceReversed.cc</label>
        <link refid="MHO__MK4CorelInterfaceReversed_8cc"/>
      </node>
      <node id="168">
        <label>MHO_Passband.hh</label>
        <link refid="MHO__Passband_8hh"/>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>MHO_OperatorBuilderManager.cc</label>
        <link refid="MHO__OperatorBuilderManager_8cc"/>
      </node>
      <node id="78">
        <label>MHO_PythonOperatorBuilder.hh</label>
        <link refid="MHO__PythonOperatorBuilder_8hh"/>
      </node>
      <node id="66">
        <label>fplot4.cc</label>
        <link refid="fplot4_8cc"/>
      </node>
      <node id="73">
        <label>MHO_PolProductSummationBuilder.cc</label>
        <link refid="MHO__PolProductSummationBuilder_8cc"/>
      </node>
      <node id="184">
        <label>MHO_InterpolateFringePeak.hh</label>
        <link refid="MHO__InterpolateFringePeak_8hh"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>MHO_DiFXInterface.hh</label>
        <link refid="MHO__DiFXInterface_8hh"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>MHO_SamplerLabeler.hh</label>
        <link refid="MHO__SamplerLabeler_8hh"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>MHO_DiFXVisibilityProcessor.cc</label>
        <link refid="MHO__DiFXVisibilityProcessor_8cc"/>
      </node>
      <node id="182">
        <label>alist4.cc</label>
        <link refid="alist4_8cc"/>
      </node>
      <node id="11">
        <label>MHO_ScalarContainer.hh</label>
        <link refid="MHO__ScalarContainer_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>MHO_ManualChannelPhaseCorrection.hh</label>
        <link refid="MHO__ManualChannelPhaseCorrection_8hh"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>MHO_OpenCLFastFourierTransformRadix2Stage.hh</label>
        <link refid="MHO__OpenCLFastFourierTransformRadix2Stage_8hh"/>
      </node>
      <node id="75">
        <label>MHO_SamplerLabelerBuilder.cc</label>
        <link refid="MHO__SamplerLabelerBuilder_8cc"/>
      </node>
      <node id="99">
        <label>MHO_BasicFringeUtilities.hh</label>
        <link refid="MHO__BasicFringeUtilities_8hh"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>MHO_ManualChannelDelayCorrectionBuilder.cc</label>
        <link refid="MHO__ManualChannelDelayCorrectionBuilder_8cc"/>
      </node>
      <node id="86">
        <label>hops2mark4.cc</label>
        <link refid="hops2mark4_8cc"/>
      </node>
      <node id="217">
        <label>MHO_VectorContainer.hh</label>
        <link refid="MHO__VectorContainer_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>MHO_BasicFringeDataConfiguration.hh</label>
        <link refid="MHO__BasicFringeDataConfiguration_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>MHO_Notches.hh</label>
        <link refid="MHO__Notches_8hh"/>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>MHO_PyContainersModuleDefinition.cc</label>
        <link refid="MHO__PyContainersModuleDefinition_8cc"/>
      </node>
      <node id="218">
        <label>MHO_Axis.hh</label>
        <link refid="MHO__Axis_8hh"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>MHO_MK4StationInterfaceReversed.hh</label>
        <link refid="MHO__MK4StationInterfaceReversed_8hh"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>MHO_PolProductSummation.hh</label>
        <link refid="MHO__PolProductSummation_8hh"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>MHO_DelayModel.cc</label>
        <link refid="MHO__DelayModel_8cc"/>
      </node>
      <node id="1">
        <label>MHO_NDArrayWrapper_1.hh</label>
        <link refid="MHO__NDArrayWrapper__1_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>MHO_MBDelaySearch.cc</label>
        <link refid="MHO__MBDelaySearch_8cc"/>
      </node>
      <node id="180">
        <label>MHO_StationModel.cc</label>
        <link refid="MHO__StationModel_8cc"/>
      </node>
      <node id="219">
        <label>MHO_AxisPack.hh</label>
        <link refid="MHO__AxisPack_8hh"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>MHO_MK4CorelInterface.hh</label>
        <link refid="MHO__MK4CorelInterface_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>MHO_SingleSidebandNormFX.hh</label>
        <link refid="MHO__SingleSidebandNormFX_8hh"/>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>MHO_Passband.cc</label>
        <link refid="MHO__Passband_8cc"/>
      </node>
      <node id="224">
        <label>MHO_ComplexConjugator.hh</label>
        <link refid="MHO__ComplexConjugator_8hh"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>MHO_NotchesBuilder.hh</label>
        <link refid="MHO__NotchesBuilder_8hh"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>MHO_FringeFitterFactory.cc</label>
        <link refid="MHO__FringeFitterFactory_8cc"/>
      </node>
      <node id="35">
        <label>MHO_ChannelLabelerBuilder.hh</label>
        <link refid="MHO__ChannelLabelerBuilder_8hh"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>MHO_DiFXPCalProcessor.hh</label>
        <link refid="MHO__DiFXPCalProcessor_8hh"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>mark42hops.cc</label>
        <link refid="mark42hops_8cc"/>
      </node>
      <node id="13">
        <label>MHO_ContainerDictionary.hh</label>
        <link refid="MHO__ContainerDictionary_8hh"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>MHO_MK4ScanConverter.cc</label>
        <link refid="MHO__MK4ScanConverter_8cc"/>
      </node>
      <node id="134">
        <label>MHO_MBDelaySearchCUDA.hh</label>
        <link refid="MHO__MBDelaySearchCUDA_8hh"/>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>MHO_ManualPolDelayCorrection.hh</label>
        <link refid="MHO__ManualPolDelayCorrection_8hh"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>MHO_UnaryFunctor.hh</label>
        <link refid="MHO__UnaryFunctor_8hh"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>MHO_SubSample.hh</label>
        <link refid="MHO__SubSample_8hh"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>MHO_EndZeroPadder.hh</label>
        <link refid="MHO__EndZeroPadder_8hh"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>MHO_DelayRate.cc</label>
        <link refid="MHO__DelayRate_8cc"/>
      </node>
      <node id="68">
        <label>MHO_FringeControlInitialization.hh</label>
        <link refid="MHO__FringeControlInitialization_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>MHO_ScanDataStore.hh</label>
        <link refid="MHO__ScanDataStore_8hh"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>MHO_NotchesBuilder.cc</label>
        <link refid="MHO__NotchesBuilder_8cc"/>
      </node>
      <node id="25">
        <label>MHO_BasicFringeFitter.hh</label>
        <link refid="MHO__BasicFringeFitter_8hh"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>MHO_MK4CorelInterface.cc</label>
        <link refid="MHO__MK4CorelInterface_8cc"/>
      </node>
      <node id="106">
        <label>MHO_PyContainerStoreInterface.hh</label>
        <link refid="MHO__PyContainerStoreInterface_8hh"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>MHO_LSBOffsetBuilder.cc</label>
        <link refid="MHO__LSBOffsetBuilder_8cc"/>
      </node>
      <node id="160">
        <label>MHO_MixedSidebandNormFX.cc</label>
        <link refid="MHO__MixedSidebandNormFX_8cc"/>
      </node>
      <node id="207">
        <label>MHO_OpenCLFastFourierTransformPlan.hh</label>
        <link refid="MHO__OpenCLFastFourierTransformPlan_8hh"/>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>MHO_MultitonePhaseCorrectionBuilder.hh</label>
        <link refid="MHO__MultitonePhaseCorrectionBuilder_8hh"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>MHO_CircularFieldRotationCorrection.hh</label>
        <link refid="MHO__CircularFieldRotationCorrection_8hh"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>MHO_ContainerFileInterface.cc</label>
        <link refid="MHO__ContainerFileInterface_8cc"/>
      </node>
      <node id="199">
        <label>MHO_ElementTypeCaster.hh</label>
        <link refid="MHO__ElementTypeCaster_8hh"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>MHO_CyclicRotator.hh</label>
        <link refid="MHO__CyclicRotator_8hh"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>MHO_DCBlockBuilder.hh</label>
        <link refid="MHO__DCBlockBuilder_8hh"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>MHO_ManualChannelDelayCorrection.hh</label>
        <link refid="MHO__ManualChannelDelayCorrection_8hh"/>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>TestPCalExtraction.cc</label>
        <link refid="TestPCalExtraction_8cc"/>
      </node>
      <node id="177">
        <label>MHO_StationDelayCorrection.hh</label>
        <link refid="MHO__StationDelayCorrection_8hh"/>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>MHO_FringeFitter.hh</label>
        <link refid="MHO__FringeFitter_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>MHO_CircularFieldRotationBuilder.cc</label>
        <link refid="MHO__CircularFieldRotationBuilder_8cc"/>
      </node>
      <node id="70">
        <label>MHO_PassbandBuilder.hh</label>
        <link refid="MHO__PassbandBuilder_8hh"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ComparePcal.cc</label>
        <link refid="ComparePcal_8cc"/>
      </node>
      <node id="17">
        <label>hops2keys.cc</label>
        <link refid="hops2keys_8cc"/>
      </node>
      <node id="155">
        <label>MHO_MinWeight.hh</label>
        <link refid="MHO__MinWeight_8hh"/>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>MHO_ManualChannelPhaseCorrectionBuilder.hh</label>
        <link refid="MHO__ManualChannelPhaseCorrectionBuilder_8hh"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>MHO_FringePlotInfo.cc</label>
        <link refid="MHO__FringePlotInfo_8cc"/>
      </node>
      <node id="31">
        <label>MHO_FringePlotVisitor.hh</label>
        <link refid="MHO__FringePlotVisitor_8hh"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MHO_NDArrayWrapper.hh</label>
        <link refid="MHO__NDArrayWrapper_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>difx2hops.cc</label>
        <link refid="difx2hops_8cc"/>
      </node>
      <node id="96">
        <label>MHO_HDF5ContainerFileInterface.cc</label>
        <link refid="MHO__HDF5ContainerFileInterface_8cc"/>
      </node>
      <node id="101">
        <label>MHO_ComputePlotData.cc</label>
        <link refid="MHO__ComputePlotData_8cc"/>
      </node>
      <node id="170">
        <label>MHO_PhaseCalibrationTrim.hh</label>
        <link refid="MHO__PhaseCalibrationTrim_8hh"/>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>MHO_DataSelectionBuilder.hh</label>
        <link refid="MHO__DataSelectionBuilder_8hh"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>MHO_ComplexPointwiseMultiply.hh</label>
        <link refid="MHO__ComplexPointwiseMultiply_8hh"/>
      </node>
      <node id="213">
        <label>MHO_TableContainerBufferBuilder.hh</label>
        <link refid="MHO__TableContainerBufferBuilder_8hh"/>
      </node>
      <node id="59">
        <label>MHO_MixedPolYShiftBuilder.cc</label>
        <link refid="MHO__MixedPolYShiftBuilder_8cc"/>
      </node>
      <node id="175">
        <label>MHO_SBDTableGenerator.hh</label>
        <link refid="MHO__SBDTableGenerator_8hh"/>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>MHO_OperatorBuilder.hh</label>
        <link refid="MHO__OperatorBuilder_8hh"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>MHO_PyUnaryOperator.hh</label>
        <link refid="MHO__PyUnaryOperator_8hh"/>
      </node>
      <node id="132">
        <label>MHO_MBDelaySearch.hh</label>
        <link refid="MHO__MBDelaySearch_8hh"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>MHO_DiFXPCalProcessor.cc</label>
        <link refid="MHO__DiFXPCalProcessor_8cc"/>
      </node>
      <node id="143">
        <label>MHO_LinearDParCorrection.hh</label>
        <link refid="MHO__LinearDParCorrection_8hh"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hops2flat.cc</label>
        <link refid="hops2flat_8cc"/>
      </node>
      <node id="95">
        <label>MHO_HDF5ContainerFileInterface.hh</label>
        <link refid="MHO__HDF5ContainerFileInterface_8hh"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>MHO_MBDelaySearchCUDA.cc</label>
        <link refid="MHO__MBDelaySearchCUDA_8cc"/>
      </node>
      <node id="150">
        <label>MHO_ManualChannelPhaseCorrection.cc</label>
        <link refid="MHO__ManualChannelPhaseCorrection_8cc"/>
      </node>
      <node id="141">
        <label>MHO_IonosphericPhaseCorrection.hh</label>
        <link refid="MHO__IonosphericPhaseCorrection_8hh"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>MHO_FringeControlInitialization.cc</label>
        <link refid="MHO__FringeControlInitialization_8cc"/>
      </node>
      <node id="64">
        <label>MHO_OperatorBuilderManager.hh</label>
        <link refid="MHO__OperatorBuilderManager_8hh"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>MHO_CircularFieldRotationBuilder.hh</label>
        <link refid="MHO__CircularFieldRotationBuilder_8hh"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>MHO_DCBlock.hh</label>
        <link refid="MHO__DCBlock_8hh"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>MHO_ManualPolPhaseCorrectionBuilder.cc</label>
        <link refid="MHO__ManualPolPhaseCorrectionBuilder_8cc"/>
      </node>
      <node id="57">
        <label>MHO_MinWeightBuilder.cc</label>
        <link refid="MHO__MinWeightBuilder_8cc"/>
      </node>
      <node id="85">
        <label>MHO_MK4ScanConverterReversed.hh</label>
        <link refid="MHO__MK4ScanConverterReversed_8hh"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>MHO_IonosphericPhaseCorrection.cc</label>
        <link refid="MHO__IonosphericPhaseCorrection_8cc"/>
      </node>
      <node id="118">
        <label>MHO_HDF5ConverterDictionary.hh</label>
        <link refid="MHO__HDF5ConverterDictionary_8hh"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>MHO_DefaultPythonPlotVisitor.hh</label>
        <link refid="MHO__DefaultPythonPlotVisitor_8hh"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>MHO_FringeData.hh</label>
        <link refid="MHO__FringeData_8hh"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>MHO_DiFXBaselineProcessor.hh</label>
        <link refid="MHO__DiFXBaselineProcessor_8hh"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>MHO_DataSelectionBuilder.cc</label>
        <link refid="MHO__DataSelectionBuilder_8cc"/>
      </node>
      <node id="167">
        <label>MHO_Notches.cc</label>
        <link refid="MHO__Notches_8cc"/>
      </node>
      <node id="76">
        <label>MHO_StationDelayCorrectionBuilder.hh</label>
        <link refid="MHO__StationDelayCorrectionBuilder_8hh"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>TestMultiObjectStreaming.cc</label>
        <link refid="TestMultiObjectStreaming_8cc"/>
      </node>
      <node id="225">
        <label>MHO_NaNMasker.hh</label>
        <link refid="MHO__NaNMasker_8hh"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>fourfit4.cc</label>
        <link refid="fourfit4_8cc"/>
      </node>
      <node id="198">
        <label>MHO_MK4StationInterfaceReversed.cc</label>
        <link refid="MHO__MK4StationInterfaceReversed_8cc"/>
      </node>
      <node id="112">
        <label>MHO_DiFXScanProcessor.hh</label>
        <link refid="MHO__DiFXScanProcessor_8hh"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>MHO_ContainerDefinitions.hh</label>
        <link refid="MHO__ContainerDefinitions_8hh"/>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>MHO_Snapshot.hh</label>
        <link refid="MHO__Snapshot_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>MHO_ManualChannelDelayCorrectionBuilder.hh</label>
        <link refid="MHO__ManualChannelDelayCorrectionBuilder_8hh"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>MHO_PolProductSummationBuilder.hh</label>
        <link refid="MHO__PolProductSummationBuilder_8hh"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>MHO_WeightChannelizer.hh</label>
        <link refid="MHO__WeightChannelizer_8hh"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>MHO_DCBlock.cc</label>
        <link refid="MHO__DCBlock_8cc"/>
      </node>
      <node id="138">
        <label>MHO_DiFXBaselineProcessor.cc</label>
        <link refid="MHO__DiFXBaselineProcessor_8cc"/>
      </node>
      <node id="203">
        <label>MHO_ExtremaSearch.hh</label>
        <link refid="MHO__ExtremaSearch_8hh"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>MHO_ContainerDictionary.cc</label>
        <link refid="MHO__ContainerDictionary_8cc"/>
      </node>
      <node id="90">
        <label>MHO_Snapshot.cc</label>
        <link refid="MHO__Snapshot_8cc"/>
      </node>
      <node id="162">
        <label>MHO_MultitonePhaseCorrection.cc</label>
        <link refid="MHO__MultitonePhaseCorrection_8cc"/>
      </node>
      <node id="176">
        <label>MHO_SBDTableGenerator.cc</label>
        <link refid="MHO__SBDTableGenerator_8cc"/>
      </node>
      <node id="52">
        <label>MHO_ManualPolDelayCorrectionBuilder.hh</label>
        <link refid="MHO__ManualPolDelayCorrectionBuilder_8hh"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>MHO_VisibilityChannelizer.cc</label>
        <link refid="MHO__VisibilityChannelizer_8cc"/>
      </node>
      <node id="61">
        <label>MHO_MultitonePhaseCorrectionBuilder.cc</label>
        <link refid="MHO__MultitonePhaseCorrectionBuilder_8cc"/>
      </node>
      <node id="210">
        <label>MHO_OpenCLMultidimensionalFastFourierTransform.hh</label>
        <link refid="MHO__OpenCLMultidimensionalFastFourierTransform_8hh"/>
      </node>
      <node id="115">
        <label>MHO_DiFXInterface.cc</label>
        <link refid="MHO__DiFXInterface_8cc"/>
      </node>
      <node id="14">
        <label>CompareCorFiles.cc</label>
        <link refid="CompareCorFiles_8cc"/>
      </node>
      <node id="5">
        <label>MHO_MK4ScanConverter.hh</label>
        <link refid="MHO__MK4ScanConverter_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>MHO_ManualPolPhaseCorrection.cc</label>
        <link refid="MHO__ManualPolPhaseCorrection_8cc"/>
      </node>
      <node id="77">
        <label>MHO_StationDelayCorrectionBuilder.cc</label>
        <link refid="MHO__StationDelayCorrectionBuilder_8cc"/>
      </node>
      <node id="121">
        <label>MHO_HDF5ConversionHelpers.hh</label>
        <link refid="MHO__HDF5ConversionHelpers_8hh"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>MHO_InitialFringeInfo.cc</label>
        <link refid="MHO__InitialFringeInfo_8cc"/>
      </node>
      <node id="146">
        <label>MHO_LSBOffset.cc</label>
        <link refid="MHO__LSBOffset_8cc"/>
      </node>
      <node id="87">
        <label>MHO_MK4ScanConverterReversed.cc</label>
        <link refid="MHO__MK4ScanConverterReversed_8cc"/>
      </node>
      <node id="123">
        <label>MHO_TableContainer.hh</label>
        <link refid="MHO__TableContainer_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>MHO_SamplerLabelerBuilder.hh</label>
        <link refid="MHO__SamplerLabelerBuilder_8hh"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>MHO_FunctorBroadcaster.hh</label>
        <link refid="MHO__FunctorBroadcaster_8hh"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4" prot="public">hops::MHO_NDArrayWrapper&lt; XValueType, 1 &gt;</innerclass>
    <innernamespace refid="namespacehops">hops</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MHO_NDArrayWrapper_1_HH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MHO_NDArrayWrapper_1_HH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//this<sp/>include<sp/>file<sp/>should<sp/>not<sp/>be<sp/>used<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MHO_NDArrayWrapper_HH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>&quot;Do<sp/>not<sp/>include<sp/>MHO_NDArrayWrapper_1.hh<sp/>directly;<sp/>use<sp/>MHO_NDArrayWrapper.hh<sp/>instead.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehops" kindref="compound">hops</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>XValueType<sp/>&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&lt;<sp/>XValueType,<sp/>1<sp/>&gt;:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__ExtensibleElement" kindref="compound">MHO_ExtensibleElement</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ade0236649283b30baede52a01a687ca6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ade0236649283b30baede52a01a687ca6" kindref="member">value_type</ref><sp/>=<sp/>XValueType;</highlight></codeline>
<codeline lineno="19" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" kindref="member">index_type</ref><sp/>=<sp/>std::array&lt;<sp/>std::size_t,<sp/>1<sp/>&gt;;</highlight></codeline>
<codeline lineno="20" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac39d1cd3c8f40f178a8e7915fede6c81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::integral_constant&lt;<sp/>std::size_t,<sp/>1<sp/>&gt;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac39d1cd3c8f40f178a8e7915fede6c81" kindref="member">rank</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a7cac78b1bfe29171a09f67896e3d74ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a7cac78b1bfe29171a09f67896e3d74ca" kindref="member">MHO_NDArrayWrapper</ref>()<sp/>{<sp/>Construct(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/>};<sp/></highlight><highlight class="comment">//empty<sp/>constructor,<sp/>to<sp/>be<sp/>configured<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a26d048c4dd4d0ab616b8b2b6d13b143b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a26d048c4dd4d0ab616b8b2b6d13b143b" kindref="member">MHO_NDArrayWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/>dim)<sp/>{<sp/>Construct(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>dim);<sp/>};<sp/></highlight><highlight class="comment">//data<sp/>is<sp/>internally<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a98b1bb7b433ad44c386cf374655270ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a98b1bb7b433ad44c386cf374655270ac" kindref="member">MHO_NDArrayWrapper</ref>(XValueType*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/>dim)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Construct(ptr,<sp/>dim);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//data<sp/>is<sp/>externally<sp/>allocated/managed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a1e12ee7caab3f1e21a2c7bcbde9c89c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a1e12ee7caab3f1e21a2c7bcbde9c89c6" kindref="member">MHO_NDArrayWrapper</ref>(std::size_t<sp/>dim)<sp/>{<sp/>Construct(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;dim);<sp/>};<sp/></highlight><highlight class="comment">//data<sp/>is<sp/>internally<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a308dd83c3523031abb3c304218e00b1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a308dd83c3523031abb3c304218e00b1a" kindref="member">MHO_NDArrayWrapper</ref>(XValueType*<sp/>ptr,<sp/>std::size_t<sp/>dim)<sp/>{<sp/>Construct(ptr,<sp/>&amp;dim);<sp/>};<sp/></highlight><highlight class="comment">//data<sp/>is<sp/>externally<sp/>allocated/managed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1af07168e43153185e5b0276ccc09f4bd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1af07168e43153185e5b0276ccc09f4bd4" kindref="member">MHO_NDArrayWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Construct(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;(obj.fDims[0]));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(obj.fData.begin(),<sp/>obj.fData.end(),<sp/>fData.begin());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a08e2035be32903a62239a1bc7a1766de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a08e2035be32903a62239a1bc7a1766de" kindref="member">~MHO_NDArrayWrapper</ref>(){};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//resize<sp/>functions</highlight></codeline>
<codeline lineno="52" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac766c86aec5e348a400829846849ccf5" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac766c86aec5e348a400829846849ccf5" kindref="member">Resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/>dim)<sp/>{<sp/>Construct(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>dim);<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac956f08db3dc223013b35d6ea791dff6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac956f08db3dc223013b35d6ea791dff6" kindref="member">Resize</ref>(std::size_t<sp/>dim)<sp/>{<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac956f08db3dc223013b35d6ea791dff6" kindref="member">Resize</ref>(&amp;dim);<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>pointer<sp/>to<sp/>externally<sp/>managed<sp/>array<sp/>with<sp/>associated<sp/>dimension</highlight></codeline>
<codeline lineno="69" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a8bb064e7444cdc0865f77226e09d6600" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a8bb064e7444cdc0865f77226e09d6600" kindref="member">SetExternalData</ref>(XValueType*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/>dim)<sp/>{<sp/>Construct(ptr,<sp/>dim);<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ae05a1e804aa8f7fd248742b6021c0a6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ae05a1e804aa8f7fd248742b6021c0a6a" kindref="member">SetExternalData</ref>(XValueType*<sp/>ptr,<sp/>std::size_t<sp/>dim)<sp/>{<sp/>Construct(ptr,<sp/>&amp;dim);<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//access<sp/>to<sp/>underlying<sp/>raw<sp/>array<sp/>pointer</highlight></codeline>
<codeline lineno="85" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a3cfd9254c300fb36bcd8e986af8d81ce" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XValueType*<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a3cfd9254c300fb36bcd8e986af8d81ce" kindref="member">GetData</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData.data();<sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ab6470b93f9dc42de580736e920581098" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XValueType*<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ab6470b93f9dc42de580736e920581098" kindref="member">GetData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData.data();<sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>total<sp/>size<sp/>of<sp/>the<sp/>array</highlight></codeline>
<codeline lineno="100" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a552b9c492454f370bb2292b4ddd1a4d4" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a552b9c492454f370bb2292b4ddd1a4d4" kindref="member">GetRank</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ad05b89692cf6a0ca968a9ab70446bd12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ad05b89692cf6a0ca968a9ab70446bd12" kindref="member">GetSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fDims[0];<sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>dimensions/shape<sp/>of<sp/>the<sp/>array</highlight></codeline>
<codeline lineno="115" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6c1583f26011c36cba1cc1386f592f8c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6c1583f26011c36cba1cc1386f592f8c" kindref="member">GetDimensions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(fDims[0]);<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1af372985f8b1b1628f3392d607366f863" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1af372985f8b1b1628f3392d607366f863" kindref="member">GetDimensions</ref>(std::size_t*<sp/>dim)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>dim[0]<sp/>=<sp/>fDims[0];<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6cc9c047e47b2ca48aa3bda9141c2bd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" kindref="member">index_type</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6cc9c047e47b2ca48aa3bda9141c2bd9" kindref="member">GetDimensionArray</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fDims;<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a9a2d393530bbe18cb7653998408a58e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a9a2d393530bbe18cb7653998408a58e7" kindref="member">GetDimension</ref>(std::size_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fDims[0];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;MHO_NDArrayWrapper_1::GetDimension()<sp/>index<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>element<sp/>strides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6f5a599a20352a0432b6284a07a4d44f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6f5a599a20352a0432b6284a07a4d44f" kindref="member">GetStrides</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(fStrides[0]);<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ada80608d343d6dc36645c84a14bf7248" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ada80608d343d6dc36645c84a14bf7248" kindref="member">GetStrides</ref>(std::size_t*<sp/>strd)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>strd[0]<sp/>=<sp/>fStrides[0];<sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a96585c5919a67360181c53101fadc312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" kindref="member">index_type</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a96585c5919a67360181c53101fadc312" kindref="member">GetStrideArray</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fStrides;<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a24d7eb475f33df78b817b29090357186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a24d7eb475f33df78b817b29090357186" kindref="member">GetStride</ref>(std::size_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fStrides[0];<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//access<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//access<sp/>operator<sp/>()<sp/>--<sp/>no<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a20888a98dcbd03311236c5cd91e7448c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a20888a98dcbd03311236c5cd91e7448c" kindref="member">operator()</ref>(std::size_t<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData[idx];<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1abb1515fd990f3f31836e708787c35e4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1abb1515fd990f3f31836e708787c35e4a" kindref="member">operator()</ref>(std::size_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData[idx];<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//access<sp/>via<sp/>at()<sp/>--<sp/>same<sp/>as<sp/>operator()<sp/>but<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a05721863529d511d6da2999f3bb3b18d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a05721863529d511d6da2999f3bb3b18d" kindref="member">at</ref>(std::size_t<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData.at(idx);<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1afa3972d1d3ed3e7bdf0436c2e003c498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1afa3972d1d3ed3e7bdf0436c2e003c498" kindref="member">at</ref>(std::size_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData.at(idx);<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>1-d<sp/>case,<sp/>operator[]<sp/>is<sp/>same<sp/>as<sp/>operator()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ae2096a0435c1b1795ec9489ac3fa2012" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ae2096a0435c1b1795ec9489ac3fa2012" kindref="member">operator[]</ref>(std::size_t<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData[i];<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a555f51d83e5c4d8a65b4ec35c06d0d12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a555f51d83e5c4d8a65b4ec35c06d0d12" kindref="member">operator[]</ref>(std::size_t<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData[i];<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a07234f770a617a6962dfae1f45ca3cba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a07234f770a617a6962dfae1f45ca3cba" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Construct(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;(rhs.fDims[0]));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(rhs.fData.begin(),<sp/>rhs.fData.end(),<sp/>this-&gt;fData.begin());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convenience<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a4e2582bfd1fc3a28ca5f48f41b2aa49b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a4e2582bfd1fc3a28ca5f48f41b2aa49b" kindref="member">SetArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XValueType&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fDims[0];<sp/>i++)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData[i]<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a2e9f236a8ec358235efb11512176ba1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a2e9f236a8ec358235efb11512176ba1f" kindref="member">ZeroArray</ref>()<sp/>{<sp/>std::memset(&amp;(fData[0]),<sp/>0,<sp/>fData.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(XValueType));<sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//expensive<sp/>copy<sp/>(as<sp/>opposed<sp/>to<sp/>the<sp/>assignment<sp/>operator,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pointers<sp/>to<sp/>exernally<sp/>managed<sp/>memory<sp/>are<sp/>not<sp/>transferred)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//but<sp/>copied<sp/>instead,<sp/>inteally<sp/>managed<sp/>memory<sp/>is<sp/>also<sp/>copied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6eb05fd975c9f881a7e7af0b4dcb570d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a6eb05fd975c9f881a7e7af0b4dcb570d" kindref="member">Copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Construct(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;(rhs.fDims[0]));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(rhs.fData.begin(),<sp/>rhs.fData.end(),<sp/>this-&gt;fData.begin());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//append<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>addition<sp/>to<sp/>the<sp/>end<sp/>of<sp/>vector<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>int<sp/>Append(const<sp/>MHO_NDArrayWrapper&amp;<sp/>addition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(this<sp/>==<sp/>&amp;addition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_error(&quot;containers&quot;,<sp/>&quot;cannot<sp/>append<sp/>1d-array<sp/>to<sp/>itself.&quot;<sp/>&lt;&lt;<sp/>eom);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XValueType*<sp/>&amp;(fData[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>fExternallyManaged;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>XValueType<sp/>&gt;<sp/>fData;<sp/>//used<sp/>for<sp/>internally<sp/>managed<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_type<sp/>fDims;<sp/>//size<sp/>of<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_type<sp/>fStrides;<sp/>//strides<sp/>between<sp/>elements<sp/>in<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable<sp/>index_type<sp/>fTmp;<sp/>//temp<sp/>index<sp/>workspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>fDims[0];<sp/>//total<sp/>size<sp/>of<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>fData.reserve(<sp/>fDims[0]<sp/>+<sp/>addition.fDims[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//in-case<sp/>our<sp/>re-allocation<sp/>has<sp/>triggered<sp/>a<sp/>move,<sp/>we<sp/>need<sp/>to<sp/>update<sp/>the<sp/>&amp;(fData[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(addition.fExternallyManaged)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData.insert(addition.end(),<sp/>addition.begin(),<sp/>addition.end());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(fData[0])<sp/>=<sp/>&amp;(fData[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDims[0]<sp/>=<sp/>fData.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDims[0]<sp/>=<sp/>fDims[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fStrides<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Construct(nullptr,<sp/><sp/>&amp;(rhs.fDims[0]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(fDims[0]<sp/>!=<sp/>0){std::copy(rhs.fData.begin(),<sp/>rhs.fData.end(),<sp/>this-&gt;fData.begin()<sp/>);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//linear<sp/>offset<sp/>into<sp/>the<sp/>array<sp/>--<sp/>no<sp/>real<sp/>utility<sp/>in<sp/>1-d<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac28454108cb7fa16aa164c1a14ac6b08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ac28454108cb7fa16aa164c1a14ac6b08" kindref="member">GetOffsetForIndices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/>index)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index[0];<sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a4a35eaf9938f5f33bc666883034d733c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" kindref="member">index_type</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a4a35eaf9938f5f33bc666883034d733c" kindref="member">GetIndicesForOffset</ref>(std::size_t<sp/>offset)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" kindref="member">index_type</ref><sp/>val;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[0]<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//here<sp/>mainly<sp/>so<sp/>table<sp/>containers<sp/>with<sp/>rank<sp/>1<sp/>still<sp/>work,<sp/>in<sp/>this<sp/>case<sp/>a<sp/>sub-view<sp/>just<sp/>gets<sp/>you<sp/>a<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>XIndexTypeS<sp/>&gt;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(XIndexTypeS)<sp/>&lt;<sp/>1),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&lt;<sp/>XValueType,<sp/>1<sp/>-<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(XIndexTypeS))<sp/>&gt;<sp/>&gt;::type</highlight></codeline>
<codeline lineno="253" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a8be7ce16e457a3089506a6571fe36393" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a8be7ce16e457a3089506a6571fe36393" kindref="member">SubView</ref>(XIndexTypeS...<sp/>idx)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;<sp/>std::size_t,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(XIndexTypeS)<sp/>&gt;<sp/>leading_idx<sp/>=<sp/>{{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx)...}};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTmp[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>leading_idx.size();<sp/>i++)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTmp[i]<sp/>=<sp/>leading_idx[i];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>offset<sp/>=<sp/>MHO_NDArrayMath::OffsetFromRowMajorIndex&lt;<sp/>1<sp/>&gt;(&amp;(fDims[0]),<sp/>&amp;(fTmp[0]));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;<sp/>std::size_t,<sp/>1<sp/>-<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(XIndexTypeS))<sp/>&gt;<sp/>dim;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim.size();<sp/>i++)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim[i]<sp/>=<sp/>fDims[i<sp/>+<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(XIndexTypeS))];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&lt;<sp/>XValueType,<sp/>1<sp/>-<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(XIndexTypeS))<sp/>&gt;(VPTR_AT(fData,<sp/>offset),<sp/>&amp;(dim[0]));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>function<sp/>is<sp/>mainly<sp/>here<sp/>to<sp/>allow<sp/>for<sp/>1-d<sp/>table<sp/>containers,<sp/>there&apos;s<sp/>not<sp/>much<sp/>utility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//of<sp/>a<sp/>&apos;slice<sp/>view&apos;<sp/>of<sp/>a<sp/>1-d<sp/>array<sp/>(you<sp/>just<sp/>get<sp/>the<sp/>same<sp/>array<sp/>back...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a9a15db3a0c00e668cea23d48e7f815a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayView" kindref="compound">MHO_NDArrayView&lt; XValueType, 1 &gt;</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a9a15db3a0c00e668cea23d48e7f815a7" kindref="member">SliceView</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//just<sp/>return<sp/>a<sp/>1d<sp/>array<sp/>view<sp/>of<sp/>this<sp/>1-d<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayView" kindref="compound">MHO_NDArrayView&lt; XValueType, 1 &gt;</ref>(&amp;(fData[0]),<sp/>&amp;(fDims[0]),<sp/>&amp;(fStrides[0]));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a0731de4e1aedab709aaf93440cd620ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a0731de4e1aedab709aaf93440cd620ec" kindref="member">ValueAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" kindref="member">index_type</ref>&amp;<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData[idx[0]];<sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a768d65fa71ce8991ffd959c6307d1770" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XValueType&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a768d65fa71ce8991ffd959c6307d1770" kindref="member">ValueAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a62c6acd5033e4e594a68e6c3d566ac37" kindref="member">index_type</ref>&amp;<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fData[idx[0]];<sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>place<sp/>multiplication<sp/>by<sp/>a<sp/>scalar<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;<sp/>std::is_same&lt;<sp/>XValueType,<sp/>T<sp/>&gt;::value<sp/>or<sp/>std::is_integral&lt;<sp/>T<sp/>&gt;::value<sp/>or</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_floating_point&lt;<sp/>T<sp/>&gt;::value,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>&gt;::type<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a706d8f6944ac5e9009aa39e5a06331f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a706d8f6944ac5e9009aa39e5a06331f3" kindref="member">operator*=</ref>(T<sp/>aScalar)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>length<sp/>=<sp/>fData.size();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData[i]<sp/>*=<sp/>aScalar;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>place<sp/>addition<sp/>by<sp/>a<sp/>scalar<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;<sp/>std::is_same&lt;<sp/>XValueType,<sp/>T<sp/>&gt;::value<sp/>or<sp/>std::is_integral&lt;<sp/>T<sp/>&gt;::value<sp/>or</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_floating_point&lt;<sp/>T<sp/>&gt;::value,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>&gt;::type<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a506081334b416e500cdc23009bbca429" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a506081334b416e500cdc23009bbca429" kindref="member">operator+=</ref>(T<sp/>aScalar)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>length<sp/>=<sp/>fData.size();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData[i]<sp/>+=<sp/>aScalar;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>place<sp/>subraction<sp/>by<sp/>a<sp/>scalar<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;<sp/>std::is_same&lt;<sp/>XValueType,<sp/>T<sp/>&gt;::value<sp/>or<sp/>std::is_integral&lt;<sp/>T<sp/>&gt;::value<sp/>or</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_floating_point&lt;<sp/>T<sp/>&gt;::value,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>&gt;::type<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a06c57894bc856474cc2690ae305117e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a06c57894bc856474cc2690ae305117e8" kindref="member">operator-=</ref>(T<sp/>aScalar)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>length<sp/>=<sp/>fData.size();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData[i]<sp/>-=<sp/>aScalar;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>place<sp/>point-wise<sp/>multiplication<sp/>by<sp/>another<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a2728ee745db3233e728ac6a7566457fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a2728ee745db3233e728ac6a7566457fa" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>anArray)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!HaveSameNumberOfElements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;anArray))</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;MHO_NDArrayWrapper::*=<sp/>size<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>length<sp/>=<sp/>fData.size();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData[i]<sp/>*=<sp/>anArray.fData[i];</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>place<sp/>point-wise<sp/>addition<sp/>by<sp/>another<sp/>array<sp/>of<sp/>the<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1afa5fce98b5214f89bbaadba664e62bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1afa5fce98b5214f89bbaadba664e62bf7" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>anArray)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!HaveSameNumberOfElements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;anArray))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;MHO_NDArrayWrapper::+=<sp/>size<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>length<sp/>=<sp/>fData.size();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData[i]<sp/>+=<sp/>anArray.fData[i];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>place<sp/>point-wise<sp/>subtraction<sp/>of<sp/>another<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a3166a84cd377959062f7d9dee6f155b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a3166a84cd377959062f7d9dee6f155b5" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper" kindref="compound">MHO_NDArrayWrapper</ref>&amp;<sp/>anArray)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!HaveSameNumberOfElements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;anArray))</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;MHO_NDArrayWrapper::-=<sp/>size<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>length<sp/>=<sp/>fData.size();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData[i]<sp/>-=<sp/>anArray.fData[i];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>XValueType<sp/>&gt;<sp/>fData;<sp/></highlight><highlight class="comment">//used<sp/>for<sp/>internally<sp/>managed<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref><sp/>fDims;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//size<sp/>of<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref><sp/>fStrides;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//strides<sp/>between<sp/>elements<sp/>in<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1affefe47ce5c642526603332ab58c5f69" kindref="member">index_type</ref><sp/>fTmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//temp<sp/>index<sp/>workspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Construct(XValueType*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/>dim)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//default<sp/>construction<sp/>(empty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDims[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fStrides[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dim<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dimensions<sp/>known</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dim<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDims[0]<sp/>=<sp/>dim[0];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fStrides[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fData.resize(fDims[0]);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//if<sp/>given<sp/>a<sp/>ptr,<sp/>copy<sp/>in<sp/>data<sp/>from<sp/>this<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(&amp;(fData[0]),<sp/>ptr,<sp/>fData.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(XValueType));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>iterator<sp/>definitions<sp/>//////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="407" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1aed1615912679967d6323a7c72054307f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">iterator</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">MHO_BidirectionalIterator&lt; XValueType &gt;</ref>;</highlight></codeline>
<codeline lineno="408" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a5b501f9cd06692387d6a2dde5da1941f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">stride_iterator</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">MHO_BidirectionalStrideIterator&lt; XValueType &gt;</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a85c7943afd0401b17e36ac4a2659da20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">const_iterator</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">MHO_BidirectionalConstIterator&lt; XValueType &gt;</ref>;</highlight></codeline>
<codeline lineno="411" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a7594a6634e599349d9140e8957f73de0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">const_stride_iterator</ref><sp/>=<sp/><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1abad23b48b91d74d54c8f080a383dcc3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1abad23b48b91d74d54c8f080a383dcc3d" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" kindref="member">iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0]),<sp/>fData.size());<sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a9ec8150b07990a1f1994bdaa6f5be148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a9ec8150b07990a1f1994bdaa6f5be148" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" kindref="member">iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/>fData.size(),<sp/>fData.size());<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ae98c43b3fccf47c625b21073d2b3632b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalIterator" kindref="compound">iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1ae98c43b3fccf47c625b21073d2b3632b" kindref="member">iterator_at</ref>(std::size_t<sp/>offset)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1abb1638428d710f93ff8e0f64e3f6fa0b" kindref="member">iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/><ref refid="max555_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">std::min</ref>(offset,<sp/>fData.size()),<sp/>fData.size());</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a901da362648b266bc69231fe84334816" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">const_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a901da362648b266bc69231fe84334816" kindref="member">cbegin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" kindref="member">const_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0]),<sp/>fData.size());<sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a7e47c1ce77ab259a3aa44692d5b274d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">const_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a7e47c1ce77ab259a3aa44692d5b274d8" kindref="member">cend</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" kindref="member">const_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/>fData.size(),<sp/>fData.size());<sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1af761ac2e487b598b0f6db8d82dee5b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalConstIterator" kindref="compound">const_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1af761ac2e487b598b0f6db8d82dee5b52" kindref="member">citerator_at</ref>(std::size_t<sp/>offset)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="427"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1a0bbcb7c60ab86b7f58cdd376954005c9" kindref="member">const_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/><ref refid="max555_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">std::min</ref>(offset,<sp/>fData.size()),<sp/>fData.size());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a4de0696da0984f4776378c6f9f680b89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">stride_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a4de0696da0984f4776378c6f9f680b89" kindref="member">stride_begin</ref>(std::size_t<sp/>stride)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" kindref="member">stride_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0]),<sp/>fData.size(),<sp/>stride);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1aa71abb4809a11e1dd788fe9b6a481980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">stride_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1aa71abb4809a11e1dd788fe9b6a481980" kindref="member">stride_end</ref>(std::size_t<sp/>stride)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" kindref="member">stride_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/>fData.size(),<sp/>fData.size(),<sp/>stride);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1adee345d1c41ea8069fa634cf66969be6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalStrideIterator" kindref="compound">stride_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1adee345d1c41ea8069fa634cf66969be6" kindref="member">stride_iterator_at</ref>(std::size_t<sp/>offset,<sp/>std::size_t<sp/>stride)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1a7923f97d7660ae966a2a6a1a8347bc92" kindref="member">stride_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/><ref refid="max555_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">std::min</ref>(offset,<sp/>fData.size()),<sp/>fData.size(),<sp/>stride);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a56a656e5370db5f88f8b533fea7bbf43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">const_stride_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a56a656e5370db5f88f8b533fea7bbf43" kindref="member">cstride_begin</ref>(std::size_t<sp/>stride)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="447"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" kindref="member">const_stride_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0]),<sp/>fData.size(),<sp/>stride);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a256b32bb41faf0a2e61f26c9dd41e19e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">const_stride_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a256b32bb41faf0a2e61f26c9dd41e19e" kindref="member">cstride_end</ref>(std::size_t<sp/>stride)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="452"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" kindref="member">const_stride_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/>fData.size(),<sp/>fData.size(),<sp/>stride);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a71d725843d180ea3e723d3fe89d0cebd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">const_stride_iterator</ref><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_3_01XValueType_00_011_01_4_1a71d725843d180ea3e723d3fe89d0cebd" kindref="member">cstride_iterator_at</ref>(std::size_t<sp/>offset,<sp/>std::size_t<sp/>stride)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="457"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhops_1_1MHO__NDArrayWrapper_1abcdb068ba89ba14eb6251b77f03ea67f" kindref="member">const_stride_iterator</ref>(&amp;(fData[0]),<sp/>&amp;(fData[0])<sp/>+<sp/><ref refid="max555_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">std::min</ref>(offset,<sp/>fData.size()),<sp/>fData.size(),<sp/>stride);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal">};</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Containers/include/MHO_NDArrayWrapper_1.hh"/>
  </compounddef>
</doxygen>
