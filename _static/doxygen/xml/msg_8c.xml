<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="msg_8c" kind="file" language="C++">
    <compoundname>msg.c</compoundname>
    <includes refid="msg_8h" local="yes">msg.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>msg.c</label>
        <link refid="msg_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="msg_8c_1ac4693c7c31653d6304e6b816726f4482" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int msglev</definition>
        <argsstring></argsstring>
        <name>msglev</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" line="4" column="5" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char progname[256]</definition>
        <argsstring>[256]</argsstring>
        <name>progname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" line="3" column="6" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="msg_8c_1ae6d2b116b3b724573c3f383d81b21924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* get_progname</definition>
        <argsstring>()</argsstring>
        <name>get_progname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" line="14" column="12" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="msg_8c_1a02560f9686da0fc5d8020e1a070b884b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msg</definition>
        <argsstring>(const char *string, int level,...)</argsstring>
        <name>msg</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" line="25" column="6" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" bodystart="25" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="msg_8c_1ae2aa6e8913c5d96af651065245a39ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_msglev</definition>
        <argsstring>(int lev)</argsstring>
        <name>set_msglev</name>
        <param>
          <type>int</type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" line="19" column="6" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="msg_8c_1a41f224f3550cd182f5861fcfd034b734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_progname</definition>
        <argsstring>(const char *local_progname)</argsstring>
        <name>set_progname</name>
        <param>
          <type>const char *</type>
          <declname>local_progname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" line="6" column="6" bodyfile="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c" bodystart="6" bodyend="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="msg_8h" kindref="compound">msg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" kindref="member">progname</ref>[256];</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="msg_8c_1ac4693c7c31653d6304e6b816726f4482" kindref="member">msglev</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="msg_8c_1a41f224f3550cd182f5861fcfd034b734" kindref="member">set_progname</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>local_progname)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;256;i++){<ref refid="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" kindref="member">progname</ref>[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<ref refid="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" kindref="member">progname</ref>,<sp/>local_progname,<sp/>255);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" kindref="member">progname</ref>[255]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="msg_8c_1ae6d2b116b3b724573c3f383d81b21924" kindref="member">get_progname</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(<ref refid="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" kindref="member">progname</ref>[0]);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="msg_8c_1ae2aa6e8913c5d96af651065245a39ef4" kindref="member">set_msglev</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="msg_8c_1ac4693c7c31653d6304e6b816726f4482" kindref="member">msglev</ref><sp/>=<sp/>lev;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>understand<sp/>this,<sp/>check<sp/>stdarg<sp/>man<sp/>pages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="msg_8c_1a02560f9686da0fc5d8020e1a070b884b" kindref="member">msg</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...)<sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extern<sp/>int<sp/>msglev;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extern<sp/>char<sp/>progname[];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;=<sp/><ref refid="msg_8c_1ac4693c7c31653d6304e6b816726f4482" kindref="member">msglev</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start<sp/>(args,<sp/>level);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" kindref="member">progname</ref>)<sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="msg_8c_1a6888d0a6051abf43bfad8085db4a9f82" kindref="member">progname</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfprintf<sp/>(stderr,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>args);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putc<sp/>(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>stderr);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end<sp/>(args);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush<sp/>(stderr);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/barrettj/work/projects/hops-git/source/c_src/msg/src/msg.c"/>
  </compounddef>
</doxygen>
