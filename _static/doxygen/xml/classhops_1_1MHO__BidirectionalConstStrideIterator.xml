<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__BidirectionalConstStrideIterator" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_BidirectionalConstStrideIterator</compoundname>
    <includes refid="MHO__BidirectionalStrideIterator_8hh" local="no">MHO_BidirectionalStrideIterator.hh</includes>
    <templateparamlist>
      <param>
        <type>typename XValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1acf786ed1a0939d0d2b7922c79ff9006e" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="146" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a5d701707c212c4a991c02813ff515fe4" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>using hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::iterator_category =  std::bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="145" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" prot="public" static="no">
        <type>const XValueType *</type>
        <definition>using hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::pointer =  const XValueType*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="144" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a74d9b9bceab384d90d6ede07a2069d23" prot="public" static="no">
        <type>const XValueType &amp;</type>
        <definition>using hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::reference =  const XValueType&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="143" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" prot="public" static="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">MHO_BidirectionalConstStrideIterator</ref></type>
        <definition>using hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::self_type =  MHO_BidirectionalConstStrideIterator</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="141" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a3196af9e532ba89e37526ca13fe96fe5" prot="public" static="no">
        <type>XValueType</type>
        <definition>using hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::value_type =  XValueType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="142" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a557d0806e8435b8cafff393a64c12c34" prot="private" static="no" mutable="no">
        <type>const <ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" kindref="member">pointer</ref></type>
        <definition>const pointer hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::fBegin</definition>
        <argsstring></argsstring>
        <name>fBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="237" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a403921b38f187a9a75dd98731c8a6cba" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::fLength</definition>
        <argsstring></argsstring>
        <name>fLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="239" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1aa4522f5bafbc0587994534500fdde099" prot="private" static="no" mutable="no">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::fPtr</definition>
        <argsstring></argsstring>
        <name>fPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="238" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a395e746fdd299486be716562a9577f46" prot="private" static="no" mutable="no">
        <type>ptrdiff_t</type>
        <definition>ptrdiff_t hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::fStride</definition>
        <argsstring></argsstring>
        <name>fStride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="240" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a500f949cbb7a91191f5137be0bf9603a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::MHO_BidirectionalConstStrideIterator</definition>
        <argsstring>(const self_type &amp;copy)</argsstring>
        <name>MHO_BidirectionalConstStrideIterator</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="152" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="152" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a00c6e96c8df3433a7e9c85774cddee38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::MHO_BidirectionalConstStrideIterator</definition>
        <argsstring>(pointer begin_ptr, pointer ptr, std::size_t length, std::size_t stride)</argsstring>
        <name>MHO_BidirectionalConstStrideIterator</name>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" kindref="member">pointer</ref></type>
          <declname>begin_ptr</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="148" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a22dc4e5b97fe34d41a1c94e3d4da9f8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::GetOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="232" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a95bd72ccafef8d352f9e5d3d8bd90ce6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::GetPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="230" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a26b13fa68fa57d2f1bf40dc8c7d69329" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="234" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1ad100ded6a9568b332968a6ec7e8bda60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator!=</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="228" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a90c4705536bc70144f984f5d67a126d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a74d9b9bceab384d90d6ede07a2069d23" kindref="member">reference</ref></type>
        <definition>reference hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="210" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1acec93f6abd7ad585aae7faa6a823333b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator+</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="195" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a62579d8fd8e41e08422461f56c4f92bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="155" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a2966808e25bfb240ec526119d640b4c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="167" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1ac7aff59b2d7353042b919233e9943ec3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator+=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="183" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="183" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1ae17f1d0546b3fc84f317ad6f43f0cf11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ptrdiff_t</type>
        <definition>std::ptrdiff_t hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const self_type &amp;iter)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="181" column="24" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1aa4a5606e972337b41dd8ecec3a188f40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator-</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="202" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="202" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a48000cd587b4a830b80142e234ac9f10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="161" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1ae67cb44c6ea2f59505bb6bf69da04a7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="174" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="174" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a74f5f884e9a97a995d3a52d25b3e59ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator-=</definition>
        <argsstring>(const std::ptrdiff_t &amp;diff)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const std::ptrdiff_t &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="189" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a12c1ad7c80fd868aedc284cd8e6f606f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" kindref="member">pointer</ref></type>
        <definition>pointer hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="212" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1aa4c8d1fe36ea62e5ac6870173b3cdd9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref></type>
        <definition>self_type hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator=</definition>
        <argsstring>(const self_type &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="214" column="19" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="214" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__BidirectionalConstStrideIterator_1a6fad66d3f337f58509dce742b07d9800" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hops::MHO_BidirectionalConstStrideIterator&lt; XValueType &gt;::operator==</definition>
        <argsstring>(const self_type &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" kindref="member">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="226" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="226" bodyend="226"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__BidirectionalConstStrideIterator" kindref="compound">MHO_BidirectionalConstStrideIterator</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" line="138" column="13" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Utilities/include/MHO_BidirectionalStrideIterator.hh" bodystart="139" bodyend="241"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1acf786ed1a0939d0d2b7922c79ff9006e" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>difference_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a557d0806e8435b8cafff393a64c12c34" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>fBegin</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a403921b38f187a9a75dd98731c8a6cba" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>fLength</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1aa4522f5bafbc0587994534500fdde099" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>fPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a395e746fdd299486be716562a9577f46" prot="private" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>fStride</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a22dc4e5b97fe34d41a1c94e3d4da9f8c" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>GetOffset</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a95bd72ccafef8d352f9e5d3d8bd90ce6" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>GetPtr</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a26b13fa68fa57d2f1bf40dc8c7d69329" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>IsValid</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a5d701707c212c4a991c02813ff515fe4" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>iterator_category</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a00c6e96c8df3433a7e9c85774cddee38" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>MHO_BidirectionalConstStrideIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a500f949cbb7a91191f5137be0bf9603a" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>MHO_BidirectionalConstStrideIterator</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1ad100ded6a9568b332968a6ec7e8bda60" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator!=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a90c4705536bc70144f984f5d67a126d0" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator*</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1acec93f6abd7ad585aae7faa6a823333b" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator+</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a62579d8fd8e41e08422461f56c4f92bb" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a2966808e25bfb240ec526119d640b4c5" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator++</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1ac7aff59b2d7353042b919233e9943ec3" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator+=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1ae17f1d0546b3fc84f317ad6f43f0cf11" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1aa4a5606e972337b41dd8ecec3a188f40" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator-</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a48000cd587b4a830b80142e234ac9f10" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1ae67cb44c6ea2f59505bb6bf69da04a7a" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator--</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a74f5f884e9a97a995d3a52d25b3e59ff" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator-=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a12c1ad7c80fd868aedc284cd8e6f606f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1aa4c8d1fe36ea62e5ac6870173b3cdd9b" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator=</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a6fad66d3f337f58509dce742b07d9800" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>operator==</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a139d4342a90fd8d9b97f1821c5b4554f" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>pointer</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a74d9b9bceab384d90d6ede07a2069d23" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>reference</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a7a0b82a1b2e8f5f45ae152a0fe199fe0" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>self_type</name></member>
      <member refid="classhops_1_1MHO__BidirectionalConstStrideIterator_1a3196af9e532ba89e37526ca13fe96fe5" prot="public" virt="non-virtual"><scope>hops::MHO_BidirectionalConstStrideIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
