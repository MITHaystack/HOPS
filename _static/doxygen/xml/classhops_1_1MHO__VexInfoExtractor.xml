<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__VexInfoExtractor" kind="class" language="C++" prot="public">
    <compoundname>hops::MHO_VexInfoExtractor</compoundname>
    <includes refid="MHO__VexInfoExtractor_8hh" local="no">MHO_VexInfoExtractor.hh</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1a1a2d338511689997dcc7b18258588685" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_VexInfoExtractor::MHO_VexInfoExtractor</definition>
        <argsstring>()</argsstring>
        <name>MHO_VexInfoExtractor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="35" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1a29d730a5f7a528e9bce749a2e480f0e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_VexInfoExtractor::~MHO_VexInfoExtractor</definition>
        <argsstring>()</argsstring>
        <name>~MHO_VexInfoExtractor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="36" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" bodystart="36" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1a8576c237dcc908644aabb2ff5ba58f5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_VexInfoExtractor::calculate_dec_deg</definition>
        <argsstring>(std::string dec)</argsstring>
        <name>calculate_dec_deg</name>
        <param>
          <type>std::string</type>
          <declname>dec</declname>
        </param>
        <briefdescription>
<para>Calculates declination in decimal degrees from a string representation containing degrees, minutes, and seconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dec</parametername>
</parameternamelist>
<parameterdescription>
<para>Input declination string in format &apos;dddÂ°mm&apos;mm.mmm"&apos; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Declination in decimal degrees </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="107" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="523" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1a7f0217ac8ee6951cb688a294a7733048" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hops::MHO_VexInfoExtractor::calculate_ra_hrs</definition>
        <argsstring>(std::string ra)</argsstring>
        <name>calculate_ra_hrs</name>
        <param>
          <type>std::string</type>
          <declname>ra</declname>
        </param>
        <briefdescription>
<para>Converts right ascension string to decimal hours. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ra</parametername>
</parameternamelist>
<parameterdescription>
<para>Input right ascension in &apos;hh:mm:ss.sss&apos; format. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Right ascension in decimal hours. </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="98" column="23" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="463" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1a1d1d3380c92c73b191450bf98d8804b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint64__t" kindref="compound">int64_t</ref></type>
        <definition>int64_t hops::MHO_VexInfoExtractor::calculate_start_time_seconds_since_1980</definition>
        <argsstring>(std::string start_date)</argsstring>
        <name>calculate_start_time_seconds_since_1980</name>
        <param>
          <type>std::string</type>
          <declname>start_date</declname>
        </param>
        <briefdescription>
<para>Calculates time in seconds since 1980-01-01T00:00:00.0Z for a given start date. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_date</parametername>
</parameternamelist>
<parameterdescription>
<para>Input date string in VEX format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Time in seconds since 1980 </para>
</simplesect>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="116" column="24" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="583" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1abe82c3a6bcc7b3a6cff9a47e772c7992" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_VexInfoExtractor::extract_clock_early</definition>
        <argsstring>(const mho_json &amp;clk, double &amp;clock_early, std::string &amp;clock_early_units, double &amp;clock_rate, std::string &amp;clock_rate_units, std::string &amp;origin, std::string &amp;validity)</argsstring>
        <name>extract_clock_early</name>
        <param>
          <type>const <ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> &amp;</type>
          <declname>clk</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>clock_early</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>clock_early_units</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>clock_rate</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>clock_rate_units</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>validity</declname>
        </param>
        <briefdescription>
<para>Extracts clock early data from a JSON object and populates output parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clk</parametername>
</parameternamelist>
<parameterdescription>
<para>Input JSON object containing clock data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_early</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: Early clock value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_early_units</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: Units for early clock value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: Clock rate value (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_rate_units</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: Units for clock rate value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: Origin epoch string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validity</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: Validity epoch string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="51" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="7" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1a4f0670b7eb1f0ac075960b1f5d77b970" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_VexInfoExtractor::extract_clock_model</definition>
        <argsstring>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</argsstring>
        <name>extract_clock_model</name>
        <param>
          <type>const <ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> &amp;</type>
          <declname>vexInfo</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__ParameterStore" kindref="compound">MHO_ParameterStore</ref> *</type>
          <declname>paramStore</declname>
        </param>
        <briefdescription>
<para>Extracts clock model information from vexInfo and stores it in paramStore for reference and remote stations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vexInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vexInfo containing clock model data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramStore</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter store to hold extracted clock model information </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="62" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="47" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1a493de363b10b56f032cddd7a9233118a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_VexInfoExtractor::extract_sample_rate</definition>
        <argsstring>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</argsstring>
        <name>extract_sample_rate</name>
        <param>
          <type>const <ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> &amp;</type>
          <declname>vexInfo</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__ParameterStore" kindref="compound">MHO_ParameterStore</ref> *</type>
          <declname>paramStore</declname>
        </param>
        <briefdescription>
<para>Extracts sample rates for reference and remote stations from VEX info. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vexInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Input VEX info as mho_json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramStore</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter store for sample rate values and units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="80" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="179" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1aab2cdfbafe51a6b9dadeedceb0718b1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_VexInfoExtractor::extract_sampler_bits</definition>
        <argsstring>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</argsstring>
        <name>extract_sampler_bits</name>
        <param>
          <type>const <ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> &amp;</type>
          <declname>vexInfo</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__ParameterStore" kindref="compound">MHO_ParameterStore</ref> *</type>
          <declname>paramStore</declname>
        </param>
        <briefdescription>
<para>Extracts and stores N sampler bits used at reference and remote stations from vexInfo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vexInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Input mho_json containing vex information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramStore</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classhops_1_1MHO__ParameterStore" kindref="compound">MHO_ParameterStore</ref> to store extracted sample bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="71" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="135" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__VexInfoExtractor_1ac41cf457e570b607c3ba73c6acb4acfb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_VexInfoExtractor::extract_vex_info</definition>
        <argsstring>(const mho_json &amp;vexInfo, MHO_ParameterStore *paramStore)</argsstring>
        <name>extract_vex_info</name>
        <param>
          <type>const <ref refid="MHO__JSONHeaderWrapper_8hh_1ad8862af8dd9e65e2990665b6bbfcb6fe" kindref="member">mho_json</ref> &amp;</type>
          <declname>vexInfo</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__ParameterStore" kindref="compound">MHO_ParameterStore</ref> *</type>
          <declname>paramStore</declname>
        </param>
        <briefdescription>
<para>Extracts VEX info from JSON and stores relevant parameters in <ref refid="classhops_1_1MHO__ParameterStore" kindref="compound">MHO_ParameterStore</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vexInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Input JSON containing VEX information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramStore</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classhops_1_1MHO__ParameterStore" kindref="compound">MHO_ParameterStore</ref> object to store extracted parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is a static function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="89" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/src/MHO_VexInfoExtractor.cc" bodystart="255" bodyend="461"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__VexInfoExtractor" kindref="compound">MHO_VexInfoExtractor</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>extract useful information from the vex file and place in parameter store</para>
<para><simplesect kind="author"><para>Email: </para>
</simplesect>
<simplesect kind="date"><para>Wed Sep 20 16:12:23 2023 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" line="31" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Fringe/include/MHO_VexInfoExtractor.hh" bodystart="32" bodyend="117"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1a8576c237dcc908644aabb2ff5ba58f5b" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>calculate_dec_deg</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1a7f0217ac8ee6951cb688a294a7733048" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>calculate_ra_hrs</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1a1d1d3380c92c73b191450bf98d8804b1" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>calculate_start_time_seconds_since_1980</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1abe82c3a6bcc7b3a6cff9a47e772c7992" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>extract_clock_early</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1a4f0670b7eb1f0ac075960b1f5d77b970" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>extract_clock_model</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1a493de363b10b56f032cddd7a9233118a" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>extract_sample_rate</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1aab2cdfbafe51a6b9dadeedceb0718b1e" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>extract_sampler_bits</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1ac41cf457e570b607c3ba73c6acb4acfb" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>extract_vex_info</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1a1a2d338511689997dcc7b18258588685" prot="public" virt="non-virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>MHO_VexInfoExtractor</name></member>
      <member refid="classhops_1_1MHO__VexInfoExtractor_1a29d730a5f7a528e9bce749a2e480f0e1" prot="public" virt="virtual"><scope>hops::MHO_VexInfoExtractor</scope><name>~MHO_VexInfoExtractor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
