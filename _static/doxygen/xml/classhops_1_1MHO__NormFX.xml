<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhops_1_1MHO__NormFX" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>hops::MHO_NormFX</compoundname>
    <basecompoundref refid="classhops_1_1MHO__UnaryOperator" prot="public" virt="non-virtual">hops::MHO_UnaryOperator&lt; visibility_type &gt;</basecompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__MixedSidebandNormFX" prot="public" virt="non-virtual">hops::MHO_MixedSidebandNormFX</derivedcompoundref>
    <derivedcompoundref refid="classhops_1_1MHO__SingleSidebandNormFX" prot="public" virt="non-virtual">hops::MHO_SingleSidebandNormFX</derivedcompoundref>
    <includes refid="MHO__NormFX_8hh" local="no">MHO_NormFX.hh</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" prot="protected" static="no">
        <type><ref refid="namespacehops_1afcc97dd4e78b9092817b1dbb0c561e78" kindref="member">visibility_type</ref></type>
        <definition>using hops::MHO_NormFX::XArgType =  visibility_type</definition>
        <argsstring></argsstring>
        <name>XArgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="40" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhops_1_1MHO__NormFX_1a333e509f67e5a0880a17a48cfde7ee96" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref> *</type>
        <definition>weight_type* hops::MHO_NormFX::fWeights</definition>
        <argsstring></argsstring>
        <name>fWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="78" column="21" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhops_1_1MHO__NormFX_1a0f419578c5f985757c0420b1c2370f0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hops::MHO_NormFX::MHO_NormFX</definition>
        <argsstring>()</argsstring>
        <name>MHO_NormFX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="29" column="9" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NormFX_1a4c9a0aadc7f0066fff7f37e9f034226c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hops::MHO_NormFX::~MHO_NormFX</definition>
        <argsstring>()</argsstring>
        <name>~MHO_NormFX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="30" column="17" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NormFX_1a1a5f1fe4e8b9926f54c3f52271069fe0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hops::MHO_NormFX::SetWeights</definition>
        <argsstring>(weight_type *w)</argsstring>
        <name>SetWeights</name>
        <param>
          <type><ref refid="namespacehops_1a74fe9c8c1d011d62f4fd08db2f915d01" kindref="member">weight_type</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Setter for weights. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>Input pointer to weight_type array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="37" column="14" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" bodystart="37" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhops_1_1MHO__NormFX_1a4c7d687c21e9543a36e99fbc9998ecbf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_NormFX::ExecuteInPlace</definition>
        <argsstring>(XArgType *in)=0</argsstring>
        <name>ExecuteInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a198308dde4b15a2b103e615db44804f3">ExecuteInPlace</reimplements>
        <reimplementedby refid="classhops_1_1MHO__MixedSidebandNormFX_1a7de31ee0593f726ca65dfeaa0829262b">ExecuteInPlace</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__SingleSidebandNormFX_1ae8fa05cbb6dda9ee145832d37a0ff6d7">ExecuteInPlace</reimplementedby>
        <param>
          <type><ref refid="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" kindref="member">XArgType</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Function ExecuteInPlace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(XArgType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (bool) </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="67" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NormFX_1aeecc52b42cb4df773ed2267b5227533f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_NormFX::ExecuteOutOfPlace</definition>
        <argsstring>(const XArgType *in, XArgType *out)=0</argsstring>
        <name>ExecuteOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a4c07658f7e43763056e4e116d845a6bf">ExecuteOutOfPlace</reimplements>
        <reimplementedby refid="classhops_1_1MHO__MixedSidebandNormFX_1a7b043386c2906cc71eb3ba644e402a42">ExecuteOutOfPlace</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__SingleSidebandNormFX_1a5e3140bbf4a33bdde243c3f7d0a40bea">ExecuteOutOfPlace</reimplementedby>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" kindref="member">XArgType</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" kindref="member">XArgType</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Function ExecuteOutOfPlace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XArgType*) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(XArgType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (bool) </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="76" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NormFX_1a3187980999e8a4f21a602261272d32e0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_NormFX::InitializeInPlace</definition>
        <argsstring>(XArgType *in)=0</argsstring>
        <name>InitializeInPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a02cd45309143ea2ba35a1ce42b86ad20">InitializeInPlace</reimplements>
        <reimplementedby refid="classhops_1_1MHO__MixedSidebandNormFX_1a5520e3d1125a044f772f2058d210a7b0">InitializeInPlace</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__SingleSidebandNormFX_1a73b0da6bcb0cbdc5eb875becd5441a87">InitializeInPlace</reimplementedby>
        <param>
          <type><ref refid="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" kindref="member">XArgType</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Function InitializeInPlace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(XArgType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (bool) </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="49" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classhops_1_1MHO__NormFX_1a48fd9a575a9c1a22da4f6b623af6b10b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool hops::MHO_NormFX::InitializeOutOfPlace</definition>
        <argsstring>(const XArgType *in, XArgType *out)=0</argsstring>
        <name>InitializeOutOfPlace</name>
        <reimplements refid="classhops_1_1MHO__UnaryOperator_1a8ddd25cb2e815e6e3f5acbf5d0b61058">InitializeOutOfPlace</reimplements>
        <reimplementedby refid="classhops_1_1MHO__MixedSidebandNormFX_1a6632cb305bce709561d714eb416ad5e3">InitializeOutOfPlace</reimplementedby>
        <reimplementedby refid="classhops_1_1MHO__SingleSidebandNormFX_1a6512d9772b9323b5611e10c3046fd0c0">InitializeOutOfPlace</reimplementedby>
        <param>
          <type>const <ref refid="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" kindref="member">XArgType</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" kindref="member">XArgType</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Function InitializeOutOfPlace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>(const XArgType*) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>(XArgType*) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value (bool) </para>
</simplesect>
<simplesect kind="note"><para>This is a virtual function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="58" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="classhops_1_1MHO__NormFX" kindref="compound">MHO_NormFX</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>wrapper class for the interface which provides the functionality of the original <ref refid="norm__fx_8c" kindref="compound">norm_fx.c</ref> operation this is a unary operator on visibilities that accepts weights</para>
<para><simplesect kind="author"><para>J. Barrett - <ulink url="mailto:barrettj@mit.edu">barrettj@mit.edu</ulink> </para>
</simplesect>
<simplesect kind="date"><para>Fri Jul 9 11:47:00 2021 -0400 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_NormFX</label>
        <link refid="classhops_1_1MHO__NormFX"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>hops::MHO_MixedSidebandNormFX</label>
        <link refid="classhops_1_1MHO__MixedSidebandNormFX"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>hops::MHO_SingleSidebandNormFX</label>
        <link refid="classhops_1_1MHO__SingleSidebandNormFX"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hops::MHO_Operator</label>
        <link refid="classhops_1_1MHO__Operator"/>
      </node>
      <node id="1">
        <label>hops::MHO_NormFX</label>
        <link refid="classhops_1_1MHO__NormFX"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fWeights</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>hops::MHO_TableContainerBase</label>
        <link refid="classhops_1_1MHO__TableContainerBase"/>
      </node>
      <node id="13">
        <label>json</label>
      </node>
      <node id="11">
        <label>hops::MHO_Taggable</label>
        <link refid="classhops_1_1MHO__Taggable"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hops::MHO_UnaryOperator&lt; visibility_type &gt;</label>
        <link refid="classhops_1_1MHO__UnaryOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>hops::MHO_ExtensibleElement</label>
        <link refid="classhops_1_1MHO__ExtensibleElement"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>fExtensions</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::vector&lt; hops::MHO_Element * &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>hops::MHO_JSONWrapper</label>
        <link refid="classhops_1_1MHO__JSONWrapper"/>
        <childnode refid="13" relation="usage">
          <edgelabel>fObject</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>hops::MHO_Element</label>
        <link refid="classhops_1_1MHO__Element"/>
      </node>
      <node id="4">
        <label>hops::MHO_TableContainer&lt; XValueType, XAxisPackType &gt;</label>
        <link refid="classhops_1_1MHO__TableContainer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>XAxisPackType</label>
        <link refid="classXAxisPackType"/>
      </node>
      <node id="14">
        <label>hops::MHO_Serializable</label>
        <link refid="classhops_1_1MHO__Serializable"/>
      </node>
      <node id="6">
        <label>hops::MHO_NDArrayWrapper&lt; XValueType, XAxisPackType::NAXES::value &gt;</label>
        <link refid="classhops_1_1MHO__NDArrayWrapper"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" line="26" column="1" bodyfile="/home/barrettj/work/projects/hops-git/source/cpp_src/Calibration/include/MHO_NormFX.hh" bodystart="27" bodyend="79"/>
    <listofallmembers>
      <member refid="classhops_1_1MHO__UnaryOperator_1a704c4cb4154241356da3eb744ebfea74" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a7e4f90ac93ffc15a3a120e49d3d3a37b" prot="public" virt="pure-virtual"><scope>hops::MHO_NormFX</scope><name>Execute</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a4c7d687c21e9543a36e99fbc9998ecbf" prot="protected" virt="pure-virtual"><scope>hops::MHO_NormFX</scope><name>ExecuteInPlace</name></member>
      <member refid="classhops_1_1MHO__NormFX_1aeecc52b42cb4df773ed2267b5227533f" prot="protected" virt="pure-virtual"><scope>hops::MHO_NormFX</scope><name>ExecuteOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aeebfd2ffd335365a3c03182cc7c9521c" prot="protected" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>fInPlace</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aea3536242de828361a2f10b879c50388" prot="protected" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>fInPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a487fb22e2a815461fe05048439ec6c20" prot="protected" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>fOutOfPlaceArgs</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a333e509f67e5a0880a17a48cfde7ee96" prot="protected" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>fWeights</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae944174d27ebc2a0978b3bad9e97cfca" prot="public" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>GetName</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1aa7dbd018a8e2ab56ee718f703cd8df0e" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1ac4e4bb8c8e69204cf7b9dd8989f4e17a" prot="public" virt="pure-virtual"><scope>hops::MHO_NormFX</scope><name>Initialize</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a3187980999e8a4f21a602261272d32e0" prot="protected" virt="pure-virtual"><scope>hops::MHO_NormFX</scope><name>InitializeInPlace</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a48fd9a575a9c1a22da4f6b623af6b10b" prot="protected" virt="pure-virtual"><scope>hops::MHO_NormFX</scope><name>InitializeOutOfPlace</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a0f419578c5f985757c0420b1c2370f0b" prot="public" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>MHO_NormFX</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1af6ccdf30e87b4a31347593d22dab2f99" prot="public" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a56a30a66a2fab5e8f005a3aa3f8ff796" prot="public" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>MHO_UnaryOperator</name></member>
      <member refid="classhops_1_1MHO__Operator_1a42a5df950d1464de705cf1f8a98957a9" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>Priority</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a272c2bda0dfa7a7a8c4de4a063fa124b" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6acead8f2593c70c45f89201bc503d39" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>SetArgs</name></member>
      <member refid="classhops_1_1MHO__Operator_1a258fbfb617f811155923b477066fed85" prot="public" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>SetName</name></member>
      <member refid="classhops_1_1MHO__Operator_1ae336e78d21bfcdcb355bc9c057411859" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>SetPriority</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a1a5f1fe4e8b9926f54c3f52271069fe0" prot="public" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>SetWeights</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a295bed77e48af8418a1892e634594de3" prot="protected" virt="non-virtual"><scope>hops::MHO_NormFX</scope><name>XArgType</name></member>
      <member refid="classhops_1_1MHO__NormFX_1a4c9a0aadc7f0066fff7f37e9f034226c" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>~MHO_NormFX</name></member>
      <member refid="classhops_1_1MHO__Operator_1a22d862ce42973f29cb9ec79619fe6242" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>~MHO_Operator</name></member>
      <member refid="classhops_1_1MHO__UnaryOperator_1a6a16ae57bd76c4934860582d175f4e7f" prot="public" virt="virtual"><scope>hops::MHO_NormFX</scope><name>~MHO_UnaryOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
